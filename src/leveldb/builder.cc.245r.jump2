
;; Function virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&) (_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2138, decl_uid=44255, cgraph_uid=762, symbol_order=774)



try_optimize_cfg iteration 1

Cross jumping from bb 16 to bb 18; 2 common insns
changing bb of uid 189
  unscanned insn
changing bb of uid 127
  from 16 to 22
changing bb of uid 128
  from 16 to 22
changing bb of uid 174
  from 16 to 22
scanning new insn with uid = 190.
deleting insn with uid = 174.
deleting insn with uid = 128.
deleting insn with uid = 127.
deleting block 22
Cross jumping from bb 11 to bb 17; 2 common insns
changing bb of uid 192
  unscanned insn
changing bb of uid 87
  from 11 to 23
changing bb of uid 88
  from 11 to 23
changing bb of uid 164
  from 11 to 23
scanning new insn with uid = 193.
deleting insn with uid = 164.
deleting insn with uid = 88.
deleting insn with uid = 87.
deleting block 23
Cross jumping from bb 15 to bb 17; 2 common insns
changing bb of uid 195
  unscanned insn
changing bb of uid 119
  from 15 to 24
changing bb of uid 120
  from 15 to 24
changing bb of uid 172
  from 15 to 24
scanning new insn with uid = 196.
deleting insn with uid = 172.
deleting insn with uid = 120.
deleting insn with uid = 119.
deleting block 24
Cross jumping from bb 14 to bb 18; 2 common insns
changing bb of uid 198
  unscanned insn
changing bb of uid 111
  from 14 to 25
changing bb of uid 112
  from 14 to 25
changing bb of uid 170
  from 14 to 25
scanning new insn with uid = 199.
deleting insn with uid = 170.
deleting insn with uid = 112.
deleting insn with uid = 111.
deleting block 25
Cross jumping from bb 13 to bb 17; 2 common insns
changing bb of uid 201
  unscanned insn
changing bb of uid 103
  from 13 to 26
changing bb of uid 104
  from 13 to 26
changing bb of uid 168
  from 13 to 26
scanning new insn with uid = 202.
deleting insn with uid = 168.
deleting insn with uid = 104.
deleting insn with uid = 103.
deleting block 26
Cross jumping from bb 12 to bb 18; 2 common insns
changing bb of uid 204
  unscanned insn
changing bb of uid 95
  from 12 to 27
changing bb of uid 96
  from 12 to 27
changing bb of uid 166
  from 12 to 27
scanning new insn with uid = 205.
deleting insn with uid = 166.
deleting insn with uid = 96.
deleting insn with uid = 95.
deleting block 27


try_optimize_cfg iteration 2

verify found no changes in insn with uid = 32.
Edge 4->16 redirected to 18
verify found no changes in insn with uid = 40.
Edge 5->15 redirected to 17
verify found no changes in insn with uid = 48.
Edge 6->14 redirected to 18
verify found no changes in insn with uid = 56.
Edge 7->13 redirected to 17
verify found no changes in insn with uid = 64.
Edge 8->12 redirected to 18
verify found no changes in insn with uid = 72.
Edge 9->11 redirected to 17
deleting insn with uid = 193.
deleting block 11
deleting insn with uid = 205.
deleting block 12
deleting insn with uid = 202.
deleting block 13
deleting insn with uid = 199.
deleting block 14
deleting insn with uid = 196.
deleting block 15
deleting insn with uid = 190.
deleting block 16
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 16 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 16 (    1)


try_optimize_cfg iteration 3

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={17d,16u} r1={5d,3u} r2={12d,12u} r3={3d,6u} r4={14d,21u,8e} r5={9d,4u} r7={5d,27u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={16d,9u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 461{355d,98u,8e} in 62{58 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 3 18 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 3 )->[4]->( 5 18 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 4 )->[5]->( 6 17 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 5 )->[6]->( 7 18 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 6 )->[7]->( 8 17 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 7 )->[8]->( 9 18 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

( 9 )->[10]->( 19 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 3 9 5 7 )->[17]->( 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 2 4 6 8 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 18 17 10 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 5 [di]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 19 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 21 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 7 to worklist
  Adding insn 179 to worklist
  Adding insn 24 to worklist
  Adding insn 32 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
  Adding insn 56 to worklist
  Adding insn 64 to worklist
  Adding insn 72 to worklist
  Adding insn 162 to worklist
  Adding insn 80 to worklist
  Adding insn 176 to worklist
  Adding insn 136 to worklist
  Adding insn 144 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
  Adding insn 155 to worklist
  Adding insn 187 to worklist
  Adding insn 158 to worklist
Finished finding needed instructions:
processing block 21 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 186 to worklist
  Adding insn 185 to worklist
processing block 20 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 19 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 151 to worklist
processing block 10 lr out =  3 [bx] 7 [sp]
  Adding insn 79 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
processing block 17 lr out =  3 [bx] 7 [sp]
  Adding insn 135 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 71 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
processing block 18 lr out =  3 [bx] 7 [sp]
  Adding insn 143 to worklist
processing block 8 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 55 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
processing block 6 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 4 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 2 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 2 to worklist
  Adding insn 180 to worklist


try_optimize_cfg iteration 1



virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={17d,16u} r1={5d,3u} r2={12d,12u} r3={3d,6u} r4={14d,21u,8e} r5={9d,4u} r7={5d,27u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={16d,9u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 461{355d,98u,8e} in 62{58 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 8 1 179 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 179 8 180 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) ./include/leveldb/env.h:296 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 180 179 181 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) ./include/leveldb/env.h:296 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 181 180 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 181 5 2 (set (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(note 5 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [3 D.51292+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [154])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:DI 0 ax [154])
            (nil))))
(insn 10 7 11 2 (set (reg/f:DI 4 si [orig:87 D.51288 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:123 this ] [123])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [orig:126 _3->_vptr.Env ] [126])
        (mem/f:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:126 _3->_vptr.Env ] [126])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:126 _3->_vptr.Env ] [126])
        (nil)))
(note 13 12 15 2 NOTE_INSN_DELETED)
(insn 15 13 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:DI 4 si [orig:91 D.51288 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [orig:129 _11->_vptr.Env ] [129])
        (mem/f:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91]) [3 _11->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91]) [3 _11->_vptr.Env+0 S8 A64])
        (nil)))
(insn 20 19 23 3 (set (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:129 _11->_vptr.Env ] [129])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_12 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 23 20 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
            (reg/f:DI 2 cx [orig:89 D.51290 ] [89]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
        (nil)))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 131)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 4 si [orig:95 D.51288 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_11].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 2 cx [orig:132 _16->_vptr.Env ] [132])
        (mem/f:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95]) [3 _16->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95]) [3 _16->_vptr.Env+0 S8 A64])
        (nil)))
(insn 28 27 31 4 (set (reg/f:DI 2 cx [orig:97 D.51290 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:132 _16->_vptr.Env ] [132])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_17 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 31 28 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:97 D.51290 ] [97])
            (reg/f:DI 0 ax [orig:93 D.51290 ] [93]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
        (nil)))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 4 si [orig:99 D.51288 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_16].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 0 ax [orig:135 _21->_vptr.Env ] [135])
        (mem/f:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99]) [3 _21->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99]) [3 _21->_vptr.Env+0 S8 A64])
        (nil)))
(insn 36 35 39 5 (set (reg/f:DI 0 ax [orig:101 D.51290 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:135 _21->_vptr.Env ] [135])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_22 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 39 36 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:101 D.51290 ] [101])
            (reg/f:DI 2 cx [orig:97 D.51290 ] [97]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:97 D.51290 ] [97])
        (nil)))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 131)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 4 si [orig:103 D.51288 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_21].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 2 cx [orig:138 _26->_vptr.Env ] [138])
        (mem/f:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103]) [3 _26->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103]) [3 _26->_vptr.Env+0 S8 A64])
        (nil)))
(insn 44 43 47 6 (set (reg/f:DI 2 cx [orig:105 D.51290 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:138 _26->_vptr.Env ] [138])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_27 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 47 44 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:105 D.51290 ] [105])
            (reg/f:DI 0 ax [orig:101 D.51290 ] [101]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:101 D.51290 ] [101])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 139)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              18 [19.9%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 4 si [orig:107 D.51288 ] [107])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_26].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 0 ax [orig:141 _31->_vptr.Env ] [141])
        (mem/f:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107]) [3 _31->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107]) [3 _31->_vptr.Env+0 S8 A64])
        (nil)))
(insn 52 51 55 7 (set (reg/f:DI 0 ax [orig:109 D.51290 ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:141 _31->_vptr.Env ] [141])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_32 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 55 52 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:109 D.51290 ] [109])
            (reg/f:DI 2 cx [orig:105 D.51290 ] [105]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:105 D.51290 ] [105])
        (nil)))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 131)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              17 [19.9%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg/f:DI 4 si [orig:111 D.51288 ] [111])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_31].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg/f:DI 2 cx [orig:144 _36->_vptr.Env ] [144])
        (mem/f:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111]) [3 _36->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111]) [3 _36->_vptr.Env+0 S8 A64])
        (nil)))
(insn 60 59 63 8 (set (reg/f:DI 2 cx [orig:113 D.51290 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:144 _36->_vptr.Env ] [144])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_37 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 63 60 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:113 D.51290 ] [113])
            (reg/f:DI 0 ax [orig:109 D.51290 ] [109]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.51290 ] [109])
        (nil)))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 4 si [orig:115 D.51288 ] [115])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_36].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 67 66 68 9 (set (reg/f:DI 0 ax [orig:147 _41->_vptr.Env ] [147])
        (mem/f:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115]) [3 _41->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115]) [3 _41->_vptr.Env+0 S8 A64])
        (nil)))
(insn 68 67 71 9 (set (reg/f:DI 0 ax [orig:117 D.51290 ] [117])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:147 _41->_vptr.Env ] [147])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_42 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 71 68 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:117 D.51290 ] [117])
            (reg/f:DI 2 cx [orig:113 D.51290 ] [113]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:113 D.51290 ] [113])
        (nil)))
(jump_insn 72 71 73 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1980 (nil)))
 -> 131)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              17 [19.8%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 17, flags: (RTL)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:DI 4 si [orig:119 D.51288 ] [119])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_41].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:DI 0 ax [orig:150 _46->_vptr.Env ] [150])
        (mem/f:DI (reg/f:DI 4 si [orig:119 D.51288 ] [119]) [3 _46->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 76 75 79 10 NOTE_INSN_DELETED)
(insn 79 76 80 10 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 80 79 162 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:150 _46->_vptr.Env ] [150])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_47 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_48;(struct Env)_46->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:150 _46->_vptr.Env ] [150])
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 162 80 163 10 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 163 162 131)
;; basic block 17, loop depth 0, count 0, freq 3693, maybe hot
;;  prev block 10, next block 18, flags: (RTL)
;;  pred:       3 [20.0%] 
;;              9 [19.8%] 
;;              5 [20.0%] 
;;              7 [19.9%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 131 163 132 17 3 "" [4 uses])
(note 132 131 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 132 136 17 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 136 135 176 17 (call (mem:QI (reg/f:DI 0 ax [orig:93 D.51290 ] [93]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 176 136 177 17 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 177 176 139)
;; basic block 18, loop depth 0, count 0, freq 4621, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       2 [20.0%] 
;;              4 [20.0%] 
;;              6 [19.9%] 
;;              8 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 139 177 140 18 2 "" [4 uses])
(note 140 139 143 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 143 140 144 18 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 144 143 149 18 (call (mem:QI (reg/f:DI 2 cx [orig:89 D.51290 ] [89]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              17 [100.0%] 
;;              10 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 5 [di]
(code_label 149 144 159 19 1 "" [2 uses])
(note 159 149 151 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 151 159 153 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (nil)))
(insn 153 151 154 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [3 D.51292+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 5 di [155]))
        ]) ./include/leveldb/env.h:296 990 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 5 di [155])
        (nil)))
(jump_insn 154 153 160 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) ./include/leveldb/env.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 157)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(note 160 154 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 155 160 156 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 156 155 157)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
(code_label 157 156 161 21 11 "" [1 uses])
(note 161 157 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 158 161 184 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:296 -1
     (nil))
(note 184 158 185 21 NOTE_INSN_EPILOGUE_BEG)
(insn/f 185 184 186 21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) ./include/leveldb/env.h:296 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f 186 185 187 21 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) ./include/leveldb/env.h:296 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 187 186 188 21 (simple_return) ./include/leveldb/env.h:296 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 188 187 178)
(note 178 188 0 NOTE_INSN_DELETED)

;; Function virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**) (_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE, funcdef_no=2135, decl_uid=44245, cgraph_uid=759, symbol_order=771)



try_optimize_cfg iteration 1

Cross jumping from bb 16 to bb 18; 2 common insns
changing bb of uid 199
  unscanned insn
changing bb of uid 135
  from 16 to 22
changing bb of uid 136
  from 16 to 22
changing bb of uid 184
  from 16 to 22
scanning new insn with uid = 200.
deleting insn with uid = 184.
deleting insn with uid = 136.
deleting insn with uid = 135.
deleting block 22
Cross jumping from bb 11 to bb 17; 2 common insns
changing bb of uid 202
  unscanned insn
changing bb of uid 90
  from 11 to 23
changing bb of uid 91
  from 11 to 23
changing bb of uid 174
  from 11 to 23
scanning new insn with uid = 203.
deleting insn with uid = 174.
deleting insn with uid = 91.
deleting insn with uid = 90.
deleting block 23
Cross jumping from bb 15 to bb 17; 2 common insns
changing bb of uid 205
  unscanned insn
changing bb of uid 126
  from 15 to 24
changing bb of uid 127
  from 15 to 24
changing bb of uid 182
  from 15 to 24
scanning new insn with uid = 206.
deleting insn with uid = 182.
deleting insn with uid = 127.
deleting insn with uid = 126.
deleting block 24
Cross jumping from bb 14 to bb 18; 2 common insns
changing bb of uid 208
  unscanned insn
changing bb of uid 117
  from 14 to 25
changing bb of uid 118
  from 14 to 25
changing bb of uid 180
  from 14 to 25
scanning new insn with uid = 209.
deleting insn with uid = 180.
deleting insn with uid = 118.
deleting insn with uid = 117.
deleting block 25
Cross jumping from bb 13 to bb 17; 2 common insns
changing bb of uid 211
  unscanned insn
changing bb of uid 108
  from 13 to 26
changing bb of uid 109
  from 13 to 26
changing bb of uid 178
  from 13 to 26
scanning new insn with uid = 212.
deleting insn with uid = 178.
deleting insn with uid = 109.
deleting insn with uid = 108.
deleting block 26
Cross jumping from bb 12 to bb 18; 2 common insns
changing bb of uid 214
  unscanned insn
changing bb of uid 99
  from 12 to 27
changing bb of uid 100
  from 12 to 27
changing bb of uid 176
  from 12 to 27
scanning new insn with uid = 215.
deleting insn with uid = 176.
deleting insn with uid = 100.
deleting insn with uid = 99.
deleting block 27


try_optimize_cfg iteration 2

verify found no changes in insn with uid = 33.
Edge 4->16 redirected to 18
verify found no changes in insn with uid = 41.
Edge 5->15 redirected to 17
verify found no changes in insn with uid = 49.
Edge 6->14 redirected to 18
verify found no changes in insn with uid = 57.
Edge 7->13 redirected to 17
verify found no changes in insn with uid = 65.
Edge 8->12 redirected to 18
verify found no changes in insn with uid = 73.
Edge 9->11 redirected to 17
deleting insn with uid = 203.
deleting block 11
deleting insn with uid = 215.
deleting block 12
deleting insn with uid = 212.
deleting block 13
deleting insn with uid = 209.
deleting block 14
deleting insn with uid = 206.
deleting block 15
deleting insn with uid = 200.
deleting block 16
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 16 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 24 count 16 (    1)


try_optimize_cfg iteration 3

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={17d,16u} r1={5d,3u} r2={5d,3u} r3={4d,6u} r4={14d,21u,8e} r5={11d,7u} r7={5d,27u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={16d,9u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={9d,9u} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 464{355d,101u,8e} in 62{58 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]

( 0 )->[2]->( 3 18 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 3 )->[4]->( 5 18 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

( 4 )->[5]->( 6 17 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 5 )->[6]->( 7 18 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

( 6 )->[7]->( 8 17 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 7 )->[8]->( 9 18 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 9 )->[10]->( 19 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 3 9 5 7 )->[17]->( 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 2 4 6 8 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 18 17 10 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 3 [bx]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 19 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 7 [sp]

( 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 21 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 8 to worklist
  Adding insn 189 to worklist
  Adding insn 25 to worklist
  Adding insn 33 to worklist
  Adding insn 41 to worklist
  Adding insn 49 to worklist
  Adding insn 57 to worklist
  Adding insn 65 to worklist
  Adding insn 73 to worklist
  Adding insn 172 to worklist
  Adding insn 82 to worklist
  Adding insn 186 to worklist
  Adding insn 145 to worklist
  Adding insn 154 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 165 to worklist
  Adding insn 197 to worklist
  Adding insn 168 to worklist
Finished finding needed instructions:
processing block 21 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 196 to worklist
  Adding insn 195 to worklist
processing block 20 lr out =  0 [ax] 3 [bx] 7 [sp]
processing block 19 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 161 to worklist
processing block 10 lr out =  3 [bx] 7 [sp]
  Adding insn 81 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
processing block 17 lr out =  3 [bx] 7 [sp]
  Adding insn 144 to worklist
processing block 9 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 18 lr out =  3 [bx] 7 [sp]
  Adding insn 153 to worklist
processing block 8 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
processing block 7 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 6 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 4 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 2 to worklist
  Adding insn 190 to worklist


try_optimize_cfg iteration 1



virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={17d,16u} r1={5d,3u} r2={5d,3u} r3={4d,6u} r4={14d,21u,8e} r5={11d,7u} r7={5d,27u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={16d,9u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={9d,9u} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 464{355d,101u,8e} in 62{58 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 7 [sp] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 9 1 189 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 189 9 190 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) ./include/leveldb/env.h:289 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 190 189 191 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) ./include/leveldb/env.h:289 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -16 [0xfffffffffffffff0])))
            (nil))))
(note 191 190 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 191 6 2 (set (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(note 6 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [3 D.51341+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [155])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:289 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:DI 0 ax [155])
            (nil))))
(insn 11 8 12 2 (set (reg/f:DI 4 si [orig:87 D.51337 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:123 this ] [123])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [orig:127 _3->_vptr.Env ] [127])
        (mem/f:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:127 _3->_vptr.Env ] [127])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:127 _3->_vptr.Env ] [127])
        (nil)))
(note 14 13 16 2 NOTE_INSN_DELETED)
(insn 16 14 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 148)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 4 si [orig:91 D.51337 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 0 ax [orig:130 _12->_vptr.Env ] [130])
        (mem/f:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91]) [3 _12->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91]) [3 _12->_vptr.Env+0 S8 A64])
        (nil)))
(insn 21 20 24 3 (set (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:130 _12->_vptr.Env ] [130])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_13 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 24 21 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
            (reg/f:DI 37 r8 [orig:89 D.51339 ] [89]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 4 si [orig:95 D.51337 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_12].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 5 di [orig:133 _17->_vptr.Env ] [133])
        (mem/f:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95]) [3 _17->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95]) [3 _17->_vptr.Env+0 S8 A64])
        (nil)))
(insn 29 28 32 4 (set (reg/f:DI 37 r8 [orig:97 D.51339 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:133 _17->_vptr.Env ] [133])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_18 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:133 _17->_vptr.Env ] [133])
        (nil)))
(insn 32 29 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:97 D.51339 ] [97])
            (reg/f:DI 0 ax [orig:93 D.51339 ] [93]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 148)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 4 si [orig:99 D.51337 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_17].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 0 ax [orig:136 _22->_vptr.Env ] [136])
        (mem/f:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99]) [3 _22->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99]) [3 _22->_vptr.Env+0 S8 A64])
        (nil)))
(insn 37 36 40 5 (set (reg/f:DI 0 ax [orig:101 D.51339 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:136 _22->_vptr.Env ] [136])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_23 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 40 37 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:101 D.51339 ] [101])
            (reg/f:DI 37 r8 [orig:97 D.51339 ] [97]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:97 D.51339 ] [97])
        (nil)))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:DI 4 si [orig:103 D.51337 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_22].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 5 di [orig:139 _27->_vptr.Env ] [139])
        (mem/f:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103]) [3 _27->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103]) [3 _27->_vptr.Env+0 S8 A64])
        (nil)))
(insn 45 44 48 6 (set (reg/f:DI 37 r8 [orig:105 D.51339 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:139 _27->_vptr.Env ] [139])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_28 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:139 _27->_vptr.Env ] [139])
        (nil)))
(insn 48 45 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:105 D.51339 ] [105])
            (reg/f:DI 0 ax [orig:101 D.51339 ] [101]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:101 D.51339 ] [101])
        (nil)))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 148)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              18 [19.9%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg/f:DI 4 si [orig:107 D.51337 ] [107])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_27].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 0 ax [orig:142 _32->_vptr.Env ] [142])
        (mem/f:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107]) [3 _32->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107]) [3 _32->_vptr.Env+0 S8 A64])
        (nil)))
(insn 53 52 56 7 (set (reg/f:DI 0 ax [orig:109 D.51339 ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:142 _32->_vptr.Env ] [142])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_33 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 56 53 57 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:109 D.51339 ] [109])
            (reg/f:DI 37 r8 [orig:105 D.51339 ] [105]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:105 D.51339 ] [105])
        (nil)))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 139)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              17 [19.9%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:DI 4 si [orig:111 D.51337 ] [111])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_32].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (set (reg/f:DI 5 di [orig:145 _37->_vptr.Env ] [145])
        (mem/f:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111]) [3 _37->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111]) [3 _37->_vptr.Env+0 S8 A64])
        (nil)))
(insn 61 60 64 8 (set (reg/f:DI 37 r8 [orig:113 D.51339 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:145 _37->_vptr.Env ] [145])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_38 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:145 _37->_vptr.Env ] [145])
        (nil)))
(insn 64 61 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:113 D.51339 ] [113])
            (reg/f:DI 0 ax [orig:109 D.51339 ] [109]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.51339 ] [109])
        (nil)))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 148)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 148)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 4 si [orig:115 D.51337 ] [115])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_37].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 0 ax [orig:148 _42->_vptr.Env ] [148])
        (mem/f:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115]) [3 _42->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115]) [3 _42->_vptr.Env+0 S8 A64])
        (nil)))
(insn 69 68 72 9 (set (reg/f:DI 0 ax [orig:117 D.51339 ] [117])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:148 _42->_vptr.Env ] [148])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_43 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 72 69 73 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:117 D.51339 ] [117])
            (reg/f:DI 37 r8 [orig:113 D.51339 ] [113]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:113 D.51339 ] [113])
        (nil)))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1980 (nil)))
 -> 139)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              17 [19.8%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 17, flags: (RTL)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 4 si [orig:119 D.51337 ] [119])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_42].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 76 75 77 10 (set (reg/f:DI 0 ax [orig:151 _47->_vptr.Env ] [151])
        (mem/f:DI (reg/f:DI 4 si [orig:119 D.51337 ] [119]) [3 _47->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 77 76 81 10 NOTE_INSN_DELETED)
(insn 81 77 82 10 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 82 81 172 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:151 _47->_vptr.Env ] [151])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_48 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_49;(struct Env)_47->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:151 _47->_vptr.Env ] [151])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 172 82 173 10 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 173 172 139)
;; basic block 17, loop depth 0, count 0, freq 3693, maybe hot
;;  prev block 10, next block 18, flags: (RTL)
;;  pred:       3 [20.0%] 
;;              9 [19.8%] 
;;              5 [20.0%] 
;;              7 [19.9%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 139 173 140 17 17 "" [4 uses])
(note 140 139 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 144 140 145 17 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 145 144 186 17 (call (mem:QI (reg/f:DI 0 ax [orig:93 D.51339 ] [93]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 186 145 187 17 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 187 186 148)
;; basic block 18, loop depth 0, count 0, freq 4621, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       2 [20.0%] 
;;              4 [20.0%] 
;;              6 [19.9%] 
;;              8 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 148 187 149 18 16 "" [4 uses])
(note 149 148 153 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 153 149 154 18 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 154 153 159 18 (call (mem:QI (reg/f:DI 37 r8 [orig:89 D.51339 ] [89]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              17 [100.0%] 
;;              10 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 3 [bx]
(code_label 159 154 169 19 15 "" [2 uses])
(note 169 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 169 163 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (nil)))
(insn 163 161 164 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [3 D.51341+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [156]))
        ]) ./include/leveldb/env.h:291 990 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 3 bx [156])
        (nil)))
(jump_insn 164 163 170 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) ./include/leveldb/env.h:291 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 167)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 170 164 165 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 165 170 166 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:291 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 7 [sp]

(barrier 166 165 167)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	 17 [flags]
(code_label 167 166 171 21 25 "" [1 uses])
(note 171 167 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 171 194 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:291 -1
     (nil))
(note 194 168 195 21 NOTE_INSN_EPILOGUE_BEG)
(insn/f 195 194 196 21 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) ./include/leveldb/env.h:291 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (nil))))
(insn/f 196 195 197 21 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) ./include/leveldb/env.h:291 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 197 196 198 21 (simple_return) ./include/leveldb/env.h:291 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 198 197 188)
(note 188 198 0 NOTE_INSN_DELETED)

;; Function leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*) (_ZN7leveldb10BuildTableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS_3EnvERKNS_7OptionsEPNS_10TableCacheEPNS_8IteratorEPNS_12FileMetaDataE, funcdef_no=2151, decl_uid=23608, cgraph_uid=775, symbol_order=787)



try_optimize_cfg iteration 1

Forwarding edge 17->18 to 44 failed.
Cross jumping from bb 19 to bb 23; 5 common insns
changing bb of uid 1480
  unscanned insn
changing bb of uid 133
  from 19 to 188
changing bb of uid 1456
  from 19 to 188
changing bb of uid 136
  from 19 to 188
changing bb of uid 137
  from 19 to 188
changing bb of uid 140
  from 19 to 188
scanning new insn with uid = 1481.
deleting insn with uid = 140.
deleting insn with uid = 137.
deleting insn with uid = 136.
deleting insn with uid = 1456.
deleting insn with uid = 133.
deleting block 188
Cross jumping from bb 21 to bb 33; 5 common insns
changing bb of uid 1484
  unscanned insn
changing bb of uid 146
  from 21 to 189
changing bb of uid 1455
  from 21 to 189
changing bb of uid 149
  from 21 to 189
changing bb of uid 150
  from 21 to 189
changing bb of uid 153
  from 21 to 189
scanning new insn with uid = 1485.
deleting insn with uid = 153.
deleting insn with uid = 150.
deleting insn with uid = 149.
deleting insn with uid = 1455.
deleting insn with uid = 146.
deleting block 189
Cross jumping from bb 23 to bb 27; 5 common insns
changing bb of uid 1488
  unscanned insn
changing bb of uid 158
  from 23 to 190
changing bb of uid 1454
  from 23 to 190
changing bb of uid 161
  from 23 to 190
changing bb of uid 162
  from 23 to 190
changing bb of uid 165
  from 23 to 190
scanning new insn with uid = 1489.
deleting insn with uid = 165.
deleting insn with uid = 162.
deleting insn with uid = 161.
deleting insn with uid = 1454.
deleting insn with uid = 158.
deleting block 190
Cross jumping from bb 25 to bb 33; 5 common insns
changing bb of uid 1492
  unscanned insn
changing bb of uid 170
  from 25 to 191
changing bb of uid 1453
  from 25 to 191
changing bb of uid 173
  from 25 to 191
changing bb of uid 174
  from 25 to 191
changing bb of uid 177
  from 25 to 191
scanning new insn with uid = 1493.
deleting insn with uid = 177.
deleting insn with uid = 174.
deleting insn with uid = 173.
deleting insn with uid = 1453.
deleting insn with uid = 170.
deleting block 191
Cross jumping from bb 27 to bb 31; 5 common insns
changing bb of uid 1496
  unscanned insn
changing bb of uid 182
  from 27 to 192
changing bb of uid 1452
  from 27 to 192
changing bb of uid 185
  from 27 to 192
changing bb of uid 186
  from 27 to 192
changing bb of uid 189
  from 27 to 192
scanning new insn with uid = 1497.
deleting insn with uid = 189.
deleting insn with uid = 186.
deleting insn with uid = 185.
deleting insn with uid = 1452.
deleting insn with uid = 182.
deleting block 192
Cross jumping from bb 29 to bb 33; 5 common insns
changing bb of uid 1500
  unscanned insn
changing bb of uid 194
  from 29 to 193
changing bb of uid 1451
  from 29 to 193
changing bb of uid 197
  from 29 to 193
changing bb of uid 198
  from 29 to 193
changing bb of uid 201
  from 29 to 193
scanning new insn with uid = 1501.
deleting insn with uid = 201.
deleting insn with uid = 198.
deleting insn with uid = 197.
deleting insn with uid = 1451.
deleting insn with uid = 194.
deleting block 193
Forwarding edge 17->18 to 44 failed.
Redirecting jump 1481 from 23 to 31.
verify found no changes in insn with uid = 1481.
deleting insn with uid = 1300.
deleting block 20
deleting insn with uid = 1303.
deleting block 22
Redirecting jump 1489 from 27 to 31.
verify found no changes in insn with uid = 1489.
deleting insn with uid = 1306.
deleting block 24
deleting insn with uid = 1309.
deleting block 26
deleting insn with uid = 1312.
deleting block 28
deleting insn with uid = 1315.
deleting block 30
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 125->126 to 183 failed.
Forwarding edge 136->137 to 157 failed.
Cross jumping from bb 138 to bb 142; 3 common insns
changing bb of uid 1504
  unscanned insn
changing bb of uid 1432
  from 138 to 194
changing bb of uid 725
  from 138 to 194
changing bb of uid 728
  from 138 to 194
scanning new insn with uid = 1505.
deleting insn with uid = 728.
deleting insn with uid = 725.
deleting insn with uid = 1432.
deleting block 194
Cross jumping from bb 140 to bb 152; 3 common insns
changing bb of uid 1508
  unscanned insn
changing bb of uid 1431
  from 140 to 195
changing bb of uid 736
  from 140 to 195
changing bb of uid 739
  from 140 to 195
scanning new insn with uid = 1509.
deleting insn with uid = 739.
deleting insn with uid = 736.
deleting insn with uid = 1431.
deleting block 195
Cross jumping from bb 142 to bb 146; 3 common insns
changing bb of uid 1512
  unscanned insn
changing bb of uid 1430
  from 142 to 196
changing bb of uid 746
  from 142 to 196
changing bb of uid 749
  from 142 to 196
scanning new insn with uid = 1513.
deleting insn with uid = 749.
deleting insn with uid = 746.
deleting insn with uid = 1430.
deleting block 196
Cross jumping from bb 144 to bb 152; 3 common insns
changing bb of uid 1516
  unscanned insn
changing bb of uid 1429
  from 144 to 197
changing bb of uid 756
  from 144 to 197
changing bb of uid 759
  from 144 to 197
scanning new insn with uid = 1517.
deleting insn with uid = 759.
deleting insn with uid = 756.
deleting insn with uid = 1429.
deleting block 197
Cross jumping from bb 146 to bb 150; 3 common insns
changing bb of uid 1520
  unscanned insn
changing bb of uid 1428
  from 146 to 198
changing bb of uid 766
  from 146 to 198
changing bb of uid 769
  from 146 to 198
scanning new insn with uid = 1521.
deleting insn with uid = 769.
deleting insn with uid = 766.
deleting insn with uid = 1428.
deleting block 198
Cross jumping from bb 148 to bb 152; 3 common insns
changing bb of uid 1524
  unscanned insn
changing bb of uid 1427
  from 148 to 199
changing bb of uid 776
  from 148 to 199
changing bb of uid 779
  from 148 to 199
scanning new insn with uid = 1525.
deleting insn with uid = 779.
deleting insn with uid = 776.
deleting insn with uid = 1427.
deleting block 199
Forwarding edge 136->137 to 157 failed.
Redirecting jump 1505 from 142 to 150.
verify found no changes in insn with uid = 1505.
deleting insn with uid = 1357.
deleting block 139
deleting insn with uid = 1360.
deleting block 141
Redirecting jump 1513 from 146 to 150.
verify found no changes in insn with uid = 1513.
deleting insn with uid = 1363.
deleting block 143
deleting insn with uid = 1366.
deleting block 145
deleting insn with uid = 1369.
deleting block 147
deleting insn with uid = 1372.
deleting block 149
Forwarding edge 150->151 to 136 failed.
Forwarding edge 152->153 to 136 failed.
Forwarding edge 154->155 to 136 failed.
Cross jumping from bb 167 to bb 169; 1 common insns
changing bb of uid 1527
  unscanned insn
changing bb of uid 888
  from 167 to 200
changing bb of uid 1393
  from 167 to 200
scanning new insn with uid = 1529.
deleting insn with uid = 1393.
deleting insn with uid = 888.
deleting block 200
Cross jumping from bb 165 to bb 169; 1 common insns
changing bb of uid 1531
  unscanned insn
changing bb of uid 874
  from 165 to 201
changing bb of uid 1391
  from 165 to 201
scanning new insn with uid = 1532.
deleting insn with uid = 1391.
deleting insn with uid = 874.
deleting block 201
Cross jumping from bb 169 to bb 171; 1 common insns
changing bb of uid 1534
  unscanned insn
changing bb of uid 902
  from 169 to 202
changing bb of uid 1395
  from 169 to 202
scanning new insn with uid = 1536.
deleting insn with uid = 1395.
deleting insn with uid = 902.
deleting block 202
Cross jumping from bb 163 to bb 171; 1 common insns
changing bb of uid 1538
  unscanned insn
changing bb of uid 860
  from 163 to 203
changing bb of uid 1389
  from 163 to 203
scanning new insn with uid = 1539.
deleting insn with uid = 1389.
deleting insn with uid = 860.
deleting block 203
Cross jumping from bb 160 to bb 171; 1 common insns
changing bb of uid 1541
  unscanned insn
changing bb of uid 838
  from 160 to 204
changing bb of uid 1385
  from 160 to 204
scanning new insn with uid = 1542.
deleting insn with uid = 1385.
deleting insn with uid = 838.
deleting block 204
Forwarding edge 179->180 to 72 failed.
Forwarding edge 181->182 to 110 failed.
Forwarding edge 183->184 to 154 failed.


try_optimize_cfg iteration 2

verify found no changes in insn with uid = 70.
Edge 10->29 redirected to 33
verify found no changes in insn with uid = 78.
Edge 11->27 redirected to 31
verify found no changes in insn with uid = 86.
Edge 12->25 redirected to 33
verify found no changes in insn with uid = 94.
Edge 13->23 redirected to 31
verify found no changes in insn with uid = 102.
Edge 14->21 redirected to 33
verify found no changes in insn with uid = 110.
Edge 15->19 redirected to 31
Forwarding edge 17->18 to 44 failed.
deleting insn with uid = 1481.
deleting block 19
deleting insn with uid = 1485.
deleting block 21
deleting insn with uid = 1489.
deleting block 23
deleting insn with uid = 1493.
deleting block 25
deleting insn with uid = 1497.
deleting block 27
deleting insn with uid = 1501.
deleting block 29
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 125->126 to 183 failed.
verify found no changes in insn with uid = 663.
Edge 129->148 redirected to 152
verify found no changes in insn with uid = 671.
Edge 130->146 redirected to 150
verify found no changes in insn with uid = 679.
Edge 131->144 redirected to 152
verify found no changes in insn with uid = 687.
Edge 132->142 redirected to 150
verify found no changes in insn with uid = 695.
Edge 133->140 redirected to 152
verify found no changes in insn with uid = 703.
Edge 134->138 redirected to 150
Forwarding edge 136->137 to 157 failed.
deleting insn with uid = 1505.
deleting block 138
deleting insn with uid = 1509.
deleting block 140
deleting insn with uid = 1513.
deleting block 142
deleting insn with uid = 1517.
deleting block 144
deleting insn with uid = 1521.
deleting block 146
deleting insn with uid = 1525.
deleting block 148
Forwarding edge 150->151 to 136 failed.
Forwarding edge 152->153 to 136 failed.
Forwarding edge 154->155 to 136 failed.
Forwarding edge 159->160 to 171 failed.
Forwarding edge 162->163 to 171 failed.
Forwarding edge 164->165 to 171 failed.
Redirecting jump 1532 from 169 to 171.
verify found no changes in insn with uid = 1532.
Forwarding edge 166->167 to 171 failed.
Redirecting jump 1529 from 169 to 171.
verify found no changes in insn with uid = 1529.
Forwarding edge 168->169 to 171 failed.
Deleted label in block 169.
Conditionals in bb 168 and 170 match.
Conditionals in bb 162 and 170 match.
Conditionals in bb 162 and 168 match.
Conditionals in bb 162 and 164 match.
Conditionals in bb 162 and 166 match.
Conditionals in bb 159 and 170 match.
Conditionals in bb 159 and 168 match.
Conditionals in bb 159 and 162 match.
Conditionals in bb 159 and 164 match.
Conditionals in bb 159 and 166 match.
Conditionals in bb 164 and 170 match.
Conditionals in bb 164 and 168 match.
Conditionals in bb 164 and 166 match.
Conditionals in bb 166 and 170 match.
Conditionals in bb 166 and 168 match.
Forwarding edge 179->180 to 72 failed.
Forwarding edge 181->182 to 110 failed.
Forwarding edge 183->184 to 154 failed.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 164 n_edges 264 count 166 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 164 n_edges 264 count 174 (  1.1)


try_optimize_cfg iteration 3

Forwarding edge 17->18 to 44 failed.
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 125->126 to 183 failed.
Forwarding edge 136->137 to 157 failed.
Forwarding edge 150->151 to 136 failed.
Forwarding edge 152->153 to 136 failed.
Forwarding edge 154->155 to 136 failed.
Forwarding edge 159->160 to 171 failed.
Forwarding edge 162->163 to 171 failed.
Forwarding edge 164->165 to 171 failed.
Forwarding edge 166->167 to 171 failed.
Forwarding edge 168->169 to 171 failed.
Conditionals in bb 168 and 170 match.
Conditionals in bb 162 and 170 match.
Conditionals in bb 162 and 168 match.
Conditionals in bb 162 and 164 match.
Conditionals in bb 162 and 166 match.
Conditionals in bb 159 and 170 match.
Conditionals in bb 159 and 168 match.
Conditionals in bb 159 and 162 match.
Conditionals in bb 159 and 164 match.
Conditionals in bb 159 and 166 match.
Conditionals in bb 164 and 170 match.
Conditionals in bb 164 and 168 match.
Conditionals in bb 164 and 166 match.
Conditionals in bb 166 and 170 match.
Conditionals in bb 166 and 168 match.
Forwarding edge 179->180 to 72 failed.
Forwarding edge 181->182 to 110 failed.
Forwarding edge 183->184 to 154 failed.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={125d,90u} r1={96d,26u} r2={74d,17u} r3={12d,21u,8e} r4={94d,59u,16e} r5={130d,99u} r6={3d,24u} r7={15d,327u} r8={61d} r9={61d} r10={61d} r11={61d} r12={61d} r13={61d} r14={61d} r15={61d} r16={9u} r17={129d,65u} r18={61d} r19={61d} r20={23e} r21={62d} r22={62d} r23={62d} r24={62d} r25={62d} r26={62d} r27={62d} r28={62d} r29={61d} r30={61d} r31={61d} r32={61d} r33={61d} r34={61d} r35={61d} r36={61d} r37={69d,13u} r38={62d,1u} r39={61d} r40={61d} r41={3d,12u,5e} r42={3d,8u,2e} r43={8d,8u} r44={3d,13u} r45={61d} r46={61d} r47={61d} r48={61d} r49={61d} r50={61d} r51={61d} r52={61d} r53={61d} r54={61d} r55={61d} r56={61d} r57={61d} r58={61d} r59={61d} r60={61d} r61={61d} r62={61d} r63={61d} r64={61d} r65={61d} r66={61d} r67={61d} r68={61d} r69={61d} r70={61d} r71={61d} r72={61d} r73={61d} r74={61d} r75={61d} r76={61d} r77={61d} r78={61d} r79={61d} r80={61d} 
;;    total ref usage 5584{4738d,792u,54e} in 474{413 regular + 61 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 16 [argp]
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 175(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2 )->[3]->( 175(EH) 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 3 )->[4]->( 172(EH) 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 5 )->[6]->( 111 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 5 )->[7]->( 8 35 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 7 )->[8]->( 9 33 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

( 8 )->[9]->( 10 31 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 9 )->[10]->( 11 33 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

( 10 )->[11]->( 12 31 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 11 )->[12]->( 13 33 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

( 12 )->[13]->( 14 31 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 13 )->[14]->( 15 33 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

( 14 )->[15]->( 16 31 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 15 )->[16]->( 17 172(EH) )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 16 34 36 32 )->[17]->( 37 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 17 )->[18]->( 44 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 9 11 15 13 )->[31]->( 172(EH) 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 31 )->[32]->( 17 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 8 14 12 10 )->[33]->( 172(EH) 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 33 )->[34]->( 17 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 7 )->[35]->( 172(EH) 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 35 )->[36]->( 17 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 17 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 37 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 37 38 )->[39]->( 40 42 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 39 )->[40]->( 159(EH) 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 40 )->[41]->( 43 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 39 )->[42]->( 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 42 41 )->[43]->( 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 43 18 )->[44]->( 45 46 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 44 )->[45]->( 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 44 45 )->[46]->( 157 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 46 )->[47]->( 172(EH) 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 47 )->[48]->( 161(EH) 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 48 )->[49]->( 172(EH) 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 49 )->[50]->( 51 172(EH) )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 50 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 51 59 )->[52]->( 172(EH) 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 52 )->[53]->( 54 60 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 53 )->[54]->( 172(EH) 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 54 )->[55]->( 56 172(EH) )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 55 )->[56]->( 172(EH) 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 56 )->[57]->( 172(EH) 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 57 )->[58]->( 172(EH) 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 58 )->[59]->( 52 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 53 )->[60]->( 61 74 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 60 )->[61]->( 172(EH) 62 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 61 )->[62]->( 63 70 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 62 )->[63]->( 64 65 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 63 )->[64]->( 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 63 64 )->[65]->( 66 68 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 65 )->[66]->( 162(EH) 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 66 )->[67]->( 69 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 65 )->[68]->( 69 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 68 67 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 69 62 )->[70]->( 71 179 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 70 )->[71]->( 179 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 180 )->[72]->( 172(EH) 73 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 72 )->[73]->( 75 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 60 )->[74]->( 172(EH) 75 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 179 74 73 )->[75]->( 76 97 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 75 )->[76]->( 172(EH) 77 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 76 )->[77]->( 78 84 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 77 )->[78]->( 79 80 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 78 )->[79]->( 80 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 78 79 )->[80]->( 81 83 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 80 )->[81]->( 164(EH) 82 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 81 )->[82]->( 83 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 80 82 )->[83]->( 84 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 83 77 )->[84]->( 85 86 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 84 )->[85]->( 86 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 84 85 )->[86]->( 87 97 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 86 )->[87]->( 172(EH) 88 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 87 )->[88]->( 89 95 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 88 )->[89]->( 90 91 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 89 )->[90]->( 91 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 89 90 )->[91]->( 92 94 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 91 )->[92]->( 166(EH) 93 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 92 )->[93]->( 94 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 91 93 )->[94]->( 95 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 94 88 )->[95]->( 96 97 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 95 )->[96]->( 97 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 75 96 86 95 )->[97]->( 98 99 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 )->[98]->( 99 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 98 )->[99]->( 100 111 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 99 )->[100]->( 172(EH) 101 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 100 )->[101]->( 172(EH) 102 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 101 )->[102]->( 103 181 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 102 )->[103]->( 104 105 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 103 )->[104]->( 105 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 103 104 )->[105]->( 106 108 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 105 )->[106]->( 168(EH) 107 )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 106 )->[107]->( 108 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 105 107 )->[108]->( 181 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 181 )->[109]->( 110 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 109 182 )->[110]->( 111 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 99 110 6 )->[111]->( 172(EH) 112 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 111 )->[112]->( 113 124 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 112 )->[113]->( 172(EH) 114 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 113 )->[114]->( 115 122 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 114 )->[115]->( 116 117 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 115 )->[116]->( 117 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 115 116 )->[117]->( 118 120 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 117 )->[118]->( 170(EH) 119 )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 118 )->[119]->( 121 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 117 )->[120]->( 121 )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 120 119 )->[121]->( 122 )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 121 114 )->[122]->( 123 124 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 122 )->[123]->( 124 )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 122 123 112 )->[124]->( 125 183 )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 124 )->[125]->( 157 126 )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 125 )->[126]->( 183 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 183 )->[127]->( 128 152 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 127 )->[128]->( 129 150 )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 128 )->[129]->( 130 152 )
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 129 )->[130]->( 131 150 )
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 130 )->[131]->( 132 152 )
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 131 )->[132]->( 133 150 )
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 132 )->[133]->( 134 152 )
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 133 )->[134]->( 135 150 )
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 134 )->[135]->( 136 172(EH) )
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 135 153 155 151 )->[136]->( 156 137 )
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 136 )->[137]->( 157 )
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 128 130 134 132 )->[150]->( 172(EH) 151 )
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 150 )->[151]->( 136 )
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 127 133 131 129 )->[152]->( 172(EH) 153 )
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 152 )->[153]->( 136 )
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 184 )->[154]->( 172(EH) 155 )
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 154 )->[155]->( 136 )
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 136 )->[156]->( 157 )
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 46 156 125 137 )->[157]->( 158 185 )
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 157 )->[158]->( 185 )
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 40(EH) )->[159]->( 160 173 )
;; bb 159 artificial_defs: { d27(0){ }d161(1){ }}
;; bb 159 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 159 )->[160]->( 171 )
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 48(EH) )->[161]->( 173 )
;; bb 161 artificial_defs: { d24(0){ }d158(1){ }}
;; bb 161 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 66(EH) )->[162]->( 163 173 )
;; bb 162 artificial_defs: { d23(0){ }d157(1){ }}
;; bb 162 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 162 )->[163]->( 171 )
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 81(EH) )->[164]->( 165 173 )
;; bb 164 artificial_defs: { d21(0){ }d155(1){ }}
;; bb 164 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 164 )->[165]->( 171 )
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 92(EH) )->[166]->( 167 173 )
;; bb 166 artificial_defs: { d19(0){ }d153(1){ }}
;; bb 166 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 166 )->[167]->( 171 )
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 106(EH) )->[168]->( 169 173 )
;; bb 168 artificial_defs: { d17(0){ }d151(1){ }}
;; bb 168 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 168 )->[169]->( 171 )
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 118(EH) )->[170]->( 171 173 )
;; bb 170 artificial_defs: { d15(0){ }d149(1){ }}
;; bb 170 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 170 169 163 160 165 167 )->[171]->( 173 )
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 4(EH) 16(EH) 154(EH) 152(EH) 150(EH) 111(EH) 113(EH) 135(EH) 31(EH) 33(EH) 35(EH) 47(EH) 49(EH) 50(EH) 52(EH) 54(EH) 55(EH) 56(EH) 57(EH) 58(EH) 61(EH) 72(EH) 74(EH) 76(EH) 87(EH) 100(EH) 101(EH) )->[172]->( 173 )
;; bb 172 artificial_defs: { d13(0){ }d147(1){ }}
;; bb 172 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 170 172 168 161 166 164 162 171 159 )->[173]->( 174 176 )
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 173 )->[174]->( 176 )
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 2(EH) 3(EH) )->[175]->( 176 )
;; bb 175 artificial_defs: { d11(0){ }d145(1){ }}
;; bb 175 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 175 174 173 )->[176]->( 177 178 )
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 176 )->[177]->( 178 )
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 176 177 )->[178]->( 1 )
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 70 71 )->[179]->( 180 75 )
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 179 )->[180]->( 72 )
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 102 108 )->[181]->( 109 182 )
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 181 )->[182]->( 110 )
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 124 126 )->[183]->( 127 184 )
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 183 )->[184]->( 154 )
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 157 158 )->[185]->( 187 186 )
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 2 [cx]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 185 )->[186]->( 1 )
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 185 )->[187]->( 1 )
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 187 178 186 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 11 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 1464 to worklist
  Adding insn 1463 to worklist
  Adding insn 1462 to worklist
  Adding insn 1461 to worklist
  Adding insn 1460 to worklist
  Adding insn 1459 to worklist
  Adding insn 30 to worklist
  Adding insn 35 to worklist
  Adding insn 39 to worklist
  Adding insn 1295 to worklist
  Adding insn 46 to worklist
  Adding insn 54 to worklist
  Adding insn 62 to worklist
  Adding insn 70 to worklist
  Adding insn 78 to worklist
  Adding insn 86 to worklist
  Adding insn 94 to worklist
  Adding insn 102 to worklist
  Adding insn 110 to worklist
  Adding insn 122 to worklist
  Adding insn 127 to worklist
  Adding insn 1297 to worklist
  Adding insn 213 to worklist
  Adding insn 1318 to worklist
  Adding insn 225 to worklist
  Adding insn 1321 to worklist
  Adding insn 237 to worklist
  Adding insn 1324 to worklist
  Adding insn 243 to worklist
  Adding insn 246 to worklist
  Adding insn 251 to worklist
  Adding insn 254 to worklist
  Adding insn 1326 to worklist
  Adding insn 260 to worklist
  Adding insn 264 to worklist
  Adding insn 267 to worklist
  Adding insn 271 to worklist
  Adding insn 274 to worklist
  Adding insn 282 to worklist
  Adding insn 1417 to worklist
  Adding insn 287 to worklist
  Adding insn 297 to worklist
  Adding insn 1414 to worklist
  Adding insn 1413 to worklist
  Adding insn 1412 to worklist
  Adding insn 303 to worklist
  Adding insn 307 to worklist
  Adding insn 312 to worklist
  Adding insn 326 to worklist
  Adding insn 1443 to worklist
  Adding insn 1442 to worklist
  Adding insn 331 to worklist
  Adding insn 341 to worklist
  Adding insn 1441 to worklist
  Adding insn 1440 to worklist
  Adding insn 346 to worklist
  Adding insn 1329 to worklist
  Adding insn 353 to worklist
  Adding insn 358 to worklist
  Adding insn 363 to worklist
  Adding insn 366 to worklist
  Adding insn 369 to worklist
  Adding insn 374 to worklist
  Adding insn 377 to worklist
  Adding insn 1331 to worklist
  Adding insn 383 to worklist
  Adding insn 387 to worklist
  Adding insn 1333 to worklist
  Adding insn 390 to worklist
  Adding insn 395 to worklist
  Adding insn 1335 to worklist
  Adding insn 398 to worklist
  Adding insn 404 to worklist
  Adding insn 412 to worklist
  Adding insn 410 to worklist
  Adding insn 408 to worklist
  Adding insn 424 to worklist
  Adding insn 428 to worklist
  Adding insn 431 to worklist
  Adding insn 434 to worklist
  Adding insn 439 to worklist
  Adding insn 442 to worklist
  Adding insn 446 to worklist
  Adding insn 451 to worklist
  Adding insn 454 to worklist
  Adding insn 459 to worklist
  Adding insn 467 to worklist
  Adding insn 471 to worklist
  Adding insn 474 to worklist
  Adding insn 477 to worklist
  Adding insn 482 to worklist
  Adding insn 485 to worklist
  Adding insn 489 to worklist
  Adding insn 494 to worklist
  Adding insn 497 to worklist
  Adding insn 504 to worklist
  Adding insn 509 to worklist
  Adding insn 514 to worklist
  Adding insn 512 to worklist
  Adding insn 527 to worklist
  Adding insn 520 to worklist
  Adding insn 519 to worklist
  Adding insn 518 to worklist
  Adding insn 535 to worklist
  Adding insn 1420 to worklist
  Adding insn 539 to worklist
  Adding insn 542 to worklist
  Adding insn 545 to worklist
  Adding insn 550 to worklist
  Adding insn 553 to worklist
  Adding insn 1346 to worklist
  Adding insn 557 to worklist
  Adding insn 562 to worklist
  Adding insn 567 to worklist
  Adding insn 583 to worklist
  Adding insn 587 to worklist
  Adding insn 596 to worklist
  Adding insn 590 to worklist
  Adding insn 601 to worklist
  Adding insn 604 to worklist
  Adding insn 607 to worklist
  Adding insn 612 to worklist
  Adding insn 615 to worklist
  Adding insn 1348 to worklist
  Adding insn 621 to worklist
  Adding insn 625 to worklist
  Adding insn 628 to worklist
  Adding insn 633 to worklist
  Adding insn 636 to worklist
  Adding insn 1351 to worklist
  Adding insn 647 to worklist
  Adding insn 655 to worklist
  Adding insn 663 to worklist
  Adding insn 671 to worklist
  Adding insn 679 to worklist
  Adding insn 687 to worklist
  Adding insn 695 to worklist
  Adding insn 703 to worklist
  Adding insn 713 to worklist
  Adding insn 717 to worklist
  Adding insn 1354 to worklist
  Adding insn 789 to worklist
  Adding insn 1375 to worklist
  Adding insn 799 to worklist
  Adding insn 1378 to worklist
  Adding insn 808 to worklist
  Adding insn 1381 to worklist
  Adding insn 814 to worklist
  Adding insn 823 to worklist
  Adding insn 1383 to worklist
  Adding insn 826 to worklist
  Adding insn 835 to worklist
  Adding insn 1542 to worklist
  Adding insn 1387 to worklist
  Adding insn 848 to worklist
  Adding insn 857 to worklist
  Adding insn 1539 to worklist
  Adding insn 871 to worklist
  Adding insn 1532 to worklist
  Adding insn 885 to worklist
  Adding insn 1529 to worklist
  Adding insn 899 to worklist
  Adding insn 1536 to worklist
  Adding insn 913 to worklist
  Adding insn 1397 to worklist
  Adding insn 916 to worklist
  Adding insn 927 to worklist
  Adding insn 1399 to worklist
  Adding insn 930 to worklist
  Adding insn 939 to worklist
  Adding insn 942 to worklist
  Adding insn 947 to worklist
  Adding insn 953 to worklist
  Adding insn 1402 to worklist
  Adding insn 966 to worklist
  Adding insn 1405 to worklist
  Adding insn 984 to worklist
  Adding insn 1409 to worklist
  Adding insn 994 to worklist
  Adding insn 993 to worklist
  Adding insn 995 to worklist
  Adding insn 1477 to worklist
  Adding insn 998 to worklist
Finished finding needed instructions:
processing block 178 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 946 to worklist
processing block 177 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 176 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 938 to worklist
  Adding insn 937 to worklist
processing block 175 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1048 to worklist
processing block 174 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 173 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 926 to worklist
  Adding insn 1422 to worklist
  Adding insn 923 to worklist
processing block 172 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1054 to worklist
processing block 171 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 160 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 159 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 834 to worklist
  Adding insn 833 to worklist
  Adding insn 1060 to worklist
processing block 187 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1476 to worklist
  Adding insn 1475 to worklist
  Adding insn 1474 to worklist
  Adding insn 1473 to worklist
  Adding insn 1472 to worklist
  Adding insn 1471 to worklist
  Adding insn 1470 to worklist
processing block 186 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 185 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 991 to worklist
processing block 158 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 157 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 822 to worklist
  Adding insn 1423 to worklist
  Adding insn 819 to worklist
processing block 161 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 847 to worklist
  Adding insn 1064 to worklist
processing block 59 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 58 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 345 to worklist
  Adding insn 343 to worklist
processing block 57 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 338 to worklist
processing block 56 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 330 to worklist
  Adding insn 328 to worklist
processing block 55 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 325 to worklist
  Adding insn 324 to worklist
  Adding insn 322 to worklist
  Adding insn 321 to worklist
  Adding insn 319 to worklist
processing block 54 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 311 to worklist
  Adding insn 309 to worklist
processing block 163 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 162 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 856 to worklist
  Adding insn 855 to worklist
  Adding insn 1068 to worklist
processing block 165 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 164 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 870 to worklist
  Adding insn 869 to worklist
  Adding insn 1072 to worklist
processing block 167 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 166 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 884 to worklist
  Adding insn 883 to worklist
  Adding insn 1076 to worklist
processing block 169 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 168 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 898 to worklist
  Adding insn 897 to worklist
  Adding insn 1080 to worklist
processing block 170 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 912 to worklist
  Adding insn 911 to worklist
  Adding insn 1084 to worklist
processing block 156 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 137 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 136 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 716 to worklist
  Adding insn 715 to worklist
processing block 135 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 710 to worklist
  Adding insn 708 to worklist
  Adding insn 1433 to worklist
  Adding insn 705 to worklist
processing block 151 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 150 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 786 to worklist
  Adding insn 1426 to worklist
processing block 134 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 702 to worklist
  Adding insn 699 to worklist
  Adding insn 698 to worklist
  Adding insn 697 to worklist
processing block 153 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 152 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 796 to worklist
  Adding insn 1425 to worklist
processing block 133 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 694 to worklist
  Adding insn 691 to worklist
  Adding insn 690 to worklist
  Adding insn 689 to worklist
processing block 132 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 686 to worklist
  Adding insn 683 to worklist
  Adding insn 682 to worklist
  Adding insn 681 to worklist
processing block 131 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 678 to worklist
  Adding insn 675 to worklist
  Adding insn 674 to worklist
  Adding insn 673 to worklist
processing block 130 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 670 to worklist
  Adding insn 667 to worklist
  Adding insn 666 to worklist
  Adding insn 665 to worklist
processing block 129 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 662 to worklist
  Adding insn 659 to worklist
  Adding insn 658 to worklist
  Adding insn 657 to worklist
processing block 128 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 654 to worklist
  Adding insn 651 to worklist
  Adding insn 650 to worklist
  Adding insn 649 to worklist
processing block 127 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 646 to worklist
  Adding insn 643 to worklist
  Adding insn 642 to worklist
  Adding insn 641 to worklist
processing block 155 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 154 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 806 to worklist
  Adding insn 805 to worklist
  Adding insn 1424 to worklist
processing block 184 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 183 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 983 to worklist
  Adding insn 979 to worklist
  Adding insn 978 to worklist
processing block 126 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 125 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 635 to worklist
processing block 124 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 632 to worklist
processing block 123 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 122 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 624 to worklist
processing block 121 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 119 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 618 to worklist
processing block 118 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 120 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 15 to worklist
processing block 117 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 611 to worklist
processing block 116 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 608 to worklist
  Adding insn 606 to worklist
processing block 115 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 603 to worklist
processing block 114 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 600 to worklist
  Adding insn 599 to worklist
  Adding insn 598 to worklist
processing block 113 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 594 to worklist
  Adding insn 592 to worklist
  Adding insn 1434 to worklist
processing block 112 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 586 to worklist
  Adding insn 585 to worklist
processing block 111 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 582 to worklist
  Adding insn 581 to worklist
  Adding insn 579 to worklist
processing block 110 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 564 to worklist
  Adding insn 1416 to worklist
  Adding insn 1421 to worklist
processing block 109 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 182 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 181 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 965 to worklist
processing block 108 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 107 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1172 to worklist
processing block 106 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 105 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 549 to worklist
  Adding insn 1185 to worklist
  Adding insn 548 to worklist
processing block 104 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 103 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 541 to worklist
processing block 102 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 538 to worklist
  Adding insn 537 to worklist
processing block 101 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 531 to worklist
  Adding insn 1415 to worklist
  Adding insn 1435 to worklist
  Adding insn 528 to worklist
processing block 100 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 526 to worklist
  Adding insn 522 to worklist
  Adding insn 1436 to worklist
  Adding insn 517 to worklist
  Adding insn 516 to worklist
processing block 99 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 513 to worklist
processing block 98 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 506 to worklist
processing block 97 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 503 to worklist
  Adding insn 502 to worklist
processing block 96 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 95 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 493 to worklist
processing block 94 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 93 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1170 to worklist
processing block 92 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 91 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 481 to worklist
  Adding insn 1184 to worklist
  Adding insn 480 to worklist
processing block 90 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 89 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 473 to worklist
processing block 88 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 470 to worklist
  Adding insn 469 to worklist
processing block 87 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 463 to worklist
  Adding insn 1437 to worklist
  Adding insn 461 to worklist
processing block 86 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 458 to worklist
processing block 85 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 84 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 450 to worklist
processing block 83 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 82 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1168 to worklist
processing block 81 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 80 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 438 to worklist
  Adding insn 1173 to worklist
  Adding insn 437 to worklist
processing block 79 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 78 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 430 to worklist
processing block 77 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 427 to worklist
  Adding insn 426 to worklist
processing block 76 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 420 to worklist
  Adding insn 1438 to worklist
  Adding insn 418 to worklist
processing block 75 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 411 to worklist
  Adding insn 409 to worklist
  Adding insn 407 to worklist
processing block 73 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 72 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 394 to worklist
processing block 180 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 179 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 952 to worklist
processing block 71 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 70 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 386 to worklist
processing block 69 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 67 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 380 to worklist
processing block 66 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 68 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 14 to worklist
processing block 65 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 373 to worklist
processing block 64 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 370 to worklist
  Adding insn 368 to worklist
processing block 63 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 365 to worklist
processing block 62 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 362 to worklist
  Adding insn 361 to worklist
  Adding insn 360 to worklist
processing block 61 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 356 to worklist
  Adding insn 1439 to worklist
processing block 74 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 403 to worklist
processing block 60 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 352 to worklist
processing block 53 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 306 to worklist
processing block 52 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 302 to worklist
  Adding insn 300 to worklist
processing block 51 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1446 to worklist
  Adding insn 1445 to worklist
  Adding insn 1444 to worklist
processing block 50 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 295 to worklist
  Adding insn 293 to worklist
  Adding insn 1447 to worklist
  Adding insn 290 to worklist
  Adding insn 1088 to worklist
processing block 49 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 286 to worklist
  Adding insn 284 to worklist
processing block 48 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
processing block 47 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 273 to worklist
processing block 46 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 270 to worklist
processing block 45 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 44 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 263 to worklist
processing block 43 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 41 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 257 to worklist
processing block 40 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 253 to worklist
processing block 42 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 12 to worklist
processing block 39 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 250 to worklist
processing block 38 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 247 to worklist
processing block 37 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 242 to worklist
processing block 18 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 17 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 124 to worklist
processing block 16 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
  Adding insn 1457 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
processing block 32 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 31 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 1450 to worklist
  Adding insn 206 to worklist
processing block 15 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 109 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
processing block 34 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 33 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 1449 to worklist
  Adding insn 218 to worklist
processing block 14 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 13 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 12 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
processing block 11 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 10 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
processing block 9 lr out =  0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 61 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 8 lr out =  3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 36 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 35 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 1448 to worklist
  Adding insn 230 to worklist
processing block 7 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 6 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1166 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 38 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 34 to worklist
  Adding insn 32 to worklist
processing block 3 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 1458 to worklist
processing block 2 lr out =  3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
  Adding insn 1465 to worklist


try_optimize_cfg iteration 1

Forwarding edge 17->18 to 44 failed.
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 125->126 to 183 failed.
Forwarding edge 136->137 to 157 failed.
Forwarding edge 150->151 to 136 failed.
Forwarding edge 152->153 to 136 failed.
Forwarding edge 154->155 to 136 failed.
Forwarding edge 159->160 to 171 failed.
Forwarding edge 162->163 to 171 failed.
Forwarding edge 164->165 to 171 failed.
Forwarding edge 166->167 to 171 failed.
Forwarding edge 168->169 to 171 failed.
Conditionals in bb 168 and 170 match.
Conditionals in bb 162 and 170 match.
Conditionals in bb 162 and 168 match.
Conditionals in bb 162 and 164 match.
Conditionals in bb 162 and 166 match.
Conditionals in bb 159 and 170 match.
Conditionals in bb 159 and 168 match.
Conditionals in bb 159 and 162 match.
Conditionals in bb 159 and 164 match.
Conditionals in bb 159 and 166 match.
Conditionals in bb 164 and 170 match.
Conditionals in bb 164 and 168 match.
Conditionals in bb 164 and 166 match.
Conditionals in bb 166 and 170 match.
Conditionals in bb 166 and 168 match.
Forwarding edge 179->180 to 72 failed.
Forwarding edge 181->182 to 110 failed.
Forwarding edge 183->184 to 154 failed.


leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={125d,90u} r1={96d,26u} r2={74d,17u} r3={12d,21u,8e} r4={94d,59u,16e} r5={130d,99u} r6={3d,24u} r7={15d,327u} r8={61d} r9={61d} r10={61d} r11={61d} r12={61d} r13={61d} r14={61d} r15={61d} r16={9u} r17={129d,65u} r18={61d} r19={61d} r20={23e} r21={62d} r22={62d} r23={62d} r24={62d} r25={62d} r26={62d} r27={62d} r28={62d} r29={61d} r30={61d} r31={61d} r32={61d} r33={61d} r34={61d} r35={61d} r36={61d} r37={69d,13u} r38={62d,1u} r39={61d} r40={61d} r41={3d,12u,5e} r42={3d,8u,2e} r43={8d,8u} r44={3d,13u} r45={61d} r46={61d} r47={61d} r48={61d} r49={61d} r50={61d} r51={61d} r52={61d} r53={61d} r54={61d} r55={61d} r56={61d} r57={61d} r58={61d} r59={61d} r60={61d} r61={61d} r62={61d} r63={61d} r64={61d} r65={61d} r66={61d} r67={61d} r68={61d} r69={61d} r70={61d} r71={61d} r72={61d} r73={61d} r74={61d} r75={61d} r76={61d} r77={61d} r78={61d} r79={61d} r80={61d} 
;;    total ref usage 5584{4738d,792u,54e} in 474{413 regular + 61 call} insns.
(note 1 0 16 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(note 16 1 1459 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1459 16 1460 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 1460 1459 1461 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 1461 1460 1462 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 1462 1461 1463 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 1463 1462 1464 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 1464 1463 1465 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) db/builder.cc:22 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 1465 1464 1466 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -232 [0xffffffffffffff18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) db/builder.cc:22 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -232 [0xffffffffffffff18])))
            (nil))))
(note 1466 1465 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 1466 3 2 (set (reg/f:DI 6 bp [orig:253 <retval> ] [253])
        (reg:DI 5 di [ .result_ptr ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 43 r14 [orig:254 dbname ] [254])
        (reg:DI 4 si [ dbname ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ dbname ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 42 r13 [orig:255 env ] [255])
        (reg:DI 1 dx [ env ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ env ])
        (nil)))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])
        (reg:DI 2 cx [ options ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ options ])
        (nil)))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [19 %sfp+-184 S8 A64])
        (reg:DI 37 r8 [ table_cache ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ table_cache ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 3 bx [orig:258 iter ] [258])
        (reg:DI 38 r9 [ iter ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [3 meta+0 S8 A64])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 9 18 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 216 [0xd8])) [3 D.51474+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [454])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:22 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:DI 0 ax [454])
            (nil))))
(insn 18 11 19 2 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/status.h:24 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (const_int 0 [0])) db/builder.cc:24 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [orig:261 iter_19(D)->_vptr.Iterator ] [261])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:25 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 21 20 22 2 NOTE_INSN_DELETED)
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:25 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:261 iter_19(D)->_vptr.Iterator ] [261])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_21;(struct Iterator)iter_19(D)->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:261 iter_19(D)->_vptr.Iterator ] [261])
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       175 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 44 [r15]
;; live  kill	
(note 24 23 1458 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 1458 24 26 3 (set (reg/f:DI 44 r15 [450])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 176 [0xb0]))) db/builder.cc:27 214 {*leadi}
     (nil))
(insn 26 1458 28 3 (set (reg:DI 1 dx [orig:264 meta_17(D)->number ] [264])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 28 26 29 3 (set (reg:DI 4 si)
        (reg/v/f:DI 43 r14 [orig:254 dbname ] [254])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:254 dbname ] [254])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [450])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 30 29 31 3 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>) [0 TableFileName S1 A8])
        (const_int 0 [0])) db/builder.cc:27 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       175 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:DI 0 ax [orig:265 iter_19(D)->_vptr.Iterator ] [265])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:28 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 33 32 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:28 89 {*movdi_internal}
     (nil))
(call_insn 35 34 1012 4 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:265 iter_19(D)->_vptr.Iterator ] [265])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_26 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_27;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:28 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1012 35 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 1012 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:94 D.51467 ] [94])
            (const_int 0 [0]))) db/builder.cc:28 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:94 D.51467 ] [94])
        (nil)))
(jump_insn 39 38 1187 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1294)
            (pc))) db/builder.cc:28 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1294)
;;  succ:       7 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
(note 1187 39 1166 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1187 1295 6 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(jump_insn 1295 1166 1296 6 (set (pc)
        (label_ref 576)) 654 {jump}
     (nil)
 -> 576)
;;  succ:       111 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1296 1295 1294)
;; basic block 7, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 1294 1296 40 7 200 "" [1 uses])
(note 40 1294 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 0 ax [orig:267 env_30(D)->_vptr.Env ] [267])
        (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 42 41 43 7 (set (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:267 env_30(D)->_vptr.Env ] [267])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_31 + 32B]+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (nil))
(note 43 42 45 7 NOTE_INSN_DELETED)
(insn 45 43 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 228)
;;  succ:       8 [80.0%]  (FALLTHRU)
;;              35 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 2381, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [80.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:DI 4 si [orig:171 D.51471 ] [171])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 1 dx [orig:270 _223->_vptr.Env ] [270])
        (mem/f:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171]) [3 _223->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171]) [3 _223->_vptr.Env+0 S8 A64])
        (nil)))
(insn 50 49 53 8 (set (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:270 _223->_vptr.Env ] [270])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_224 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:270 _223->_vptr.Env ] [270])
        (nil)))
(insn 53 50 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
            (reg/f:DI 0 ax [orig:96 D.51465 ] [96]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
        (nil)))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 216)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              33 [20.0%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 1905, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 4 si [orig:175 D.51471 ] [175])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_223].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:DI 0 ax [orig:273 _228->_vptr.Env ] [273])
        (mem/f:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175]) [3 _228->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175]) [3 _228->_vptr.Env+0 S8 A64])
        (nil)))
(insn 58 57 61 9 (set (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:273 _228->_vptr.Env ] [273])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_229 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 61 58 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
            (reg/f:DI 37 r8 [orig:173 D.51465 ] [173]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
        (nil)))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1999 (nil)))
 -> 204)
;;  succ:       10 [80.0%]  (FALLTHRU)
;;              31 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 1524, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [80.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 4 si [orig:179 D.51471 ] [179])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_228].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 65 64 66 10 (set (reg/f:DI 1 dx [orig:276 _233->_vptr.Env ] [276])
        (mem/f:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179]) [3 _233->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179]) [3 _233->_vptr.Env+0 S8 A64])
        (nil)))
(insn 66 65 69 10 (set (reg/f:DI 37 r8 [orig:181 D.51465 ] [181])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:276 _233->_vptr.Env ] [276])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_234 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:276 _233->_vptr.Env ] [276])
        (nil)))
(insn 69 66 70 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:181 D.51465 ] [181])
            (reg/f:DI 0 ax [orig:177 D.51465 ] [177]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
        (nil)))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 216)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 216)
;;  succ:       11 [80.0%]  (FALLTHRU)
;;              33 [20.0%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 1219, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [80.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg/f:DI 4 si [orig:183 D.51471 ] [183])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_233].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 73 72 74 11 (set (reg/f:DI 0 ax [orig:279 _238->_vptr.Env ] [279])
        (mem/f:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183]) [3 _238->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183]) [3 _238->_vptr.Env+0 S8 A64])
        (nil)))
(insn 74 73 77 11 (set (reg/f:DI 0 ax [orig:185 D.51465 ] [185])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:279 _238->_vptr.Env ] [279])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_239 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 77 74 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:185 D.51465 ] [185])
            (reg/f:DI 37 r8 [orig:181 D.51465 ] [181]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:181 D.51465 ] [181])
        (nil)))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 204)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1970 (nil)))
 -> 204)
;;  succ:       12 [80.3%]  (FALLTHRU)
;;              31 [19.7%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 12, loop depth 0, count 0, freq 979, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [80.3%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 4 si [orig:187 D.51471 ] [187])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_238].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 81 80 82 12 (set (reg/f:DI 1 dx [orig:282 _243->_vptr.Env ] [282])
        (mem/f:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187]) [3 _243->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187]) [3 _243->_vptr.Env+0 S8 A64])
        (nil)))
(insn 82 81 85 12 (set (reg/f:DI 37 r8 [orig:189 D.51465 ] [189])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:282 _243->_vptr.Env ] [282])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_244 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:282 _243->_vptr.Env ] [282])
        (nil)))
(insn 85 82 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:189 D.51465 ] [189])
            (reg/f:DI 0 ax [orig:185 D.51465 ] [185]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:185 D.51465 ] [185])
        (nil)))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 216)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1976 (nil)))
 -> 216)
;;  succ:       13 [80.2%]  (FALLTHRU)
;;              33 [19.8%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 13, loop depth 0, count 0, freq 786, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [80.2%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg/f:DI 4 si [orig:191 D.51471 ] [191])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_243].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 89 88 90 13 (set (reg/f:DI 0 ax [orig:285 _248->_vptr.Env ] [285])
        (mem/f:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191]) [3 _248->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191]) [3 _248->_vptr.Env+0 S8 A64])
        (nil)))
(insn 90 89 93 13 (set (reg/f:DI 0 ax [orig:193 D.51465 ] [193])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:285 _248->_vptr.Env ] [285])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_249 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 93 90 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:193 D.51465 ] [193])
            (reg/f:DI 37 r8 [orig:189 D.51465 ] [189]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:189 D.51465 ] [189])
        (nil)))
(jump_insn 94 93 95 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 204)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 204)
;;  succ:       14 [80.0%]  (FALLTHRU)
;;              31 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [80.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg/f:DI 4 si [orig:195 D.51471 ] [195])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_248].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 97 96 98 14 (set (reg/f:DI 1 dx [orig:288 _253->_vptr.Env ] [288])
        (mem/f:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195]) [3 _253->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195]) [3 _253->_vptr.Env+0 S8 A64])
        (nil)))
(insn 98 97 101 14 (set (reg/f:DI 37 r8 [orig:197 D.51465 ] [197])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:288 _253->_vptr.Env ] [288])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_254 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:288 _253->_vptr.Env ] [288])
        (nil)))
(insn 101 98 102 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:197 D.51465 ] [197])
            (reg/f:DI 0 ax [orig:193 D.51465 ] [193]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:193 D.51465 ] [193])
        (nil)))
(jump_insn 102 101 103 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 216)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1940 (nil)))
 -> 216)
;;  succ:       15 [80.6%]  (FALLTHRU)
;;              33 [19.4%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 15, loop depth 0, count 0, freq 507, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [80.6%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (set (reg/f:DI 4 si [orig:199 D.51471 ] [199])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_253].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 105 104 106 15 (set (reg/f:DI 0 ax [orig:291 _258->_vptr.Env ] [291])
        (mem/f:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199]) [3 _258->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199]) [3 _258->_vptr.Env+0 S8 A64])
        (nil)))
(insn 106 105 109 15 (set (reg/f:DI 0 ax [orig:201 D.51465 ] [201])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:291 _258->_vptr.Env ] [291])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_259 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 109 106 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:201 D.51465 ] [201])
            (reg/f:DI 37 r8 [orig:197 D.51465 ] [197]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:197 D.51465 ] [197])
        (nil)))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 204)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1952 (nil)))
 -> 204)
;;  succ:       16 [80.5%]  (FALLTHRU)
;;              31 [19.5%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 16, loop depth 0, count 0, freq 408, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [80.5%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (set (reg/f:DI 4 si [orig:203 D.51471 ] [203])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_258].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 113 112 1457 16 (set (reg/f:DI 5 di [294])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 1457 113 116 16 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) ./include/leveldb/env.h:290 214 {*leadi}
     (nil))
(insn 116 1457 117 16 (set (reg/f:DI 0 ax [orig:297 _263->_vptr.Env ] [297])
        (mem/f:DI (reg/f:DI 4 si [orig:203 D.51471 ] [203]) [3 _263->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 117 116 118 16 NOTE_INSN_DELETED)
(insn 118 117 119 16 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 119 118 122 16 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 122 119 141 16 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:297 _263->_vptr.Env ] [297])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_264 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_265;(struct Env)_263->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:297 _263->_vptr.Env ] [297])
                        (expr_list:REG_CALL_DECL (nil)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       17 [100.0%]  (FALLTHRU)
;;              172 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 17, loop depth 0, count 0, freq 2976, maybe hot
;; Invalid sum of incoming frequencies 4106, should be 2976
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              34 [100.0%] 
;;              36 [100.0%] 
;;              32 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 141 122 123 17 41 "" [3 uses])
(note 123 141 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 17 (set (reg/f:DI 5 di [orig:206 D.51463 ] [206])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 125 124 126 17 (set (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:206 D.51463 ] [206])
            (reg/f:DI 0 ax [orig:87 D.51463 ] [87]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 127 126 130 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 240)
;;  succ:       37 [89.9%] 
;;              18 [10.1%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 302, maybe hot
;;  prev block 17, next block 31, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [10.1%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 130 127 1297 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1297 130 1298 18 (set (pc)
        (label_ref 261)) 654 {jump}
     (nil)
 -> 261)
;;  succ:       44 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1298 1297 204)
;; basic block 31, loop depth 0, count 0, freq 877, maybe hot
;;  prev block 18, next block 32, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [20.0%] 
;;              11 [19.7%] 
;;              15 [19.5%] 
;;              13 [20.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	
(code_label 204 1298 205 31 32 "" [4 uses])
(note 205 204 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 1450 31 (set (reg/f:DI 5 di [317])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 1450 206 209 31 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) ./include/leveldb/env.h:290 214 {*leadi}
     (nil))
(insn 209 1450 210 31 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 210 209 213 31 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 213 210 1317 31 (call (mem:QI (reg/f:DI 0 ax [orig:177 D.51465 ] [177]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 762, maybe hot
;; Invalid sum of incoming frequencies 877, should be 762
;;  prev block 31, next block 33, flags: (HOT_PARTITION, RTL)
;;  pred:       31 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1317 213 1318 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1318 1317 1319 32 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1319 1318 216)
;; basic block 33, loop depth 0, count 0, freq 1096, maybe hot
;;  prev block 32, next block 34, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [20.0%] 
;;              14 [19.4%] 
;;              12 [19.8%] 
;;              10 [20.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	
(code_label 216 1319 217 33 31 "" [4 uses])
(note 217 216 218 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 1449 33 (set (reg/f:DI 5 di [320])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 1449 218 221 33 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) ./include/leveldb/env.h:290 214 {*leadi}
     (nil))
(insn 221 1449 222 33 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 222 221 225 33 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 225 222 1320 33 (call (mem:QI (reg/f:DI 37 r8 [orig:173 D.51465 ] [173]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 2341, maybe hot
;; Invalid sum of incoming frequencies 1096, should be 2341
;;  prev block 33, next block 35, flags: (HOT_PARTITION, RTL)
;;  pred:       33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1320 225 1321 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1321 1320 1322 34 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1322 1321 228)
;; basic block 35, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 34, next block 36, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [20.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	
(code_label 228 1322 229 35 30 "" [1 uses])
(note 229 228 230 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 1448 35 (set (reg/f:DI 5 di [323])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) db/builder.cc:30 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 1448 230 233 35 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) db/builder.cc:30 214 {*leadi}
     (nil))
(insn 233 1448 234 35 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 234 233 235 35 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 235 234 237 35 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:255 env ] [255])) db/builder.cc:30 89 {*movdi_internal}
     (nil))
(call_insn 237 235 1323 35 (call (mem:QI (reg/f:DI 0 ax [orig:96 D.51465 ] [96]) [0  S1 A8])
        (const_int 0 [0])) db/builder.cc:30 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 36, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 35, next block 37, flags: (HOT_PARTITION, RTL)
;;  pred:       35 [100.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1323 237 1324 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1324 1323 1325 36 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1325 1324 240)
;; basic block 37, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 36, next block 38, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [89.9%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 240 1325 241 37 39 "" [1 uses])
(note 241 240 242 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:206 D.51463 ] [206])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 244 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 248)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 248)
;;  succ:       38 [69.8%]  (FALLTHRU)
;;              39 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 37, next block 39, flags: (HOT_PARTITION, RTL)
;;  pred:       37 [69.8%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 244 243 246 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(call_insn 246 244 247 38 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 247 246 248 38 (set (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 38, next block 40, flags: (HOT_PARTITION, RTL)
;;  pred:       37 [30.2%] 
;;              38 [100.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 248 247 249 39 42 "" [1 uses])
(note 249 248 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 251 250 252 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1003)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1003)
;;  succ:       40 [69.8%]  (FALLTHRU)
;;              42 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 40, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 39, next block 41, flags: (HOT_PARTITION, RTL)
;;  pred:       39 [69.8%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 252 251 253 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 40 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 D.51463 ] [87])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (nil)))
(call_insn 254 253 1022 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       159 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 41, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 40, next block 42, flags: (HOT_PARTITION, RTL)
;;  pred:       40 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1022 254 257 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 257 1022 1326 41 (set (reg/f:DI 5 di [orig:250 D.51463 ] [250])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1326 257 1327 41 (set (pc)
        (label_ref 258)) 654 {jump}
     (nil)
 -> 258)
;;  succ:       43 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1327 1326 1003)
;; basic block 42, loop depth 0, count 0, freq 807, maybe hot
;;  prev block 41, next block 43, flags: (HOT_PARTITION, RTL)
;;  pred:       39 [30.2%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1003 1327 1002 42 114 "" [1 uses])
(note 1002 1003 12 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 12 1002 258 42 (set (reg/f:DI 5 di [orig:250 D.51463 ] [250])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 42, next block 44, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [100.0%]  (FALLTHRU)
;;              41 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 258 12 259 43 43 "" [1 uses])
(note 259 258 260 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 43 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:87 D.51463 ] [87])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (nil)))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 44, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 43, next block 45, flags: (HOT_PARTITION, RTL)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 261 260 262 44 40 "" [1 uses])
(note 262 261 263 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:250 D.51463 ] [250])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 264 263 265 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 268)
;;  succ:       45 [69.8%]  (FALLTHRU)
;;              46 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 45, loop depth 0, count 0, freq 2078, maybe hot
;;  prev block 44, next block 46, flags: (HOT_PARTITION, RTL)
;;  pred:       44 [69.8%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 265 264 267 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(call_insn 267 265 268 45 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 46, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 45, next block 47, flags: (HOT_PARTITION, RTL)
;;  pred:       44 [30.2%] 
;;              45 [100.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 268 267 269 46 44 "" [1 uses])
(note 269 268 270 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:31 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 271 270 272 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 817)
            (pc))) db/builder.cc:31 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 817)
;;  succ:       157 [93.3%] 
;;              47 [6.7%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 47, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 46, next block 48, flags: (HOT_PARTITION, RTL)
;;  pred:       46 [6.7%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 272 271 273 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 47 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 274 273 1023 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/builder.cc:35 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 47, next block 49, flags: (HOT_PARTITION, RTL)
;;  pred:       47 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 1023 274 1417 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 1417 1023 279 48 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])
        (reg/f:DI 0 ax [orig:100 D.51468 ] [100])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 279 1417 280 48 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 280 279 281 48 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 281 280 282 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:100 D.51468 ] [100])) db/builder.cc:35 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:100 D.51468 ] [100])
        (nil)))
(call_insn 282 281 283 48 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       161 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 49, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 48, next block 50, flags: (HOT_PARTITION, RTL)
;;  pred:       48 [100.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 283 282 284 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 49 (set (reg/f:DI 0 ax [orig:328 iter_19(D)->_vptr.Iterator ] [328])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 285 284 286 49 NOTE_INSN_DELETED)
(insn 286 285 287 49 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:36 89 {*movdi_internal}
     (nil))
(call_insn 287 286 1024 49 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:328 iter_19(D)->_vptr.Iterator ] [328])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_44 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_45;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:36 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 50, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 49, next block 51, flags: (HOT_PARTITION, RTL)
;;  pred:       49 [100.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 1024 287 1088 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1088 1024 290 50 (set (reg:DI 37 r8 [orig:445 D.44372+8 ] [445])
        (reg:DI 1 dx [+8 ])) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(insn 290 1088 1447 50 (set (reg:DI 1 dx [orig:330 MEM[(long unsigned int *)meta_17(D) + 32B] ] [330])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])
        (nil)))
(insn 1447 290 293 50 (set (reg/f:DI 5 di [orig:331 D.51470 ] [331])
        (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
            (const_int 24 [0x18]))) ./db/dbformat.h:153 214 {*leadi}
     (nil))
(insn 293 1447 295 50 (set (reg:DI 2 cx)
        (reg:DI 0 ax [orig:444 D.44372 ] [444])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:444 D.44372 ] [444])
        (nil)))
(insn 295 293 297 50 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(call_insn 297 295 298 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       51 [100.0%]  (FALLTHRU)
;;              172 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 51, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 50, next block 52, flags: (HOT_PARTITION, RTL)
;;  pred:       50 [100.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 298 297 1444 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 1444 298 1412 51 (set (reg/f:DI 0 ax [orig:451 D.51470 ] [451])
        (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
            (const_int 56 [0x38]))) ./db/dbformat.h:153 214 {*leadi}
     (nil))
(insn 1412 1444 1445 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])
        (reg/f:DI 0 ax [orig:451 D.51470 ] [451])) ./db/dbformat.h:153 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:451 D.51470 ] [451])
        (nil)))
(insn 1445 1412 1413 51 (set (reg/f:DI 0 ax [452])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) db/builder.cc:40 214 {*leadi}
     (nil))
(insn 1413 1445 1446 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [19 %sfp+-200 S8 A64])
        (reg/f:DI 0 ax [452])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [452])
        (nil)))
(insn 1446 1413 1414 51 (set (reg/f:DI 0 ax [453])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 144 [0x90]))) db/builder.cc:40 214 {*leadi}
     (nil))
(insn 1414 1446 347 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [19 %sfp+-192 S8 A64])
        (reg/f:DI 0 ax [453])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [453])
        (nil)))
;;  succ:       52 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 52, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 51, next block 53, flags: (HOT_PARTITION, RTL)
;;  pred:       51 [100.0%]  (FALLTHRU)
;;              59 [100.0%]  (DFS_BACK)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 347 1414 299 52 47 "" [1 uses])
(note 299 347 300 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 52 (set (reg/f:DI 0 ax [orig:332 iter_19(D)->_vptr.Iterator ] [332])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 301 300 302 52 NOTE_INSN_DELETED)
(insn 302 301 303 52 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 303 302 1025 52 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:332 iter_19(D)->_vptr.Iterator ] [332])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_49 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_50;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:37 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              53 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 53, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 52, next block 54, flags: (HOT_PARTITION, RTL)
;;  pred:       52 [100.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1025 303 306 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 306 1025 307 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:107 D.51467 ] [107])
            (const_int 0 [0]))) db/builder.cc:37 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:107 D.51467 ] [107])
        (nil)))
(jump_insn 307 306 308 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) db/builder.cc:37 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 350)
;;  succ:       54 [98.0%]  (FALLTHRU)
;;              60 [2.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 54, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 53, next block 55, flags: (HOT_PARTITION, RTL)
;;  pred:       53 [98.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 308 307 309 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 54 (set (reg/f:DI 0 ax [orig:334 iter_19(D)->_vptr.Iterator ] [334])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:38 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 310 309 311 54 NOTE_INSN_DELETED)
(insn 311 310 312 54 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:38 89 {*movdi_internal}
     (nil))
(call_insn 312 311 1026 54 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:334 iter_19(D)->_vptr.Iterator ] [334])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_53 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_54;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:38 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 55, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 54, next block 56, flags: (HOT_PARTITION, RTL)
;;  pred:       54 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 1026 312 1442 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1026 1443 55 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 key+0 S8 A128])
        (reg:DI 0 ax [336])) db/builder.cc:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [336])
        (nil)))
(insn 1443 1442 317 55 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [6 key+8 S8 A64])
        (reg:DI 1 dx [+8 ])) db/builder.cc:38 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(note 317 1443 319 55 NOTE_INSN_DELETED)
(insn 319 317 321 55 (set (reg:DI 1 dx [orig:340 MEM[(long unsigned int *)meta_17(D) + 64B] ] [340])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])
        (nil)))
(insn 321 319 322 55 (set (reg:DI 37 r8)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [4 MEM[(long unsigned int *)&key + 8B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 322 321 324 55 (set (reg:DI 2 cx)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 MEM[(const char * *)&key]+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 324 322 325 55 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 325 324 326 55 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(call_insn 326 325 327 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       56 [100.0%]  (FALLTHRU)
;;              172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 56, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 55, next block 57, flags: (HOT_PARTITION, RTL)
;;  pred:       55 [100.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 327 326 328 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 56 (set (reg/f:DI 0 ax [orig:342 iter_19(D)->_vptr.Iterator ] [342])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 329 328 330 56 NOTE_INSN_DELETED)
(insn 330 329 331 56 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 331 330 1027 56 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:342 iter_19(D)->_vptr.Iterator ] [342])
                        (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_57 + 72B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_58;(const struct Iterator)iter_19(D)->9) S1 A8])
            (const_int 0 [0]))) db/builder.cc:40 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 57, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 56, next block 58, flags: (HOT_PARTITION, RTL)
;;  pred:       56 [100.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 1027 331 1440 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1440 1027 1441 57 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 D.44375+0 S8 A128])
        (reg:DI 0 ax [344])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [344])
        (nil)))
(insn 1441 1440 338 57 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [6 D.44375+8 S8 A64])
        (reg:DI 1 dx [+8 ])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(insn 338 1441 339 57 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [19 %sfp+-200 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 339 338 340 57 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [19 %sfp+-192 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(insn 340 339 341 57 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 341 340 342 57 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>) [0 Add S1 A8])
        (const_int 0 [0])) db/builder.cc:40 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 58, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 57, next block 59, flags: (HOT_PARTITION, RTL)
;;  pred:       57 [100.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 342 341 343 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 58 (set (reg/f:DI 0 ax [orig:348 iter_19(D)->_vptr.Iterator ] [348])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 344 343 345 58 NOTE_INSN_DELETED)
(insn 345 344 346 58 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 346 345 1328 58 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:348 iter_19(D)->_vptr.Iterator ] [348])
                    (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_63 + 48B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_64;(struct Iterator)iter_19(D)->6) S1 A8])
        (const_int 0 [0])) db/builder.cc:37 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:348 iter_19(D)->_vptr.Iterator ] [348])
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              59 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 59, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 58, next block 60, flags: (HOT_PARTITION, RTL)
;;  pred:       58 [100.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1328 346 1329 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1329 1328 1330 59 (set (pc)
        (label_ref 347)) 654 {jump}
     (nil)
 -> 347)
;;  succ:       52 [100.0%]  (DFS_BACK)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1330 1329 350)
;; basic block 60, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 59, next block 61, flags: (HOT_PARTITION, RTL)
;;  pred:       53 [2.0%]  (LOOP_EXIT)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 350 1330 351 60 46 "" [1 uses])
(note 351 350 352 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:44 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 353 352 354 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) db/builder.cc:44 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 401)
;;  succ:       61 [15.0%]  (FALLTHRU)
;;              74 [85.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 61, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 60, next block 62, flags: (HOT_PARTITION, RTL)
;;  pred:       60 [15.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	
(note 354 353 1439 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1439 354 356 61 (set (reg/f:DI 5 di [350])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 64 [0x40]))) db/builder.cc:45 214 {*leadi}
     (nil))
(insn 356 1439 358 61 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:45 89 {*movdi_internal}
     (nil))
(call_insn 358 356 359 61 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>) [0 Finish S1 A8])
        (const_int 0 [0])) db/builder.cc:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 62, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 61, next block 63, flags: (HOT_PARTITION, RTL)
;;  pred:       61 [100.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 359 358 360 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 62 (set (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 361 360 362 62 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 362 361 363 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
            (reg/f:DI 5 di [orig:167 D.51463 ] [167]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 363 362 364 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 384)
;;  succ:       63 [89.9%]  (FALLTHRU)
;;              70 [10.1%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 63, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 62, next block 64, flags: (HOT_PARTITION, RTL)
;;  pred:       62 [89.9%]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 364 363 365 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 366 365 367 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 371)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 371)
;;  succ:       64 [69.8%]  (FALLTHRU)
;;              65 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 64, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 63, next block 65, flags: (HOT_PARTITION, RTL)
;;  pred:       63 [69.8%]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 367 366 368 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 64 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:97 D.51463 ] [97])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
        (nil)))
(call_insn 369 368 370 64 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 370 369 371 64 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 65, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 64, next block 66, flags: (HOT_PARTITION, RTL)
;;  pred:       63 [30.2%] 
;;              64 [100.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 371 370 372 65 50 "" [1 uses])
(note 372 371 373 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:167 D.51463 ] [167])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 374 373 375 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1007)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1007)
;;  succ:       66 [69.8%]  (FALLTHRU)
;;              68 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 66, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 65, next block 67, flags: (HOT_PARTITION, RTL)
;;  pred:       65 [69.8%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 375 374 377 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(call_insn 377 375 1029 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 9 [0x9])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       162 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 67, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 66, next block 68, flags: (HOT_PARTITION, RTL)
;;  pred:       66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1029 377 380 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 380 1029 1331 67 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1331 380 1332 67 (set (pc)
        (label_ref 381)) 654 {jump}
     (nil)
 -> 381)
;;  succ:       69 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1332 1331 1007)
;; basic block 68, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 67, next block 69, flags: (HOT_PARTITION, RTL)
;;  pred:       65 [30.2%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1007 1332 1006 68 115 "" [1 uses])
(note 1006 1007 14 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 14 1006 381 68 (set (reg/f:DI 0 ax [orig:207 D.51463 ] [207])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       69 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 69, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 68, next block 70, flags: (HOT_PARTITION, RTL)
;;  pred:       68 [100.0%]  (FALLTHRU)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 381 14 382 69 51 "" [1 uses])
(note 382 381 383 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 69 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:207 D.51463 ] [207])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:207 D.51463 ] [207])
        (nil)))
;;  succ:       70 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 70, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 69, next block 71, flags: (HOT_PARTITION, RTL)
;;  pred:       69 [100.0%]  (FALLTHRU)
;;              62 [10.1%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 384 383 385 70 49 "" [1 uses])
(note 385 384 386 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:167 D.51463 ] [167])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 387 386 388 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 949)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 949)
;;  succ:       71 [69.8%]  (FALLTHRU)
;;              179 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 71, loop depth 0, count 0, freq 21, maybe hot
;;  prev block 70, next block 72, flags: (HOT_PARTITION, RTL)
;;  pred:       70 [69.8%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 388 387 390 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(call_insn 390 388 1333 71 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1333 390 1334 71 (set (pc)
        (label_ref 949)) 654 {jump}
     (nil)
 -> 949)
;;  succ:       179 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1334 1333 951)
;; basic block 72, loop depth 0, count 0, freq 2
;;  prev block 71, next block 73, flags: (HOT_PARTITION, RTL)
;;  pred:       180 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 951 1334 393 72 106 "" [1 uses])
(note 393 951 394 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 72 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:47 89 {*movdi_internal}
     (nil))
(call_insn 395 394 1030 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>) [0 FileSize S1 A8])
            (const_int 0 [0]))) db/builder.cc:47 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              73 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 73, loop depth 0, count 0, freq 2
;;  prev block 72, next block 74, flags: (HOT_PARTITION, RTL)
;;  pred:       72 [100.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1030 395 398 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 398 1030 1335 73 (set (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (reg:DI 0 ax [orig:119 D.51466 ] [119])) db/builder.cc:47 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:119 D.51466 ] [119])
        (nil)))
(jump_insn 1335 398 1336 73 (set (pc)
        (label_ref 405)) 654 {jump}
     (nil)
 -> 405)
;;  succ:       75 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1336 1335 401)
;; basic block 74, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 73, next block 75, flags: (HOT_PARTITION, RTL)
;;  pred:       60 [85.0%] 
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 401 1336 402 74 48 "" [1 uses])
(note 402 401 403 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 74 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:51 89 {*movdi_internal}
     (nil))
(call_insn 404 403 405 74 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>) [0 Abandon S1 A8])
        (const_int 0 [0])) db/builder.cc:51 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              75 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 75, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 74, next block 76, flags: (HOT_PARTITION, RTL)
;;  pred:       179 [93.3%] 
;;              74 [100.0%]  (FALLTHRU)
;;              73 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 405 404 406 75 53 "" [2 uses])
(note 406 405 1418 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(note 1418 406 407 75 NOTE_INSN_DELETED)
(insn 407 1418 408 75 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:53 89 {*movdi_internal}
     (nil))
(call_insn 408 407 409 75 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 75 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:53 89 {*movdi_internal}
     (nil))
(call_insn 410 409 411 75 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 411 410 412 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:56 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 412 411 417 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:56 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 500)
;;  succ:       76 [6.7%]  (FALLTHRU)
;;              97 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 76, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 75, next block 77, flags: (HOT_PARTITION, RTL)
;;  pred:       75 [6.7%]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 417 412 418 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 1438 76 (set (reg/f:DI 4 si [orig:122 D.51469 ] [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:57 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 1438 418 420 76 (set (reg/f:DI 5 di [351])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 80 [0x50]))) db/builder.cc:57 214 {*leadi}
     (nil))
(insn 420 1438 421 76 (set (reg/f:DI 0 ax [orig:352 _83->_vptr.WritableFile ] [352])
        (mem/f:DI (reg/f:DI 4 si [orig:122 D.51469 ] [122]) [3 _83->_vptr.WritableFile+0 S8 A64])) db/builder.cc:57 89 {*movdi_internal}
     (nil))
(note 421 420 424 76 NOTE_INSN_DELETED)
(call_insn 424 421 425 76 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:352 _83->_vptr.WritableFile ] [352])
                    (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_84 + 40B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_85;(struct WritableFile)_83->5) S1 A8])
        (const_int 0 [0])) db/builder.cc:57 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:352 _83->_vptr.WritableFile ] [352])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 77, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 76, next block 78, flags: (HOT_PARTITION, RTL)
;;  pred:       76 [100.0%]  (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 425 424 426 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 77 (set (reg/f:DI 5 di [orig:116 D.51463 ] [116])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 427 426 428 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:116 D.51463 ] [116])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 428 427 429 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 447)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 447)
;;  succ:       78 [89.9%]  (FALLTHRU)
;;              84 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 78, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 77, next block 79, flags: (HOT_PARTITION, RTL)
;;  pred:       77 [89.9%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 429 428 430 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:116 D.51463 ] [116])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 431 430 432 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 435)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 435)
;;  succ:       79 [69.8%]  (FALLTHRU)
;;              80 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 79, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 78, next block 80, flags: (HOT_PARTITION, RTL)
;;  pred:       78 [69.8%]  (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 432 431 434 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(call_insn 434 432 435 79 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       80 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 80, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 79, next block 81, flags: (HOT_PARTITION, RTL)
;;  pred:       78 [30.2%] 
;;              79 [100.0%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 435 434 436 80 57 "" [1 uses])
(note 436 435 437 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 1173 80 (set (reg/f:DI 5 di [orig:446 D.51463 ] [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1173 437 438 80 (set (reg/f:DI 0 ax [orig:209 D.51463 ] [209])
        (reg/f:DI 5 di [orig:446 D.51463 ] [446])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 438 1173 439 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:446 D.51463 ] [446])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 439 438 440 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 444)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 444)
;;  succ:       81 [69.8%]  (FALLTHRU)
;;              83 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 81, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 80, next block 82, flags: (HOT_PARTITION, RTL)
;;  pred:       80 [69.8%]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 440 439 442 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(call_insn 442 440 1031 81 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 10 [0xa])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       164 (ABNORMAL,ABNORMAL_CALL,EH)
;;              82 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 82, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 81, next block 83, flags: (HOT_PARTITION, RTL)
;;  pred:       81 [100.0%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1031 442 1168 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1168 1031 444 82 (set (reg/f:DI 5 di [orig:446 D.51463 ] [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       83 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 83, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 82, next block 84, flags: (HOT_PARTITION, RTL)
;;  pred:       80 [30.2%] 
;;              82 [100.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 444 1168 445 83 58 "" [1 uses])
(note 445 444 446 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 83 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:209 D.51463 ] [209])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:209 D.51463 ] [209])
        (nil)))
;;  succ:       84 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 84, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 83, next block 85, flags: (HOT_PARTITION, RTL)
;;  pred:       83 [100.0%]  (FALLTHRU)
;;              77 [10.1%] 
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 447 446 448 84 56 "" [1 uses])
(note 448 447 450 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 450 448 451 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:446 D.51463 ] [446])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 451 450 452 84 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 455)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 455)
;;  succ:       85 [69.8%]  (FALLTHRU)
;;              86 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 85, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 84, next block 86, flags: (HOT_PARTITION, RTL)
;;  pred:       84 [69.8%]  (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 452 451 454 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(call_insn 454 452 455 85 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       86 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 86, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 85, next block 87, flags: (HOT_PARTITION, RTL)
;;  pred:       84 [30.2%] 
;;              85 [100.0%]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 455 454 456 86 59 "" [1 uses])
(note 456 455 458 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 458 456 459 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:59 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 459 458 460 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:59 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 500)
;;  succ:       87 [100.0%]  (FALLTHRU)
;;              97
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 87, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 86, next block 88, flags: (HOT_PARTITION, RTL)
;;  pred:       86 [100.0%]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 460 459 461 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 1437 87 (set (reg/f:DI 4 si [orig:129 D.51469 ] [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 1437 461 463 87 (set (reg/f:DI 5 di [354])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 96 [0x60]))) db/builder.cc:60 214 {*leadi}
     (nil))
(insn 463 1437 464 87 (set (reg/f:DI 0 ax [orig:355 _93->_vptr.WritableFile ] [355])
        (mem/f:DI (reg/f:DI 4 si [orig:129 D.51469 ] [129]) [3 _93->_vptr.WritableFile+0 S8 A64])) db/builder.cc:60 89 {*movdi_internal}
     (nil))
(note 464 463 467 87 NOTE_INSN_DELETED)
(call_insn 467 464 468 87 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:355 _93->_vptr.WritableFile ] [355])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_94 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_95;(struct WritableFile)_93->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:60 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:355 _93->_vptr.WritableFile ] [355])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              88 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 88, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 87, next block 89, flags: (HOT_PARTITION, RTL)
;;  pred:       87 [100.0%]  (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 468 467 469 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 88 (set (reg/f:DI 5 di [orig:125 D.51463 ] [125])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 470 469 471 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:125 D.51463 ] [125])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 471 470 472 88 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 490)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 490)
;;  succ:       89 [89.9%]  (FALLTHRU)
;;              95 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 89, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 88, next block 90, flags: (HOT_PARTITION, RTL)
;;  pred:       88 [89.9%]  (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 472 471 473 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:125 D.51463 ] [125])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 474 473 475 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 478)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 478)
;;  succ:       90 [69.8%]  (FALLTHRU)
;;              91 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 90, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 89, next block 91, flags: (HOT_PARTITION, RTL)
;;  pred:       89 [69.8%]  (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 475 474 477 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(call_insn 477 475 478 90 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       91 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 91, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 90, next block 92, flags: (HOT_PARTITION, RTL)
;;  pred:       89 [30.2%] 
;;              90 [100.0%]  (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 478 477 479 91 62 "" [1 uses])
(note 479 478 480 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 1184 91 (set (reg/f:DI 5 di [orig:448 D.51463 ] [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1184 480 481 91 (set (reg/f:DI 0 ax [orig:211 D.51463 ] [211])
        (reg/f:DI 5 di [orig:448 D.51463 ] [448])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 481 1184 482 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:448 D.51463 ] [448])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 482 481 483 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 487)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 487)
;;  succ:       92 [69.8%]  (FALLTHRU)
;;              94 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 92, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 91, next block 93, flags: (HOT_PARTITION, RTL)
;;  pred:       91 [69.8%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 483 482 485 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(call_insn 485 483 1032 92 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 11 [0xb])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       166 (ABNORMAL,ABNORMAL_CALL,EH)
;;              93 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 93, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 92, next block 94, flags: (HOT_PARTITION, RTL)
;;  pred:       92 [100.0%]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1032 485 1170 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1170 1032 487 93 (set (reg/f:DI 5 di [orig:448 D.51463 ] [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       94 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 94, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 93, next block 95, flags: (HOT_PARTITION, RTL)
;;  pred:       91 [30.2%] 
;;              93 [100.0%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 487 1170 488 94 63 "" [1 uses])
(note 488 487 489 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 94 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:211 D.51463 ] [211])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:211 D.51463 ] [211])
        (nil)))
;;  succ:       95 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 95, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 94, next block 96, flags: (HOT_PARTITION, RTL)
;;  pred:       94 [100.0%]  (FALLTHRU)
;;              88 [10.1%] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 490 489 491 95 61 "" [1 uses])
(note 491 490 493 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 493 491 494 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:448 D.51463 ] [448])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 494 493 495 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 500)
;;  succ:       96 [69.8%]  (FALLTHRU)
;;              97 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 96, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 95, next block 97, flags: (HOT_PARTITION, RTL)
;;  pred:       95 [69.8%]  (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 495 494 497 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(call_insn 497 495 500 96 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 97, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 96, next block 98, flags: (HOT_PARTITION, RTL)
;;  pred:       75 [93.3%] 
;;              96 [100.0%]  (FALLTHRU)
;;              86
;;              95 [30.2%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 500 497 501 97 55 "" [3 uses])
(note 501 500 502 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 97 (set (reg/f:DI 5 di [orig:135 D.51469 ] [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(insn 503 502 504 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:135 D.51469 ] [135])
            (const_int 0 [0]))) db/builder.cc:62 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 504 503 505 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 510)
            (pc))) db/builder.cc:62 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 510)
;;  succ:       98 [69.8%]  (FALLTHRU)
;;              99 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 98, loop depth 0, count 0, freq 140, maybe hot
;;  prev block 97, next block 99, flags: (HOT_PARTITION, RTL)
;;  pred:       97 [69.8%]  (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 505 504 506 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 98 (set (reg/f:DI 0 ax [orig:357 _102->_vptr.WritableFile ] [357])
        (mem/f:DI (reg/f:DI 5 di [orig:135 D.51469 ] [135]) [3 _102->_vptr.WritableFile+0 S8 A64])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(note 507 506 509 98 NOTE_INSN_DELETED)
(call_insn 509 507 510 98 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:357 _102->_vptr.WritableFile ] [357])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_103 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_104;(struct WritableFile)_102->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:62 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:357 _102->_vptr.WritableFile ] [357])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 99, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 98, next block 100, flags: (HOT_PARTITION, RTL)
;;  pred:       97 [30.2%] 
;;              98 [100.0%]  (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 510 509 511 99 65 "" [1 uses])
(note 511 510 512 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 99 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])
        (const_int 0 [0])) db/builder.cc:63 89 {*movdi_internal}
     (nil))
(insn 513 512 514 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:65 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 514 513 515 99 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 576)
            (pc))) db/builder.cc:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 576)
;;  succ:       100 [6.7%]  (FALLTHRU)
;;              111 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 100, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 99, next block 101, flags: (HOT_PARTITION, RTL)
;;  pred:       99 [6.7%]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 515 514 516 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 100 (set (reg:DI 2 cx [orig:139 D.51466 ] [139])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (nil)))
(insn 517 516 518 100 (set (reg:DI 1 dx [orig:140 D.51466 ] [140])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 518 517 519 100 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [9 D.44398.verify_checksums+0 S1 A128])
        (const_int 0 [0])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 519 518 520 100 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 161 [0xa1])) [9 D.44398.fill_cache+0 S1 A8])
        (const_int 1 [0x1])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 520 519 1436 100 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [3 D.44398.snapshot+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 89 {*movdi_internal}
     (nil))
(insn 1436 520 522 100 (set (reg/f:DI 4 si [359])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) db/builder.cc:69 214 {*leadi}
     (nil))
(insn 522 1436 526 100 (set (reg:DI 37 r8)
        (const_int 0 [0])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 526 522 527 100 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [19 %sfp+-184 S8 A64])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 527 526 1033 100 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>) [0 NewIterator S1 A8])
            (const_int 0 [0]))) db/builder.cc:69 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              101 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 101, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 100, next block 102, flags: (HOT_PARTITION, RTL)
;;  pred:       100 [100.0%]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 1033 527 528 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 528 1033 1420 101 (set (reg/v/f:DI 4 si [orig:141 it ] [141])
        (reg:DI 0 ax)) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1420 528 1435 101 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])
        (reg/v/f:DI 4 si [orig:141 it ] [141])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 1435 1420 1415 101 (set (reg/f:DI 5 di [360])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 112 [0x70]))) db/builder.cc:70 214 {*leadi}
     (nil))
(insn 1415 1435 531 101 (set (reg/v/f:DI 0 ax [orig:141 it ] [141])
        (reg/v/f:DI 4 si [orig:141 it ] [141])) db/builder.cc:70 89 {*movdi_internal}
     (nil))
(insn 531 1415 532 101 (set (reg/f:DI 0 ax [orig:361 it_113->_vptr.Iterator ] [361])
        (mem/f:DI (reg/v/f:DI 0 ax [orig:141 it ] [141]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:70 89 {*movdi_internal}
     (nil))
(note 532 531 535 101 NOTE_INSN_DELETED)
(call_insn 535 532 536 101 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:361 it_113->_vptr.Iterator ] [361])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_115 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_116;(const struct Iterator)it_113->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:361 it_113->_vptr.Iterator ] [361])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              102 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 102, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 101, next block 103, flags: (HOT_PARTITION, RTL)
;;  pred:       101 [100.0%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 536 535 537 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 102 (set (reg/f:DI 5 di [orig:132 D.51463 ] [132])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 538 537 539 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:132 D.51463 ] [132])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 539 538 540 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 961)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 961)
;;  succ:       103 [89.9%]  (FALLTHRU)
;;              181 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 103, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 102, next block 104, flags: (HOT_PARTITION, RTL)
;;  pred:       102 [89.9%]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 540 539 541 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:132 D.51463 ] [132])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 542 541 543 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 546)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 546)
;;  succ:       104 [69.8%]  (FALLTHRU)
;;              105 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 104, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 103, next block 105, flags: (HOT_PARTITION, RTL)
;;  pred:       103 [69.8%]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 543 542 545 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(call_insn 545 543 546 104 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       105 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 105, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 104, next block 106, flags: (HOT_PARTITION, RTL)
;;  pred:       103 [30.2%] 
;;              104 [100.0%]  (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 546 545 547 105 68 "" [1 uses])
(note 547 546 548 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 1185 105 (set (reg/f:DI 5 di [orig:449 D.51463 ] [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1185 548 549 105 (set (reg/f:DI 0 ax [orig:213 D.51463 ] [213])
        (reg/f:DI 5 di [orig:449 D.51463 ] [449])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 549 1185 550 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:449 D.51463 ] [449])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 550 549 551 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 555)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 555)
;;  succ:       106 [69.8%]  (FALLTHRU)
;;              108 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 106, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 105, next block 107, flags: (HOT_PARTITION, RTL)
;;  pred:       105 [69.8%]  (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 551 550 553 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(call_insn 553 551 1034 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 13 [0xd])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       168 (ABNORMAL,ABNORMAL_CALL,EH)
;;              107 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 107, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 106, next block 108, flags: (HOT_PARTITION, RTL)
;;  pred:       106 [100.0%]  (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1034 553 1172 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1034 555 107 (set (reg/f:DI 5 di [orig:449 D.51463 ] [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 108, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 107, next block 109, flags: (HOT_PARTITION, RTL)
;;  pred:       105 [30.2%] 
;;              107 [100.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 555 1172 556 108 69 "" [1 uses])
(note 556 555 557 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 1346 108 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:213 D.51463 ] [213])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:213 D.51463 ] [213])
        (nil)))
(jump_insn 1346 557 1347 108 (set (pc)
        (label_ref 961)) 654 {jump}
     (nil)
 -> 961)
;;  succ:       181 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1347 1346 964)
;; basic block 109, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 108, next block 110, flags: (HOT_PARTITION, RTL)
;;  pred:       181 [69.8%] 
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 964 1347 560 109 108 "" [1 uses])
(note 560 964 562 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(call_insn 562 560 958 109 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       110 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 110, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 109, next block 111, flags: (HOT_PARTITION, RTL)
;;  pred:       109 [100.0%]  (FALLTHRU)
;;              182 [100.0%] 
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 958 562 563 110 107 "" [1 uses])
(note 563 958 1421 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1421 563 1416 110 (set (reg/v/f:DI 5 di [orig:141 it ] [141])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(insn 1416 1421 564 110 (set (reg/v/f:DI 0 ax [orig:141 it ] [141])
        (reg/v/f:DI 5 di [orig:141 it ] [141])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(insn 564 1416 565 110 (set (reg/f:DI 0 ax [orig:363 it_113->_vptr.Iterator ] [363])
        (mem/f:DI (reg/v/f:DI 0 ax [orig:141 it ] [141]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(note 565 564 567 110 NOTE_INSN_DELETED)
(call_insn 567 565 576 110 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:363 it_113->_vptr.Iterator ] [363])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_120 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_121;(struct Iterator)it_113->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:71 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:363 it_113->_vptr.Iterator ] [363])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       111 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 111, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 110, next block 112, flags: (HOT_PARTITION, RTL)
;;  pred:       99 [93.3%] 
;;              110 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 576 567 577 111 29 "" [2 uses])
(note 577 576 579 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 579 577 580 111 (set (reg/f:DI 0 ax [orig:366 iter_19(D)->_vptr.Iterator ] [366])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 580 579 581 111 NOTE_INSN_DELETED)
(insn 581 580 582 111 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:76 89 {*movdi_internal}
     (nil))
(insn 582 581 583 111 (set (reg:DI 5 di)
        (reg/f:DI 43 r14 [447])) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [447])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(call_insn 583 582 584 111 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:366 iter_19(D)->_vptr.Iterator ] [366])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_132 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_133;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:76 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:366 iter_19(D)->_vptr.Iterator ] [366])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              112 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 112, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 111, next block 113, flags: (HOT_PARTITION, RTL)
;;  pred:       111 [100.0%]  (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 584 583 585 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 112 (set (reg/f:DI 5 di [orig:151 D.51463 ] [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 D.44418.state_+0 S8 A128])) ./include/leveldb/status.h:52 89 {*movdi_internal}
     (nil))
(insn 586 585 587 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:151 D.51463 ] [151])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 587 586 588 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 973)
;;  succ:       113 [69.8%]  (FALLTHRU)
;;              124 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 113, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 112, next block 114, flags: (HOT_PARTITION, RTL)
;;  pred:       112 [69.8%]  (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 588 587 590 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(call_insn 590 588 1434 113 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1434 590 592 113 (set (reg/f:DI 5 di [368])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 144 [0x90]))) db/builder.cc:77 214 {*leadi}
     (nil))
(insn 592 1434 593 113 (set (reg/f:DI 0 ax [orig:369 iter_19(D)->_vptr.Iterator ] [369])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:77 89 {*movdi_internal}
     (nil))
(note 593 592 594 113 NOTE_INSN_DELETED)
(insn 594 593 596 113 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:258 iter ] [258])
        (nil)))
(call_insn 596 594 597 113 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:369 iter_19(D)->_vptr.Iterator ] [369])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_138 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_139;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:77 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:369 iter_19(D)->_vptr.Iterator ] [369])
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              114 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 114, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 113, next block 115, flags: (HOT_PARTITION, RTL)
;;  pred:       113 [100.0%]  (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 597 596 598 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 114 (set (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 599 598 600 114 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 600 599 601 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
            (reg/f:DI 5 di [orig:168 D.51463 ] [168]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 601 600 602 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 622)
;;  succ:       115 [89.9%]  (FALLTHRU)
;;              122 [10.1%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 115, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 114, next block 116, flags: (HOT_PARTITION, RTL)
;;  pred:       114 [89.9%]  (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 602 601 603 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 604 603 605 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 609)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 609)
;;  succ:       116 [69.8%]  (FALLTHRU)
;;              117 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 116, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 115, next block 117, flags: (HOT_PARTITION, RTL)
;;  pred:       115 [69.8%]  (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 605 604 606 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 116 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:144 D.51463 ] [144])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
        (nil)))
(call_insn 607 606 608 116 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 608 607 609 116 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       117 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 117, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 116, next block 118, flags: (HOT_PARTITION, RTL)
;;  pred:       115 [30.2%] 
;;              116 [100.0%]  (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 609 608 610 117 73 "" [1 uses])
(note 610 609 611 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 612 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:168 D.51463 ] [168])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 612 611 613 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1011)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1011)
;;  succ:       118 [69.8%]  (FALLTHRU)
;;              120 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 118, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 117, next block 119, flags: (HOT_PARTITION, RTL)
;;  pred:       117 [69.8%]  (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 613 612 615 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(call_insn 615 613 1035 118 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 14 [0xe])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       170 (ABNORMAL,ABNORMAL_CALL,EH)
;;              119 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 119, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 118, next block 120, flags: (HOT_PARTITION, RTL)
;;  pred:       118 [100.0%]  (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 1035 615 618 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 618 1035 1348 119 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1348 618 1349 119 (set (pc)
        (label_ref 619)) 654 {jump}
     (nil)
 -> 619)
;;  succ:       121 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1349 1348 1011)
;; basic block 120, loop depth 0, count 0, freq 601, maybe hot
;;  prev block 119, next block 121, flags: (HOT_PARTITION, RTL)
;;  pred:       117 [30.2%] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1011 1349 1010 120 116 "" [1 uses])
(note 1010 1011 15 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 15 1010 619 120 (set (reg/f:DI 0 ax [orig:214 D.51463 ] [214])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       121 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 121, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 120, next block 122, flags: (HOT_PARTITION, RTL)
;;  pred:       120 [100.0%]  (FALLTHRU)
;;              119 [100.0%] 
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 619 15 620 121 74 "" [1 uses])
(note 620 619 621 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 121 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:214 D.51463 ] [214])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:214 D.51463 ] [214])
        (nil)))
;;  succ:       122 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 122, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 121, next block 123, flags: (HOT_PARTITION, RTL)
;;  pred:       121 [100.0%]  (FALLTHRU)
;;              114 [10.1%] 
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 622 621 623 122 72 "" [1 uses])
(note 623 622 624 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:168 D.51463 ] [168])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 625 624 626 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 973)
;;  succ:       123 [69.8%]  (FALLTHRU)
;;              124 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 123, loop depth 0, count 0, freq 1549, maybe hot
;;  prev block 122, next block 124, flags: (HOT_PARTITION, RTL)
;;  pred:       122 [69.8%]  (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 626 625 628 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(call_insn 628 626 973 123 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       124 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 124, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 123, next block 125, flags: (HOT_PARTITION, RTL)
;;  pred:       122 [30.2%] 
;;              123 [100.0%]  (FALLTHRU)
;;              112 [30.2%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 973 628 631 124 110 "" [2 uses])
(note 631 973 632 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 633 632 634 124 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 976)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 976)
;;  succ:       125 [15.0%]  (FALLTHRU)
;;              183 [85.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 125, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 124, next block 126, flags: (HOT_PARTITION, RTL)
;;  pred:       124 [15.0%]  (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 634 633 635 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                    (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
        (nil)))
(jump_insn 636 635 1350 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 817)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 817)
;;  succ:       157 [50.0%] 
;;              126 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 126, loop depth 0, count 0, freq 238, maybe hot
;;  prev block 125, next block 127, flags: (HOT_PARTITION, RTL)
;;  pred:       125 [50.0%]  (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1350 636 1351 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1351 1350 1352 126 (set (pc)
        (label_ref 976)) 654 {jump}
     (nil)
 -> 976)
;;  succ:       183 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1352 1351 980)
;; basic block 127, loop depth 0, count 0, freq 736, maybe hot
;; Invalid sum of incoming frequencies 2347, should be 736
;;  prev block 126, next block 128, flags: (HOT_PARTITION, RTL)
;;  pred:       183 [79.9%] 
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(code_label 980 1352 640 127 111 "" [1 uses])
(note 640 980 641 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 127 (set (reg/f:DI 4 si [orig:154 D.51471 ] [154])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:255 env ] [255])
        (nil)))
(insn 642 641 643 127 (set (reg/f:DI 1 dx [orig:371 _141->_vptr.Env ] [371])
        (mem/f:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154]) [3 _141->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154]) [3 _141->_vptr.Env+0 S8 A64])
        (nil)))
(insn 643 642 646 127 (set (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:371 _141->_vptr.Env ] [371])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_291 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:371 _141->_vptr.Env ] [371])
        (nil)))
(insn 646 643 647 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
            (reg/f:DI 0 ax [orig:159 D.51465 ] [159]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
        (nil)))
(jump_insn 647 646 648 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1977 (nil)))
 -> 792)
;;  succ:       128 [80.2%]  (FALLTHRU)
;;              152 [19.8%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 128, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 127, next block 129, flags: (HOT_PARTITION, RTL)
;;  pred:       127 [80.2%]  (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 648 647 649 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 128 (set (reg/f:DI 4 si [orig:218 D.51471 ] [218])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_141].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 650 649 651 128 (set (reg/f:DI 0 ax [orig:374 _295->_vptr.Env ] [374])
        (mem/f:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218]) [3 _295->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218]) [3 _295->_vptr.Env+0 S8 A64])
        (nil)))
(insn 651 650 654 128 (set (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:374 _295->_vptr.Env ] [374])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_296 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 654 651 655 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
            (reg/f:DI 2 cx [orig:216 D.51465 ] [216]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
        (nil)))
(jump_insn 655 654 656 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1963 (nil)))
 -> 782)
;;  succ:       129 [80.4%]  (FALLTHRU)
;;              150 [19.6%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 129, loop depth 0, count 0, freq 474, maybe hot
;;  prev block 128, next block 130, flags: (HOT_PARTITION, RTL)
;;  pred:       128 [80.4%]  (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 656 655 657 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 129 (set (reg/f:DI 4 si [orig:222 D.51471 ] [222])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_295].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 658 657 659 129 (set (reg/f:DI 1 dx [orig:377 _300->_vptr.Env ] [377])
        (mem/f:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222]) [3 _300->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222]) [3 _300->_vptr.Env+0 S8 A64])
        (nil)))
(insn 659 658 662 129 (set (reg/f:DI 2 cx [orig:224 D.51465 ] [224])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:377 _300->_vptr.Env ] [377])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_301 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:377 _300->_vptr.Env ] [377])
        (nil)))
(insn 662 659 663 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:224 D.51465 ] [224])
            (reg/f:DI 0 ax [orig:220 D.51465 ] [220]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
        (nil)))
(jump_insn 663 662 664 129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 792)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1953 (nil)))
 -> 792)
;;  succ:       130 [80.5%]  (FALLTHRU)
;;              152 [19.5%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 130, loop depth 0, count 0, freq 382, maybe hot
;;  prev block 129, next block 131, flags: (HOT_PARTITION, RTL)
;;  pred:       129 [80.5%]  (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 664 663 665 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 130 (set (reg/f:DI 4 si [orig:226 D.51471 ] [226])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_300].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 666 665 667 130 (set (reg/f:DI 0 ax [orig:380 _305->_vptr.Env ] [380])
        (mem/f:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226]) [3 _305->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226]) [3 _305->_vptr.Env+0 S8 A64])
        (nil)))
(insn 667 666 670 130 (set (reg/f:DI 0 ax [orig:228 D.51465 ] [228])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:380 _305->_vptr.Env ] [380])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_306 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 670 667 671 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:228 D.51465 ] [228])
            (reg/f:DI 2 cx [orig:224 D.51465 ] [224]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:224 D.51465 ] [224])
        (nil)))
(jump_insn 671 670 672 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 782)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1933 (nil)))
 -> 782)
;;  succ:       131 [80.7%]  (FALLTHRU)
;;              150 [19.3%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 131, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 130, next block 132, flags: (HOT_PARTITION, RTL)
;;  pred:       130 [80.7%]  (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 672 671 673 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 131 (set (reg/f:DI 4 si [orig:230 D.51471 ] [230])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_305].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 674 673 675 131 (set (reg/f:DI 1 dx [orig:383 _310->_vptr.Env ] [383])
        (mem/f:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230]) [3 _310->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230]) [3 _310->_vptr.Env+0 S8 A64])
        (nil)))
(insn 675 674 678 131 (set (reg/f:DI 2 cx [orig:232 D.51465 ] [232])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:383 _310->_vptr.Env ] [383])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_311 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:383 _310->_vptr.Env ] [383])
        (nil)))
(insn 678 675 679 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:232 D.51465 ] [232])
            (reg/f:DI 0 ax [orig:228 D.51465 ] [228]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:228 D.51465 ] [228])
        (nil)))
(jump_insn 679 678 680 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 792)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1839 (nil)))
 -> 792)
;;  succ:       132 [81.6%]  (FALLTHRU)
;;              152 [18.4%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 132, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 131, next block 133, flags: (HOT_PARTITION, RTL)
;;  pred:       131 [81.6%]  (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 680 679 681 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 132 (set (reg/f:DI 4 si [orig:234 D.51471 ] [234])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_310].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 682 681 683 132 (set (reg/f:DI 0 ax [orig:386 _315->_vptr.Env ] [386])
        (mem/f:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234]) [3 _315->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234]) [3 _315->_vptr.Env+0 S8 A64])
        (nil)))
(insn 683 682 686 132 (set (reg/f:DI 0 ax [orig:236 D.51465 ] [236])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:386 _315->_vptr.Env ] [386])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_316 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 686 683 687 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:236 D.51465 ] [236])
            (reg/f:DI 2 cx [orig:232 D.51465 ] [232]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:232 D.51465 ] [232])
        (nil)))
(jump_insn 687 686 688 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 782)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1798 (nil)))
 -> 782)
;;  succ:       133 [82.0%]  (FALLTHRU)
;;              150 [18.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 133, loop depth 0, count 0, freq 206, maybe hot
;;  prev block 132, next block 134, flags: (HOT_PARTITION, RTL)
;;  pred:       132 [82.0%]  (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 688 687 689 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 133 (set (reg/f:DI 4 si [orig:238 D.51471 ] [238])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_315].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 690 689 691 133 (set (reg/f:DI 1 dx [orig:389 _320->_vptr.Env ] [389])
        (mem/f:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238]) [3 _320->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238]) [3 _320->_vptr.Env+0 S8 A64])
        (nil)))
(insn 691 690 694 133 (set (reg/f:DI 2 cx [orig:240 D.51465 ] [240])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:389 _320->_vptr.Env ] [389])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_321 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:389 _320->_vptr.Env ] [389])
        (nil)))
(insn 694 691 695 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:240 D.51465 ] [240])
            (reg/f:DI 0 ax [orig:236 D.51465 ] [236]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:236 D.51465 ] [236])
        (nil)))
(jump_insn 695 694 696 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 792)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1935 (nil)))
 -> 792)
;;  succ:       134 [80.7%]  (FALLTHRU)
;;              152 [19.4%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 134, loop depth 0, count 0, freq 166, maybe hot
;;  prev block 133, next block 135, flags: (HOT_PARTITION, RTL)
;;  pred:       133 [80.7%]  (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 696 695 697 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 697 696 698 134 (set (reg/f:DI 4 si [orig:242 D.51471 ] [242])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_320].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 698 697 699 134 (set (reg/f:DI 0 ax [orig:392 _325->_vptr.Env ] [392])
        (mem/f:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242]) [3 _325->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242]) [3 _325->_vptr.Env+0 S8 A64])
        (nil)))
(insn 699 698 702 134 (set (reg/f:DI 0 ax [orig:244 D.51465 ] [244])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:392 _325->_vptr.Env ] [392])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_326 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 702 699 703 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:244 D.51465 ] [244])
            (reg/f:DI 2 cx [orig:240 D.51465 ] [240]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:240 D.51465 ] [240])
        (nil)))
(jump_insn 703 702 704 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 782)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 782)
;;  succ:       135 [80.0%]  (FALLTHRU)
;;              150 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 135, loop depth 0, count 0, freq 133, maybe hot
;;  prev block 134, next block 136, flags: (HOT_PARTITION, RTL)
;;  pred:       134 [80.0%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 704 703 705 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 1433 135 (set (reg/f:DI 4 si [orig:246 D.51471 ] [246])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_325].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 1433 705 708 135 (set (reg/f:DI 5 di [395])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) ./include/leveldb/env.h:296 214 {*leadi}
     (nil))
(insn 708 1433 709 135 (set (reg/f:DI 0 ax [orig:397 _330->_vptr.Env ] [397])
        (mem/f:DI (reg/f:DI 4 si [orig:246 D.51471 ] [246]) [3 _330->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 709 708 710 135 NOTE_INSN_DELETED)
(insn 710 709 713 135 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 713 710 729 135 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:397 _330->_vptr.Env ] [397])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_331 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_332;(struct Env)_330->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:397 _330->_vptr.Env ] [397])
                    (expr_list:REG_CALL_DECL (nil)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       136 [100.0%]  (FALLTHRU)
;;              172 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 136, loop depth 0, count 0, freq 921, maybe hot
;; Invalid sum of incoming frequencies 1267, should be 921
;;  prev block 135, next block 137, flags: (HOT_PARTITION, RTL)
;;  pred:       135 [100.0%]  (FALLTHRU)
;;              153 [100.0%] 
;;              155 [100.0%] 
;;              151 [100.0%] 
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 729 713 714 136 87 "" [3 uses])
(note 714 729 715 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 136 (set (reg/f:DI 5 di [orig:166 D.51463 ] [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [3 D.44420.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 716 715 717 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:166 D.51463 ] [166])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 717 716 1353 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 811)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 811)
;;  succ:       156 [69.8%] 
;;              137 [30.2%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 137, loop depth 0, count 0, freq 278, maybe hot
;;  prev block 136, next block 150, flags: (HOT_PARTITION, RTL)
;;  pred:       136 [30.2%]  (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1353 717 1354 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1354 1353 1355 137 (set (pc)
        (label_ref 817)) 654 {jump}
     (nil)
 -> 817)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1355 1354 782)
;; basic block 150, loop depth 0, count 0, freq 268, maybe hot
;;  prev block 137, next block 151, flags: (HOT_PARTITION, RTL)
;;  pred:       128 [19.6%] 
;;              130 [19.3%] 
;;              134 [20.0%] 
;;              132 [18.0%] 
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	
(code_label 782 1355 783 150 78 "" [4 uses])
(note 783 782 1426 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1426 783 786 150 (set (reg/f:DI 5 di [411])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) ./include/leveldb/env.h:296 214 {*leadi}
     (nil))
(insn 786 1426 789 150 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 789 786 1374 150 (call (mem:QI (reg/f:DI 0 ax [orig:220 D.51465 ] [220]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              151 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 151, loop depth 0, count 0, freq 232, maybe hot
;;  prev block 150, next block 152, flags: (HOT_PARTITION, RTL)
;;  pred:       150 [100.0%]  (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1374 789 1375 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1375 1374 1376 151 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       136 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1376 1375 792)
;; basic block 152, loop depth 0, count 0, freq 335, maybe hot
;;  prev block 151, next block 153, flags: (HOT_PARTITION, RTL)
;;  pred:       127 [19.8%] 
;;              133 [19.4%] 
;;              131 [18.4%] 
;;              129 [19.5%] 
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	
(code_label 792 1376 793 152 77 "" [4 uses])
(note 793 792 1425 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1425 793 796 152 (set (reg/f:DI 5 di [413])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) ./include/leveldb/env.h:296 214 {*leadi}
     (nil))
(insn 796 1425 799 152 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 799 796 1377 152 (call (mem:QI (reg/f:DI 2 cx [orig:216 D.51465 ] [216]) [0  S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              153 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 153, loop depth 0, count 0, freq 717, maybe hot
;; Invalid sum of incoming frequencies 335, should be 717
;;  prev block 152, next block 154, flags: (HOT_PARTITION, RTL)
;;  pred:       152 [100.0%]  (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1377 799 1378 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1378 1377 1379 153 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       136 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1379 1378 1408)
;; basic block 154, loop depth 0, count 0, freq 185, maybe hot
;; Invalid sum of incoming frequencies 591, should be 185
;;  prev block 153, next block 155, flags: (HOT_PARTITION, RTL)
;;  pred:       184 [100.0%] 
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 1408 1379 802 154 204 "" [1 uses])
(note 802 1408 1424 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1424 802 805 154 (set (reg/f:DI 5 di [415])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 160 [0xa0]))) db/builder.cc:83 214 {*leadi}
     (nil))
(insn 805 1424 806 154 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 806 805 808 154 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:255 env ] [255])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:255 env ] [255])
        (nil)))
(call_insn 808 806 1380 154 (call (mem:QI (reg/f:DI 0 ax [orig:159 D.51465 ] [159]) [0  S1 A8])
        (const_int 0 [0])) db/builder.cc:83 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              155 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 155, loop depth 0, count 0, freq 185, maybe hot
;;  prev block 154, next block 156, flags: (HOT_PARTITION, RTL)
;;  pred:       154 [100.0%]  (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1380 808 1381 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1381 1380 1382 155 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       136 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1382 1381 811)
;; basic block 156, loop depth 0, count 0, freq 643, maybe hot
;;  prev block 155, next block 157, flags: (HOT_PARTITION, RTL)
;;  pred:       136 [69.8%] 
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 811 1382 812 156 85 "" [1 uses])
(note 812 811 814 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(call_insn 814 812 817 156 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       157 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 157, loop depth 0, count 0, freq 5952, maybe hot
;; Invalid sum of incoming frequencies 3935, should be 5952
;;  prev block 156, next block 158, flags: (HOT_PARTITION, RTL)
;;  pred:       46 [93.3%] 
;;              156 [100.0%]  (FALLTHRU)
;;              125 [50.0%] 
;;              137 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 817 814 818 157 70 "" [3 uses])
(note 818 817 819 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 1423 157 (set (reg/f:DI 5 di [orig:160 D.51472 ] [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 1423 819 822 157 (set (reg/f:DI 0 ax [418])
        (plus:DI (reg/f:DI 44 r15 [450])
            (const_int 16 [0x10]))) /usr/include/c++/5/bits/basic_string.h:179 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [450])
        (nil)))
(insn 822 1423 823 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:160 D.51472 ] [160])
            (reg/f:DI 0 ax [418]))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [418])
        (nil)))
(jump_insn 823 822 824 157 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 989)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 989)
;;  succ:       158 [78.3%]  (FALLTHRU)
;;              185 [21.6%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 158, loop depth 0, count 0, freq 4664, maybe hot
;;  prev block 157, next block 159, flags: (HOT_PARTITION, RTL)
;;  pred:       157 [78.3%]  (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 824 823 826 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(call_insn 826 824 1383 158 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1383 826 1384 158 (set (pc)
        (label_ref 989)) 654 {jump}
     (nil)
 -> 989)
;;  succ:       185 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1384 1383 1059)
;; basic block 159, loop depth 0, count 0, freq 0
;;  prev block 158, next block 160, flags: (HOT_PARTITION, RTL)
;;  pred:       40 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 159 artificial_defs: { d27(0){ }d161(1){ }}
;; bb 159 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1059 1384 1062 159 119 "" [1 uses])
(note 1062 1059 1060 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1062 833 159 (set (reg:DI 3 bx [421])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 833 1060 834 159 (set (reg/f:DI 5 di [orig:161 D.51463 ] [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 834 833 835 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:161 D.51463 ] [161])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 835 834 836 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       160 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 160, loop depth 0, count 0, freq 0
;;  prev block 159, next block 161, flags: (HOT_PARTITION, RTL)
;;  pred:       159 [69.8%]  (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 836 835 1542 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1542 836 1543 160 (set (pc)
        (label_ref 1535)) -1
     (nil)
 -> 1535)
;;  succ:       171 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1543 1542 1063)
;; basic block 161, loop depth 0, count 0, freq 0
;;  prev block 160, next block 162, flags: (HOT_PARTITION, RTL)
;;  pred:       48 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 161 artificial_defs: { d24(0){ }d158(1){ }}
;; bb 161 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
(code_label/s 1063 1543 1066 161 120 "" [1 uses])
(note 1066 1063 1064 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1064 1066 847 161 (set (reg:DI 3 bx [424])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 847 1064 848 161 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 848 847 1387 161 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1387 848 1388 161 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       173 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1388 1387 1067)
;; basic block 162, loop depth 0, count 0, freq 0
;;  prev block 161, next block 163, flags: (HOT_PARTITION, RTL)
;;  pred:       66 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 162 artificial_defs: { d23(0){ }d157(1){ }}
;; bb 162 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1067 1388 1070 162 121 "" [1 uses])
(note 1070 1067 1068 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1068 1070 855 162 (set (reg:DI 3 bx [426])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 855 1068 856 162 (set (reg/f:DI 5 di [orig:148 D.51463 ] [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 856 855 857 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:148 D.51463 ] [148])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 857 856 858 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       163 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 163, loop depth 0, count 0, freq 0
;;  prev block 162, next block 164, flags: (HOT_PARTITION, RTL)
;;  pred:       162 [69.8%]  (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 858 857 1539 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1539 858 1540 163 (set (pc)
        (label_ref 1535)) -1
     (nil)
 -> 1535)
;;  succ:       171 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1540 1539 1071)
;; basic block 164, loop depth 0, count 0, freq 0
;;  prev block 163, next block 165, flags: (HOT_PARTITION, RTL)
;;  pred:       81 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 164 artificial_defs: { d21(0){ }d155(1){ }}
;; bb 164 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1071 1540 1074 164 122 "" [1 uses])
(note 1074 1071 1072 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1072 1074 869 164 (set (reg:DI 3 bx [428])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 869 1072 870 164 (set (reg/f:DI 5 di [orig:120 D.51463 ] [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 870 869 871 164 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:120 D.51463 ] [120])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 871 870 872 164 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       165 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 165, loop depth 0, count 0, freq 0
;;  prev block 164, next block 166, flags: (HOT_PARTITION, RTL)
;;  pred:       164 [69.8%]  (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 872 871 1532 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1532 872 1533 165 (set (pc)
        (label_ref:DI 1535)) 654 {jump}
     (nil)
 -> 1535)
;;  succ:       171 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1533 1532 1075)
;; basic block 166, loop depth 0, count 0, freq 0
;;  prev block 165, next block 167, flags: (HOT_PARTITION, RTL)
;;  pred:       92 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 166 artificial_defs: { d19(0){ }d153(1){ }}
;; bb 166 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1075 1533 1078 166 123 "" [1 uses])
(note 1078 1075 1076 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1076 1078 883 166 (set (reg:DI 3 bx [430])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 883 1076 884 166 (set (reg/f:DI 5 di [orig:127 D.51463 ] [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 884 883 885 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:127 D.51463 ] [127])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 885 884 886 166 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       167 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 167, loop depth 0, count 0, freq 0
;;  prev block 166, next block 168, flags: (HOT_PARTITION, RTL)
;;  pred:       166 [69.8%]  (FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 886 885 1529 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1529 886 1530 167 (set (pc)
        (label_ref:DI 1535)) 654 {jump}
     (nil)
 -> 1535)
;;  succ:       171 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1530 1529 1079)
;; basic block 168, loop depth 0, count 0, freq 0
;;  prev block 167, next block 169, flags: (HOT_PARTITION, RTL)
;;  pred:       106 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 168 artificial_defs: { d17(0){ }d151(1){ }}
;; bb 168 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1079 1530 1082 168 124 "" [1 uses])
(note 1082 1079 1080 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1082 897 168 (set (reg:DI 3 bx [432])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 897 1080 898 168 (set (reg/f:DI 5 di [orig:134 D.51463 ] [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 898 897 899 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:134 D.51463 ] [134])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 899 898 900 168 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       169 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 169, loop depth 0, count 0, freq 0
;;  prev block 168, next block 170, flags: (HOT_PARTITION, RTL)
;;  pred:       168 [69.8%]  (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 900 899 1536 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1536 900 1537 169 (set (pc)
        (label_ref 1535)) -1
     (nil)
 -> 1535)
;;  succ:       171 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1537 1536 1083)
;; basic block 170, loop depth 0, count 0, freq 0
;;  prev block 169, next block 171, flags: (HOT_PARTITION, RTL)
;;  pred:       118 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 170 artificial_defs: { d15(0){ }d149(1){ }}
;; bb 170 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1083 1537 1086 170 125 "" [1 uses])
(note 1086 1083 1084 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1086 911 170 (set (reg:DI 3 bx [434])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 911 1084 912 170 (set (reg/f:DI 5 di [orig:147 D.51463 ] [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 912 911 913 170 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:147 D.51463 ] [147])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 913 912 1535 170 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 921)
;;  succ:       171 [69.8%]  (FALLTHRU)
;;              173 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 171, loop depth 0, count 0, freq 0
;;  prev block 170, next block 172, flags: (HOT_PARTITION, RTL)
;;  pred:       170 [69.8%]  (FALLTHRU)
;;              169 [100.0%] 
;;              163 [100.0%] 
;;              160 [100.0%] 
;;              165 [100.0%] 
;;              167 [100.0%] 
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 1535 913 914 171 219 "" [5 uses])
(note 914 1535 916 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(call_insn 916 914 1397 171 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1397 916 1398 171 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       173 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1398 1397 1053)
;; basic block 172, loop depth 0, count 0, freq 0
;;  prev block 171, next block 173, flags: (HOT_PARTITION, RTL)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              154 (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 (ABNORMAL,ABNORMAL_CALL,EH)
;;              150 (ABNORMAL,ABNORMAL_CALL,EH)
;;              111 (ABNORMAL,ABNORMAL_CALL,EH)
;;              113 (ABNORMAL,ABNORMAL_CALL,EH)
;;              135 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              54 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              56 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 (ABNORMAL,ABNORMAL_CALL,EH)
;;              74 (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 (ABNORMAL,ABNORMAL_CALL,EH)
;;              87 (ABNORMAL,ABNORMAL_CALL,EH)
;;              100 (ABNORMAL,ABNORMAL_CALL,EH)
;;              101 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 172 artificial_defs: { d13(0){ }d147(1){ }}
;; bb 172 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1053 1398 1058 172 118 "" [1 uses])
(note 1058 1053 1054 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1058 921 172 (set (reg:DI 3 bx [420])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       173 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 173, loop depth 0, count 0, freq 0
;;  prev block 172, next block 174, flags: (HOT_PARTITION, RTL)
;;  pred:       170 [30.2%] 
;;              172 [100.0%]  (FALLTHRU)
;;              168 [30.2%] 
;;              161 [100.0%] 
;;              166 [30.2%] 
;;              164 [30.2%] 
;;              162 [30.2%] 
;;              171 [100.0%] 
;;              159 [30.2%] 
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 921 1054 922 173 91 "" [8 uses])
(note 922 921 923 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 923 922 1422 173 (set (reg/f:DI 5 di [orig:156 D.51472 ] [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 1422 923 926 173 (set (reg/f:DI 0 ax [437])
        (plus:DI (reg/f:DI 44 r15 [450])
            (const_int 16 [0x10]))) /usr/include/c++/5/bits/basic_string.h:179 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [450])
        (nil)))
(insn 926 1422 927 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:156 D.51472 ] [156])
            (reg/f:DI 0 ax [437]))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [437])
        (nil)))
(jump_insn 927 926 928 173 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 935)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 935)
;;  succ:       174 [69.8%]  (FALLTHRU)
;;              176 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 174, loop depth 0, count 0, freq 0
;;  prev block 173, next block 175, flags: (HOT_PARTITION, RTL)
;;  pred:       173 [69.8%]  (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 928 927 930 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(call_insn 930 928 1399 174 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1399 930 1400 174 (set (pc)
        (label_ref 935)) 654 {jump}
     (nil)
 -> 935)
;;  succ:       176 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1400 1399 1047)
;; basic block 175, loop depth 0, count 0, freq 0
;;  prev block 174, next block 176, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 175 artificial_defs: { d11(0){ }d145(1){ }}
;; bb 175 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1047 1400 1052 175 117 "" [1 uses])
(note 1052 1047 1048 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1052 935 175 (set (reg:DI 3 bx [438])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       176 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 176, loop depth 0, count 0, freq 0
;;  prev block 175, next block 177, flags: (HOT_PARTITION, RTL)
;;  pred:       175 [100.0%]  (FALLTHRU)
;;              174 [100.0%] 
;;              173 [30.2%] 
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 935 1048 936 176 104 "" [2 uses])
(note 936 935 937 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 176 (set (reg/f:DI 5 di [orig:162 D.51463 ] [162])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:253 <retval> ] [253])
        (nil)))
(insn 938 937 939 176 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:162 D.51463 ] [162])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 939 938 940 176 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 943)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 943)
;;  succ:       177 [69.8%]  (FALLTHRU)
;;              178 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 177, loop depth 0, count 0, freq 0
;;  prev block 176, next block 178, flags: (HOT_PARTITION, RTL)
;;  pred:       176 [69.8%]  (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 940 939 942 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(call_insn 942 940 943 177 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       178 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 178, loop depth 0, count 0, freq 0
;;  prev block 177, next block 179, flags: (HOT_PARTITION, RTL)
;;  pred:       176 [30.2%] 
;;              177 [100.0%]  (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 943 942 944 178 105 "" [1 uses])
(note 944 943 946 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 946 944 947 178 (set (reg:DI 5 di)
        (reg:DI 3 bx [438])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 3 bx [438])
        (nil)))
(call_insn 947 946 948 178 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 948 947 949)
;; basic block 179, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 178, next block 180, flags: (HOT_PARTITION, RTL)
;;  pred:       70 [30.2%] 
;;              71 [100.0%] 
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 949 948 950 179 52 "" [2 uses])
(note 950 949 952 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 952 950 953 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:46 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 953 952 1401 179 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) db/builder.cc:46 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 405)
;;  succ:       180 [6.7%]  (FALLTHRU)
;;              75 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 180, loop depth 0, count 0, freq 2
;;  prev block 179, next block 181, flags: (HOT_PARTITION, RTL)
;;  pred:       179 [6.7%]  (FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1401 953 1402 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1402 1401 1403 180 (set (pc)
        (label_ref 951)) 654 {jump}
     (nil)
 -> 951)
;;  succ:       72 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1403 1402 961)
;; basic block 181, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 180, next block 182, flags: (HOT_PARTITION, RTL)
;;  pred:       102 [10.1%] 
;;              108 [100.0%] 
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 961 1403 962 181 67 "" [2 uses])
(note 962 961 965 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 965 962 966 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:449 D.51463 ] [449])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 966 965 1404 181 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 964)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 964)
;;  succ:       109 [69.8%] 
;;              182 [30.2%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 182, loop depth 0, count 0, freq 4
;;  prev block 181, next block 183, flags: (HOT_PARTITION, RTL)
;;  pred:       181 [30.2%]  (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1404 966 1405 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1405 1404 1406 182 (set (pc)
        (label_ref 958)) 654 {jump}
     (nil)
 -> 958)
;;  succ:       110 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1406 1405 976)
;; basic block 183, loop depth 0, count 0, freq 2938, maybe hot
;;  prev block 182, next block 184, flags: (HOT_PARTITION, RTL)
;;  pred:       124 [85.0%] 
;;              126 [100.0%] 
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 976 1406 977 183 76 "" [2 uses])
(note 977 976 978 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 978 977 979 183 (set (reg/f:DI 0 ax [orig:440 env_30(D)->_vptr.Env ] [440])
        (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 979 978 981 183 (set (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:440 env_30(D)->_vptr.Env ] [440])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_147 + 56B]+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (nil))
(note 981 979 983 183 NOTE_INSN_DELETED)
(insn 983 981 984 183 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 984 983 1407 183 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 980)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7987 (nil)))
 -> 980)
;;  succ:       127 [79.9%] 
;;              184 [20.1%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 184, loop depth 0, count 0, freq 591, maybe hot
;;  prev block 183, next block 185, flags: (HOT_PARTITION, RTL)
;;  pred:       183 [20.1%]  (FALLTHRU)
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1407 984 1409 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1409 1407 1410 184 (set (pc)
        (label_ref 1408)) 654 {jump}
     (nil)
 -> 1408)
;;  succ:       154 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1410 1409 989)
;; basic block 185, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 184, next block 186, flags: (HOT_PARTITION, RTL)
;;  pred:       157 [21.6%] 
;;              158 [100.0%] 
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 2 [cx]
(code_label 989 1410 999 185 28 "" [2 uses])
(note 999 989 991 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 991 999 993 185 (set (reg/i:DI 0 ax)
        (reg/f:DI 6 bp [orig:253 <retval> ] [253])) db/builder.cc:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:253 <retval> ] [253])
        (nil)))
(insn 993 991 994 185 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 216 [0xd8])) [3 D.51474+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [455]))
        ]) db/builder.cc:86 990 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 2 cx [455])
        (nil)))
(jump_insn 994 993 1045 185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 997)
            (pc))) db/builder.cc:86 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 997)
;;  succ:       187 [100.0%] 
;;              186 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 186, loop depth 0, count 0, freq 2
;;  prev block 185, next block 187, flags: (HOT_PARTITION, RTL)
;;  pred:       185 [0.0%]  (FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1045 994 995 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(call_insn 995 1045 996 186 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/builder.cc:86 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 996 995 997)
;; basic block 187, loop depth 0, count 0, freq 5950, maybe hot
;;  prev block 186, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       185 [100.0%] 
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 997 996 1046 187 113 "" [1 uses])
(note 1046 997 998 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 998 1046 1469 187 (use (reg/i:DI 0 ax)) db/builder.cc:86 -1
     (nil))
(note 1469 998 1470 187 NOTE_INSN_EPILOGUE_BEG)
(insn/f 1470 1469 1471 187 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 232 [0xe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) db/builder.cc:86 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 232 [0xe8])))
            (nil))))
(insn/f 1471 1470 1472 187 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1472 1471 1473 187 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1473 1472 1474 187 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1474 1473 1475 187 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1475 1474 1476 187 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1476 1475 1477 187 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) db/builder.cc:86 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 1477 1476 1478 187 (simple_return) db/builder.cc:86 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1478 1477 1411)
(note 1411 1478 0 NOTE_INSN_DELETED)
