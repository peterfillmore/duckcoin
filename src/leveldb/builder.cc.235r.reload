
;; Function virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&) (_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2138, decl_uid=44255, cgraph_uid=762, symbol_order=774)

      Creating newreg=154
Removing SCRATCH in insn #7 (nop 2)
rescanning insn with uid = 7.
      Creating newreg=155
Removing SCRATCH in insn #153 (nop 3)
rescanning insn with uid = 153.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r154
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) r  (1) rm {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r155
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 20
   Insn 155: point = 0
  BB 21
   Insn 158: point = 0
  BB 19
   Insn 154: point = 0
   Insn 153: point = 0
   Insn 151: point = 1
  BB 17
   Insn 176: point = 3
   Insn 136: point = 3
   Insn 135: point = 4
   Insn 134: point = 4
   Insn 133: point = 5
  BB 15
   Insn 172: point = 7
   Insn 120: point = 7
   Insn 119: point = 8
   Insn 118: point = 8
   Insn 117: point = 9
  BB 14
   Insn 170: point = 11
   Insn 112: point = 11
   Insn 111: point = 12
   Insn 110: point = 12
   Insn 109: point = 13
  BB 13
   Insn 168: point = 15
   Insn 104: point = 15
   Insn 103: point = 16
   Insn 102: point = 16
   Insn 101: point = 17
  BB 12
   Insn 166: point = 19
   Insn 96: point = 19
   Insn 95: point = 20
   Insn 94: point = 20
   Insn 93: point = 21
  BB 11
   Insn 164: point = 23
   Insn 88: point = 23
   Insn 87: point = 24
   Insn 86: point = 24
   Insn 85: point = 25
  BB 10
   Insn 162: point = 27
   Insn 80: point = 27
   Insn 79: point = 28
   Insn 78: point = 28
   Insn 77: point = 29
   Insn 75: point = 30
   Insn 74: point = 31
  BB 9
   Insn 72: point = 34
   Insn 71: point = 34
   Insn 68: point = 35
   Insn 67: point = 37
   Insn 66: point = 38
  BB 8
   Insn 64: point = 41
   Insn 63: point = 41
   Insn 60: point = 42
   Insn 59: point = 44
   Insn 58: point = 45
  BB 7
   Insn 56: point = 48
   Insn 55: point = 48
   Insn 52: point = 49
   Insn 51: point = 51
   Insn 50: point = 52
  BB 6
   Insn 48: point = 55
   Insn 47: point = 55
   Insn 44: point = 56
   Insn 43: point = 58
   Insn 42: point = 59
  BB 5
   Insn 40: point = 62
   Insn 39: point = 62
   Insn 36: point = 63
   Insn 35: point = 65
   Insn 34: point = 66
  BB 16
   Insn 174: point = 69
   Insn 128: point = 69
   Insn 127: point = 70
   Insn 126: point = 70
   Insn 125: point = 71
  BB 4
   Insn 32: point = 73
   Insn 31: point = 73
   Insn 28: point = 74
   Insn 27: point = 76
   Insn 26: point = 77
  BB 3
   Insn 24: point = 80
   Insn 23: point = 80
   Insn 20: point = 81
   Insn 19: point = 83
   Insn 18: point = 84
  BB 18
   Insn 144: point = 87
   Insn 143: point = 88
   Insn 142: point = 88
   Insn 141: point = 89
  BB 2
   Insn 16: point = 91
   Insn 15: point = 91
   Insn 12: point = 91
   Insn 11: point = 93
   Insn 10: point = 94
   Insn 7: point = 96
   Insn 4: point = 98
   Insn 3: point = 99
   Insn 2: point = 100
 r87: [88..94] [85..86]
 r89: [80..91]
 r91: [78..84] [4..6]
 r93: [73..81] [3..6]
 r95: [70..77] [67..68]
 r97: [62..74]
 r99: [60..66] [8..10]
 r101: [55..63] [7..10]
 r103: [53..59] [12..14]
 r105: [48..56] [11..14]
 r107: [46..52] [16..18]
 r109: [41..49] [15..18]
 r111: [39..45] [20..22]
 r113: [34..42] [19..22]
 r115: [32..38] [24..26]
 r117: [34..35] [23..26]
 r119: [28..31]
 r122: [1..100]
 r123: [95..99]
 r124: [89..98] [71..86] [29..68] [25..26] [21..22] [17..18] [13..14] [9..10] [5..6]
 r126: [92..93]
 r129: [82..83]
 r132: [75..76]
 r135: [64..65]
 r138: [57..58]
 r141: [50..51]
 r144: [43..44]
 r147: [36..37]
 r150: [27..30]
 r154: [96..97]
 r155: [0..0]
Compressing live ranges: from 101 to 53 - 52%
Ranges after the compression:
 r87: [45..50]
 r89: [41..48]
 r91: [41..44] [1..2]
 r93: [37..42] [1..2]
 r95: [35..40]
 r97: [31..38]
 r99: [31..34] [3..4]
 r101: [27..32] [3..4]
 r103: [27..30] [5..6]
 r105: [23..28] [5..6]
 r107: [23..26] [7..8]
 r109: [19..24] [7..8]
 r111: [19..22] [9..10]
 r113: [15..20] [9..10]
 r115: [15..18] [11..12]
 r117: [15..16] [11..12]
 r119: [13..14]
 r122: [1..52]
 r123: [51..52]
 r124: [1..52]
 r126: [49..50]
 r129: [43..44]
 r132: [39..40]
 r135: [33..34]
 r138: [29..30]
 r141: [25..26]
 r144: [21..22]
 r147: [17..18]
 r150: [13..14]
 r154: [51..52]
 r155: [0..0]

********** Inheritance #1: **********

EBB 2 3 4 5 6 7 8 9 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21

********** Pseudo live ranges #2: **********

  BB 20
   Insn 155: point = 0
  BB 21
   Insn 158: point = 0
  BB 19
   Insn 154: point = 0
   Insn 153: point = 0
   Insn 151: point = 1
  BB 17
   Insn 176: point = 3
   Insn 136: point = 3
   Insn 135: point = 4
   Insn 134: point = 4
   Insn 133: point = 5
  BB 15
   Insn 172: point = 7
   Insn 120: point = 7
   Insn 119: point = 8
   Insn 118: point = 8
   Insn 117: point = 9
  BB 14
   Insn 170: point = 11
   Insn 112: point = 11
   Insn 111: point = 12
   Insn 110: point = 12
   Insn 109: point = 13
  BB 13
   Insn 168: point = 15
   Insn 104: point = 15
   Insn 103: point = 16
   Insn 102: point = 16
   Insn 101: point = 17
  BB 12
   Insn 166: point = 19
   Insn 96: point = 19
   Insn 95: point = 20
   Insn 94: point = 20
   Insn 93: point = 21
  BB 11
   Insn 164: point = 23
   Insn 88: point = 23
   Insn 87: point = 24
   Insn 86: point = 24
   Insn 85: point = 25
  BB 10
   Insn 162: point = 27
   Insn 80: point = 27
   Insn 79: point = 28
   Insn 78: point = 28
   Insn 77: point = 29
   Insn 75: point = 30
   Insn 74: point = 31
  BB 9
   Insn 72: point = 34
   Insn 71: point = 34
   Insn 68: point = 35
   Insn 67: point = 37
   Insn 66: point = 38
  BB 8
   Insn 64: point = 41
   Insn 63: point = 41
   Insn 60: point = 42
   Insn 59: point = 44
   Insn 58: point = 45
  BB 7
   Insn 56: point = 48
   Insn 55: point = 48
   Insn 52: point = 49
   Insn 51: point = 51
   Insn 50: point = 52
  BB 6
   Insn 48: point = 55
   Insn 47: point = 55
   Insn 44: point = 56
   Insn 43: point = 58
   Insn 42: point = 59
  BB 5
   Insn 40: point = 62
   Insn 39: point = 62
   Insn 36: point = 63
   Insn 35: point = 65
   Insn 34: point = 66
  BB 16
   Insn 174: point = 69
   Insn 128: point = 69
   Insn 127: point = 70
   Insn 126: point = 70
   Insn 125: point = 71
  BB 4
   Insn 32: point = 73
   Insn 31: point = 73
   Insn 28: point = 74
   Insn 27: point = 76
   Insn 26: point = 77
  BB 3
   Insn 24: point = 80
   Insn 23: point = 80
   Insn 20: point = 81
   Insn 19: point = 83
   Insn 18: point = 84
  BB 18
   Insn 144: point = 87
   Insn 143: point = 88
   Insn 142: point = 88
   Insn 141: point = 89
  BB 2
   Insn 16: point = 91
   Insn 15: point = 91
   Insn 12: point = 91
   Insn 11: point = 93
   Insn 10: point = 94
   Insn 7: point = 96
   Insn 4: point = 98
   Insn 3: point = 99
   Insn 2: point = 100
 r87: [88..94] [85..86]
 r89: [80..91]
 r91: [78..84] [4..6]
 r93: [73..81] [3..6]
 r95: [70..77] [67..68]
 r97: [62..74]
 r99: [60..66] [8..10]
 r101: [55..63] [7..10]
 r103: [53..59] [12..14]
 r105: [48..56] [11..14]
 r107: [46..52] [16..18]
 r109: [41..49] [15..18]
 r111: [39..45] [20..22]
 r113: [34..42] [19..22]
 r115: [32..38] [24..26]
 r117: [34..35] [23..26]
 r119: [28..31]
 r122: [1..100]
 r123: [95..99]
 r124: [89..98] [71..86] [29..68] [25..26] [21..22] [17..18] [13..14] [9..10] [5..6]
 r126: [92..93]
 r129: [82..83]
 r132: [75..76]
 r135: [64..65]
 r138: [57..58]
 r141: [50..51]
 r144: [43..44]
 r147: [36..37]
 r150: [27..30]
 r154: [96..97]
 r155: [0..0]
Compressing live ranges: from 101 to 53 - 52%
Ranges after the compression:
 r87: [45..50]
 r89: [41..48]
 r91: [41..44] [1..2]
 r93: [37..42] [1..2]
 r95: [35..40]
 r97: [31..38]
 r99: [31..34] [3..4]
 r101: [27..32] [3..4]
 r103: [27..30] [5..6]
 r105: [23..28] [5..6]
 r107: [23..26] [7..8]
 r109: [19..24] [7..8]
 r111: [19..22] [9..10]
 r113: [15..20] [9..10]
 r115: [15..18] [11..12]
 r117: [15..16] [11..12]
 r119: [13..14]
 r122: [1..52]
 r123: [51..52]
 r124: [1..52]
 r126: [49..50]
 r129: [43..44]
 r132: [39..40]
 r135: [33..34]
 r138: [29..30]
 r141: [25..26]
 r144: [21..22]
 r147: [17..18]
 r150: [13..14]
 r154: [51..52]
 r155: [0..0]

********** Assignment #1: **********

	 Assigning to 154 (cl=INDEX_REGS, orig=154, freq=1000, tfirst=154, tfreq=1000)...
	   Assign 0 to reload r154 (freq=1000)
	 Assigning to 155 (cl=INDEX_REGS, orig=155, freq=1000, tfirst=155, tfreq=1000)...
	   Assign 5 to reload r155 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 10
changing reg in insn 142
changing reg in insn 18
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 23
changing reg in insn 144
changing reg in insn 18
changing reg in insn 134
changing reg in insn 26
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 31
changing reg in insn 23
changing reg in insn 136
changing reg in insn 26
changing reg in insn 126
changing reg in insn 34
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 39
changing reg in insn 31
changing reg in insn 128
changing reg in insn 34
changing reg in insn 118
changing reg in insn 42
changing reg in insn 35
changing reg in insn 35
changing reg in insn 36
changing reg in insn 47
changing reg in insn 39
changing reg in insn 120
changing reg in insn 42
changing reg in insn 110
changing reg in insn 50
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 55
changing reg in insn 47
changing reg in insn 112
changing reg in insn 50
changing reg in insn 102
changing reg in insn 58
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 63
changing reg in insn 55
changing reg in insn 104
changing reg in insn 58
changing reg in insn 94
changing reg in insn 66
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
changing reg in insn 71
changing reg in insn 63
changing reg in insn 96
changing reg in insn 66
changing reg in insn 86
changing reg in insn 74
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 88
changing reg in insn 74
changing reg in insn 78
changing reg in insn 75
changing reg in insn 2
changing reg in insn 151
changing reg in insn 143
changing reg in insn 135
changing reg in insn 127
changing reg in insn 119
changing reg in insn 111
changing reg in insn 103
changing reg in insn 95
changing reg in insn 87
changing reg in insn 79
changing reg in insn 3
changing reg in insn 10
changing reg in insn 4
changing reg in insn 141
changing reg in insn 133
changing reg in insn 125
changing reg in insn 117
changing reg in insn 109
changing reg in insn 101
changing reg in insn 93
changing reg in insn 85
changing reg in insn 77
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 35
changing reg in insn 36
changing reg in insn 43
changing reg in insn 44
changing reg in insn 51
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 67
changing reg in insn 68
changing reg in insn 75
changing reg in insn 80
changing reg in insn 7
changing reg in insn 153
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 77.
deleting insn with uid = 78.
deleting insn with uid = 85.
deleting insn with uid = 86.
deleting insn with uid = 93.
deleting insn with uid = 94.
deleting insn with uid = 101.
deleting insn with uid = 102.
deleting insn with uid = 109.
deleting insn with uid = 110.
deleting insn with uid = 117.
deleting insn with uid = 118.
deleting insn with uid = 125.
deleting insn with uid = 126.
deleting insn with uid = 133.
deleting insn with uid = 134.
deleting insn with uid = 141.
deleting insn with uid = 142.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 80.
rescanning insn with uid = 88.
rescanning insn with uid = 96.
rescanning insn with uid = 104.
rescanning insn with uid = 112.
rescanning insn with uid = 120.
rescanning insn with uid = 128.
rescanning insn with uid = 136.
rescanning insn with uid = 144.
verify found no changes in insn with uid = 155.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)


virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={23d,19u} r1={11d,9u} r2={18d,15u} r3={1d,10u} r4={20d,27u,8e} r5={21d,10u} r7={1d,33u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={20d,9u} r18={10d} r19={10d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} 
;;    total ref usage 925{785d,132u,8e} in 75{65 regular + 10 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 5 2 (set (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 5 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [3 D.51292+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [154])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 986 {stack_tls_protect_set_di}
     (nil))
(insn 10 7 11 2 (set (reg/f:DI 4 si [orig:87 D.51288 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:123 this ] [123])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 0 ax [orig:126 _3->_vptr.Env ] [126])
        (mem/f:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:126 _3->_vptr.Env ] [126])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 13 12 15 2 NOTE_INSN_DELETED)
(insn 15 13 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:89 D.51290 ] [89])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 139)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:DI 4 si [orig:91 D.51288 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:87 D.51288 ] [87])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg/f:DI 0 ax [orig:129 _11->_vptr.Env ] [129])
        (mem/f:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91]) [3 _11->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91]) [3 _11->_vptr.Env+0 S8 A64])
        (nil)))
(insn 20 19 23 3 (set (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:129 _11->_vptr.Env ] [129])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_12 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 23 20 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:93 D.51290 ] [93])
            (reg/f:DI 2 cx [orig:89 D.51290 ] [89]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 131)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 4 si [orig:95 D.51288 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:91 D.51288 ] [91])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_11].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 2 cx [orig:132 _16->_vptr.Env ] [132])
        (mem/f:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95]) [3 _16->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95]) [3 _16->_vptr.Env+0 S8 A64])
        (nil)))
(insn 28 27 31 4 (set (reg/f:DI 2 cx [orig:97 D.51290 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:132 _16->_vptr.Env ] [132])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_17 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 31 28 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:97 D.51290 ] [97])
            (reg/f:DI 0 ax [orig:93 D.51290 ] [93]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 123)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              16 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 4 si [orig:99 D.51288 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:95 D.51288 ] [95])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_16].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 0 ax [orig:135 _21->_vptr.Env ] [135])
        (mem/f:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99]) [3 _21->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99]) [3 _21->_vptr.Env+0 S8 A64])
        (nil)))
(insn 36 35 39 5 (set (reg/f:DI 0 ax [orig:101 D.51290 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:135 _21->_vptr.Env ] [135])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_22 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 39 36 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:101 D.51290 ] [101])
            (reg/f:DI 2 cx [orig:97 D.51290 ] [97]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 115)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              15 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 4 si [orig:103 D.51288 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:99 D.51288 ] [99])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_21].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 2 cx [orig:138 _26->_vptr.Env ] [138])
        (mem/f:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103]) [3 _26->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103]) [3 _26->_vptr.Env+0 S8 A64])
        (nil)))
(insn 44 43 47 6 (set (reg/f:DI 2 cx [orig:105 D.51290 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:138 _26->_vptr.Env ] [138])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_27 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 47 44 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:105 D.51290 ] [105])
            (reg/f:DI 0 ax [orig:101 D.51290 ] [101]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1990 (nil))
 -> 107)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              14 [19.9%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 4 si [orig:107 D.51288 ] [107])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:103 D.51288 ] [103])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_26].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 51 50 52 7 (set (reg/f:DI 0 ax [orig:141 _31->_vptr.Env ] [141])
        (mem/f:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107]) [3 _31->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107]) [3 _31->_vptr.Env+0 S8 A64])
        (nil)))
(insn 52 51 55 7 (set (reg/f:DI 0 ax [orig:109 D.51290 ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:141 _31->_vptr.Env ] [141])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_32 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 55 52 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:109 D.51290 ] [109])
            (reg/f:DI 2 cx [orig:105 D.51290 ] [105]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1990 (nil))
 -> 99)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              13 [19.9%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg/f:DI 4 si [orig:111 D.51288 ] [111])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:107 D.51288 ] [107])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_31].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (reg/f:DI 2 cx [orig:144 _36->_vptr.Env ] [144])
        (mem/f:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111]) [3 _36->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111]) [3 _36->_vptr.Env+0 S8 A64])
        (nil)))
(insn 60 59 63 8 (set (reg/f:DI 2 cx [orig:113 D.51290 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:144 _36->_vptr.Env ] [144])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_37 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 63 60 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:113 D.51290 ] [113])
            (reg/f:DI 0 ax [orig:109 D.51290 ] [109]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 91)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              12 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 4 si [orig:115 D.51288 ] [115])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:111 D.51288 ] [111])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_36].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 67 66 68 9 (set (reg/f:DI 0 ax [orig:147 _41->_vptr.Env ] [147])
        (mem/f:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115]) [3 _41->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115]) [3 _41->_vptr.Env+0 S8 A64])
        (nil)))
(insn 68 67 71 9 (set (reg/f:DI 0 ax [orig:117 D.51290 ] [117])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:147 _41->_vptr.Env ] [147])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_42 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 71 68 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:117 D.51290 ] [117])
            (reg/f:DI 2 cx [orig:113 D.51290 ] [113]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 72 71 73 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1980 (nil))
 -> 83)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              11 [19.8%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:DI 4 si [orig:119 D.51288 ] [119])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:115 D.51288 ] [115])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_41].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 75 74 76 10 (set (reg/f:DI 0 ax [orig:150 _46->_vptr.Env ] [150])
        (mem/f:DI (reg/f:DI 4 si [orig:119 D.51288 ] [119]) [3 _46->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 76 75 79 10 NOTE_INSN_DELETED)
(insn 79 76 80 10 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 80 79 162 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:150 _46->_vptr.Env ] [150])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_47 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_48;(struct Env)_46->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 162 80 163 10 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 163 162 83)
;; basic block 11, loop depth 0, count 0, freq 416, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [19.8%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 83 163 84 11 9 "" [1 uses])
(note 84 83 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 84 88 11 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 88 87 164 11 (call (mem:QI (reg/f:DI 0 ax [orig:117 D.51290 ] [117]) [0 *OBJ_TYPE_REF(_43;(struct Env)_41->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 164 88 165 11 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 165 164 91)
;; basic block 12, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [20.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 91 165 92 12 8 "" [1 uses])
(note 92 91 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 92 96 12 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 96 95 166 12 (call (mem:QI (reg/f:DI 2 cx [orig:113 D.51290 ] [113]) [0 *OBJ_TYPE_REF(_38;(struct Env)_36->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 166 96 167 12 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 167 166 99)
;; basic block 13, loop depth 0, count 0, freq 653, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [19.9%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 99 167 100 13 7 "" [1 uses])
(note 100 99 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 100 104 13 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 104 103 168 13 (call (mem:QI (reg/f:DI 0 ax [orig:109 D.51290 ] [109]) [0 *OBJ_TYPE_REF(_33;(struct Env)_31->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 168 104 169 13 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 169 168 107)
;; basic block 14, loop depth 0, count 0, freq 815, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [19.9%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 107 169 108 14 6 "" [1 uses])
(note 108 107 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 111 108 112 14 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 112 111 170 14 (call (mem:QI (reg/f:DI 2 cx [orig:105 D.51290 ] [105]) [0 *OBJ_TYPE_REF(_28;(struct Env)_26->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 170 112 171 14 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 171 170 115)
;; basic block 15, loop depth 0, count 0, freq 1024, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [20.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 115 171 116 15 5 "" [1 uses])
(note 116 115 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 119 116 120 15 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 120 119 172 15 (call (mem:QI (reg/f:DI 0 ax [orig:101 D.51290 ] [101]) [0 *OBJ_TYPE_REF(_23;(struct Env)_21->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 172 120 173 15 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 173 172 123)
;; basic block 16, loop depth 0, count 0, freq 1280, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [20.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 123 173 124 16 4 "" [1 uses])
(note 124 123 127 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 127 124 128 16 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 128 127 174 16 (call (mem:QI (reg/f:DI 2 cx [orig:97 D.51290 ] [97]) [0 *OBJ_TYPE_REF(_18;(struct Env)_16->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 174 128 175 16 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 175 174 131)
;; basic block 17, loop depth 0, count 0, freq 1600, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [20.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 131 175 132 17 3 "" [1 uses])
(note 132 131 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 135 132 136 17 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 136 135 176 17 (call (mem:QI (reg/f:DI 0 ax [orig:93 D.51290 ] [93]) [0 *OBJ_TYPE_REF(_13;(struct Env)_11->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 176 136 177 17 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 177 176 139)
;; basic block 18, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 139 177 140 18 2 "" [1 uses])
(note 140 139 143 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 143 140 144 18 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 144 143 149 18 (call (mem:QI (reg/f:DI 2 cx [orig:89 D.51290 ] [89]) [0 *OBJ_TYPE_REF(_5;(struct Env)_3->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;;              10 [100.0%] 
;;              11 [100.0%] 
;;              12 [100.0%] 
;;              13 [100.0%] 
;;              14 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 5 [di]
(code_label 149 144 159 19 1 "" [8 uses])
(note 159 149 151 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 151 159 153 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 153 151 154 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [3 D.51292+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 5 di [155]))
        ]) ./include/leveldb/env.h:296 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 154 153 160 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) ./include/leveldb/env.h:296 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 157)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 160 154 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 155 160 156 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 156 155 157)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 157 156 161 21 11 "" [1 uses])
(note 161 157 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 158 161 178 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:296 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 178 158 0 NOTE_INSN_DELETED)

;; Function virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**) (_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE, funcdef_no=2135, decl_uid=44245, cgraph_uid=759, symbol_order=771)

      Creating newreg=155
Removing SCRATCH in insn #8 (nop 2)
rescanning insn with uid = 8.
      Creating newreg=156
Removing SCRATCH in insn #163 (nop 3)
rescanning insn with uid = 163.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r155
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) r  (1) rm {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 21:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 52:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 60:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 61:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 75:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 76:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) rBwBz {*call}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r156
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 20
   Insn 165: point = 0
  BB 21
   Insn 168: point = 0
  BB 19
   Insn 164: point = 0
   Insn 163: point = 0
   Insn 161: point = 1
  BB 17
   Insn 186: point = 3
   Insn 145: point = 3
   Insn 144: point = 4
   Insn 143: point = 4
   Insn 142: point = 5
   Insn 141: point = 6
  BB 15
   Insn 182: point = 8
   Insn 127: point = 8
   Insn 126: point = 9
   Insn 125: point = 9
   Insn 124: point = 10
   Insn 123: point = 11
  BB 14
   Insn 180: point = 13
   Insn 118: point = 13
   Insn 117: point = 14
   Insn 116: point = 14
   Insn 115: point = 15
   Insn 114: point = 16
  BB 13
   Insn 178: point = 18
   Insn 109: point = 18
   Insn 108: point = 19
   Insn 107: point = 19
   Insn 106: point = 20
   Insn 105: point = 21
  BB 12
   Insn 176: point = 23
   Insn 100: point = 23
   Insn 99: point = 24
   Insn 98: point = 24
   Insn 97: point = 25
   Insn 96: point = 26
  BB 11
   Insn 174: point = 28
   Insn 91: point = 28
   Insn 90: point = 29
   Insn 89: point = 29
   Insn 88: point = 30
   Insn 87: point = 31
  BB 10
   Insn 172: point = 33
   Insn 82: point = 33
   Insn 81: point = 34
   Insn 80: point = 34
   Insn 79: point = 35
   Insn 78: point = 36
   Insn 76: point = 37
   Insn 75: point = 38
  BB 9
   Insn 73: point = 41
   Insn 72: point = 41
   Insn 69: point = 42
   Insn 68: point = 44
   Insn 67: point = 45
  BB 8
   Insn 65: point = 48
   Insn 64: point = 48
   Insn 61: point = 49
   Insn 60: point = 51
   Insn 59: point = 52
  BB 7
   Insn 57: point = 55
   Insn 56: point = 55
   Insn 53: point = 56
   Insn 52: point = 58
   Insn 51: point = 59
  BB 6
   Insn 49: point = 62
   Insn 48: point = 62
   Insn 45: point = 63
   Insn 44: point = 65
   Insn 43: point = 66
  BB 5
   Insn 41: point = 69
   Insn 40: point = 69
   Insn 37: point = 70
   Insn 36: point = 72
   Insn 35: point = 73
  BB 16
   Insn 184: point = 76
   Insn 136: point = 76
   Insn 135: point = 77
   Insn 134: point = 77
   Insn 133: point = 78
   Insn 132: point = 79
  BB 4
   Insn 33: point = 81
   Insn 32: point = 81
   Insn 29: point = 82
   Insn 28: point = 84
   Insn 27: point = 85
  BB 3
   Insn 25: point = 88
   Insn 24: point = 88
   Insn 21: point = 89
   Insn 20: point = 91
   Insn 19: point = 92
  BB 18
   Insn 154: point = 95
   Insn 153: point = 96
   Insn 152: point = 96
   Insn 151: point = 97
   Insn 150: point = 98
  BB 2
   Insn 17: point = 100
   Insn 16: point = 100
   Insn 13: point = 100
   Insn 12: point = 102
   Insn 11: point = 103
   Insn 8: point = 105
   Insn 5: point = 107
   Insn 4: point = 108
   Insn 3: point = 109
   Insn 2: point = 110
 r87: [96..103] [93..94]
 r89: [88..100]
 r91: [86..92] [4..7]
 r93: [81..89] [3..7]
 r95: [77..85] [74..75]
 r97: [69..82]
 r99: [67..73] [9..12]
 r101: [62..70] [8..12]
 r103: [60..66] [14..17]
 r105: [55..63] [13..17]
 r107: [53..59] [19..22]
 r109: [48..56] [18..22]
 r111: [46..52] [24..27]
 r113: [41..49] [23..27]
 r115: [39..45] [29..32]
 r117: [41..42] [28..32]
 r119: [34..38]
 r122: [1..110]
 r123: [104..109]
 r124: [97..108] [78..94] [35..75] [30..32] [25..27] [20..22] [15..17] [10..12] [5..7]
 r125: [98..107] [79..94] [36..75] [31..32] [26..27] [21..22] [16..17] [11..12] [6..7]
 r127: [101..102]
 r130: [90..91]
 r133: [83..84]
 r136: [71..72]
 r139: [64..65]
 r142: [57..58]
 r145: [50..51]
 r148: [43..44]
 r151: [33..37]
 r155: [105..106]
 r156: [0..0]
Compressing live ranges: from 111 to 53 - 47%
Ranges after the compression:
 r87: [45..50]
 r89: [41..48]
 r91: [41..44] [1..2]
 r93: [37..42] [1..2]
 r95: [35..40]
 r97: [31..38]
 r99: [31..34] [3..4]
 r101: [27..32] [3..4]
 r103: [27..30] [5..6]
 r105: [23..28] [5..6]
 r107: [23..26] [7..8]
 r109: [19..24] [7..8]
 r111: [19..22] [9..10]
 r113: [15..20] [9..10]
 r115: [15..18] [11..12]
 r117: [15..16] [11..12]
 r119: [13..14]
 r122: [1..52]
 r123: [51..52]
 r124: [1..52]
 r125: [1..52]
 r127: [49..50]
 r130: [43..44]
 r133: [39..40]
 r136: [33..34]
 r139: [29..30]
 r142: [25..26]
 r145: [21..22]
 r148: [17..18]
 r151: [13..14]
 r155: [51..52]
 r156: [0..0]

********** Inheritance #1: **********

EBB 2 3 4 5 6 7 8 9 10
EBB 11
EBB 12
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21

********** Pseudo live ranges #2: **********

  BB 20
   Insn 165: point = 0
  BB 21
   Insn 168: point = 0
  BB 19
   Insn 164: point = 0
   Insn 163: point = 0
   Insn 161: point = 1
  BB 17
   Insn 186: point = 3
   Insn 145: point = 3
   Insn 144: point = 4
   Insn 143: point = 4
   Insn 142: point = 5
   Insn 141: point = 6
  BB 15
   Insn 182: point = 8
   Insn 127: point = 8
   Insn 126: point = 9
   Insn 125: point = 9
   Insn 124: point = 10
   Insn 123: point = 11
  BB 14
   Insn 180: point = 13
   Insn 118: point = 13
   Insn 117: point = 14
   Insn 116: point = 14
   Insn 115: point = 15
   Insn 114: point = 16
  BB 13
   Insn 178: point = 18
   Insn 109: point = 18
   Insn 108: point = 19
   Insn 107: point = 19
   Insn 106: point = 20
   Insn 105: point = 21
  BB 12
   Insn 176: point = 23
   Insn 100: point = 23
   Insn 99: point = 24
   Insn 98: point = 24
   Insn 97: point = 25
   Insn 96: point = 26
  BB 11
   Insn 174: point = 28
   Insn 91: point = 28
   Insn 90: point = 29
   Insn 89: point = 29
   Insn 88: point = 30
   Insn 87: point = 31
  BB 10
   Insn 172: point = 33
   Insn 82: point = 33
   Insn 81: point = 34
   Insn 80: point = 34
   Insn 79: point = 35
   Insn 78: point = 36
   Insn 76: point = 37
   Insn 75: point = 38
  BB 9
   Insn 73: point = 41
   Insn 72: point = 41
   Insn 69: point = 42
   Insn 68: point = 44
   Insn 67: point = 45
  BB 8
   Insn 65: point = 48
   Insn 64: point = 48
   Insn 61: point = 49
   Insn 60: point = 51
   Insn 59: point = 52
  BB 7
   Insn 57: point = 55
   Insn 56: point = 55
   Insn 53: point = 56
   Insn 52: point = 58
   Insn 51: point = 59
  BB 6
   Insn 49: point = 62
   Insn 48: point = 62
   Insn 45: point = 63
   Insn 44: point = 65
   Insn 43: point = 66
  BB 5
   Insn 41: point = 69
   Insn 40: point = 69
   Insn 37: point = 70
   Insn 36: point = 72
   Insn 35: point = 73
  BB 16
   Insn 184: point = 76
   Insn 136: point = 76
   Insn 135: point = 77
   Insn 134: point = 77
   Insn 133: point = 78
   Insn 132: point = 79
  BB 4
   Insn 33: point = 81
   Insn 32: point = 81
   Insn 29: point = 82
   Insn 28: point = 84
   Insn 27: point = 85
  BB 3
   Insn 25: point = 88
   Insn 24: point = 88
   Insn 21: point = 89
   Insn 20: point = 91
   Insn 19: point = 92
  BB 18
   Insn 154: point = 95
   Insn 153: point = 96
   Insn 152: point = 96
   Insn 151: point = 97
   Insn 150: point = 98
  BB 2
   Insn 17: point = 100
   Insn 16: point = 100
   Insn 13: point = 100
   Insn 12: point = 102
   Insn 11: point = 103
   Insn 8: point = 105
   Insn 5: point = 107
   Insn 4: point = 108
   Insn 3: point = 109
   Insn 2: point = 110
 r87: [96..103] [93..94]
 r89: [88..100]
 r91: [86..92] [4..7]
 r93: [81..89] [3..7]
 r95: [77..85] [74..75]
 r97: [69..82]
 r99: [67..73] [9..12]
 r101: [62..70] [8..12]
 r103: [60..66] [14..17]
 r105: [55..63] [13..17]
 r107: [53..59] [19..22]
 r109: [48..56] [18..22]
 r111: [46..52] [24..27]
 r113: [41..49] [23..27]
 r115: [39..45] [29..32]
 r117: [41..42] [28..32]
 r119: [34..38]
 r122: [1..110]
 r123: [104..109]
 r124: [97..108] [78..94] [35..75] [30..32] [25..27] [20..22] [15..17] [10..12] [5..7]
 r125: [98..107] [79..94] [36..75] [31..32] [26..27] [21..22] [16..17] [11..12] [6..7]
 r127: [101..102]
 r130: [90..91]
 r133: [83..84]
 r136: [71..72]
 r139: [64..65]
 r142: [57..58]
 r145: [50..51]
 r148: [43..44]
 r151: [33..37]
 r155: [105..106]
 r156: [0..0]
Compressing live ranges: from 111 to 53 - 47%
Ranges after the compression:
 r87: [45..50]
 r89: [41..48]
 r91: [41..44] [1..2]
 r93: [37..42] [1..2]
 r95: [35..40]
 r97: [31..38]
 r99: [31..34] [3..4]
 r101: [27..32] [3..4]
 r103: [27..30] [5..6]
 r105: [23..28] [5..6]
 r107: [23..26] [7..8]
 r109: [19..24] [7..8]
 r111: [19..22] [9..10]
 r113: [15..20] [9..10]
 r115: [15..18] [11..12]
 r117: [15..16] [11..12]
 r119: [13..14]
 r122: [1..52]
 r123: [51..52]
 r124: [1..52]
 r125: [1..52]
 r127: [49..50]
 r130: [43..44]
 r133: [39..40]
 r136: [33..34]
 r139: [29..30]
 r142: [25..26]
 r145: [21..22]
 r148: [17..18]
 r151: [13..14]
 r155: [51..52]
 r156: [0..0]

********** Assignment #1: **********

	 Assigning to 155 (cl=INDEX_REGS, orig=155, freq=1000, tfirst=155, tfreq=1000)...
	   Assign 0 to reload r155 (freq=1000)
	 Assigning to 156 (cl=INDEX_REGS, orig=156, freq=1000, tfirst=156, tfreq=1000)...
	   Assign 3 to reload r156 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=32)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 11
changing reg in insn 152
changing reg in insn 19
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 24
changing reg in insn 154
changing reg in insn 19
changing reg in insn 143
changing reg in insn 27
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 32
changing reg in insn 24
changing reg in insn 145
changing reg in insn 27
changing reg in insn 134
changing reg in insn 35
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 40
changing reg in insn 32
changing reg in insn 136
changing reg in insn 35
changing reg in insn 125
changing reg in insn 43
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 48
changing reg in insn 40
changing reg in insn 127
changing reg in insn 43
changing reg in insn 116
changing reg in insn 51
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 56
changing reg in insn 48
changing reg in insn 118
changing reg in insn 51
changing reg in insn 107
changing reg in insn 59
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 64
changing reg in insn 56
changing reg in insn 109
changing reg in insn 59
changing reg in insn 98
changing reg in insn 67
changing reg in insn 60
changing reg in insn 60
changing reg in insn 61
changing reg in insn 72
changing reg in insn 64
changing reg in insn 100
changing reg in insn 67
changing reg in insn 89
changing reg in insn 75
changing reg in insn 68
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 91
changing reg in insn 75
changing reg in insn 80
changing reg in insn 76
changing reg in insn 2
changing reg in insn 161
changing reg in insn 153
changing reg in insn 144
changing reg in insn 135
changing reg in insn 126
changing reg in insn 117
changing reg in insn 108
changing reg in insn 99
changing reg in insn 90
changing reg in insn 81
changing reg in insn 3
changing reg in insn 11
changing reg in insn 4
changing reg in insn 151
changing reg in insn 142
changing reg in insn 133
changing reg in insn 124
changing reg in insn 115
changing reg in insn 106
changing reg in insn 97
changing reg in insn 88
changing reg in insn 79
changing reg in insn 5
changing reg in insn 150
changing reg in insn 141
changing reg in insn 132
changing reg in insn 123
changing reg in insn 114
changing reg in insn 105
changing reg in insn 96
changing reg in insn 87
changing reg in insn 78
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 68
changing reg in insn 69
changing reg in insn 76
changing reg in insn 82
changing reg in insn 8
changing reg in insn 163
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 5.
deleting insn with uid = 78.
deleting insn with uid = 79.
deleting insn with uid = 80.
deleting insn with uid = 87.
deleting insn with uid = 88.
deleting insn with uid = 89.
deleting insn with uid = 96.
deleting insn with uid = 97.
deleting insn with uid = 98.
deleting insn with uid = 105.
deleting insn with uid = 106.
deleting insn with uid = 107.
deleting insn with uid = 114.
deleting insn with uid = 115.
deleting insn with uid = 116.
deleting insn with uid = 123.
deleting insn with uid = 124.
deleting insn with uid = 125.
deleting insn with uid = 132.
deleting insn with uid = 133.
deleting insn with uid = 134.
deleting insn with uid = 141.
deleting insn with uid = 142.
deleting insn with uid = 143.
deleting insn with uid = 150.
deleting insn with uid = 151.
deleting insn with uid = 152.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 82.
rescanning insn with uid = 91.
rescanning insn with uid = 100.
rescanning insn with uid = 109.
rescanning insn with uid = 118.
rescanning insn with uid = 127.
rescanning insn with uid = 136.
rescanning insn with uid = 145.
rescanning insn with uid = 154.
verify found no changes in insn with uid = 165.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)


virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={23d,19u} r1={11d,9u} r2={11d,9u} r3={2d,10u} r4={20d,27u,8e} r5={23d,13u} r7={1d,33u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r17={20d,9u} r18={10d} r19={10d} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={15d,12u} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} 
;;    total ref usage 934{785d,141u,8e} in 75{65 regular + 10 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	 17 [flags]
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 6 2 (set (reg/f:DI 3 bx [orig:122 <retval> ] [122])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (nil))
(note 6 2 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [3 D.51341+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [155])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:289 986 {stack_tls_protect_set_di}
     (nil))
(insn 11 8 12 2 (set (reg/f:DI 4 si [orig:87 D.51337 ] [87])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:123 this ] [123])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 0 ax [orig:127 _3->_vptr.Env ] [127])
        (mem/f:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:127 _3->_vptr.Env ] [127])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 14 13 16 2 NOTE_INSN_DELETED)
(insn 16 14 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:89 D.51339 ] [89])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 148)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 4 si [orig:91 D.51337 ] [91])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:87 D.51337 ] [87])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (reg/f:DI 0 ax [orig:130 _12->_vptr.Env ] [130])
        (mem/f:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91]) [3 _12->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91]) [3 _12->_vptr.Env+0 S8 A64])
        (nil)))
(insn 21 20 24 3 (set (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:130 _12->_vptr.Env ] [130])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_13 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 24 21 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:93 D.51339 ] [93])
            (reg/f:DI 37 r8 [orig:89 D.51339 ] [89]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 139)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 4 si [orig:95 D.51337 ] [95])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:91 D.51337 ] [91])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_12].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 5 di [orig:133 _17->_vptr.Env ] [133])
        (mem/f:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95]) [3 _17->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95]) [3 _17->_vptr.Env+0 S8 A64])
        (nil)))
(insn 29 28 32 4 (set (reg/f:DI 37 r8 [orig:97 D.51339 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:133 _17->_vptr.Env ] [133])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_18 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 32 29 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:97 D.51339 ] [97])
            (reg/f:DI 0 ax [orig:93 D.51339 ] [93]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 130)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              16 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 4 si [orig:99 D.51337 ] [99])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:95 D.51337 ] [95])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_17].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 0 ax [orig:136 _22->_vptr.Env ] [136])
        (mem/f:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99]) [3 _22->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99]) [3 _22->_vptr.Env+0 S8 A64])
        (nil)))
(insn 37 36 40 5 (set (reg/f:DI 0 ax [orig:101 D.51339 ] [101])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:136 _22->_vptr.Env ] [136])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_23 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 40 37 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:101 D.51339 ] [101])
            (reg/f:DI 37 r8 [orig:97 D.51339 ] [97]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 121)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              15 [20.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:DI 4 si [orig:103 D.51337 ] [103])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:99 D.51337 ] [99])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_22].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (set (reg/f:DI 5 di [orig:139 _27->_vptr.Env ] [139])
        (mem/f:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103]) [3 _27->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103]) [3 _27->_vptr.Env+0 S8 A64])
        (nil)))
(insn 45 44 48 6 (set (reg/f:DI 37 r8 [orig:105 D.51339 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:139 _27->_vptr.Env ] [139])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_28 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 48 45 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:105 D.51339 ] [105])
            (reg/f:DI 0 ax [orig:101 D.51339 ] [101]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1990 (nil))
 -> 112)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              14 [19.9%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg/f:DI 4 si [orig:107 D.51337 ] [107])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:103 D.51337 ] [103])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_27].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 0 ax [orig:142 _32->_vptr.Env ] [142])
        (mem/f:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107]) [3 _32->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107]) [3 _32->_vptr.Env+0 S8 A64])
        (nil)))
(insn 53 52 56 7 (set (reg/f:DI 0 ax [orig:109 D.51339 ] [109])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:142 _32->_vptr.Env ] [142])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_33 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 56 53 57 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:109 D.51339 ] [109])
            (reg/f:DI 37 r8 [orig:105 D.51339 ] [105]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1990 (nil))
 -> 103)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              13 [19.9%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 37 [r8]
;; live  kill	
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:DI 4 si [orig:111 D.51337 ] [111])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:107 D.51337 ] [107])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_32].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (set (reg/f:DI 5 di [orig:145 _37->_vptr.Env ] [145])
        (mem/f:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111]) [3 _37->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111]) [3 _37->_vptr.Env+0 S8 A64])
        (nil)))
(insn 61 60 64 8 (set (reg/f:DI 37 r8 [orig:113 D.51339 ] [113])
        (mem/f:DI (plus:DI (reg/f:DI 5 di [orig:145 _37->_vptr.Env ] [145])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_38 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 64 61 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:113 D.51339 ] [113])
            (reg/f:DI 0 ax [orig:109 D.51339 ] [109]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 94)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              12 [20.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 4 si [orig:115 D.51337 ] [115])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:111 D.51337 ] [111])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_37].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 68 67 69 9 (set (reg/f:DI 0 ax [orig:148 _42->_vptr.Env ] [148])
        (mem/f:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115]) [3 _42->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115]) [3 _42->_vptr.Env+0 S8 A64])
        (nil)))
(insn 69 68 72 9 (set (reg/f:DI 0 ax [orig:117 D.51339 ] [117])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:148 _42->_vptr.Env ] [148])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_43 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 72 69 73 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:117 D.51339 ] [117])
            (reg/f:DI 37 r8 [orig:113 D.51339 ] [113]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1980 (nil))
 -> 85)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              11 [19.8%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 4 si [orig:119 D.51337 ] [119])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:115 D.51337 ] [115])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_42].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 76 75 77 10 (set (reg/f:DI 0 ax [orig:151 _47->_vptr.Env ] [151])
        (mem/f:DI (reg/f:DI 4 si [orig:119 D.51337 ] [119]) [3 _47->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 77 76 81 10 NOTE_INSN_DELETED)
(insn 81 77 82 10 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 82 81 172 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:151 _47->_vptr.Env ] [151])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_48 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_49;(struct Env)_47->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 172 82 173 10 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 173 172 85)
;; basic block 11, loop depth 0, count 0, freq 416, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [19.8%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 85 173 86 11 23 "" [1 uses])
(note 86 85 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 86 91 11 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 91 90 174 11 (call (mem:QI (reg/f:DI 0 ax [orig:117 D.51339 ] [117]) [0 *OBJ_TYPE_REF(_44;(struct Env)_42->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 174 91 175 11 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 175 174 94)
;; basic block 12, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [20.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 94 175 95 12 22 "" [1 uses])
(note 95 94 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 95 100 12 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 100 99 176 12 (call (mem:QI (reg/f:DI 37 r8 [orig:113 D.51339 ] [113]) [0 *OBJ_TYPE_REF(_39;(struct Env)_37->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 176 100 177 12 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 177 176 103)
;; basic block 13, loop depth 0, count 0, freq 653, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [19.9%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 103 177 104 13 21 "" [1 uses])
(note 104 103 108 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 108 104 109 13 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 109 108 178 13 (call (mem:QI (reg/f:DI 0 ax [orig:109 D.51339 ] [109]) [0 *OBJ_TYPE_REF(_34;(struct Env)_32->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 178 109 179 13 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 179 178 112)
;; basic block 14, loop depth 0, count 0, freq 815, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [19.9%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 112 179 113 14 20 "" [1 uses])
(note 113 112 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 117 113 118 14 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 118 117 180 14 (call (mem:QI (reg/f:DI 37 r8 [orig:105 D.51339 ] [105]) [0 *OBJ_TYPE_REF(_29;(struct Env)_27->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 180 118 181 14 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 181 180 121)
;; basic block 15, loop depth 0, count 0, freq 1024, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [20.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 121 181 122 15 19 "" [1 uses])
(note 122 121 126 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 126 122 127 15 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 127 126 182 15 (call (mem:QI (reg/f:DI 0 ax [orig:101 D.51339 ] [101]) [0 *OBJ_TYPE_REF(_24;(struct Env)_22->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 182 127 183 15 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 183 182 130)
;; basic block 16, loop depth 0, count 0, freq 1280, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [20.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 130 183 131 16 18 "" [1 uses])
(note 131 130 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 135 131 136 16 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 136 135 184 16 (call (mem:QI (reg/f:DI 37 r8 [orig:97 D.51339 ] [97]) [0 *OBJ_TYPE_REF(_19;(struct Env)_17->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 184 136 185 16 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 185 184 139)
;; basic block 17, loop depth 0, count 0, freq 1600, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [20.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 139 185 140 17 17 "" [1 uses])
(note 140 139 144 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 144 140 145 17 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 145 144 186 17 (call (mem:QI (reg/f:DI 0 ax [orig:93 D.51339 ] [93]) [0 *OBJ_TYPE_REF(_14;(struct Env)_12->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 186 145 187 17 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 187 186 148)
;; basic block 18, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 148 187 149 18 16 "" [1 uses])
(note 149 148 153 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 153 149 154 18 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 154 153 159 18 (call (mem:QI (reg/f:DI 37 r8 [orig:89 D.51339 ] [89]) [0 *OBJ_TYPE_REF(_5;(struct Env)_3->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;;              10 [100.0%] 
;;              11 [100.0%] 
;;              12 [100.0%] 
;;              13 [100.0%] 
;;              14 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 3 [bx]
(code_label 159 154 169 19 15 "" [8 uses])
(note 169 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 169 163 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [orig:122 <retval> ] [122])) ./include/leveldb/env.h:291 89 {*movdi_internal}
     (nil))
(insn 163 161 164 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [3 D.51341+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 3 bx [156]))
        ]) ./include/leveldb/env.h:291 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 164 163 170 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) ./include/leveldb/env.h:291 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 167)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 170 164 165 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 165 170 166 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:291 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 166 165 167)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 167 166 171 21 25 "" [1 uses])
(note 171 167 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 171 188 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:291 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 188 168 0 NOTE_INSN_DELETED)

;; Function leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*) (_ZN7leveldb10BuildTableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS_3EnvERKNS_7OptionsEPNS_10TableCacheEPNS_8IteratorEPNS_12FileMetaDataE, funcdef_no=2151, decl_uid=23608, cgraph_uid=775, symbol_order=787)

      Creating newreg=454
Removing SCRATCH in insn #11 (nop 2)
rescanning insn with uid = 11.
      Creating newreg=455
Removing SCRATCH in insn #993 (nop 3)
rescanning insn with uid = 993.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=240, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
      Change to class INDEX_REGS for r454
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 19:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 20:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 32:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) q {*cmpqi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) =r  (1) Ts {*leadi}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 45:  (0) r  (1) rm {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 56:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 57:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 72:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 73:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 80:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 81:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 89:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 90:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 96:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 97:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 98:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 104:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 106:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 112:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) rm  (1) re {*cmpdi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 134:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 159:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 171:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 183:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 207:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 247:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 12:  (0) r  (1) Z {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 260:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) ?mr {*cmpdi_ccno_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 273:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 275:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 279:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 280:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 281:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 284:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 290:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 291:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 295:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=1,overall=15,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
	 Choosing alt 3 in insn 320:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=456 from oldreg=451, assigning class GENERAL_REGS to r456
  320: {r456:DI=r259:DI+0x38;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload after:
 1412: r451:DI=r456:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1412:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
	 Choosing alt 3 in insn 336:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=457 from oldreg=452, assigning class GENERAL_REGS to r457
  336: {r457:DI=frame:DI+0x70;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV frame:DI-0x40
    Inserting insn reload after:
 1413: r452:DI=r457:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1413:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=17,losers=2,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=17,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=18,losers=2 -- refuse
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=16,losers=2 -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=16,losers=2 -- refuse
	 Choosing alt 3 in insn 337:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=458 from oldreg=453, assigning class GENERAL_REGS to r458
  337: {r458:DI=frame:DI+0x60;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV frame:DI-0x50
    Inserting insn reload after:
 1414: r453:DI=r458:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1414:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 300:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) q {*cmpqi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 309:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (1) rBwBz {*call_value}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) o  (1) re {*movti_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 319:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 321:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 322:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 324:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 325:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 328:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (1) rBwBz {*call_value}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) o  (1) re {*movti_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 338:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 339:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 340:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 343:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 352:  (0) ?mr {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 355:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 356:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 360:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 361:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 380:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 14:  (0) r  (1) Z {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 383:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 394:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 395:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 398:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 403:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 407:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 409:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 418:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 419:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 420:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 426:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 437:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1168:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 446:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 458:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 461:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 462:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 463:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 469:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 485:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1170:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 489:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 497:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 502:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 506:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 512:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 513:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 516:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 517:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 518:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 519:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 520:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 521:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 522:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 526:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 528:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 530:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=459 from oldreg=141, assigning class GENERAL_REGS to address r459
	   Change to class INDEX_REGS for r459
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 531:  (0) r  (1) rem {*movdi_internal}
  531: r361:DI=[r459:DI]
      REG_EQUIV [r141:DI]
    Inserting insn reload before:
 1415: r459:DI=r141:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1415:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 533:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 537:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) rm {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 548:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1172:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 557:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) rBwBz {*call}
      Creating newreg=460 from oldreg=141, assigning class GENERAL_REGS to address r460
	   Change to class INDEX_REGS for r460
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 564:  (0) r  (1) rem {*movdi_internal}
  564: r363:DI=[r460:DI]
    Inserting insn reload before:
 1416: r460:DI=r141:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1416:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 566:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 579:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 585:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 590:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 591:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 592:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 596:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 598:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 599:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 608:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 611:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 615:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 618:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 621:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 632:  (0) ?mr {*cmpdi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 635:  (0) ?mr {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 641:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 642:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 643:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 649:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 650:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 651:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 657:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 658:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 659:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 665:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 666:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 667:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 673:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 674:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 675:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 681:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 682:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 683:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 689:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 690:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 691:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 697:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 698:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 699:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 705:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 706:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 708:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 715:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) r {*cmpdi_ccno_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 723:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 728:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 734:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 744:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 754:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 764:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 774:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 784:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 794:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 803:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 808:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 821:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 833:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 847:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 848:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 855:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 860:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 869:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 883:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 888:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 897:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 911:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 916:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 923:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 925:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 926:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 930:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 937:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 938:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 942:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 952:  (0) ?mr {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (0) r {*cmpdi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 978:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 979:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 983:  (0) r  (1) rm {*cmpdi_1}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 993:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
      Change to class INDEX_REGS for r455
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 195
   Insn 947: point = 0
   Insn 946: point = 0
  BB 194
   Insn 942: point = 2
   Insn 941: point = 2
  BB 193
   Insn 939: point = 4
   Insn 938: point = 4
   Insn 937: point = 4
  BB 191
   Insn 1399: point = 7
   Insn 933: point = 7
  BB 190
   Insn 930: point = 10
   Insn 929: point = 10
  BB 189
   Insn 927: point = 12
   Insn 926: point = 12
   Insn 925: point = 13
   Insn 923: point = 15
  BB 187
   Insn 1397: point = 17
   Insn 919: point = 17
  BB 186
   Insn 916: point = 20
   Insn 915: point = 20
  BB 185
   Insn 913: point = 22
   Insn 912: point = 22
   Insn 911: point = 22
  BB 184
   Insn 1084: point = 24
  BB 165
   Insn 1385: point = 26
   Insn 841: point = 26
  BB 164
   Insn 838: point = 29
   Insn 837: point = 29
  BB 163
   Insn 835: point = 31
   Insn 834: point = 31
   Insn 833: point = 31
  BB 162
   Insn 1060: point = 33
  BB 171
   Insn 1389: point = 35
   Insn 863: point = 35
  BB 170
   Insn 860: point = 38
   Insn 859: point = 38
  BB 169
   Insn 857: point = 40
   Insn 856: point = 40
   Insn 855: point = 40
  BB 168
   Insn 1068: point = 42
  BB 183
   Insn 1395: point = 44
   Insn 905: point = 44
  BB 182
   Insn 902: point = 47
   Insn 901: point = 47
  BB 181
   Insn 899: point = 49
   Insn 898: point = 49
   Insn 897: point = 49
  BB 180
   Insn 1080: point = 51
  BB 167
   Insn 1387: point = 53
   Insn 849: point = 53
   Insn 848: point = 55
   Insn 847: point = 55
  BB 166
   Insn 1064: point = 57
  BB 175
   Insn 1391: point = 59
   Insn 877: point = 59
  BB 174
   Insn 874: point = 62
   Insn 873: point = 62
  BB 173
   Insn 871: point = 64
   Insn 870: point = 64
   Insn 869: point = 64
  BB 172
   Insn 1072: point = 66
  BB 188
   Insn 1054: point = 68
  BB 179
   Insn 1393: point = 70
   Insn 891: point = 70
  BB 178
   Insn 888: point = 73
   Insn 887: point = 73
  BB 177
   Insn 885: point = 75
   Insn 884: point = 75
   Insn 883: point = 75
  BB 176
   Insn 1076: point = 77
  BB 192
   Insn 1048: point = 79
  BB 203
   Insn 995: point = 81
  BB 204
   Insn 998: point = 81
  BB 202
   Insn 994: point = 81
   Insn 993: point = 81
   Insn 991: point = 82
  BB 161
   Insn 1383: point = 84
   Insn 826: point = 84
   Insn 825: point = 84
  BB 160
   Insn 823: point = 86
   Insn 822: point = 86
   Insn 821: point = 87
   Insn 819: point = 89
  BB 140
   Insn 1354: point = 91
  BB 159
   Insn 814: point = 92
   Insn 813: point = 92
  BB 139
   Insn 717: point = 94
   Insn 716: point = 94
   Insn 715: point = 94
  BB 158
   Insn 1381: point = 96
  BB 157
   Insn 808: point = 97
   Insn 807: point = 98
   Insn 806: point = 99
   Insn 805: point = 100
   Insn 803: point = 100
  BB 201
   Insn 1409: point = 102
  BB 154
   Insn 1375: point = 103
  BB 153
   Insn 789: point = 104
   Insn 788: point = 105
   Insn 787: point = 106
   Insn 786: point = 107
   Insn 784: point = 107
  BB 152
   Insn 1372: point = 109
  BB 151
   Insn 779: point = 110
   Insn 778: point = 111
   Insn 777: point = 112
   Insn 776: point = 113
   Insn 774: point = 113
  BB 150
   Insn 1369: point = 115
  BB 149
   Insn 769: point = 116
   Insn 768: point = 117
   Insn 767: point = 118
   Insn 766: point = 119
   Insn 764: point = 119
  BB 148
   Insn 1366: point = 121
  BB 147
   Insn 759: point = 122
   Insn 758: point = 123
   Insn 757: point = 124
   Insn 756: point = 125
   Insn 754: point = 125
  BB 146
   Insn 1363: point = 127
  BB 145
   Insn 749: point = 128
   Insn 748: point = 129
   Insn 747: point = 130
   Insn 746: point = 131
   Insn 744: point = 131
  BB 144
   Insn 1360: point = 133
  BB 143
   Insn 739: point = 134
   Insn 738: point = 135
   Insn 737: point = 136
   Insn 736: point = 137
   Insn 734: point = 137
  BB 142
   Insn 1357: point = 139
  BB 141
   Insn 728: point = 140
   Insn 727: point = 141
   Insn 726: point = 142
   Insn 725: point = 143
   Insn 723: point = 143
  BB 156
   Insn 1378: point = 145
  BB 155
   Insn 799: point = 146
   Insn 798: point = 147
   Insn 797: point = 148
   Insn 796: point = 149
   Insn 794: point = 149
  BB 138
   Insn 713: point = 151
   Insn 712: point = 152
   Insn 711: point = 153
   Insn 710: point = 154
   Insn 708: point = 154
   Insn 706: point = 155
   Insn 705: point = 156
  BB 137
   Insn 703: point = 159
   Insn 702: point = 159
   Insn 699: point = 160
   Insn 698: point = 162
   Insn 697: point = 163
  BB 136
   Insn 695: point = 166
   Insn 694: point = 166
   Insn 691: point = 167
   Insn 690: point = 169
   Insn 689: point = 170
  BB 135
   Insn 687: point = 173
   Insn 686: point = 173
   Insn 683: point = 174
   Insn 682: point = 176
   Insn 681: point = 177
  BB 134
   Insn 679: point = 180
   Insn 678: point = 180
   Insn 675: point = 181
   Insn 674: point = 183
   Insn 673: point = 184
  BB 133
   Insn 671: point = 187
   Insn 670: point = 187
   Insn 667: point = 188
   Insn 666: point = 190
   Insn 665: point = 191
  BB 132
   Insn 663: point = 194
   Insn 662: point = 194
   Insn 659: point = 195
   Insn 658: point = 197
   Insn 657: point = 198
  BB 131
   Insn 655: point = 201
   Insn 654: point = 201
   Insn 651: point = 202
   Insn 650: point = 204
   Insn 649: point = 205
  BB 130
   Insn 647: point = 208
   Insn 646: point = 208
   Insn 643: point = 209
   Insn 642: point = 211
   Insn 641: point = 212
  BB 200
   Insn 984: point = 215
   Insn 983: point = 215
   Insn 979: point = 215
   Insn 978: point = 217
  BB 129
   Insn 1351: point = 219
  BB 128
   Insn 636: point = 220
   Insn 635: point = 220
  BB 127
   Insn 633: point = 222
   Insn 632: point = 222
  BB 126
   Insn 628: point = 223
   Insn 627: point = 223
  BB 125
   Insn 625: point = 225
   Insn 624: point = 225
  BB 124
   Insn 621: point = 226
  BB 122
   Insn 1348: point = 228
   Insn 618: point = 228
   Insn 616: point = 229
  BB 121
   Insn 615: point = 231
   Insn 614: point = 231
  BB 123
   Insn 15: point = 233
  BB 120
   Insn 612: point = 235
   Insn 611: point = 235
  BB 119
   Insn 608: point = 236
   Insn 607: point = 237
   Insn 606: point = 237
  BB 118
   Insn 604: point = 239
   Insn 603: point = 239
  BB 117
   Insn 601: point = 240
   Insn 600: point = 240
   Insn 599: point = 240
   Insn 598: point = 241
  BB 116
   Insn 596: point = 243
   Insn 595: point = 244
   Insn 594: point = 245
   Insn 592: point = 246
   Insn 591: point = 247
   Insn 590: point = 248
   Insn 589: point = 248
  BB 115
   Insn 587: point = 250
   Insn 586: point = 250
   Insn 585: point = 250
  BB 114
   Insn 583: point = 252
   Insn 582: point = 253
   Insn 581: point = 254
   Insn 579: point = 254
  BB 6
   Insn 1295: point = 256
   Insn 1166: point = 256
  BB 113
   Insn 567: point = 258
   Insn 566: point = 259
   Insn 564: point = 260
   Insn 1416: point = 262
  BB 199
   Insn 1405: point = 264
  BB 112
   Insn 562: point = 265
   Insn 561: point = 265
  BB 198
   Insn 966: point = 267
   Insn 965: point = 267
  BB 111
   Insn 1346: point = 268
   Insn 557: point = 268
  BB 110
   Insn 1172: point = 270
   Insn 554: point = 271
  BB 109
   Insn 553: point = 273
   Insn 552: point = 273
  BB 108
   Insn 550: point = 275
   Insn 549: point = 275
   Insn 1185: point = 275
   Insn 548: point = 276
  BB 107
   Insn 545: point = 278
   Insn 544: point = 278
  BB 106
   Insn 542: point = 280
   Insn 541: point = 280
  BB 105
   Insn 1344: point = 281
   Insn 1171: point = 281
  BB 104
   Insn 539: point = 284
   Insn 538: point = 284
   Insn 537: point = 284
  BB 103
   Insn 535: point = 286
   Insn 534: point = 287
   Insn 533: point = 288
   Insn 531: point = 288
   Insn 1415: point = 290
   Insn 530: point = 291
   Insn 528: point = 292
  BB 102
   Insn 527: point = 294
   Insn 526: point = 294
   Insn 525: point = 295
   Insn 524: point = 296
   Insn 523: point = 297
   Insn 522: point = 298
   Insn 521: point = 298
   Insn 520: point = 299
   Insn 519: point = 299
   Insn 518: point = 299
   Insn 517: point = 299
   Insn 516: point = 300
  BB 101
   Insn 514: point = 302
   Insn 513: point = 302
   Insn 512: point = 302
  BB 100
   Insn 509: point = 303
   Insn 508: point = 304
   Insn 506: point = 305
  BB 99
   Insn 504: point = 307
   Insn 503: point = 307
   Insn 502: point = 307
  BB 98
   Insn 497: point = 309
   Insn 496: point = 309
  BB 97
   Insn 494: point = 311
   Insn 493: point = 311
  BB 90
   Insn 1341: point = 312
   Insn 1169: point = 312
  BB 96
   Insn 489: point = 315
  BB 95
   Insn 1170: point = 317
   Insn 486: point = 318
  BB 94
   Insn 485: point = 320
   Insn 484: point = 320
  BB 93
   Insn 482: point = 322
   Insn 481: point = 322
   Insn 1184: point = 322
   Insn 480: point = 323
  BB 92
   Insn 477: point = 325
   Insn 476: point = 325
  BB 91
   Insn 474: point = 327
   Insn 473: point = 327
  BB 89
   Insn 471: point = 328
   Insn 470: point = 328
   Insn 469: point = 328
  BB 88
   Insn 467: point = 330
   Insn 466: point = 331
   Insn 465: point = 332
   Insn 463: point = 333
   Insn 462: point = 334
   Insn 461: point = 335
  BB 87
   Insn 459: point = 337
   Insn 458: point = 337
  BB 86
   Insn 454: point = 338
   Insn 453: point = 338
  BB 85
   Insn 451: point = 340
   Insn 450: point = 340
  BB 78
   Insn 1338: point = 341
   Insn 1167: point = 341
  BB 84
   Insn 446: point = 344
  BB 83
   Insn 1168: point = 346
   Insn 443: point = 347
  BB 82
   Insn 442: point = 349
   Insn 441: point = 349
  BB 81
   Insn 439: point = 351
   Insn 438: point = 351
   Insn 1173: point = 351
   Insn 437: point = 352
  BB 80
   Insn 434: point = 354
   Insn 433: point = 354
  BB 79
   Insn 431: point = 356
   Insn 430: point = 356
  BB 77
   Insn 428: point = 357
   Insn 427: point = 357
   Insn 426: point = 357
  BB 76
   Insn 424: point = 359
   Insn 423: point = 360
   Insn 422: point = 361
   Insn 420: point = 362
   Insn 419: point = 363
   Insn 418: point = 364
  BB 75
   Insn 412: point = 366
   Insn 411: point = 366
   Insn 410: point = 366
   Insn 409: point = 366
   Insn 408: point = 367
   Insn 407: point = 367
  BB 73
   Insn 1335: point = 368
   Insn 398: point = 368
   Insn 396: point = 369
  BB 72
   Insn 395: point = 371
   Insn 394: point = 371
  BB 197
   Insn 1402: point = 372
  BB 74
   Insn 404: point = 373
   Insn 403: point = 373
  BB 196
   Insn 953: point = 374
   Insn 952: point = 374
  BB 71
   Insn 1333: point = 375
   Insn 390: point = 375
   Insn 389: point = 375
  BB 70
   Insn 387: point = 377
   Insn 386: point = 377
  BB 69
   Insn 383: point = 378
  BB 67
   Insn 1331: point = 380
   Insn 380: point = 380
   Insn 378: point = 381
  BB 66
   Insn 377: point = 383
   Insn 376: point = 383
  BB 68
   Insn 14: point = 385
  BB 65
   Insn 374: point = 387
   Insn 373: point = 387
  BB 64
   Insn 370: point = 388
   Insn 369: point = 389
   Insn 368: point = 389
  BB 63
   Insn 366: point = 391
   Insn 365: point = 391
  BB 62
   Insn 363: point = 392
   Insn 362: point = 392
   Insn 361: point = 392
   Insn 360: point = 393
  BB 61
   Insn 358: point = 395
   Insn 357: point = 395
   Insn 356: point = 396
   Insn 355: point = 396
  BB 60
   Insn 353: point = 398
   Insn 352: point = 398
  BB 53
   Insn 307: point = 399
   Insn 306: point = 399
   Insn 304: point = 400
  BB 52
   Insn 303: point = 402
   Insn 302: point = 403
   Insn 300: point = 403
  BB 59
   Insn 1329: point = 405
  BB 58
   Insn 346: point = 406
   Insn 345: point = 407
   Insn 343: point = 407
  BB 57
   Insn 341: point = 409
   Insn 340: point = 409
   Insn 339: point = 409
   Insn 338: point = 409
   Insn 334: point = 409
   Insn 332: point = 410
  BB 56
   Insn 331: point = 412
   Insn 330: point = 413
   Insn 328: point = 413
  BB 55
   Insn 326: point = 415
   Insn 325: point = 415
   Insn 324: point = 415
   Insn 323: point = 415
   Insn 322: point = 416
   Insn 321: point = 416
   Insn 319: point = 416
   Insn 315: point = 417
   Insn 313: point = 418
  BB 54
   Insn 312: point = 420
   Insn 311: point = 421
   Insn 309: point = 421
  BB 51
   Insn 1414: point = 423
   Insn 337: point = 425
   Insn 1413: point = 426
   Insn 336: point = 428
   Insn 1412: point = 429
   Insn 320: point = 431
  BB 50
   Insn 297: point = 433
   Insn 296: point = 433
   Insn 295: point = 434
   Insn 294: point = 434
   Insn 293: point = 435
   Insn 292: point = 436
   Insn 291: point = 437
   Insn 290: point = 438
   Insn 1088: point = 439
   Insn 1087: point = 440
  BB 49
   Insn 287: point = 442
   Insn 286: point = 443
   Insn 284: point = 443
  BB 48
   Insn 282: point = 445
   Insn 281: point = 445
   Insn 280: point = 445
   Insn 279: point = 446
   Insn 275: point = 446
  BB 47
   Insn 274: point = 448
   Insn 273: point = 448
  BB 46
   Insn 271: point = 449
   Insn 270: point = 449
  BB 45
   Insn 267: point = 450
   Insn 266: point = 450
  BB 44
   Insn 264: point = 452
   Insn 263: point = 452
  BB 18
   Insn 1297: point = 453
   Insn 13: point = 453
  BB 43
   Insn 260: point = 456
  BB 41
   Insn 1326: point = 458
   Insn 257: point = 458
   Insn 255: point = 459
  BB 40
   Insn 254: point = 461
   Insn 253: point = 461
  BB 42
   Insn 12: point = 463
  BB 39
   Insn 251: point = 465
   Insn 250: point = 465
  BB 38
   Insn 247: point = 466
   Insn 246: point = 467
   Insn 245: point = 467
  BB 37
   Insn 243: point = 469
   Insn 242: point = 469
  BB 17
   Insn 127: point = 470
   Insn 126: point = 470
   Insn 125: point = 470
   Insn 124: point = 471
  BB 36
   Insn 1324: point = 473
  BB 35
   Insn 237: point = 474
   Insn 236: point = 475
   Insn 235: point = 476
   Insn 234: point = 476
   Insn 233: point = 476
   Insn 231: point = 476
   Insn 230: point = 477
  BB 32
   Insn 1318: point = 479
  BB 31
   Insn 213: point = 480
   Insn 212: point = 481
   Insn 211: point = 482
   Insn 210: point = 483
   Insn 209: point = 483
   Insn 207: point = 483
   Insn 206: point = 484
  BB 30
   Insn 1315: point = 486
  BB 29
   Insn 201: point = 487
   Insn 200: point = 488
   Insn 199: point = 489
   Insn 198: point = 490
   Insn 197: point = 490
   Insn 195: point = 490
   Insn 194: point = 491
  BB 28
   Insn 1312: point = 493
  BB 27
   Insn 189: point = 494
   Insn 188: point = 495
   Insn 187: point = 496
   Insn 186: point = 497
   Insn 185: point = 497
   Insn 183: point = 497
   Insn 182: point = 498
  BB 26
   Insn 1309: point = 500
  BB 25
   Insn 177: point = 501
   Insn 176: point = 502
   Insn 175: point = 503
   Insn 174: point = 504
   Insn 173: point = 504
   Insn 171: point = 504
   Insn 170: point = 505
  BB 24
   Insn 1306: point = 507
  BB 23
   Insn 165: point = 508
   Insn 164: point = 509
   Insn 163: point = 510
   Insn 162: point = 511
   Insn 161: point = 511
   Insn 159: point = 511
   Insn 158: point = 512
  BB 22
   Insn 1303: point = 514
  BB 21
   Insn 153: point = 515
   Insn 152: point = 516
   Insn 151: point = 517
   Insn 150: point = 518
   Insn 149: point = 518
   Insn 147: point = 518
   Insn 146: point = 519
  BB 20
   Insn 1300: point = 521
  BB 19
   Insn 140: point = 522
   Insn 139: point = 523
   Insn 138: point = 524
   Insn 137: point = 525
   Insn 136: point = 525
   Insn 134: point = 525
   Insn 133: point = 526
  BB 34
   Insn 1321: point = 528
  BB 33
   Insn 225: point = 529
   Insn 224: point = 530
   Insn 223: point = 531
   Insn 222: point = 532
   Insn 221: point = 532
   Insn 219: point = 532
   Insn 218: point = 533
  BB 16
   Insn 122: point = 535
   Insn 121: point = 536
   Insn 120: point = 537
   Insn 119: point = 538
   Insn 118: point = 538
   Insn 116: point = 538
   Insn 114: point = 539
   Insn 113: point = 540
   Insn 112: point = 541
  BB 15
   Insn 110: point = 544
   Insn 109: point = 544
   Insn 106: point = 545
   Insn 105: point = 547
   Insn 104: point = 548
  BB 14
   Insn 102: point = 551
   Insn 101: point = 551
   Insn 98: point = 552
   Insn 97: point = 554
   Insn 96: point = 555
  BB 13
   Insn 94: point = 558
   Insn 93: point = 558
   Insn 90: point = 559
   Insn 89: point = 561
   Insn 88: point = 562
  BB 12
   Insn 86: point = 565
   Insn 85: point = 565
   Insn 82: point = 566
   Insn 81: point = 568
   Insn 80: point = 569
  BB 11
   Insn 78: point = 572
   Insn 77: point = 572
   Insn 74: point = 573
   Insn 73: point = 575
   Insn 72: point = 576
  BB 10
   Insn 70: point = 579
   Insn 69: point = 579
   Insn 66: point = 580
   Insn 65: point = 582
   Insn 64: point = 583
  BB 9
   Insn 62: point = 586
   Insn 61: point = 586
   Insn 58: point = 587
   Insn 57: point = 589
   Insn 56: point = 590
  BB 8
   Insn 54: point = 593
   Insn 53: point = 593
   Insn 50: point = 594
   Insn 49: point = 596
   Insn 48: point = 597
  BB 7
   Insn 46: point = 599
   Insn 45: point = 599
   Insn 42: point = 599
   Insn 41: point = 601
  BB 5
   Insn 39: point = 603
   Insn 38: point = 603
   Insn 36: point = 604
  BB 4
   Insn 35: point = 606
   Insn 34: point = 607
   Insn 32: point = 607
  BB 3
   Insn 30: point = 609
   Insn 29: point = 609
   Insn 28: point = 609
   Insn 27: point = 610
   Insn 26: point = 611
   Insn 25: point = 612
  BB 2
   Insn 23: point = 614
   Insn 22: point = 615
   Insn 20: point = 615
   Insn 19: point = 616
   Insn 18: point = 616
   Insn 11: point = 616
   Insn 8: point = 618
   Insn 7: point = 619
   Insn 6: point = 620
   Insn 5: point = 621
   Insn 4: point = 622
   Insn 3: point = 623
   Insn 2: point = 624
 r87: [469..470] [461..466] [456..459]
 r94: [603..604]
 r96: [593..599] [474..478]
 r97: [389..393]
 r100: [366..446] [55..58]
 r107: [399..400]
 r116: [354..357] [342..343]
 r119: [368..369]
 r120: [62..64]
 r122: [361..364]
 r125: [325..328] [313..314]
 r127: [73..75]
 r129: [332..335]
 r132: [282..284] [278..280]
 r134: [47..49]
 r135: [304..307]
 r139: [297..300]
 r140: [296..299]
 r141: [259..292]
 r144: [237..241]
 r147: [20..22]
 r148: [38..40]
 r151: [248..250]
 r154: [206..212] [148..150]
 r156: [10..15]
 r159: [208..215] [97..102]
 r160: [84..89]
 r161: [29..31]
 r162: [2..4]
 r166: [92..94]
 r167: [391..392] [383..388] [375..380]
 r168: [239..240] [231..236] [223..228]
 r171: [591..597] [531..534]
 r173: [586..594] [529..534]
 r175: [584..590] [482..485]
 r177: [579..587] [480..485]
 r179: [577..583] [489..492]
 r181: [572..580] [487..492]
 r183: [570..576] [496..499]
 r185: [565..573] [494..499]
 r187: [563..569] [503..506]
 r189: [558..566] [501..506]
 r191: [556..562] [510..513]
 r193: [551..559] [508..513]
 r195: [549..555] [517..520]
 r197: [544..552] [515..520]
 r199: [542..548] [524..527]
 r201: [544..545] [522..527]
 r203: [537..541]
 r206: [467..471] [454..455]
 r207: [385..385] [378..381]
 r209: [351..351] [344..347]
 r211: [322..322] [315..318]
 r213: [275..275] [268..271]
 r214: [233..233] [226..229]
 r216: [201..209] [146..150]
 r218: [199..205] [106..108]
 r220: [194..202] [104..108]
 r222: [192..198] [112..114]
 r224: [187..195] [110..114]
 r226: [185..191] [118..120]
 r228: [180..188] [116..120]
 r230: [178..184] [124..126]
 r232: [173..181] [122..126]
 r234: [171..177] [130..132]
 r236: [166..174] [128..132]
 r238: [164..170] [136..138]
 r240: [159..167] [134..138]
 r242: [157..163] [142..144]
 r244: [159..160] [140..144]
 r246: [153..156]
 r250: [463..463] [456..458] [450..453]
 r253: [82..624] [5..80]
 r254: [609..623]
 r255: [213..622] [99..102]
 r256: [445..621]
 r257: [294..620]
 r258: [245..619]
 r259: [220..618]
 r261: [614..615]
 r264: [610..611]
 r265: [606..607]
 r267: [600..601]
 r270: [595..596]
 r273: [588..589]
 r276: [581..582]
 r279: [574..575]
 r282: [567..568]
 r285: [560..561]
 r288: [553..554]
 r291: [546..547]
 r294: [536..540]
 r297: [535..538]
 r299: [523..526]
 r302: [516..519]
 r305: [509..512]
 r308: [502..505]
 r311: [495..498]
 r314: [488..491]
 r317: [481..484]
 r320: [530..533]
 r323: [475..477]
 r328: [442..443]
 r330: [434..438]
 r331: [433..437]
 r332: [402..403]
 r334: [420..421]
 r336: [417..418]
 r340: [415..416]
 r342: [412..413]
 r344: [409..410]
 r348: [406..407]
 r350: [395..396]
 r351: [360..363]
 r352: [359..362]
 r354: [331..334]
 r355: [330..333]
 r357: [303..305]
 r359: [295..298]
 r360: [287..291]
 r361: [286..288]
 r363: [258..260]
 r366: [252..254]
 r368: [244..247]
 r369: [243..246]
 r371: [210..211]
 r374: [203..204]
 r377: [196..197]
 r380: [189..190]
 r383: [182..183]
 r386: [175..176]
 r389: [168..169]
 r392: [161..162]
 r395: [152..155]
 r397: [151..154]
 r399: [141..143]
 r401: [135..137]
 r403: [129..131]
 r405: [123..125]
 r407: [117..119]
 r409: [111..113]
 r411: [105..107]
 r413: [147..149]
 r415: [98..100]
 r418: [86..87]
 r420: [70..70] [68..68] [59..59] [53..53] [44..44] [35..35] [26..26] [8..17]
 r421: [27..33]
 r424: [54..57]
 r426: [36..42]
 r428: [60..66]
 r430: [71..77]
 r432: [45..51]
 r434: [18..24]
 r437: [12..13]
 r438: [79..79] [0..7]
 r440: [216..217]
 r444: [435..440]
 r445: [436..439]
 r446: [349..352] [344..346] [338..341]
 r447: [535..539] [528..532] [521..525] [514..518] [507..511] [500..504] [493..497] [486..490] [479..483] [258..476] [253..256]
 r448: [320..323] [315..317] [309..312]
 r449: [281..281] [273..276] [265..270]
 r450: [88..612] [14..78]
 r451: [399..429]
 r452: [399..426]
 r453: [399..423]
 r454: [616..617]
 r455: [81..81]
 r456: [430..431]
 r457: [427..428]
 r458: [424..425]
 r459: [289..290]
 r460: [261..262]
Compressing live ranges: from 625 to 269 - 43%
Ranges after the compression:
 r87: [198..204]
 r94: [259..260]
 r96: [253..256] [205..206]
 r97: [162..163]
 r100: [155..193] [20..21]
 r107: [166..167]
 r116: [151..152] [144..145]
 r119: [155..156]
 r120: [23..24]
 r122: [153..154]
 r125: [138..139] [131..132]
 r127: [27..28]
 r129: [140..141]
 r132: [119..120] [116..117]
 r134: [17..18]
 r135: [127..128]
 r139: [125..126]
 r140: [125..126]
 r141: [107..124]
 r144: [99..100]
 r147: [8..9]
 r148: [14..15]
 r151: [103..104]
 r154: [86..89] [54..55]
 r156: [4..7]
 r159: [86..91] [38..39]
 r160: [32..35]
 r161: [11..12]
 r162: [0..1]
 r166: [36..37]
 r167: [157..163]
 r168: [94..100]
 r171: [253..256] [221..222]
 r173: [249..254] [221..222]
 r175: [249..252] [207..208]
 r177: [245..250] [207..208]
 r179: [245..248] [209..210]
 r181: [241..246] [209..210]
 r183: [241..244] [211..212]
 r185: [237..242] [211..212]
 r187: [237..240] [213..214]
 r189: [233..238] [213..214]
 r191: [233..236] [215..216]
 r193: [229..234] [215..216]
 r195: [229..232] [217..218]
 r197: [225..230] [217..218]
 r199: [225..228] [219..220]
 r201: [225..226] [219..220]
 r203: [223..224]
 r206: [203..204] [196..197]
 r207: [160..160] [157..158]
 r209: [149..149] [146..147]
 r211: [136..136] [133..134]
 r213: [114..114] [111..112]
 r214: [97..97] [94..95]
 r216: [82..87] [54..55]
 r218: [82..85] [40..41]
 r220: [78..83] [40..41]
 r222: [78..81] [42..43]
 r224: [74..79] [42..43]
 r226: [74..77] [44..45]
 r228: [70..75] [44..45]
 r230: [70..73] [46..47]
 r232: [66..71] [46..47]
 r234: [66..69] [48..49]
 r236: [62..67] [48..49]
 r238: [62..65] [50..51]
 r240: [58..63] [50..51]
 r242: [58..61] [52..53]
 r244: [58..59] [52..53]
 r246: [56..57]
 r250: [201..201] [198..199] [194..195]
 r253: [32..268] [2..30]
 r254: [263..268]
 r255: [90..268] [38..39]
 r256: [192..268]
 r257: [125..268]
 r258: [101..268]
 r259: [94..268]
 r261: [265..266]
 r264: [263..264]
 r265: [261..262]
 r267: [257..258]
 r270: [255..256]
 r273: [251..252]
 r276: [247..248]
 r279: [243..244]
 r282: [239..240]
 r285: [235..236]
 r288: [231..232]
 r291: [227..228]
 r294: [223..224]
 r297: [223..224]
 r299: [219..220]
 r302: [217..218]
 r305: [215..216]
 r308: [213..214]
 r311: [211..212]
 r314: [209..210]
 r317: [207..208]
 r320: [221..222]
 r323: [205..206]
 r328: [190..191]
 r330: [188..189]
 r331: [188..189]
 r332: [168..169]
 r334: [180..181]
 r336: [178..179]
 r340: [176..177]
 r342: [174..175]
 r344: [172..173]
 r348: [170..171]
 r350: [164..165]
 r351: [153..154]
 r352: [153..154]
 r354: [140..141]
 r355: [140..141]
 r357: [127..128]
 r359: [125..126]
 r360: [121..124]
 r361: [121..122]
 r363: [107..108]
 r366: [105..106]
 r368: [101..102]
 r369: [101..102]
 r371: [88..89]
 r374: [84..85]
 r377: [80..81]
 r380: [76..77]
 r383: [72..73]
 r386: [68..69]
 r389: [64..65]
 r392: [60..61]
 r395: [56..57]
 r397: [56..57]
 r399: [52..53]
 r401: [50..51]
 r403: [48..49]
 r405: [46..47]
 r407: [44..45]
 r409: [42..43]
 r411: [40..41]
 r413: [54..55]
 r415: [38..39]
 r418: [32..33]
 r420: [25..26] [22..22] [19..19] [16..16] [13..13] [10..10] [4..7]
 r421: [11..12]
 r424: [20..21]
 r426: [14..15]
 r428: [23..24]
 r430: [27..28]
 r432: [17..18]
 r434: [8..9]
 r437: [4..5]
 r438: [29..29] [0..3]
 r440: [92..93]
 r444: [188..189]
 r445: [188..189]
 r446: [146..150] [142..143]
 r447: [105..224]
 r448: [133..137] [129..130]
 r449: [118..118] [111..115]
 r450: [34..264] [6..28]
 r451: [166..185]
 r452: [166..183]
 r453: [166..181]
 r454: [267..268]
 r455: [31..31]
 r456: [186..187]
 r457: [184..185]
 r458: [182..183]
 r459: [123..124]
 r460: [109..110]

********** Inheritance #1: **********

EBB 2 3 4 5 6
EBB 7 8 9 10 11 12 13 14 15 16
EBB 17
EBB 18
EBB 19 20
EBB 21 22
EBB 23 24
EBB 25 26
EBB 27 28
EBB 29 30
EBB 31 32
EBB 33 34
EBB 35 36
EBB 37 38
EBB 39 40 41
EBB 42
EBB 43
EBB 44 45
EBB 46
EBB 47 48 49 50 51
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=461 from oldreg=100, assigning class GENERAL_REGS to inheritance r461
    Original reg change 100->461 (bb48):
  275: r461:DI=ax:DI
      REG_DEAD ax:DI
      REG_NOALIAS r326:DI
    Add original<-inheritance after:
 1417: r100:DI=r461:DI

    Inheritance reuse change 100->461 (bb48):
  281: di:DI=r461:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 52 53 54 55 56 57 58 59
EBB 60
EBB 61 62 63 64
EBB 65 66 67
EBB 68
EBB 69
EBB 70 71
EBB 72 73
EBB 74
EBB 75
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=462 from oldreg=100, assigning class GENERAL_REGS to inheritance r462
    Original reg change 100->462 (bb75):
  407: di:DI=r462:DI
    Add inheritance<-original before:
 1418: r462:DI=r100:DI

    Inheritance reuse change 100->462 (bb75):
  409: di:DI=r462:DI
      REG_DEAD r462:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 76 77
EBB 78
EBB 79 80
EBB 81 82 83
EBB 84
EBB 85 86
EBB 87 88 89
EBB 90
EBB 91 92
EBB 93 94 95
EBB 96
EBB 97 98
EBB 99 100
EBB 101
EBB 102 103 104
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of INDEX_REGS and GENERAL_REGS
      Creating newreg=463 from oldreg=141, assigning class INDEX_REGS to inheritance r463
    Original reg change 141->463 (bb103):
 1415: r459:DI=r463:DI
    Add inheritance<-original before:
 1419: r463:DI=r141:DI

    Inheritance reuse change 141->463 (bb103):
  533: si:DI=r463:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=464 from oldreg=141, assigning class GENERAL_REGS to inheritance r464
    Original reg change 141->464 (bb103):
  528: r464:DI=ax:DI
      REG_DEAD ax:DI
    Add original<-inheritance after:
 1420: r141:DI=r464:DI

    Inheritance reuse change 141->464 (bb103):
 1419: r463:DI=r464:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 105
EBB 106 107
EBB 108 109 110
EBB 111
EBB 112
EBB 113
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of INDEX_REGS and GENERAL_REGS
      Creating newreg=465 from oldreg=141, assigning class INDEX_REGS to inheritance r465
    Original reg change 141->465 (bb113):
 1416: r460:DI=r465:DI
    Add inheritance<-original before:
 1421: r465:DI=r141:DI

    Inheritance reuse change 141->465 (bb113):
  566: di:DI=r465:DI
      REG_DEAD r465:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 114 115 116 117 118 119
EBB 120 121 122
EBB 123
EBB 124
EBB 125 126
EBB 127
EBB 128 129
EBB 130 131 132 133 134 135 136 137 138
EBB 139
EBB 140
EBB 141 142
EBB 143 144
EBB 145 146
EBB 147 148
EBB 149 150
EBB 151 152
EBB 153 154
EBB 155 156
EBB 157 158
EBB 159
EBB 160 161
EBB 162
EBB 163 164
EBB 165
EBB 166
EBB 167
EBB 168
EBB 169 170
EBB 171
EBB 172
EBB 173 174
EBB 175
EBB 176
EBB 177 178
EBB 179
EBB 180
EBB 181 182
EBB 183
EBB 184
EBB 185 186
EBB 187
EBB 188
EBB 189 190
EBB 191
EBB 192
EBB 193 194
EBB 195
EBB 196
EBB 197
EBB 198
EBB 199
EBB 200
EBB 201
EBB 202
EBB 203
EBB 204

********** Pseudo live ranges #2: **********

  BB 195
   Insn 947: point = 0
   Insn 946: point = 0
  BB 194
   Insn 942: point = 2
   Insn 941: point = 2
  BB 193
   Insn 939: point = 4
   Insn 938: point = 4
   Insn 937: point = 4
  BB 191
   Insn 1399: point = 7
   Insn 933: point = 7
  BB 190
   Insn 930: point = 10
   Insn 929: point = 10
  BB 189
   Insn 927: point = 12
   Insn 926: point = 12
   Insn 925: point = 13
   Insn 923: point = 15
  BB 187
   Insn 1397: point = 17
   Insn 919: point = 17
  BB 186
   Insn 916: point = 20
   Insn 915: point = 20
  BB 185
   Insn 913: point = 22
   Insn 912: point = 22
   Insn 911: point = 22
  BB 184
   Insn 1084: point = 24
  BB 165
   Insn 1385: point = 26
   Insn 841: point = 26
  BB 164
   Insn 838: point = 29
   Insn 837: point = 29
  BB 163
   Insn 835: point = 31
   Insn 834: point = 31
   Insn 833: point = 31
  BB 162
   Insn 1060: point = 33
  BB 171
   Insn 1389: point = 35
   Insn 863: point = 35
  BB 170
   Insn 860: point = 38
   Insn 859: point = 38
  BB 169
   Insn 857: point = 40
   Insn 856: point = 40
   Insn 855: point = 40
  BB 168
   Insn 1068: point = 42
  BB 183
   Insn 1395: point = 44
   Insn 905: point = 44
  BB 182
   Insn 902: point = 47
   Insn 901: point = 47
  BB 181
   Insn 899: point = 49
   Insn 898: point = 49
   Insn 897: point = 49
  BB 180
   Insn 1080: point = 51
  BB 167
   Insn 1387: point = 53
   Insn 849: point = 53
   Insn 848: point = 55
   Insn 847: point = 55
  BB 166
   Insn 1064: point = 57
  BB 175
   Insn 1391: point = 59
   Insn 877: point = 59
  BB 174
   Insn 874: point = 62
   Insn 873: point = 62
  BB 173
   Insn 871: point = 64
   Insn 870: point = 64
   Insn 869: point = 64
  BB 172
   Insn 1072: point = 66
  BB 188
   Insn 1054: point = 68
  BB 179
   Insn 1393: point = 70
   Insn 891: point = 70
  BB 178
   Insn 888: point = 73
   Insn 887: point = 73
  BB 177
   Insn 885: point = 75
   Insn 884: point = 75
   Insn 883: point = 75
  BB 176
   Insn 1076: point = 77
  BB 192
   Insn 1048: point = 79
  BB 203
   Insn 995: point = 81
  BB 204
   Insn 998: point = 81
  BB 202
   Insn 994: point = 81
   Insn 993: point = 81
   Insn 991: point = 82
  BB 161
   Insn 1383: point = 84
   Insn 826: point = 84
   Insn 825: point = 84
  BB 160
   Insn 823: point = 86
   Insn 822: point = 86
   Insn 821: point = 87
   Insn 819: point = 89
  BB 140
   Insn 1354: point = 91
  BB 159
   Insn 814: point = 92
   Insn 813: point = 92
  BB 139
   Insn 717: point = 94
   Insn 716: point = 94
   Insn 715: point = 94
  BB 158
   Insn 1381: point = 96
  BB 157
   Insn 808: point = 97
   Insn 807: point = 98
   Insn 806: point = 99
   Insn 805: point = 100
   Insn 803: point = 100
  BB 201
   Insn 1409: point = 102
  BB 154
   Insn 1375: point = 103
  BB 153
   Insn 789: point = 104
   Insn 788: point = 105
   Insn 787: point = 106
   Insn 786: point = 107
   Insn 784: point = 107
  BB 152
   Insn 1372: point = 109
  BB 151
   Insn 779: point = 110
   Insn 778: point = 111
   Insn 777: point = 112
   Insn 776: point = 113
   Insn 774: point = 113
  BB 150
   Insn 1369: point = 115
  BB 149
   Insn 769: point = 116
   Insn 768: point = 117
   Insn 767: point = 118
   Insn 766: point = 119
   Insn 764: point = 119
  BB 148
   Insn 1366: point = 121
  BB 147
   Insn 759: point = 122
   Insn 758: point = 123
   Insn 757: point = 124
   Insn 756: point = 125
   Insn 754: point = 125
  BB 146
   Insn 1363: point = 127
  BB 145
   Insn 749: point = 128
   Insn 748: point = 129
   Insn 747: point = 130
   Insn 746: point = 131
   Insn 744: point = 131
  BB 144
   Insn 1360: point = 133
  BB 143
   Insn 739: point = 134
   Insn 738: point = 135
   Insn 737: point = 136
   Insn 736: point = 137
   Insn 734: point = 137
  BB 142
   Insn 1357: point = 139
  BB 141
   Insn 728: point = 140
   Insn 727: point = 141
   Insn 726: point = 142
   Insn 725: point = 143
   Insn 723: point = 143
  BB 156
   Insn 1378: point = 145
  BB 155
   Insn 799: point = 146
   Insn 798: point = 147
   Insn 797: point = 148
   Insn 796: point = 149
   Insn 794: point = 149
  BB 138
   Insn 713: point = 151
   Insn 712: point = 152
   Insn 711: point = 153
   Insn 710: point = 154
   Insn 708: point = 154
   Insn 706: point = 155
   Insn 705: point = 156
  BB 137
   Insn 703: point = 159
   Insn 702: point = 159
   Insn 699: point = 160
   Insn 698: point = 162
   Insn 697: point = 163
  BB 136
   Insn 695: point = 166
   Insn 694: point = 166
   Insn 691: point = 167
   Insn 690: point = 169
   Insn 689: point = 170
  BB 135
   Insn 687: point = 173
   Insn 686: point = 173
   Insn 683: point = 174
   Insn 682: point = 176
   Insn 681: point = 177
  BB 134
   Insn 679: point = 180
   Insn 678: point = 180
   Insn 675: point = 181
   Insn 674: point = 183
   Insn 673: point = 184
  BB 133
   Insn 671: point = 187
   Insn 670: point = 187
   Insn 667: point = 188
   Insn 666: point = 190
   Insn 665: point = 191
  BB 132
   Insn 663: point = 194
   Insn 662: point = 194
   Insn 659: point = 195
   Insn 658: point = 197
   Insn 657: point = 198
  BB 131
   Insn 655: point = 201
   Insn 654: point = 201
   Insn 651: point = 202
   Insn 650: point = 204
   Insn 649: point = 205
  BB 130
   Insn 647: point = 208
   Insn 646: point = 208
   Insn 643: point = 209
   Insn 642: point = 211
   Insn 641: point = 212
  BB 200
   Insn 984: point = 215
   Insn 983: point = 215
   Insn 979: point = 215
   Insn 978: point = 217
  BB 129
   Insn 1351: point = 219
  BB 128
   Insn 636: point = 220
   Insn 635: point = 220
  BB 127
   Insn 633: point = 222
   Insn 632: point = 222
  BB 126
   Insn 628: point = 223
   Insn 627: point = 223
  BB 125
   Insn 625: point = 225
   Insn 624: point = 225
  BB 124
   Insn 621: point = 226
  BB 122
   Insn 1348: point = 228
   Insn 618: point = 228
   Insn 616: point = 229
  BB 121
   Insn 615: point = 231
   Insn 614: point = 231
  BB 123
   Insn 15: point = 233
  BB 120
   Insn 612: point = 235
   Insn 611: point = 235
  BB 119
   Insn 608: point = 236
   Insn 607: point = 237
   Insn 606: point = 237
  BB 118
   Insn 604: point = 239
   Insn 603: point = 239
  BB 117
   Insn 601: point = 240
   Insn 600: point = 240
   Insn 599: point = 240
   Insn 598: point = 241
  BB 116
   Insn 596: point = 243
   Insn 595: point = 244
   Insn 594: point = 245
   Insn 592: point = 246
   Insn 591: point = 247
   Insn 590: point = 248
   Insn 589: point = 248
  BB 115
   Insn 587: point = 250
   Insn 586: point = 250
   Insn 585: point = 250
  BB 114
   Insn 583: point = 252
   Insn 582: point = 253
   Insn 581: point = 254
   Insn 579: point = 254
  BB 6
   Insn 1295: point = 256
   Insn 1166: point = 256
  BB 113
   Insn 567: point = 258
   Insn 566: point = 259
	Hard reg 5 is preferable by r465 with profit 1
   Insn 564: point = 260
   Insn 1416: point = 262
	   Creating copy r460<-r465@1
   Insn 1421: point = 263
  BB 199
   Insn 1405: point = 266
  BB 112
   Insn 562: point = 267
   Insn 561: point = 267
  BB 198
   Insn 966: point = 269
   Insn 965: point = 269
  BB 111
   Insn 1346: point = 270
   Insn 557: point = 270
  BB 110
   Insn 1172: point = 272
   Insn 554: point = 273
  BB 109
   Insn 553: point = 275
   Insn 552: point = 275
  BB 108
   Insn 550: point = 277
   Insn 549: point = 277
   Insn 1185: point = 277
   Insn 548: point = 278
  BB 107
   Insn 545: point = 280
   Insn 544: point = 280
  BB 106
   Insn 542: point = 282
   Insn 541: point = 282
  BB 105
   Insn 1344: point = 283
   Insn 1171: point = 283
  BB 104
   Insn 539: point = 286
   Insn 538: point = 286
   Insn 537: point = 286
  BB 103
   Insn 535: point = 288
   Insn 534: point = 289
   Insn 533: point = 290
	Hard reg 4 is preferable by r463 with profit 1
   Insn 531: point = 291
   Insn 1415: point = 293
	   Creating copy r459<-r463@1
   Insn 1419: point = 294
	   Creating copy r463<-r464@1
   Insn 530: point = 296
   Insn 1420: point = 297
   Insn 528: point = 298
	Hard reg 0 is preferable by r464 with profit 1
  BB 102
   Insn 527: point = 300
   Insn 526: point = 300
   Insn 525: point = 301
   Insn 524: point = 302
   Insn 523: point = 303
   Insn 522: point = 304
   Insn 521: point = 304
   Insn 520: point = 305
   Insn 519: point = 305
   Insn 518: point = 305
   Insn 517: point = 305
   Insn 516: point = 306
  BB 101
   Insn 514: point = 308
   Insn 513: point = 308
   Insn 512: point = 308
  BB 100
   Insn 509: point = 309
   Insn 508: point = 310
   Insn 506: point = 311
  BB 99
   Insn 504: point = 313
   Insn 503: point = 313
   Insn 502: point = 313
  BB 98
   Insn 497: point = 315
   Insn 496: point = 315
  BB 97
   Insn 494: point = 317
   Insn 493: point = 317
  BB 90
   Insn 1341: point = 318
   Insn 1169: point = 318
  BB 96
   Insn 489: point = 321
  BB 95
   Insn 1170: point = 323
   Insn 486: point = 324
  BB 94
   Insn 485: point = 326
   Insn 484: point = 326
  BB 93
   Insn 482: point = 328
   Insn 481: point = 328
   Insn 1184: point = 328
   Insn 480: point = 329
  BB 92
   Insn 477: point = 331
   Insn 476: point = 331
  BB 91
   Insn 474: point = 333
   Insn 473: point = 333
  BB 89
   Insn 471: point = 334
   Insn 470: point = 334
   Insn 469: point = 334
  BB 88
   Insn 467: point = 336
   Insn 466: point = 337
   Insn 465: point = 338
   Insn 463: point = 339
   Insn 462: point = 340
   Insn 461: point = 341
  BB 87
   Insn 459: point = 343
   Insn 458: point = 343
  BB 86
   Insn 454: point = 344
   Insn 453: point = 344
  BB 85
   Insn 451: point = 346
   Insn 450: point = 346
  BB 78
   Insn 1338: point = 347
   Insn 1167: point = 347
  BB 84
   Insn 446: point = 350
  BB 83
   Insn 1168: point = 352
   Insn 443: point = 353
  BB 82
   Insn 442: point = 355
   Insn 441: point = 355
  BB 81
   Insn 439: point = 357
   Insn 438: point = 357
   Insn 1173: point = 357
   Insn 437: point = 358
  BB 80
   Insn 434: point = 360
   Insn 433: point = 360
  BB 79
   Insn 431: point = 362
   Insn 430: point = 362
  BB 77
   Insn 428: point = 363
   Insn 427: point = 363
   Insn 426: point = 363
  BB 76
   Insn 424: point = 365
   Insn 423: point = 366
   Insn 422: point = 367
   Insn 420: point = 368
   Insn 419: point = 369
   Insn 418: point = 370
  BB 75
   Insn 412: point = 372
   Insn 411: point = 372
   Insn 410: point = 372
   Insn 409: point = 372
	Hard reg 5 is preferable by r462 with profit 20
   Insn 408: point = 373
   Insn 407: point = 373
   Insn 1418: point = 373
  BB 73
   Insn 1335: point = 376
   Insn 398: point = 376
   Insn 396: point = 377
  BB 72
   Insn 395: point = 379
   Insn 394: point = 379
  BB 197
   Insn 1402: point = 380
  BB 74
   Insn 404: point = 381
   Insn 403: point = 381
  BB 196
   Insn 953: point = 382
   Insn 952: point = 382
  BB 71
   Insn 1333: point = 383
   Insn 390: point = 383
   Insn 389: point = 383
  BB 70
   Insn 387: point = 385
   Insn 386: point = 385
  BB 69
   Insn 383: point = 386
  BB 67
   Insn 1331: point = 388
   Insn 380: point = 388
   Insn 378: point = 389
  BB 66
   Insn 377: point = 391
   Insn 376: point = 391
  BB 68
   Insn 14: point = 393
  BB 65
   Insn 374: point = 395
   Insn 373: point = 395
  BB 64
   Insn 370: point = 396
   Insn 369: point = 397
   Insn 368: point = 397
  BB 63
   Insn 366: point = 399
   Insn 365: point = 399
  BB 62
   Insn 363: point = 400
   Insn 362: point = 400
   Insn 361: point = 400
   Insn 360: point = 401
  BB 61
   Insn 358: point = 403
   Insn 357: point = 403
   Insn 356: point = 404
   Insn 355: point = 404
  BB 60
   Insn 353: point = 406
   Insn 352: point = 406
  BB 53
   Insn 307: point = 407
   Insn 306: point = 407
   Insn 304: point = 408
  BB 52
   Insn 303: point = 410
   Insn 302: point = 411
   Insn 300: point = 411
  BB 59
   Insn 1329: point = 413
  BB 58
   Insn 346: point = 414
   Insn 345: point = 415
   Insn 343: point = 415
  BB 57
   Insn 341: point = 417
   Insn 340: point = 417
   Insn 339: point = 417
   Insn 338: point = 417
   Insn 334: point = 417
   Insn 332: point = 418
  BB 56
   Insn 331: point = 420
   Insn 330: point = 421
   Insn 328: point = 421
  BB 55
   Insn 326: point = 423
   Insn 325: point = 423
   Insn 324: point = 423
   Insn 323: point = 423
   Insn 322: point = 424
   Insn 321: point = 424
   Insn 319: point = 424
   Insn 315: point = 425
   Insn 313: point = 426
  BB 54
   Insn 312: point = 428
   Insn 311: point = 429
   Insn 309: point = 429
  BB 51
   Insn 1414: point = 431
   Insn 337: point = 433
   Insn 1413: point = 434
   Insn 336: point = 436
   Insn 1412: point = 437
   Insn 320: point = 439
  BB 50
   Insn 297: point = 441
   Insn 296: point = 441
   Insn 295: point = 442
   Insn 294: point = 442
   Insn 293: point = 443
   Insn 292: point = 444
   Insn 291: point = 445
   Insn 290: point = 446
   Insn 1088: point = 447
   Insn 1087: point = 448
  BB 49
   Insn 287: point = 450
   Insn 286: point = 451
   Insn 284: point = 451
  BB 48
   Insn 282: point = 453
   Insn 281: point = 453
	Hard reg 5 is preferable by r461 with profit 20
   Insn 280: point = 454
   Insn 279: point = 455
   Insn 1417: point = 455
   Insn 275: point = 456
	Hard reg 5 is preferable by r461 with profit 20
	Hard reg 0 is preferable by r461 with profit 20
  BB 47
   Insn 274: point = 458
   Insn 273: point = 458
  BB 46
   Insn 271: point = 459
   Insn 270: point = 459
  BB 45
   Insn 267: point = 460
   Insn 266: point = 460
  BB 44
   Insn 264: point = 462
   Insn 263: point = 462
  BB 18
   Insn 1297: point = 463
   Insn 13: point = 463
  BB 43
   Insn 260: point = 466
  BB 41
   Insn 1326: point = 468
   Insn 257: point = 468
   Insn 255: point = 469
  BB 40
   Insn 254: point = 471
   Insn 253: point = 471
  BB 42
   Insn 12: point = 473
  BB 39
   Insn 251: point = 475
   Insn 250: point = 475
  BB 38
   Insn 247: point = 476
   Insn 246: point = 477
   Insn 245: point = 477
  BB 37
   Insn 243: point = 479
   Insn 242: point = 479
  BB 17
   Insn 127: point = 480
   Insn 126: point = 480
   Insn 125: point = 480
   Insn 124: point = 481
  BB 36
   Insn 1324: point = 483
  BB 35
   Insn 237: point = 484
   Insn 236: point = 485
   Insn 235: point = 486
   Insn 234: point = 486
   Insn 233: point = 486
   Insn 231: point = 486
   Insn 230: point = 487
  BB 32
   Insn 1318: point = 489
  BB 31
   Insn 213: point = 490
   Insn 212: point = 491
   Insn 211: point = 492
   Insn 210: point = 493
   Insn 209: point = 493
   Insn 207: point = 493
   Insn 206: point = 494
  BB 30
   Insn 1315: point = 496
  BB 29
   Insn 201: point = 497
   Insn 200: point = 498
   Insn 199: point = 499
   Insn 198: point = 500
   Insn 197: point = 500
   Insn 195: point = 500
   Insn 194: point = 501
  BB 28
   Insn 1312: point = 503
  BB 27
   Insn 189: point = 504
   Insn 188: point = 505
   Insn 187: point = 506
   Insn 186: point = 507
   Insn 185: point = 507
   Insn 183: point = 507
   Insn 182: point = 508
  BB 26
   Insn 1309: point = 510
  BB 25
   Insn 177: point = 511
   Insn 176: point = 512
   Insn 175: point = 513
   Insn 174: point = 514
   Insn 173: point = 514
   Insn 171: point = 514
   Insn 170: point = 515
  BB 24
   Insn 1306: point = 517
  BB 23
   Insn 165: point = 518
   Insn 164: point = 519
   Insn 163: point = 520
   Insn 162: point = 521
   Insn 161: point = 521
   Insn 159: point = 521
   Insn 158: point = 522
  BB 22
   Insn 1303: point = 524
  BB 21
   Insn 153: point = 525
   Insn 152: point = 526
   Insn 151: point = 527
   Insn 150: point = 528
   Insn 149: point = 528
   Insn 147: point = 528
   Insn 146: point = 529
  BB 20
   Insn 1300: point = 531
  BB 19
   Insn 140: point = 532
   Insn 139: point = 533
   Insn 138: point = 534
   Insn 137: point = 535
   Insn 136: point = 535
   Insn 134: point = 535
   Insn 133: point = 536
  BB 34
   Insn 1321: point = 538
  BB 33
   Insn 225: point = 539
   Insn 224: point = 540
   Insn 223: point = 541
   Insn 222: point = 542
   Insn 221: point = 542
   Insn 219: point = 542
   Insn 218: point = 543
  BB 16
   Insn 122: point = 545
   Insn 121: point = 546
   Insn 120: point = 547
   Insn 119: point = 548
   Insn 118: point = 548
   Insn 116: point = 548
   Insn 114: point = 549
   Insn 113: point = 550
   Insn 112: point = 551
  BB 15
   Insn 110: point = 554
   Insn 109: point = 554
   Insn 106: point = 555
   Insn 105: point = 557
   Insn 104: point = 558
  BB 14
   Insn 102: point = 561
   Insn 101: point = 561
   Insn 98: point = 562
   Insn 97: point = 564
   Insn 96: point = 565
  BB 13
   Insn 94: point = 568
   Insn 93: point = 568
   Insn 90: point = 569
   Insn 89: point = 571
   Insn 88: point = 572
  BB 12
   Insn 86: point = 575
   Insn 85: point = 575
   Insn 82: point = 576
   Insn 81: point = 578
   Insn 80: point = 579
  BB 11
   Insn 78: point = 582
   Insn 77: point = 582
   Insn 74: point = 583
   Insn 73: point = 585
   Insn 72: point = 586
  BB 10
   Insn 70: point = 589
   Insn 69: point = 589
   Insn 66: point = 590
   Insn 65: point = 592
   Insn 64: point = 593
  BB 9
   Insn 62: point = 596
   Insn 61: point = 596
   Insn 58: point = 597
   Insn 57: point = 599
   Insn 56: point = 600
  BB 8
   Insn 54: point = 603
   Insn 53: point = 603
   Insn 50: point = 604
   Insn 49: point = 606
   Insn 48: point = 607
  BB 7
   Insn 46: point = 609
   Insn 45: point = 609
   Insn 42: point = 609
   Insn 41: point = 611
  BB 5
   Insn 39: point = 613
   Insn 38: point = 613
   Insn 36: point = 614
  BB 4
   Insn 35: point = 616
   Insn 34: point = 617
   Insn 32: point = 617
  BB 3
   Insn 30: point = 619
   Insn 29: point = 619
   Insn 28: point = 619
   Insn 27: point = 620
   Insn 26: point = 621
   Insn 25: point = 622
  BB 2
   Insn 23: point = 624
   Insn 22: point = 625
   Insn 20: point = 625
   Insn 19: point = 626
   Insn 18: point = 626
   Insn 11: point = 626
   Insn 8: point = 628
   Insn 7: point = 629
   Insn 6: point = 630
   Insn 5: point = 631
   Insn 4: point = 632
   Insn 3: point = 633
   Insn 2: point = 634
 r87: [479..480] [471..476] [466..469]
 r94: [613..614]
 r96: [603..609] [484..488]
 r97: [397..401]
 r100: [374..455] [55..58]
 r107: [407..408]
 r116: [360..363] [348..349]
 r119: [376..377]
 r120: [62..64]
 r122: [367..370]
 r125: [331..334] [319..320]
 r127: [73..75]
 r129: [338..341]
 r132: [284..286] [280..282]
 r134: [47..49]
 r135: [310..313]
 r139: [303..306]
 r140: [302..305]
 r141: [264..297]
 r144: [237..241]
 r147: [20..22]
 r148: [38..40]
 r151: [248..250]
 r154: [206..212] [148..150]
 r156: [10..15]
 r159: [208..215] [97..102]
 r160: [84..89]
 r161: [29..31]
 r162: [2..4]
 r166: [92..94]
 r167: [399..400] [391..396] [383..388]
 r168: [239..240] [231..236] [223..228]
 r171: [601..607] [541..544]
 r173: [596..604] [539..544]
 r175: [594..600] [492..495]
 r177: [589..597] [490..495]
 r179: [587..593] [499..502]
 r181: [582..590] [497..502]
 r183: [580..586] [506..509]
 r185: [575..583] [504..509]
 r187: [573..579] [513..516]
 r189: [568..576] [511..516]
 r191: [566..572] [520..523]
 r193: [561..569] [518..523]
 r195: [559..565] [527..530]
 r197: [554..562] [525..530]
 r199: [552..558] [534..537]
 r201: [554..555] [532..537]
 r203: [547..551]
 r206: [477..481] [464..465]
 r207: [393..393] [386..389]
 r209: [357..357] [350..353]
 r211: [328..328] [321..324]
 r213: [277..277] [270..273]
 r214: [233..233] [226..229]
 r216: [201..209] [146..150]
 r218: [199..205] [106..108]
 r220: [194..202] [104..108]
 r222: [192..198] [112..114]
 r224: [187..195] [110..114]
 r226: [185..191] [118..120]
 r228: [180..188] [116..120]
 r230: [178..184] [124..126]
 r232: [173..181] [122..126]
 r234: [171..177] [130..132]
 r236: [166..174] [128..132]
 r238: [164..170] [136..138]
 r240: [159..167] [134..138]
 r242: [157..163] [142..144]
 r244: [159..160] [140..144]
 r246: [153..156]
 r250: [473..473] [466..468] [460..463]
 r253: [82..634] [5..80]
 r254: [619..633]
 r255: [213..632] [99..102]
 r256: [454..631]
 r257: [300..630]
 r258: [245..629]
 r259: [220..628]
 r261: [624..625]
 r264: [620..621]
 r265: [616..617]
 r267: [610..611]
 r270: [605..606]
 r273: [598..599]
 r276: [591..592]
 r279: [584..585]
 r282: [577..578]
 r285: [570..571]
 r288: [563..564]
 r291: [556..557]
 r294: [546..550]
 r297: [545..548]
 r299: [533..536]
 r302: [526..529]
 r305: [519..522]
 r308: [512..515]
 r311: [505..508]
 r314: [498..501]
 r317: [491..494]
 r320: [540..543]
 r323: [485..487]
 r328: [450..451]
 r330: [442..446]
 r331: [441..445]
 r332: [410..411]
 r334: [428..429]
 r336: [425..426]
 r340: [423..424]
 r342: [420..421]
 r344: [417..418]
 r348: [414..415]
 r350: [403..404]
 r351: [366..369]
 r352: [365..368]
 r354: [337..340]
 r355: [336..339]
 r357: [309..311]
 r359: [301..304]
 r360: [289..296]
 r361: [288..291]
 r363: [258..260]
 r366: [252..254]
 r368: [244..247]
 r369: [243..246]
 r371: [210..211]
 r374: [203..204]
 r377: [196..197]
 r380: [189..190]
 r383: [182..183]
 r386: [175..176]
 r389: [168..169]
 r392: [161..162]
 r395: [152..155]
 r397: [151..154]
 r399: [141..143]
 r401: [135..137]
 r403: [129..131]
 r405: [123..125]
 r407: [117..119]
 r409: [111..113]
 r411: [105..107]
 r413: [147..149]
 r415: [98..100]
 r418: [86..87]
 r420: [70..70] [68..68] [59..59] [53..53] [44..44] [35..35] [26..26] [8..17]
 r421: [27..33]
 r424: [54..57]
 r426: [36..42]
 r428: [60..66]
 r430: [71..77]
 r432: [45..51]
 r434: [18..24]
 r437: [12..13]
 r438: [79..79] [0..7]
 r440: [216..217]
 r444: [443..448]
 r445: [444..447]
 r446: [355..358] [350..352] [344..347]
 r447: [545..549] [538..542] [531..535] [524..528] [517..521] [510..514] [503..507] [496..500] [489..493] [258..486] [253..256]
 r448: [326..329] [321..323] [315..318]
 r449: [283..283] [275..278] [267..272]
 r450: [88..622] [14..78]
 r451: [407..437]
 r452: [407..434]
 r453: [407..431]
 r454: [626..627]
 r455: [81..81]
 r456: [438..439]
 r457: [435..436]
 r458: [432..433]
 r459: [292..293]
 r460: [261..262]
 r461: [453..456]
 r462: [372..373]
 r463: [290..294]
 r464: [295..298]
 r465: [259..263]
Compressing live ranges: from 635 to 273 - 42%
Ranges after the compression:
 r87: [202..208]
 r94: [263..264]
 r96: [257..260] [209..210]
 r97: [166..167]
 r100: [159..197] [20..21]
 r107: [170..171]
 r116: [153..154] [146..147]
 r119: [159..160]
 r120: [23..24]
 r122: [155..156]
 r125: [140..141] [133..134]
 r127: [27..28]
 r129: [142..143]
 r132: [119..120] [116..117]
 r134: [17..18]
 r135: [129..130]
 r139: [127..128]
 r140: [127..128]
 r141: [111..126]
 r144: [99..100]
 r147: [8..9]
 r148: [14..15]
 r151: [103..104]
 r154: [86..89] [54..55]
 r156: [4..7]
 r159: [86..91] [38..39]
 r160: [32..35]
 r161: [11..12]
 r162: [0..1]
 r166: [36..37]
 r167: [161..167]
 r168: [94..100]
 r171: [257..260] [225..226]
 r173: [253..258] [225..226]
 r175: [253..256] [211..212]
 r177: [249..254] [211..212]
 r179: [249..252] [213..214]
 r181: [245..250] [213..214]
 r183: [245..248] [215..216]
 r185: [241..246] [215..216]
 r187: [241..244] [217..218]
 r189: [237..242] [217..218]
 r191: [237..240] [219..220]
 r193: [233..238] [219..220]
 r195: [233..236] [221..222]
 r197: [229..234] [221..222]
 r199: [229..232] [223..224]
 r201: [229..230] [223..224]
 r203: [227..228]
 r206: [207..208] [200..201]
 r207: [164..164] [161..162]
 r209: [151..151] [148..149]
 r211: [138..138] [135..136]
 r213: [114..114] [111..112]
 r214: [97..97] [94..95]
 r216: [82..87] [54..55]
 r218: [82..85] [40..41]
 r220: [78..83] [40..41]
 r222: [78..81] [42..43]
 r224: [74..79] [42..43]
 r226: [74..77] [44..45]
 r228: [70..75] [44..45]
 r230: [70..73] [46..47]
 r232: [66..71] [46..47]
 r234: [66..69] [48..49]
 r236: [62..67] [48..49]
 r238: [62..65] [50..51]
 r240: [58..63] [50..51]
 r242: [58..61] [52..53]
 r244: [58..59] [52..53]
 r246: [56..57]
 r250: [205..205] [202..203] [198..199]
 r253: [32..272] [2..30]
 r254: [267..272]
 r255: [90..272] [38..39]
 r256: [196..272]
 r257: [127..272]
 r258: [101..272]
 r259: [94..272]
 r261: [269..270]
 r264: [267..268]
 r265: [265..266]
 r267: [261..262]
 r270: [259..260]
 r273: [255..256]
 r276: [251..252]
 r279: [247..248]
 r282: [243..244]
 r285: [239..240]
 r288: [235..236]
 r291: [231..232]
 r294: [227..228]
 r297: [227..228]
 r299: [223..224]
 r302: [221..222]
 r305: [219..220]
 r308: [217..218]
 r311: [215..216]
 r314: [213..214]
 r317: [211..212]
 r320: [225..226]
 r323: [209..210]
 r328: [194..195]
 r330: [192..193]
 r331: [192..193]
 r332: [172..173]
 r334: [184..185]
 r336: [182..183]
 r340: [180..181]
 r342: [178..179]
 r344: [176..177]
 r348: [174..175]
 r350: [168..169]
 r351: [155..156]
 r352: [155..156]
 r354: [142..143]
 r355: [142..143]
 r357: [129..130]
 r359: [127..128]
 r360: [121..126]
 r361: [121..122]
 r363: [107..108]
 r366: [105..106]
 r368: [101..102]
 r369: [101..102]
 r371: [88..89]
 r374: [84..85]
 r377: [80..81]
 r380: [76..77]
 r383: [72..73]
 r386: [68..69]
 r389: [64..65]
 r392: [60..61]
 r395: [56..57]
 r397: [56..57]
 r399: [52..53]
 r401: [50..51]
 r403: [48..49]
 r405: [46..47]
 r407: [44..45]
 r409: [42..43]
 r411: [40..41]
 r413: [54..55]
 r415: [38..39]
 r418: [32..33]
 r420: [25..26] [22..22] [19..19] [16..16] [13..13] [10..10] [4..7]
 r421: [11..12]
 r424: [20..21]
 r426: [14..15]
 r428: [23..24]
 r430: [27..28]
 r432: [17..18]
 r434: [8..9]
 r437: [4..5]
 r438: [29..29] [0..3]
 r440: [92..93]
 r444: [192..193]
 r445: [192..193]
 r446: [148..152] [144..145]
 r447: [105..228]
 r448: [135..139] [131..132]
 r449: [118..118] [111..115]
 r450: [34..268] [6..28]
 r451: [170..189]
 r452: [170..187]
 r453: [170..185]
 r454: [271..272]
 r455: [31..31]
 r456: [190..191]
 r457: [188..189]
 r458: [186..187]
 r459: [123..124]
 r460: [109..110]
 r461: [196..197]
 r462: [157..158]
 r463: [121..124]
 r464: [125..126]
 r465: [107..110]

********** Assignment #1: **********

	 Assigning to 454 (cl=INDEX_REGS, orig=454, freq=595, tfirst=454, tfreq=595)...
	   Assign 0 to reload r454 (freq=595)
	 Assigning to 455 (cl=INDEX_REGS, orig=455, freq=595, tfirst=455, tfreq=595)...
	   Assign 2 to reload r455 (freq=595)
	 Assigning to 461 (cl=GENERAL_REGS, orig=100, freq=60, tfirst=461, tfreq=60)...
	   Assign 0 to inheritance r461 (freq=60)
	 Assigning to 462 (cl=GENERAL_REGS, orig=100, freq=60, tfirst=462, tfreq=60)...
	 Assigning to 456 (cl=GENERAL_REGS, orig=451, freq=40, tfirst=456, tfreq=40)...
	   Assign 0 to reload r456 (freq=40)
	 Assigning to 457 (cl=GENERAL_REGS, orig=452, freq=40, tfirst=457, tfreq=40)...
	   Assign 0 to reload r457 (freq=40)
	 Assigning to 458 (cl=GENERAL_REGS, orig=453, freq=40, tfirst=458, tfreq=40)...
	   Assign 0 to reload r458 (freq=40)
	 Assigning to 459 (cl=INDEX_REGS, orig=141, freq=2, tfirst=459, tfreq=4)...
	   Assign 0 to reload r459 (freq=2)
	Hard reg 4 is preferable by r463 with profit 1
	Hard reg 0 is preferable by r463 with profit 1
	Hard reg 0 is preferable by r464 with profit 2
	 Assigning to 463 (cl=INDEX_REGS, orig=141, freq=3, tfirst=459, tfreq=4)...
	   Assign 4 to inheritance r463 (freq=3)
	Hard reg 0 is preferable by r464 with profit 2
	Hard reg 4 is preferable by r464 with profit 1
	 Assigning to 464 (cl=GENERAL_REGS, orig=141, freq=3, tfirst=459, tfreq=4)...
	   Assign 0 to inheritance r464 (freq=3)
	 Assigning to 460 (cl=INDEX_REGS, orig=141, freq=2, tfirst=460, tfreq=3)...
	   Assign 0 to reload r460 (freq=2)
	Hard reg 5 is preferable by r465 with profit 1
	Hard reg 0 is preferable by r465 with profit 1
	 Assigning to 465 (cl=INDEX_REGS, orig=141, freq=3, tfirst=460, tfreq=3)...
	   Assign 5 to inheritance r465 (freq=3)
	Improving inheritance for 463(4) and 464(0)...
	   Assign 4 to inheritance r464 (freq=3)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 4 out of 5 (80.00%)
   Insn after restoring regs:
  409: di:DI=r100:DI
      REG_DEAD r100:DI
   Insn after restoring regs:
  407: di:DI=r100:DI
	   Removing inheritance:
 1418: r462:DI=r100:DI
      REG_DEAD r100:DI
deleting insn with uid = 1418.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1421:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1420:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1417:  (0) m  (1) re {*movdi_internal}

********** Pseudo live ranges #3: **********

  BB 195
   Insn 947: point = 0
   Insn 946: point = 0
  BB 194
   Insn 942: point = 2
   Insn 941: point = 2
  BB 193
   Insn 939: point = 4
   Insn 938: point = 4
   Insn 937: point = 4
  BB 191
   Insn 1399: point = 7
   Insn 933: point = 7
  BB 190
   Insn 930: point = 10
   Insn 929: point = 10
  BB 189
   Insn 927: point = 12
   Insn 926: point = 12
   Insn 925: point = 13
   Insn 923: point = 15
  BB 187
   Insn 1397: point = 17
   Insn 919: point = 17
  BB 186
   Insn 916: point = 20
   Insn 915: point = 20
  BB 185
   Insn 913: point = 22
   Insn 912: point = 22
   Insn 911: point = 22
  BB 184
   Insn 1084: point = 24
  BB 165
   Insn 1385: point = 26
   Insn 841: point = 26
  BB 164
   Insn 838: point = 29
   Insn 837: point = 29
  BB 163
   Insn 835: point = 31
   Insn 834: point = 31
   Insn 833: point = 31
  BB 162
   Insn 1060: point = 33
  BB 171
   Insn 1389: point = 35
   Insn 863: point = 35
  BB 170
   Insn 860: point = 38
   Insn 859: point = 38
  BB 169
   Insn 857: point = 40
   Insn 856: point = 40
   Insn 855: point = 40
  BB 168
   Insn 1068: point = 42
  BB 183
   Insn 1395: point = 44
   Insn 905: point = 44
  BB 182
   Insn 902: point = 47
   Insn 901: point = 47
  BB 181
   Insn 899: point = 49
   Insn 898: point = 49
   Insn 897: point = 49
  BB 180
   Insn 1080: point = 51
  BB 167
   Insn 1387: point = 53
   Insn 849: point = 53
   Insn 848: point = 55
   Insn 847: point = 55
  BB 166
   Insn 1064: point = 57
  BB 175
   Insn 1391: point = 59
   Insn 877: point = 59
  BB 174
   Insn 874: point = 62
   Insn 873: point = 62
  BB 173
   Insn 871: point = 64
   Insn 870: point = 64
   Insn 869: point = 64
  BB 172
   Insn 1072: point = 66
  BB 188
   Insn 1054: point = 68
  BB 179
   Insn 1393: point = 70
   Insn 891: point = 70
  BB 178
   Insn 888: point = 73
   Insn 887: point = 73
  BB 177
   Insn 885: point = 75
   Insn 884: point = 75
   Insn 883: point = 75
  BB 176
   Insn 1076: point = 77
  BB 192
   Insn 1048: point = 79
  BB 203
   Insn 995: point = 81
  BB 204
   Insn 998: point = 81
  BB 202
   Insn 994: point = 81
   Insn 993: point = 81
   Insn 991: point = 82
  BB 161
   Insn 1383: point = 84
   Insn 826: point = 84
   Insn 825: point = 84
  BB 160
   Insn 823: point = 86
   Insn 822: point = 86
   Insn 821: point = 87
   Insn 819: point = 89
  BB 140
   Insn 1354: point = 91
  BB 159
   Insn 814: point = 92
   Insn 813: point = 92
  BB 139
   Insn 717: point = 94
   Insn 716: point = 94
   Insn 715: point = 94
  BB 158
   Insn 1381: point = 96
  BB 157
   Insn 808: point = 97
   Insn 807: point = 98
   Insn 806: point = 99
   Insn 805: point = 100
   Insn 803: point = 100
  BB 201
   Insn 1409: point = 102
  BB 154
   Insn 1375: point = 103
  BB 153
   Insn 789: point = 104
   Insn 788: point = 105
   Insn 787: point = 106
   Insn 786: point = 107
   Insn 784: point = 107
  BB 152
   Insn 1372: point = 109
  BB 151
   Insn 779: point = 110
   Insn 778: point = 111
   Insn 777: point = 112
   Insn 776: point = 113
   Insn 774: point = 113
  BB 150
   Insn 1369: point = 115
  BB 149
   Insn 769: point = 116
   Insn 768: point = 117
   Insn 767: point = 118
   Insn 766: point = 119
   Insn 764: point = 119
  BB 148
   Insn 1366: point = 121
  BB 147
   Insn 759: point = 122
   Insn 758: point = 123
   Insn 757: point = 124
   Insn 756: point = 125
   Insn 754: point = 125
  BB 146
   Insn 1363: point = 127
  BB 145
   Insn 749: point = 128
   Insn 748: point = 129
   Insn 747: point = 130
   Insn 746: point = 131
   Insn 744: point = 131
  BB 144
   Insn 1360: point = 133
  BB 143
   Insn 739: point = 134
   Insn 738: point = 135
   Insn 737: point = 136
   Insn 736: point = 137
   Insn 734: point = 137
  BB 142
   Insn 1357: point = 139
  BB 141
   Insn 728: point = 140
   Insn 727: point = 141
   Insn 726: point = 142
   Insn 725: point = 143
   Insn 723: point = 143
  BB 156
   Insn 1378: point = 145
  BB 155
   Insn 799: point = 146
   Insn 798: point = 147
   Insn 797: point = 148
   Insn 796: point = 149
   Insn 794: point = 149
  BB 138
   Insn 713: point = 151
   Insn 712: point = 152
   Insn 711: point = 153
   Insn 710: point = 154
   Insn 708: point = 154
   Insn 706: point = 155
   Insn 705: point = 156
  BB 137
   Insn 703: point = 159
   Insn 702: point = 159
   Insn 699: point = 160
   Insn 698: point = 162
   Insn 697: point = 163
  BB 136
   Insn 695: point = 166
   Insn 694: point = 166
   Insn 691: point = 167
   Insn 690: point = 169
   Insn 689: point = 170
  BB 135
   Insn 687: point = 173
   Insn 686: point = 173
   Insn 683: point = 174
   Insn 682: point = 176
   Insn 681: point = 177
  BB 134
   Insn 679: point = 180
   Insn 678: point = 180
   Insn 675: point = 181
   Insn 674: point = 183
   Insn 673: point = 184
  BB 133
   Insn 671: point = 187
   Insn 670: point = 187
   Insn 667: point = 188
   Insn 666: point = 190
   Insn 665: point = 191
  BB 132
   Insn 663: point = 194
   Insn 662: point = 194
   Insn 659: point = 195
   Insn 658: point = 197
   Insn 657: point = 198
  BB 131
   Insn 655: point = 201
   Insn 654: point = 201
   Insn 651: point = 202
   Insn 650: point = 204
   Insn 649: point = 205
  BB 130
   Insn 647: point = 208
   Insn 646: point = 208
   Insn 643: point = 209
   Insn 642: point = 211
   Insn 641: point = 212
  BB 200
   Insn 984: point = 215
   Insn 983: point = 215
   Insn 979: point = 215
   Insn 978: point = 217
  BB 129
   Insn 1351: point = 219
  BB 128
   Insn 636: point = 220
   Insn 635: point = 220
  BB 127
   Insn 633: point = 222
   Insn 632: point = 222
  BB 126
   Insn 628: point = 223
   Insn 627: point = 223
  BB 125
   Insn 625: point = 225
   Insn 624: point = 225
  BB 124
   Insn 621: point = 226
  BB 122
   Insn 1348: point = 228
   Insn 618: point = 228
   Insn 616: point = 229
  BB 121
   Insn 615: point = 231
   Insn 614: point = 231
  BB 123
   Insn 15: point = 233
  BB 120
   Insn 612: point = 235
   Insn 611: point = 235
  BB 119
   Insn 608: point = 236
   Insn 607: point = 237
   Insn 606: point = 237
  BB 118
   Insn 604: point = 239
   Insn 603: point = 239
  BB 117
   Insn 601: point = 240
   Insn 600: point = 240
   Insn 599: point = 240
   Insn 598: point = 241
  BB 116
   Insn 596: point = 243
   Insn 595: point = 244
   Insn 594: point = 245
   Insn 592: point = 246
   Insn 591: point = 247
   Insn 590: point = 248
   Insn 589: point = 248
  BB 115
   Insn 587: point = 250
   Insn 586: point = 250
   Insn 585: point = 250
  BB 114
   Insn 583: point = 252
   Insn 582: point = 253
   Insn 581: point = 254
   Insn 579: point = 254
  BB 6
   Insn 1295: point = 256
   Insn 1166: point = 256
  BB 113
   Insn 567: point = 258
   Insn 566: point = 259
   Insn 564: point = 260
   Insn 1416: point = 262
   Insn 1421: point = 263
  BB 199
   Insn 1405: point = 266
  BB 112
   Insn 562: point = 267
   Insn 561: point = 267
  BB 198
   Insn 966: point = 269
   Insn 965: point = 269
  BB 111
   Insn 1346: point = 270
   Insn 557: point = 270
  BB 110
   Insn 1172: point = 272
   Insn 554: point = 273
  BB 109
   Insn 553: point = 275
   Insn 552: point = 275
  BB 108
   Insn 550: point = 277
   Insn 549: point = 277
   Insn 1185: point = 277
   Insn 548: point = 278
  BB 107
   Insn 545: point = 280
   Insn 544: point = 280
  BB 106
   Insn 542: point = 282
   Insn 541: point = 282
  BB 105
   Insn 1344: point = 283
   Insn 1171: point = 283
  BB 104
   Insn 539: point = 286
   Insn 538: point = 286
   Insn 537: point = 286
  BB 103
   Insn 535: point = 288
   Insn 534: point = 289
   Insn 533: point = 290
   Insn 531: point = 291
   Insn 1415: point = 293
   Insn 1419: point = 294
   Insn 530: point = 296
   Insn 1420: point = 297
   Insn 528: point = 298
  BB 102
   Insn 527: point = 300
   Insn 526: point = 300
   Insn 525: point = 301
   Insn 524: point = 302
   Insn 523: point = 303
   Insn 522: point = 304
   Insn 521: point = 304
   Insn 520: point = 305
   Insn 519: point = 305
   Insn 518: point = 305
   Insn 517: point = 305
   Insn 516: point = 306
  BB 101
   Insn 514: point = 308
   Insn 513: point = 308
   Insn 512: point = 308
  BB 100
   Insn 509: point = 309
   Insn 508: point = 310
   Insn 506: point = 311
  BB 99
   Insn 504: point = 313
   Insn 503: point = 313
   Insn 502: point = 313
  BB 98
   Insn 497: point = 315
   Insn 496: point = 315
  BB 97
   Insn 494: point = 317
   Insn 493: point = 317
  BB 90
   Insn 1341: point = 318
   Insn 1169: point = 318
  BB 96
   Insn 489: point = 321
  BB 95
   Insn 1170: point = 323
   Insn 486: point = 324
  BB 94
   Insn 485: point = 326
   Insn 484: point = 326
  BB 93
   Insn 482: point = 328
   Insn 481: point = 328
   Insn 1184: point = 328
   Insn 480: point = 329
  BB 92
   Insn 477: point = 331
   Insn 476: point = 331
  BB 91
   Insn 474: point = 333
   Insn 473: point = 333
  BB 89
   Insn 471: point = 334
   Insn 470: point = 334
   Insn 469: point = 334
  BB 88
   Insn 467: point = 336
   Insn 466: point = 337
   Insn 465: point = 338
   Insn 463: point = 339
   Insn 462: point = 340
   Insn 461: point = 341
  BB 87
   Insn 459: point = 343
   Insn 458: point = 343
  BB 86
   Insn 454: point = 344
   Insn 453: point = 344
  BB 85
   Insn 451: point = 346
   Insn 450: point = 346
  BB 78
   Insn 1338: point = 347
   Insn 1167: point = 347
  BB 84
   Insn 446: point = 350
  BB 83
   Insn 1168: point = 352
   Insn 443: point = 353
  BB 82
   Insn 442: point = 355
   Insn 441: point = 355
  BB 81
   Insn 439: point = 357
   Insn 438: point = 357
   Insn 1173: point = 357
   Insn 437: point = 358
  BB 80
   Insn 434: point = 360
   Insn 433: point = 360
  BB 79
   Insn 431: point = 362
   Insn 430: point = 362
  BB 77
   Insn 428: point = 363
   Insn 427: point = 363
   Insn 426: point = 363
  BB 76
   Insn 424: point = 365
   Insn 423: point = 366
   Insn 422: point = 367
   Insn 420: point = 368
   Insn 419: point = 369
   Insn 418: point = 370
  BB 75
   Insn 412: point = 372
   Insn 411: point = 372
   Insn 410: point = 372
   Insn 409: point = 372
   Insn 408: point = 373
   Insn 407: point = 373
  BB 73
   Insn 1335: point = 374
   Insn 398: point = 374
   Insn 396: point = 375
  BB 72
   Insn 395: point = 377
   Insn 394: point = 377
  BB 197
   Insn 1402: point = 378
  BB 74
   Insn 404: point = 379
   Insn 403: point = 379
  BB 196
   Insn 953: point = 380
   Insn 952: point = 380
  BB 71
   Insn 1333: point = 381
   Insn 390: point = 381
   Insn 389: point = 381
  BB 70
   Insn 387: point = 383
   Insn 386: point = 383
  BB 69
   Insn 383: point = 384
  BB 67
   Insn 1331: point = 386
   Insn 380: point = 386
   Insn 378: point = 387
  BB 66
   Insn 377: point = 389
   Insn 376: point = 389
  BB 68
   Insn 14: point = 391
  BB 65
   Insn 374: point = 393
   Insn 373: point = 393
  BB 64
   Insn 370: point = 394
   Insn 369: point = 395
   Insn 368: point = 395
  BB 63
   Insn 366: point = 397
   Insn 365: point = 397
  BB 62
   Insn 363: point = 398
   Insn 362: point = 398
   Insn 361: point = 398
   Insn 360: point = 399
  BB 61
   Insn 358: point = 401
   Insn 357: point = 401
   Insn 356: point = 402
   Insn 355: point = 402
  BB 60
   Insn 353: point = 404
   Insn 352: point = 404
  BB 53
   Insn 307: point = 405
   Insn 306: point = 405
   Insn 304: point = 406
  BB 52
   Insn 303: point = 408
   Insn 302: point = 409
   Insn 300: point = 409
  BB 59
   Insn 1329: point = 411
  BB 58
   Insn 346: point = 412
   Insn 345: point = 413
   Insn 343: point = 413
  BB 57
   Insn 341: point = 415
   Insn 340: point = 415
   Insn 339: point = 415
   Insn 338: point = 415
   Insn 334: point = 415
   Insn 332: point = 416
  BB 56
   Insn 331: point = 418
   Insn 330: point = 419
   Insn 328: point = 419
  BB 55
   Insn 326: point = 421
   Insn 325: point = 421
   Insn 324: point = 421
   Insn 323: point = 421
   Insn 322: point = 422
   Insn 321: point = 422
   Insn 319: point = 422
   Insn 315: point = 423
   Insn 313: point = 424
  BB 54
   Insn 312: point = 426
   Insn 311: point = 427
   Insn 309: point = 427
  BB 51
   Insn 1414: point = 429
   Insn 337: point = 431
   Insn 1413: point = 432
   Insn 336: point = 434
   Insn 1412: point = 435
   Insn 320: point = 437
  BB 50
   Insn 297: point = 439
   Insn 296: point = 439
   Insn 295: point = 440
   Insn 294: point = 440
   Insn 293: point = 441
   Insn 292: point = 442
   Insn 291: point = 443
   Insn 290: point = 444
   Insn 1088: point = 445
   Insn 1087: point = 446
  BB 49
   Insn 287: point = 448
   Insn 286: point = 449
   Insn 284: point = 449
  BB 48
   Insn 282: point = 451
   Insn 281: point = 451
   Insn 280: point = 452
   Insn 279: point = 453
   Insn 1417: point = 453
   Insn 275: point = 454
  BB 47
   Insn 274: point = 456
   Insn 273: point = 456
  BB 46
   Insn 271: point = 457
   Insn 270: point = 457
  BB 45
   Insn 267: point = 458
   Insn 266: point = 458
  BB 44
   Insn 264: point = 460
   Insn 263: point = 460
  BB 18
   Insn 1297: point = 461
   Insn 13: point = 461
  BB 43
   Insn 260: point = 464
  BB 41
   Insn 1326: point = 466
   Insn 257: point = 466
   Insn 255: point = 467
  BB 40
   Insn 254: point = 469
   Insn 253: point = 469
  BB 42
   Insn 12: point = 471
  BB 39
   Insn 251: point = 473
   Insn 250: point = 473
  BB 38
   Insn 247: point = 474
   Insn 246: point = 475
   Insn 245: point = 475
  BB 37
   Insn 243: point = 477
   Insn 242: point = 477
  BB 17
   Insn 127: point = 478
   Insn 126: point = 478
   Insn 125: point = 478
   Insn 124: point = 479
  BB 36
   Insn 1324: point = 481
  BB 35
   Insn 237: point = 482
   Insn 236: point = 483
   Insn 235: point = 484
   Insn 234: point = 484
   Insn 233: point = 484
   Insn 231: point = 484
   Insn 230: point = 485
  BB 32
   Insn 1318: point = 487
  BB 31
   Insn 213: point = 488
   Insn 212: point = 489
   Insn 211: point = 490
   Insn 210: point = 491
   Insn 209: point = 491
   Insn 207: point = 491
   Insn 206: point = 492
  BB 30
   Insn 1315: point = 494
  BB 29
   Insn 201: point = 495
   Insn 200: point = 496
   Insn 199: point = 497
   Insn 198: point = 498
   Insn 197: point = 498
   Insn 195: point = 498
   Insn 194: point = 499
  BB 28
   Insn 1312: point = 501
  BB 27
   Insn 189: point = 502
   Insn 188: point = 503
   Insn 187: point = 504
   Insn 186: point = 505
   Insn 185: point = 505
   Insn 183: point = 505
   Insn 182: point = 506
  BB 26
   Insn 1309: point = 508
  BB 25
   Insn 177: point = 509
   Insn 176: point = 510
   Insn 175: point = 511
   Insn 174: point = 512
   Insn 173: point = 512
   Insn 171: point = 512
   Insn 170: point = 513
  BB 24
   Insn 1306: point = 515
  BB 23
   Insn 165: point = 516
   Insn 164: point = 517
   Insn 163: point = 518
   Insn 162: point = 519
   Insn 161: point = 519
   Insn 159: point = 519
   Insn 158: point = 520
  BB 22
   Insn 1303: point = 522
  BB 21
   Insn 153: point = 523
   Insn 152: point = 524
   Insn 151: point = 525
   Insn 150: point = 526
   Insn 149: point = 526
   Insn 147: point = 526
   Insn 146: point = 527
  BB 20
   Insn 1300: point = 529
  BB 19
   Insn 140: point = 530
   Insn 139: point = 531
   Insn 138: point = 532
   Insn 137: point = 533
   Insn 136: point = 533
   Insn 134: point = 533
   Insn 133: point = 534
  BB 34
   Insn 1321: point = 536
  BB 33
   Insn 225: point = 537
   Insn 224: point = 538
   Insn 223: point = 539
   Insn 222: point = 540
   Insn 221: point = 540
   Insn 219: point = 540
   Insn 218: point = 541
  BB 16
   Insn 122: point = 543
   Insn 121: point = 544
   Insn 120: point = 545
   Insn 119: point = 546
   Insn 118: point = 546
   Insn 116: point = 546
   Insn 114: point = 547
   Insn 113: point = 548
   Insn 112: point = 549
  BB 15
   Insn 110: point = 552
   Insn 109: point = 552
   Insn 106: point = 553
   Insn 105: point = 555
   Insn 104: point = 556
  BB 14
   Insn 102: point = 559
   Insn 101: point = 559
   Insn 98: point = 560
   Insn 97: point = 562
   Insn 96: point = 563
  BB 13
   Insn 94: point = 566
   Insn 93: point = 566
   Insn 90: point = 567
   Insn 89: point = 569
   Insn 88: point = 570
  BB 12
   Insn 86: point = 573
   Insn 85: point = 573
   Insn 82: point = 574
   Insn 81: point = 576
   Insn 80: point = 577
  BB 11
   Insn 78: point = 580
   Insn 77: point = 580
   Insn 74: point = 581
   Insn 73: point = 583
   Insn 72: point = 584
  BB 10
   Insn 70: point = 587
   Insn 69: point = 587
   Insn 66: point = 588
   Insn 65: point = 590
   Insn 64: point = 591
  BB 9
   Insn 62: point = 594
   Insn 61: point = 594
   Insn 58: point = 595
   Insn 57: point = 597
   Insn 56: point = 598
  BB 8
   Insn 54: point = 601
   Insn 53: point = 601
   Insn 50: point = 602
   Insn 49: point = 604
   Insn 48: point = 605
  BB 7
   Insn 46: point = 607
   Insn 45: point = 607
   Insn 42: point = 607
   Insn 41: point = 609
  BB 5
   Insn 39: point = 611
   Insn 38: point = 611
   Insn 36: point = 612
  BB 4
   Insn 35: point = 614
   Insn 34: point = 615
   Insn 32: point = 615
  BB 3
   Insn 30: point = 617
   Insn 29: point = 617
   Insn 28: point = 617
   Insn 27: point = 618
   Insn 26: point = 619
   Insn 25: point = 620
  BB 2
   Insn 23: point = 622
   Insn 22: point = 623
   Insn 20: point = 623
   Insn 19: point = 624
   Insn 18: point = 624
   Insn 11: point = 624
   Insn 8: point = 626
   Insn 7: point = 627
   Insn 6: point = 628
   Insn 5: point = 629
   Insn 4: point = 630
   Insn 3: point = 631
   Insn 2: point = 632
 r100: [372..453] [55..58]
 r141: [264..297]
 r256: [452..629]
 r257: [300..628]
 r451: [405..435]
 r452: [405..432]
 r453: [405..429]
Compressing live ranges: from 633 to 8 - 1%
Ranges after the compression:
 r100: [4..7] [0..1]
 r141: [2..3]
 r256: [6..7]
 r257: [4..7]
 r451: [4..5]
 r452: [4..5]
 r453: [4..5]

******** Rematerialization #1: ********

df_worklist_dataflow_doublequeue:n_basic_blocks 205 n_edges 315 count 215 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 205 n_edges 315 count 205 (    1)

Cands:
0 (nop=0, remat_regno=100, reload_regno=-1):
(insn 1417 275 279 48 (set (reg/f:DI 100 [ D.51468 ])
                    (reg/f:DI 461 [orig:100 D.51468 ] [100])) db/builder.cc:35 89 {*movdi_internal}
                 (nil))
1 (nop=0, remat_regno=451, reload_regno=456):
(insn 320 298 1412 51 (parallel [
                        (set (reg/f:DI 456 [orig:451 D.51470 ] [451])
                            (plus:DI (reg/v/f:DI 259 [ meta ])
                                (const_int 56 [0x38])))
                        (clobber (reg:CC 17 flags))
                    ]) ./db/dbformat.h:153 218 {*adddi_1}
                 (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil)))
2 (nop=0, remat_regno=452, reload_regno=457):
(insn 336 1412 1413 51 (parallel [
                        (set (reg/f:DI 457 [452])
                            (plus:DI (reg/f:DI 20 frame)
                                (const_int 112 [0x70])))
                        (clobber (reg:CC 17 flags))
                    ]) db/builder.cc:40 218 {*adddi_1}
                 (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                            (const_int -64 [0xffffffffffffffc0]))
                        (nil))))
3 (nop=0, remat_regno=141, reload_regno=-1):
(insn 1420 528 530 103 (set (reg/v/f:DI 141 [ it ])
                    (reg/v/f:DI 464 [orig:141 it ] [141])) db/builder.cc:69 89 {*movdi_internal}
                 (nil))

BB 2:
  register live in: 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 254 255 256 257 258 259
  changed regs: 5 [di] 253 254 255 256 257 258 259 261 454
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 261
  livein cands in BB 2:

        2

BB 3:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 254 255 256 257 258 259
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  changed regs: 1 [dx] 4 [si] 5 [di] 264 450
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 254 264
  livein cands in BB 3:

        1    2

BB 4:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  changed regs: 0 [ax] 5 [di] 265
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 265
  livein cands in BB 4:

        1    2

BB 5:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  changed regs: 94
  dead regs: 0 [ax] 17 [flags] 94
  livein cands in BB 5:

        1    2

BB 6:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
  changed regs: 447
  dead regs: 20 [frame]
  livein cands in BB 6:

        1    2

BB 7:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450
  changed regs: 96 267
  dead regs: 17 [flags] 267
  livein cands in BB 7:

        1    2

BB 8:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450
  changed regs: 171 173 270
  dead regs: 17 [flags] 96 270
  livein cands in BB 8:

        1    2

BB 9:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450
  changed regs: 175 177 273
  dead regs: 17 [flags] 171 173 273
  livein cands in BB 9:

        1    2

BB 10:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450
  changed regs: 179 181 276
  dead regs: 17 [flags] 175 177 276
  livein cands in BB 10:

        1    2

BB 11:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450
  changed regs: 183 185 279
  dead regs: 17 [flags] 179 181 279
  livein cands in BB 11:

        1    2

BB 12:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450
  changed regs: 187 189 282
  dead regs: 17 [flags] 183 185 282
  livein cands in BB 12:

        1    2

BB 13:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450
  changed regs: 191 193 285
  dead regs: 17 [flags] 187 189 285
  livein cands in BB 13:

        1    2

BB 14:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450
  changed regs: 195 197 288
  dead regs: 17 [flags] 191 193 288
  livein cands in BB 14:

        1    2

BB 15:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 201 253 255 256 257 258 259 450
  changed regs: 199 201 291
  dead regs: 17 [flags] 195 197 291
  livein cands in BB 15:

        1    2

BB 16:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 203 294 297 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 199 203 294 297
  livein cands in BB 16:

        1    2

BB 17:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450
  changed regs: 87 206
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 17:

        1    2

BB 18:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
  changed regs: 250
  dead regs: 206
  livein cands in BB 18:

        1    2

BB 19:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 201 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 299 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 199 201 299
  livein cands in BB 19:

        1    2

BB 20:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 20:

        1    2

BB 21:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 302 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 195 197 302
  livein cands in BB 21:

        1    2

BB 22:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 22:

        1    2

BB 23:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 305 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 191 193 305
  livein cands in BB 23:

        1    2

BB 24:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 24:

        1    2

BB 25:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 308 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 187 189 308
  livein cands in BB 25:

        1    2

BB 26:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 26:

        1    2

BB 27:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 311 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 183 185 311
  livein cands in BB 27:

        1    2

BB 28:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 28:

        1    2

BB 29:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 314 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 179 181 314
  livein cands in BB 29:

        1    2

BB 30:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 30:

        1    2

BB 31:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 317 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 175 177 317
  livein cands in BB 31:

        1    2

BB 32:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 32:

        1    2

BB 33:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 320 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 171 173 320
  livein cands in BB 33:

        1    2

BB 34:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 34:

        1    2

BB 35:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 1 [dx] 2 [cx] 4 [si] 5 [di] 323 447
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 323
  livein cands in BB 35:

        1    2

BB 36:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 36:

        1    2

BB 37:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 37:

        1    2

BB 38:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
  changed regs: 5 [di] 87
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 206
  livein cands in BB 38:

        1    2

BB 39:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 39:

        1    2

BB 40:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
  livein cands in BB 40:

        1    2

BB 41:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450
  changed regs: 87 250
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 41:

        1    2

BB 42:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450
  changed regs: 250
  dead regs:
  livein cands in BB 42:

        1    2

BB 43:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
  changed regs:
  dead regs: 87
  livein cands in BB 43:

        1    2

BB 44:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 44:

        1    2

BB 45:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 250
  livein cands in BB 45:

        1    2

BB 46:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 46:

        1    2

BB 47:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
  livein cands in BB 47:

        1    2

BB 48:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 1 [dx] 4 [si] 5 [di] 100 461
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 256 461
  livein cands in BB 48:

        1    2

BB 49:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 0 [ax] 5 [di] 328
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 328
  livein cands in BB 49:

        1    2

BB 50:
  register live in: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 330 331 444 445
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 330 331 444 445
  livein cands in BB 50:

        1    2

BB 51:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 451 452 453 456 457 458
  dead regs: 20 [frame] 456 457 458
  cands generated in BB 51:

        1
  livein cands in BB 51:

        1    2
  pavout cands in BB 51:

        1
  avout cands in BB 51:

        1

BB 52:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 0 [ax] 5 [di] 332
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 332
  livein cands in BB 52:

        1    2
  pavin cands in BB 52:

        1
  pavout cands in BB 52:

        1

BB 53:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 107
  dead regs: 0 [ax] 17 [flags] 107
  livein cands in BB 53:

        1    2
  pavin cands in BB 53:

        1
  pavout cands in BB 53:

        1

BB 54:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 0 [ax] 5 [di] 334
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 334
  livein cands in BB 54:

        1    2
  pavin cands in BB 54:

        1
  pavout cands in BB 54:

        1

BB 55:
  register live in: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 336 340
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 336 340
  livein cands in BB 55:

        1    2
  pavin cands in BB 55:

        1
  pavout cands in BB 55:

        1

BB 56:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 0 [ax] 5 [di] 342
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 342
  livein cands in BB 56:

        1    2
  pavin cands in BB 56:

        1
  pavout cands in BB 56:

        1

BB 57:
  register live in: 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 1 [dx] 4 [si] 5 [di] 344
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 344
  livein cands in BB 57:

        1    2
  pavin cands in BB 57:

        1
  pavout cands in BB 57:

        1

BB 58:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs: 5 [di] 348
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 348
  livein cands in BB 58:

        1    2
  pavin cands in BB 58:

        1
  pavout cands in BB 58:

        1

BB 59:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
  changed regs:
  dead regs:
  livein cands in BB 59:

        1    2
  pavin cands in BB 59:

        1
  pavout cands in BB 59:

        1

BB 60:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 60:

        1    2
  pavin cands in BB 60:

        1
  pavout cands in BB 60:

        1

BB 61:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 4 [si] 5 [di] 350
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 350
  livein cands in BB 61:

        1    2
  pavin cands in BB 61:

        1
  pavout cands in BB 61:

        1

BB 62:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450
  changed regs: 97 167
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 62:

        1    2
  pavin cands in BB 62:

        1
  pavout cands in BB 62:

        1

BB 63:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 63:

        1    2
  pavin cands in BB 63:

        1
  pavout cands in BB 63:

        1

BB 64:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  changed regs: 5 [di] 167
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97
  livein cands in BB 64:

        1    2
  pavin cands in BB 64:

        1
  pavout cands in BB 64:

        1

BB 65:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 65:

        1    2
  pavin cands in BB 65:

        1
  pavout cands in BB 65:

        1

BB 66:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 167
  livein cands in BB 66:

        1    2
  pavin cands in BB 66:

        1
  pavout cands in BB 66:

        1

BB 67:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450
  changed regs: 167 207
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 67:

        1    2
  pavin cands in BB 67:

        1
  pavout cands in BB 67:

        1

BB 68:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450
  changed regs: 207
  dead regs:
  livein cands in BB 68:

        1    2
  pavin cands in BB 68:

        1
  pavout cands in BB 68:

        1

BB 69:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  changed regs:
  dead regs: 207
  livein cands in BB 69:

        1    2
  pavin cands in BB 69:

        1
  pavout cands in BB 69:

        1

BB 70:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 70:

        1    2
  pavin cands in BB 70:

        1
  pavout cands in BB 70:

        1

BB 71:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 167
  livein cands in BB 71:

        1    2
  pavin cands in BB 71:

        1
  pavout cands in BB 71:

        1

BB 72:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
  livein cands in BB 72:

        1    2
  pavin cands in BB 72:

        1
  pavout cands in BB 72:

        1

BB 73:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 119
  dead regs: 0 [ax] 119
  livein cands in BB 73:

        1    2
  pavin cands in BB 73:

        1
  pavout cands in BB 73:

        1

BB 74:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
  livein cands in BB 74:

        1    2
  pavin cands in BB 74:

        1
  pavout cands in BB 74:

        1

BB 75:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100
  livein cands in BB 75:

        1    2
  pavin cands in BB 75:

        1
  pavout cands in BB 75:

        1

BB 76:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 4 [si] 5 [di] 122 351 352
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 351 352
  livein cands in BB 76:

        1    2
  pavin cands in BB 76:

        1
  pavout cands in BB 76:

        1

BB 77:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
  changed regs: 116
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 77:

        1    2
  pavin cands in BB 77:

        1
  pavout cands in BB 77:

        1

BB 78:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  changed regs: 446
  dead regs: 116
  livein cands in BB 78:

        1    2
  pavin cands in BB 78:

        1
  pavout cands in BB 78:

        1

BB 79:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 79:

        1    2
  pavin cands in BB 79:

        1
  pavout cands in BB 79:

        1

BB 80:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 116
  livein cands in BB 80:

        1    2
  pavin cands in BB 80:

        1
  pavout cands in BB 80:

        1

BB 81:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450
  changed regs: 209 446
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 81:

        1    2
  pavin cands in BB 81:

        1
  pavout cands in BB 81:

        1

BB 82:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 446
  livein cands in BB 82:

        1    2
  pavin cands in BB 82:

        1
  pavout cands in BB 82:

        1

BB 83:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450
  changed regs: 209 446
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 83:

        1    2
  pavin cands in BB 83:

        1
  pavout cands in BB 83:

        1

BB 84:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  changed regs:
  dead regs: 209
  livein cands in BB 84:

        1    2
  pavin cands in BB 84:

        1
  pavout cands in BB 84:

        1

BB 85:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 85:

        1    2
  pavin cands in BB 85:

        1
  pavout cands in BB 85:

        1

BB 86:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 446
  livein cands in BB 86:

        1    2
  pavin cands in BB 86:

        1
  pavout cands in BB 86:

        1

BB 87:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 87:

        1    2
  pavin cands in BB 87:

        1
  pavout cands in BB 87:

        1

BB 88:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 4 [si] 5 [di] 129 354 355
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 354 355
  livein cands in BB 88:

        1    2
  pavin cands in BB 88:

        1
  pavout cands in BB 88:

        1

BB 89:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
  changed regs: 125
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 89:

        1    2
  pavin cands in BB 89:

        1
  pavout cands in BB 89:

        1

BB 90:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  changed regs: 448
  dead regs: 125
  livein cands in BB 90:

        1    2
  pavin cands in BB 90:

        1
  pavout cands in BB 90:

        1

BB 91:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 91:

        1    2
  pavin cands in BB 91:

        1
  pavout cands in BB 91:

        1

BB 92:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 125
  livein cands in BB 92:

        1    2
  pavin cands in BB 92:

        1
  pavout cands in BB 92:

        1

BB 93:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450
  changed regs: 211 448
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 93:

        1    2
  pavin cands in BB 93:

        1
  pavout cands in BB 93:

        1

BB 94:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 448
  livein cands in BB 94:

        1    2
  pavin cands in BB 94:

        1
  pavout cands in BB 94:

        1

BB 95:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450
  changed regs: 211 448
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 95:

        1    2
  pavin cands in BB 95:

        1
  pavout cands in BB 95:

        1

BB 96:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  changed regs:
  dead regs: 211
  livein cands in BB 96:

        1    2
  pavin cands in BB 96:

        1
  pavout cands in BB 96:

        1

BB 97:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 97:

        1    2
  pavin cands in BB 97:

        1
  pavout cands in BB 97:

        1

BB 98:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 448
  livein cands in BB 98:

        1    2
  pavin cands in BB 98:

        1
  pavout cands in BB 98:

        1

BB 99:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 253 255 257 258 259 447 450
  changed regs: 135
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 99:

        1    2
  pavin cands in BB 99:

        1
  pavout cands in BB 99:

        1

BB 100:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs: 5 [di] 357
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 135 357
  livein cands in BB 100:

        1    2
  pavin cands in BB 100:

        1
  pavout cands in BB 100:

        1

BB 101:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 101:

        1    2
  pavin cands in BB 101:

        1
  pavout cands in BB 101:

        1

BB 102:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
  changed regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 139 140 359
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 140 257 359
  livein cands in BB 102:

        1    2
  pavin cands in BB 102:

        1
  pavout cands in BB 102:

        1

BB 103:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  changed regs: 4 [si] 5 [di] 141 360 361 459 463 464
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 360 361 459 463 464
  livein cands in BB 103:

        1    2
  pavin cands in BB 103:

        1
  pavout cands in BB 103:

        1

BB 104:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
  changed regs: 132
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 104:

        1    2
  pavin cands in BB 104:

        1
  pavout cands in BB 104:

        1

BB 105:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  changed regs: 449
  dead regs: 132
  livein cands in BB 105:

        1    2
  pavin cands in BB 105:

        1
  pavout cands in BB 105:

        1

BB 106:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 106:

        1    2
  pavin cands in BB 106:

        1
  pavout cands in BB 106:

        1

BB 107:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 132
  livein cands in BB 107:

        1    2
  pavin cands in BB 107:

        1
  pavout cands in BB 107:

        1

BB 108:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450
  changed regs: 213 449
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 108:

        1    2
  pavin cands in BB 108:

        1
  pavout cands in BB 108:

        1

BB 109:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 449
  livein cands in BB 109:

        1    2
  pavin cands in BB 109:

        1
  pavout cands in BB 109:

        1

BB 110:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450
  changed regs: 213 449
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 110:

        1    2
  pavin cands in BB 110:

        1
  pavout cands in BB 110:

        1

BB 111:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  changed regs:
  dead regs: 213
  livein cands in BB 111:

        1    2
  pavin cands in BB 111:

        1
  pavout cands in BB 111:

        1

BB 112:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 449
  livein cands in BB 112:

        1    2
  pavin cands in BB 112:

        1
  pavout cands in BB 112:

        1

BB 113:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
  changed regs: 5 [di] 363 460 465
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 363 460 465
  livein cands in BB 113:

        1    2
  pavin cands in BB 113:

        1
  pavout cands in BB 113:

        1

BB 114:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450
  changed regs: 4 [si] 5 [di] 366
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 366 447
  livein cands in BB 114:

        1    2
  pavin cands in BB 114:

        1
  pavout cands in BB 114:

        1

BB 115:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 253 255 258 259 450
  changed regs: 151
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 115:

        1    2
  pavin cands in BB 115:

        1
  pavout cands in BB 115:

        1

BB 116:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 253 255 258 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  changed regs: 4 [si] 5 [di] 368 369
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 151 258 368 369
  livein cands in BB 116:

        1    2
  pavin cands in BB 116:

        1
  pavout cands in BB 116:

        1

BB 117:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450
  changed regs: 144 168
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 117:

        1    2
  pavin cands in BB 117:

        1
  pavout cands in BB 117:

        1

BB 118:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 118:

        1    2
  pavin cands in BB 118:

        1
  pavout cands in BB 118:

        1

BB 119:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  changed regs: 5 [di] 168
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 144
  livein cands in BB 119:

        1    2
  pavin cands in BB 119:

        1
  pavout cands in BB 119:

        1

BB 120:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 120:

        1    2
  pavin cands in BB 120:

        1
  pavout cands in BB 120:

        1

BB 121:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  changed regs: 0 [ax] 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168
  livein cands in BB 121:

        1    2
  pavin cands in BB 121:

        1
  pavout cands in BB 121:

        1

BB 122:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450
  changed regs: 168 214
  dead regs: 0 [ax] 20 [frame]
  livein cands in BB 122:

        1    2
  pavin cands in BB 122:

        1
  pavout cands in BB 122:

        1

BB 123:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450
  changed regs: 214
  dead regs:
  livein cands in BB 123:

        1    2
  pavin cands in BB 123:

        1
  pavout cands in BB 123:

        1

BB 124:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  changed regs:
  dead regs: 214
  livein cands in BB 124:

        1    2
  pavin cands in BB 124:

        1
  pavout cands in BB 124:

        1

BB 125:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 125:

        1    2
  pavin cands in BB 125:

        1
  pavout cands in BB 125:

        1

BB 126:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168
  livein cands in BB 126:

        1    2
  pavin cands in BB 126:

        1
  pavout cands in BB 126:

        1

BB 127:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 127:

        1    2
  pavin cands in BB 127:

        1
  pavout cands in BB 127:

        1

BB 128:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
  changed regs:
  dead regs: 17 [flags] 259
  livein cands in BB 128:

        1    2
  pavin cands in BB 128:

        1

BB 129:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
  changed regs:
  dead regs:
  livein cands in BB 129:

        2

BB 130:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450
  changed regs: 154 216 371
  dead regs: 17 [flags] 159 255 371
  livein cands in BB 130:

        2

BB 131:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450
  changed regs: 218 220 374
  dead regs: 17 [flags] 154 216 374
  livein cands in BB 131:

        2

BB 132:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450
  changed regs: 222 224 377
  dead regs: 17 [flags] 218 220 377
  livein cands in BB 132:

        2

BB 133:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450
  changed regs: 226 228 380
  dead regs: 17 [flags] 222 224 380
  livein cands in BB 133:

        2

BB 134:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450
  changed regs: 230 232 383
  dead regs: 17 [flags] 226 228 383
  livein cands in BB 134:

        2

BB 135:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450
  changed regs: 234 236 386
  dead regs: 17 [flags] 230 232 386
  livein cands in BB 135:

        2

BB 136:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450
  changed regs: 238 240 389
  dead regs: 17 [flags] 234 236 389
  livein cands in BB 136:

        2

BB 137:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 244 253 450
  changed regs: 242 244 392
  dead regs: 17 [flags] 238 240 392
  livein cands in BB 137:

        2

BB 138:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 246 395 397
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 242 246 395 397
  livein cands in BB 138:

        2

BB 139:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166 253 450
  changed regs: 166
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 139:

        2

BB 140:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 140:

        2

BB 141:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 244 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 399
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 242 244 399
  livein cands in BB 141:

        2

BB 142:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 142:

        2

BB 143:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 401
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 238 240 401
  livein cands in BB 143:

        2

BB 144:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 144:

        2

BB 145:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 403
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 234 236 403
  livein cands in BB 145:

        2

BB 146:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 146:

        2

BB 147:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 405
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 230 232 405
  livein cands in BB 147:

        2

BB 148:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 148:

        2

BB 149:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 407
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 226 228 407
  livein cands in BB 149:

        2

BB 150:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 150:

        2

BB 151:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 409
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 222 224 409
  livein cands in BB 151:

        2

BB 152:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 152:

        2

BB 153:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 411
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 218 220 411
  livein cands in BB 153:

        2

BB 154:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 154:

        2

BB 155:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 413
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 154 216 413
  livein cands in BB 155:

        2

BB 156:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 156:

        2

BB 157:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 1 [dx] 4 [si] 5 [di] 415
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 159 255 415
  livein cands in BB 157:

        2

BB 158:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs:
  dead regs:
  livein cands in BB 158:

        2

BB 159:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 166
  livein cands in BB 159:

        2

BB 160:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160 253
  changed regs: 160 418
  dead regs: 17 [flags] 20 [frame] 418 450
  livein cands in BB 160:

        2

BB 161:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160 253
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 160
  livein cands in BB 161:

        2

BB 162:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
  changed regs: 421
  dead regs: 0 [ax]
  livein cands in BB 162:

        2

BB 163:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161 253 421 450
  changed regs: 161
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 163:

        2

BB 164:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161 253 421 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 161
  livein cands in BB 164:

        2

BB 165:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 421
  livein cands in BB 165:

        2

BB 166:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 424 450
  changed regs: 424
  dead regs: 0 [ax]
  livein cands in BB 166:

        2

BB 167:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 424 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 5 [di] 420
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100 424
  livein cands in BB 167:

        2

BB 168:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
  changed regs: 426
  dead regs: 0 [ax]
  livein cands in BB 168:

        2
  pavin cands in BB 168:

        1

BB 169:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 253 426 450
  changed regs: 148
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 169:

        2

BB 170:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 253 426 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 148
  livein cands in BB 170:

        2

BB 171:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 426
  livein cands in BB 171:

        2

BB 172:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
  changed regs: 428
  dead regs: 0 [ax]
  livein cands in BB 172:

        2
  pavin cands in BB 172:

        1

BB 173:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 253 428 450
  changed regs: 120
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 173:

        2

BB 174:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 253 428 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 120
  livein cands in BB 174:

        2

BB 175:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 428
  livein cands in BB 175:

        2

BB 176:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
  changed regs: 430
  dead regs: 0 [ax]
  livein cands in BB 176:

        2
  pavin cands in BB 176:

        1

BB 177:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 127 253 430 450
  changed regs: 127
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 177:

        2

BB 178:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 127 253 430 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 127
  livein cands in BB 178:

        2

BB 179:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 430
  livein cands in BB 179:

        2

BB 180:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
  changed regs: 432
  dead regs: 0 [ax]
  livein cands in BB 180:

        2
  pavin cands in BB 180:

        1

BB 181:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 253 432 450
  changed regs: 134
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 181:

        2

BB 182:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 253 432 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 134
  livein cands in BB 182:

        2

BB 183:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 432
  livein cands in BB 183:

        2

BB 184:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
  changed regs: 434
  dead regs: 0 [ax]
  livein cands in BB 184:

        2
  pavin cands in BB 184:

        1

BB 185:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 253 434 450
  changed regs: 147
  dead regs: 17 [flags] 20 [frame]
  livein cands in BB 185:

        2

BB 186:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 253 434 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 147
  livein cands in BB 186:

        2

BB 187:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 434
  livein cands in BB 187:

        2

BB 188:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  changed regs: 420
  dead regs: 0 [ax]
  livein cands in BB 188:

        2
  pavin cands in BB 188:

        1

BB 189:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 253 420
  changed regs: 156 437
  dead regs: 17 [flags] 20 [frame] 437 450
  livein cands in BB 189:

        2

BB 190:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 253 420
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 156
  livein cands in BB 190:

        2

BB 191:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438
  changed regs: 438
  dead regs: 420
  livein cands in BB 191:

        2

BB 192:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438
  changed regs: 438
  dead regs: 0 [ax]
  livein cands in BB 192:

        2

BB 193:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162 438
  changed regs: 162
  dead regs: 17 [flags] 253
  livein cands in BB 193:

        2

BB 194:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162 438
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 162
  livein cands in BB 194:

        2

BB 195:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
  register live out: 7 [sp] 16 [argp] 20 [frame]
  changed regs: 5 [di]
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 438
  livein cands in BB 195:

        2

BB 196:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 196:

        1    2
  pavin cands in BB 196:

        1
  pavout cands in BB 196:

        1

BB 197:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 197:

        1    2
  pavin cands in BB 197:

        1
  pavout cands in BB 197:

        1

BB 198:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
  changed regs:
  dead regs: 17 [flags]
  livein cands in BB 198:

        1    2
  pavin cands in BB 198:

        1
  pavout cands in BB 198:

        1

BB 199:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
  changed regs:
  dead regs:
  livein cands in BB 199:

        1    2
  pavin cands in BB 199:

        1
  pavout cands in BB 199:

        1

BB 200:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
  changed regs: 159 440
  dead regs: 17 [flags] 440
  livein cands in BB 200:

        2
  pavin cands in BB 200:

        1

BB 201:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
  register live out: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
  changed regs:
  dead regs:
  livein cands in BB 201:

        2

BB 202:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  changed regs: 0 [ax] 17 [flags] 455
  dead regs: 17 [flags] 20 [frame] 253
  livein cands in BB 202:

        2

BB 203:
  register live in: 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  register live out: 7 [sp] 16 [argp] 20 [frame]
  changed regs:
  dead regs: 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 16 [argp] 17 [flags] 18 [fpsr] 19 [fpcr] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
  livein cands in BB 203:

        2

BB 204:
  register live in: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  register live out: 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
  changed regs:
  dead regs:
  livein cands in BB 204:

        2
subreg regs:
  Slot 0 regnos (width = 8):	 100	 141
  Slot 1 regnos (width = 8):	 451	 256
  Slot 2 regnos (width = 8):	 452
  Slot 3 regnos (width = 8):	 453
  Slot 4 regnos (width = 8):	 257
Changing spilled pseudos to memory in insn #5
Changing spilled pseudos to memory in insn #6
Changing spilled pseudos to memory in insn #1417
Changing spilled pseudos to memory in insn #280
Changing spilled pseudos to memory in insn #1412
Changing spilled pseudos to memory in insn #1413
Changing spilled pseudos to memory in insn #1414
Changing spilled pseudos to memory in insn #325
Changing spilled pseudos to memory in insn #338
Changing spilled pseudos to memory in insn #339
Changing spilled pseudos to memory in insn #340
Changing spilled pseudos to memory in insn #356
Changing spilled pseudos to memory in insn #394
Changing spilled pseudos to memory in insn #403
Changing spilled pseudos to memory in insn #407
Changing spilled pseudos to memory in insn #409
Changing spilled pseudos to memory in insn #526
Changing spilled pseudos to memory in insn #1420
Changing spilled pseudos to memory in insn #1421
Changing spilled pseudos to memory in insn #847
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=288, prev_offset=240)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=224, prev_offset=176)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)

********** Local #3: **********

	   Spilling non-eliminable hard regs: 7
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1172:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1170:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1168:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) =r  (1) Ts {*leadi}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 993:  (1) m  (2) i  (3) =r {stack_tls_protect_test_di}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 923:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 911:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 897:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 883:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 869:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 855:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 833:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 803:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 794:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 784:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 774:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 764:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 754:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 744:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 734:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 723:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 715:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 706:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 618:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 608:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 599:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 591:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 585:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 548:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 538:  (0) r  (1) rm {*cmpdi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 530:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 521:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 520:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 519:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5,overall=15,losers=1 -- refuse
          alt=6,overall=0,losers=0,rld_nregs=0
	 Choosing alt 6 in insn 518:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 512:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 502:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) r  (1) rm {*cmpdi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 462:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 461:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 437:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rm {*cmpdi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 419:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 418:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 380:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 361:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 355:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 337:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 336:  (0) r  (1) r  (2) le {*adddi_1}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) o  (1) re {*movti_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 322:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 321:  (0) r  (1) rem {*movdi_internal}
            Staticly defined alt reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=1209,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) o  (1) re {*movti_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 279:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 247:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 219:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 207:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 183:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 171:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 159:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 134:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) Ts {*leadi}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) Ts {*leadi}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 25:  (0) r  (1) r  (2) le {*adddi_1}
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =m  (1) i  (2) =&r {stack_tls_protect_set_di}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 8:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 847:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1421:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1420:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 526:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 409:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 407:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 403:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 394:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 356:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 340:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 339:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 338:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 325:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1414:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1413:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1412:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 280:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1417:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=288, prev_offset=288)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=224, prev_offset=224)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
changing reg in insn 255
changing reg in insn 247
changing reg in insn 125
changing reg in insn 260
changing reg in insn 253
changing reg in insn 250
changing reg in insn 126
changing reg in insn 36
changing reg in insn 38
changing reg in insn 42
changing reg in insn 45
changing reg in insn 53
changing reg in insn 237
changing reg in insn 360
changing reg in insn 368
changing reg in insn 365
changing reg in insn 362
changing reg in insn 304
changing reg in insn 306
changing reg in insn 426
changing reg in insn 1167
changing reg in insn 433
changing reg in insn 430
changing reg in insn 427
changing reg in insn 396
changing reg in insn 398
changing reg in insn 869
changing reg in insn 873
changing reg in insn 870
changing reg in insn 418
changing reg in insn 422
changing reg in insn 420
changing reg in insn 469
changing reg in insn 1169
changing reg in insn 476
changing reg in insn 473
changing reg in insn 470
changing reg in insn 883
changing reg in insn 887
changing reg in insn 884
changing reg in insn 461
changing reg in insn 465
changing reg in insn 463
changing reg in insn 537
changing reg in insn 1171
changing reg in insn 544
changing reg in insn 541
changing reg in insn 538
changing reg in insn 897
changing reg in insn 901
changing reg in insn 898
changing reg in insn 502
changing reg in insn 508
changing reg in insn 506
changing reg in insn 503
changing reg in insn 516
changing reg in insn 523
changing reg in insn 517
changing reg in insn 524
changing reg in insn 598
changing reg in insn 606
changing reg in insn 603
changing reg in insn 600
changing reg in insn 911
changing reg in insn 915
changing reg in insn 912
changing reg in insn 855
changing reg in insn 859
changing reg in insn 856
changing reg in insn 585
changing reg in insn 589
changing reg in insn 586
changing reg in insn 641
changing reg in insn 797
changing reg in insn 649
changing reg in insn 642
changing reg in insn 642
changing reg in insn 923
changing reg in insn 929
changing reg in insn 926
changing reg in insn 979
changing reg in insn 983
changing reg in insn 646
changing reg in insn 808
changing reg in insn 819
changing reg in insn 825
changing reg in insn 822
changing reg in insn 833
changing reg in insn 837
changing reg in insn 834
changing reg in insn 937
changing reg in insn 941
changing reg in insn 938
changing reg in insn 715
changing reg in insn 813
changing reg in insn 716
changing reg in insn 380
changing reg in insn 370
changing reg in insn 361
changing reg in insn 389
changing reg in insn 386
changing reg in insn 376
changing reg in insn 373
changing reg in insn 362
changing reg in insn 618
changing reg in insn 608
changing reg in insn 599
changing reg in insn 627
changing reg in insn 624
changing reg in insn 614
changing reg in insn 611
changing reg in insn 600
changing reg in insn 48
changing reg in insn 223
changing reg in insn 56
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 61
changing reg in insn 53
changing reg in insn 225
changing reg in insn 56
changing reg in insn 211
changing reg in insn 64
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 69
changing reg in insn 61
changing reg in insn 213
changing reg in insn 64
changing reg in insn 199
changing reg in insn 72
changing reg in insn 65
changing reg in insn 65
changing reg in insn 66
changing reg in insn 77
changing reg in insn 69
changing reg in insn 201
changing reg in insn 72
changing reg in insn 187
changing reg in insn 80
changing reg in insn 73
changing reg in insn 73
changing reg in insn 74
changing reg in insn 85
changing reg in insn 77
changing reg in insn 189
changing reg in insn 80
changing reg in insn 175
changing reg in insn 88
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 93
changing reg in insn 85
changing reg in insn 177
changing reg in insn 88
changing reg in insn 163
changing reg in insn 96
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 101
changing reg in insn 93
changing reg in insn 165
changing reg in insn 96
changing reg in insn 151
changing reg in insn 104
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 109
changing reg in insn 101
changing reg in insn 153
changing reg in insn 104
changing reg in insn 138
changing reg in insn 112
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 109
changing reg in insn 140
changing reg in insn 112
changing reg in insn 120
changing reg in insn 116
changing reg in insn 124
changing reg in insn 13
changing reg in insn 245
changing reg in insn 242
changing reg in insn 126
changing reg in insn 14
changing reg in insn 378
changing reg in insn 383
changing reg in insn 1173
changing reg in insn 443
changing reg in insn 446
changing reg in insn 1184
changing reg in insn 486
changing reg in insn 489
changing reg in insn 1185
changing reg in insn 554
changing reg in insn 557
changing reg in insn 15
changing reg in insn 616
changing reg in insn 621
changing reg in insn 643
changing reg in insn 654
changing reg in insn 646
changing reg in insn 799
changing reg in insn 649
changing reg in insn 787
changing reg in insn 657
changing reg in insn 650
changing reg in insn 650
changing reg in insn 651
changing reg in insn 662
changing reg in insn 654
changing reg in insn 789
changing reg in insn 657
changing reg in insn 777
changing reg in insn 665
changing reg in insn 658
changing reg in insn 658
changing reg in insn 659
changing reg in insn 670
changing reg in insn 662
changing reg in insn 779
changing reg in insn 665
changing reg in insn 767
changing reg in insn 673
changing reg in insn 666
changing reg in insn 666
changing reg in insn 667
changing reg in insn 678
changing reg in insn 670
changing reg in insn 769
changing reg in insn 673
changing reg in insn 757
changing reg in insn 681
changing reg in insn 674
changing reg in insn 674
changing reg in insn 675
changing reg in insn 686
changing reg in insn 678
changing reg in insn 759
changing reg in insn 681
changing reg in insn 747
changing reg in insn 689
changing reg in insn 682
changing reg in insn 682
changing reg in insn 683
changing reg in insn 694
changing reg in insn 686
changing reg in insn 749
changing reg in insn 689
changing reg in insn 737
changing reg in insn 697
changing reg in insn 690
changing reg in insn 690
changing reg in insn 691
changing reg in insn 702
changing reg in insn 694
changing reg in insn 739
changing reg in insn 697
changing reg in insn 726
changing reg in insn 705
changing reg in insn 698
changing reg in insn 698
changing reg in insn 699
changing reg in insn 702
changing reg in insn 728
changing reg in insn 705
changing reg in insn 711
changing reg in insn 708
changing reg in insn 13
changing reg in insn 12
changing reg in insn 257
changing reg in insn 266
changing reg in insn 263
changing reg in insn 2
changing reg in insn 991
changing reg in insn 952
changing reg in insn 937
changing reg in insn 632
changing reg in insn 621
changing reg in insn 598
changing reg in insn 557
changing reg in insn 537
changing reg in insn 513
changing reg in insn 489
changing reg in insn 469
changing reg in insn 458
changing reg in insn 446
changing reg in insn 426
changing reg in insn 411
changing reg in insn 383
changing reg in insn 360
changing reg in insn 352
changing reg in insn 270
changing reg in insn 260
changing reg in insn 124
changing reg in insn 18
changing reg in insn 3
changing reg in insn 28
changing reg in insn 4
changing reg in insn 978
changing reg in insn 806
changing reg in insn 641
changing reg in insn 235
changing reg in insn 48
changing reg in insn 41
changing reg in insn 978
changing reg in insn 41
changing reg in insn 7
changing reg in insn 594
changing reg in insn 592
changing reg in insn 581
changing reg in insn 579
changing reg in insn 345
changing reg in insn 343
changing reg in insn 330
changing reg in insn 328
changing reg in insn 311
changing reg in insn 309
changing reg in insn 302
changing reg in insn 300
changing reg in insn 286
changing reg in insn 284
changing reg in insn 34
changing reg in insn 32
changing reg in insn 22
changing reg in insn 20
changing reg in insn 579
changing reg in insn 343
changing reg in insn 328
changing reg in insn 309
changing reg in insn 300
changing reg in insn 284
changing reg in insn 32
changing reg in insn 20
changing reg in insn 8
changing reg in insn 320
changing reg in insn 635
changing reg in insn 517
changing reg in insn 516
changing reg in insn 398
changing reg in insn 319
changing reg in insn 291
changing reg in insn 290
changing reg in insn 26
changing reg in insn 19
changing reg in insn 396
changing reg in insn 517
changing reg in insn 516
changing reg in insn 319
changing reg in insn 290
changing reg in insn 26
changing reg in insn 20
changing reg in insn 23
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 35
changing reg in insn 41
changing reg in insn 42
changing reg in insn 49
changing reg in insn 50
changing reg in insn 57
changing reg in insn 58
changing reg in insn 65
changing reg in insn 66
changing reg in insn 73
changing reg in insn 74
changing reg in insn 81
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 97
changing reg in insn 98
changing reg in insn 105
changing reg in insn 106
changing reg in insn 113
changing reg in insn 121
changing reg in insn 116
changing reg in insn 122
changing reg in insn 133
changing reg in insn 139
changing reg in insn 146
changing reg in insn 152
changing reg in insn 158
changing reg in insn 164
changing reg in insn 170
changing reg in insn 176
changing reg in insn 182
changing reg in insn 188
changing reg in insn 194
changing reg in insn 200
changing reg in insn 206
changing reg in insn 212
changing reg in insn 218
changing reg in insn 224
changing reg in insn 230
changing reg in insn 236
changing reg in insn 284
changing reg in insn 287
changing reg in insn 290
changing reg in insn 294
changing reg in insn 291
changing reg in insn 296
changing reg in insn 300
changing reg in insn 303
changing reg in insn 309
changing reg in insn 312
changing reg in insn 313
changing reg in insn 315
changing reg in insn 319
changing reg in insn 323
changing reg in insn 328
changing reg in insn 331
changing reg in insn 332
changing reg in insn 334
changing reg in insn 343
changing reg in insn 346
changing reg in insn 355
changing reg in insn 357
changing reg in insn 419
changing reg in insn 423
changing reg in insn 420
changing reg in insn 424
changing reg in insn 462
changing reg in insn 466
changing reg in insn 463
changing reg in insn 467
changing reg in insn 506
changing reg in insn 509
changing reg in insn 521
changing reg in insn 525
changing reg in insn 530
changing reg in insn 534
changing reg in insn 531
changing reg in insn 535
changing reg in insn 564
changing reg in insn 567
changing reg in insn 579
changing reg in insn 583
changing reg in insn 591
changing reg in insn 595
changing reg in insn 592
changing reg in insn 596
changing reg in insn 642
changing reg in insn 643
changing reg in insn 650
changing reg in insn 651
changing reg in insn 658
changing reg in insn 659
changing reg in insn 666
changing reg in insn 667
changing reg in insn 674
changing reg in insn 675
changing reg in insn 682
changing reg in insn 683
changing reg in insn 690
changing reg in insn 691
changing reg in insn 698
changing reg in insn 699
changing reg in insn 706
changing reg in insn 712
changing reg in insn 708
changing reg in insn 713
changing reg in insn 723
changing reg in insn 727
changing reg in insn 734
changing reg in insn 738
changing reg in insn 744
changing reg in insn 748
changing reg in insn 754
changing reg in insn 758
changing reg in insn 764
changing reg in insn 768
changing reg in insn 774
changing reg in insn 778
changing reg in insn 784
changing reg in insn 788
changing reg in insn 794
changing reg in insn 798
changing reg in insn 803
changing reg in insn 807
changing reg in insn 821
changing reg in insn 822
changing reg in insn 1054
changing reg in insn 919
changing reg in insn 905
changing reg in insn 891
changing reg in insn 877
changing reg in insn 863
changing reg in insn 849
changing reg in insn 841
changing reg in insn 933
changing reg in insn 1060
changing reg in insn 841
changing reg in insn 1064
changing reg in insn 849
changing reg in insn 1068
changing reg in insn 863
changing reg in insn 1072
changing reg in insn 877
changing reg in insn 1076
changing reg in insn 891
changing reg in insn 1080
changing reg in insn 905
changing reg in insn 1084
changing reg in insn 919
changing reg in insn 925
changing reg in insn 926
changing reg in insn 1048
changing reg in insn 933
changing reg in insn 946
changing reg in insn 978
changing reg in insn 979
changing reg in insn 1087
changing reg in insn 293
changing reg in insn 1088
changing reg in insn 292
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 437
changing reg in insn 453
changing reg in insn 441
changing reg in insn 450
changing reg in insn 438
changing reg in insn 1173
changing reg in insn 1166
changing reg in insn 114
changing reg in insn 134
changing reg in insn 147
changing reg in insn 159
changing reg in insn 171
changing reg in insn 183
changing reg in insn 195
changing reg in insn 207
changing reg in insn 219
changing reg in insn 231
changing reg in insn 582
changing reg in insn 233
changing reg in insn 221
changing reg in insn 209
changing reg in insn 197
changing reg in insn 185
changing reg in insn 173
changing reg in insn 161
changing reg in insn 149
changing reg in insn 136
changing reg in insn 118
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 480
changing reg in insn 496
changing reg in insn 484
changing reg in insn 493
changing reg in insn 481
changing reg in insn 1184
changing reg in insn 1171
changing reg in insn 1172
changing reg in insn 548
changing reg in insn 561
changing reg in insn 552
changing reg in insn 965
changing reg in insn 549
changing reg in insn 1185
changing reg in insn 25
changing reg in insn 925
changing reg in insn 821
changing reg in insn 805
changing reg in insn 796
changing reg in insn 786
changing reg in insn 776
changing reg in insn 766
changing reg in insn 756
changing reg in insn 746
changing reg in insn 736
changing reg in insn 725
changing reg in insn 710
changing reg in insn 234
changing reg in insn 222
changing reg in insn 210
changing reg in insn 198
changing reg in insn 186
changing reg in insn 174
changing reg in insn 162
changing reg in insn 150
changing reg in insn 137
changing reg in insn 119
changing reg in insn 29
changing reg in insn 11
changing reg in insn 993
deleting insn with uid = 27.
deleting insn with uid = 120.
deleting insn with uid = 121.
deleting insn with uid = 13.
deleting insn with uid = 138.
deleting insn with uid = 139.
deleting insn with uid = 151.
deleting insn with uid = 152.
deleting insn with uid = 163.
deleting insn with uid = 164.
deleting insn with uid = 175.
deleting insn with uid = 176.
deleting insn with uid = 187.
deleting insn with uid = 188.
deleting insn with uid = 199.
deleting insn with uid = 200.
deleting insn with uid = 211.
deleting insn with uid = 212.
deleting insn with uid = 223.
deleting insn with uid = 224.
deleting insn with uid = 236.
deleting insn with uid = 245.
deleting insn with uid = 266.
deleting insn with uid = 292.
deleting insn with uid = 294.
deleting insn with uid = 296.
deleting insn with uid = 323.
deleting insn with uid = 357.
deleting insn with uid = 376.
deleting insn with uid = 389.
deleting insn with uid = 422.
deleting insn with uid = 423.
deleting insn with uid = 1167.
deleting insn with uid = 433.
deleting insn with uid = 441.
deleting insn with uid = 453.
deleting insn with uid = 465.
deleting insn with uid = 466.
deleting insn with uid = 1169.
deleting insn with uid = 476.
deleting insn with uid = 484.
deleting insn with uid = 496.
deleting insn with uid = 508.
deleting insn with uid = 523.
deleting insn with uid = 524.
deleting insn with uid = 525.
deleting insn with uid = 1419.
deleting insn with uid = 533.
deleting insn with uid = 534.
deleting insn with uid = 1171.
deleting insn with uid = 544.
deleting insn with uid = 552.
deleting insn with uid = 561.
deleting insn with uid = 566.
deleting insn with uid = 589.
deleting insn with uid = 595.
deleting insn with uid = 614.
deleting insn with uid = 627.
deleting insn with uid = 711.
deleting insn with uid = 712.
deleting insn with uid = 726.
deleting insn with uid = 727.
deleting insn with uid = 737.
deleting insn with uid = 738.
deleting insn with uid = 747.
deleting insn with uid = 748.
deleting insn with uid = 757.
deleting insn with uid = 758.
deleting insn with uid = 767.
deleting insn with uid = 768.
deleting insn with uid = 777.
deleting insn with uid = 778.
deleting insn with uid = 787.
deleting insn with uid = 788.
deleting insn with uid = 797.
deleting insn with uid = 798.
deleting insn with uid = 807.
deleting insn with uid = 813.
deleting insn with uid = 825.
deleting insn with uid = 837.
deleting insn with uid = 841.
deleting insn with uid = 849.
deleting insn with uid = 859.
deleting insn with uid = 863.
deleting insn with uid = 873.
deleting insn with uid = 877.
deleting insn with uid = 887.
deleting insn with uid = 891.
deleting insn with uid = 901.
deleting insn with uid = 905.
deleting insn with uid = 915.
deleting insn with uid = 919.
deleting insn with uid = 929.
deleting insn with uid = 933.
deleting insn with uid = 941.


try_optimize_cfg iteration 1

Forwarding edge 17->18 to 44 failed.
Forwarding edge 19->20 to 17 failed.
Forwarding edge 21->22 to 17 failed.
Forwarding edge 23->24 to 17 failed.
Forwarding edge 25->26 to 17 failed.
Forwarding edge 27->28 to 17 failed.
Forwarding edge 29->30 to 17 failed.
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Simplifying condjump 428 around jump 1338
deleting insn with uid = 1338.
deleting block 78
Deleted label in block 79.
Simplifying condjump 471 around jump 1341
deleting insn with uid = 1341.
deleting block 90
Deleted label in block 91.
Simplifying condjump 539 around jump 1344
deleting insn with uid = 1344.
deleting block 105
Deleted label in block 106.
Forwarding edge 128->129 to 200 failed.
Forwarding edge 139->140 to 160 failed.
Forwarding edge 141->142 to 139 failed.
Forwarding edge 143->144 to 139 failed.
Forwarding edge 145->146 to 139 failed.
Forwarding edge 147->148 to 139 failed.
Forwarding edge 149->150 to 139 failed.
Forwarding edge 151->152 to 139 failed.
Forwarding edge 153->154 to 139 failed.
Forwarding edge 155->156 to 139 failed.
Forwarding edge 157->158 to 139 failed.
Merging block 163 into block 162...
changing bb of uid 833
  from 163 to 162
changing bb of uid 834
  from 163 to 162
changing bb of uid 835
  from 163 to 162
Merged blocks 162 and 163.
Merged 162 and 163 without moving.
Edge 162->165 redirected to 189
Merging block 165 into block 164...
changing bb of uid 1385
  from 165 to 164
Merged blocks 164 and 165.
Merged 164 and 165 without moving.
Merging block 167 into block 166...
changing bb of uid 847
  from 167 to 166
changing bb of uid 848
  from 167 to 166
changing bb of uid 1387
  from 167 to 166
Merged blocks 166 and 167.
Merged 166 and 167 without moving.
Merging block 169 into block 168...
changing bb of uid 855
  from 169 to 168
changing bb of uid 856
  from 169 to 168
changing bb of uid 857
  from 169 to 168
Merged blocks 168 and 169.
Merged 168 and 169 without moving.
Edge 168->171 redirected to 189
Merging block 171 into block 170...
changing bb of uid 1389
  from 171 to 170
Merged blocks 170 and 171.
Merged 170 and 171 without moving.
Merging block 173 into block 172...
changing bb of uid 869
  from 173 to 172
changing bb of uid 870
  from 173 to 172
changing bb of uid 871
  from 173 to 172
Merged blocks 172 and 173.
Merged 172 and 173 without moving.
Edge 172->175 redirected to 189
Merging block 175 into block 174...
changing bb of uid 1391
  from 175 to 174
Merged blocks 174 and 175.
Merged 174 and 175 without moving.
Merging block 177 into block 176...
changing bb of uid 883
  from 177 to 176
changing bb of uid 884
  from 177 to 176
changing bb of uid 885
  from 177 to 176
Merged blocks 176 and 177.
Merged 176 and 177 without moving.
Edge 176->179 redirected to 189
Merging block 179 into block 178...
changing bb of uid 1393
  from 179 to 178
Merged blocks 178 and 179.
Merged 178 and 179 without moving.
Merging block 181 into block 180...
changing bb of uid 897
  from 181 to 180
changing bb of uid 898
  from 181 to 180
changing bb of uid 899
  from 181 to 180
Merged blocks 180 and 181.
Merged 180 and 181 without moving.
Edge 180->183 redirected to 189
Merging block 183 into block 182...
changing bb of uid 1395
  from 183 to 182
Merged blocks 182 and 183.
Merged 182 and 183 without moving.
Merging block 185 into block 184...
changing bb of uid 911
  from 185 to 184
changing bb of uid 912
  from 185 to 184
changing bb of uid 913
  from 185 to 184
Merged blocks 184 and 185.
Merged 184 and 185 without moving.
Edge 184->187 redirected to 189
Merging block 187 into block 186...
changing bb of uid 1397
  from 187 to 186
Merged blocks 186 and 187.
Merged 186 and 187 without moving.
Edge 189->191 redirected to 193
Merging block 191 into block 190...
changing bb of uid 1399
  from 191 to 190
Merged blocks 190 and 191.
Merged 190 and 191 without moving.
Forwarding edge 196->197 to 72 failed.
Forwarding edge 198->199 to 113 failed.
Forwarding edge 200->201 to 157 failed.


try_optimize_cfg iteration 2

Forwarding edge 17->18 to 44 failed.
Forwarding edge 19->20 to 17 failed.
Forwarding edge 21->22 to 17 failed.
Forwarding edge 23->24 to 17 failed.
Forwarding edge 25->26 to 17 failed.
Forwarding edge 27->28 to 17 failed.
Forwarding edge 29->30 to 17 failed.
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 128->129 to 200 failed.
Forwarding edge 139->140 to 160 failed.
Forwarding edge 141->142 to 139 failed.
Forwarding edge 143->144 to 139 failed.
Forwarding edge 145->146 to 139 failed.
Forwarding edge 147->148 to 139 failed.
Forwarding edge 149->150 to 139 failed.
Forwarding edge 151->152 to 139 failed.
Forwarding edge 153->154 to 139 failed.
Forwarding edge 155->156 to 139 failed.
Forwarding edge 157->158 to 139 failed.
Forwarding edge 196->197 to 72 failed.
Forwarding edge 198->199 to 113 failed.
Forwarding edge 200->201 to 157 failed.


try_optimize_cfg iteration 1

Forwarding edge 17->18 to 44 failed.
Forwarding edge 19->20 to 17 failed.
Forwarding edge 21->22 to 17 failed.
Forwarding edge 23->24 to 17 failed.
Forwarding edge 25->26 to 17 failed.
Forwarding edge 27->28 to 17 failed.
Forwarding edge 29->30 to 17 failed.
Forwarding edge 31->32 to 17 failed.
Forwarding edge 33->34 to 17 failed.
Forwarding edge 35->36 to 17 failed.
Forwarding edge 58->59 to 52 failed.
Forwarding edge 128->129 to 200 failed.
Forwarding edge 139->140 to 160 failed.
Forwarding edge 141->142 to 139 failed.
Forwarding edge 143->144 to 139 failed.
Forwarding edge 145->146 to 139 failed.
Forwarding edge 147->148 to 139 failed.
Forwarding edge 149->150 to 139 failed.
Forwarding edge 151->152 to 139 failed.
Forwarding edge 153->154 to 139 failed.
Forwarding edge 155->156 to 139 failed.
Forwarding edge 157->158 to 139 failed.
Forwarding edge 196->197 to 72 failed.
Forwarding edge 198->199 to 113 failed.
Forwarding edge 200->201 to 157 failed.
starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 23.
verify found no changes in insn with uid = 30.
rescanning insn with uid = 35.
rescanning insn with uid = 122.
rescanning insn with uid = 140.
rescanning insn with uid = 153.
rescanning insn with uid = 165.
rescanning insn with uid = 177.
rescanning insn with uid = 189.
rescanning insn with uid = 201.
rescanning insn with uid = 213.
rescanning insn with uid = 225.
rescanning insn with uid = 237.
verify found no changes in insn with uid = 246.
verify found no changes in insn with uid = 254.
verify found no changes in insn with uid = 267.
verify found no changes in insn with uid = 274.
verify found no changes in insn with uid = 282.
rescanning insn with uid = 287.
verify found no changes in insn with uid = 297.
rescanning insn with uid = 303.
rescanning insn with uid = 312.
verify found no changes in insn with uid = 326.
rescanning insn with uid = 331.
verify found no changes in insn with uid = 341.
rescanning insn with uid = 346.
verify found no changes in insn with uid = 358.
verify found no changes in insn with uid = 369.
verify found no changes in insn with uid = 377.
verify found no changes in insn with uid = 390.
verify found no changes in insn with uid = 395.
verify found no changes in insn with uid = 404.
verify found no changes in insn with uid = 408.
verify found no changes in insn with uid = 410.
rescanning insn with uid = 424.
verify found no changes in insn with uid = 434.
verify found no changes in insn with uid = 442.
verify found no changes in insn with uid = 454.
rescanning insn with uid = 467.
verify found no changes in insn with uid = 477.
verify found no changes in insn with uid = 485.
verify found no changes in insn with uid = 497.
rescanning insn with uid = 509.
verify found no changes in insn with uid = 527.
rescanning insn with uid = 535.
verify found no changes in insn with uid = 545.
verify found no changes in insn with uid = 553.
verify found no changes in insn with uid = 562.
rescanning insn with uid = 567.
rescanning insn with uid = 583.
verify found no changes in insn with uid = 590.
rescanning insn with uid = 596.
verify found no changes in insn with uid = 607.
verify found no changes in insn with uid = 615.
verify found no changes in insn with uid = 628.
rescanning insn with uid = 713.
rescanning insn with uid = 728.
rescanning insn with uid = 739.
rescanning insn with uid = 749.
rescanning insn with uid = 759.
rescanning insn with uid = 769.
rescanning insn with uid = 779.
rescanning insn with uid = 789.
rescanning insn with uid = 799.
rescanning insn with uid = 808.
verify found no changes in insn with uid = 814.
verify found no changes in insn with uid = 826.
verify found no changes in insn with uid = 838.
verify found no changes in insn with uid = 848.
verify found no changes in insn with uid = 860.
verify found no changes in insn with uid = 874.
verify found no changes in insn with uid = 888.
verify found no changes in insn with uid = 902.
verify found no changes in insn with uid = 916.
verify found no changes in insn with uid = 930.
verify found no changes in insn with uid = 942.
verify found no changes in insn with uid = 947.
verify found no changes in insn with uid = 995.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 188 n_edges 298 count 195 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 188 n_edges 298 count 198 (  1.1)


leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={155d,109u} r1={127d,40u} r2={97d,26u} r3={10d,19u,8e} r4={111d,71u,16e} r5={159d,116u} r6={1d,22u} r7={1d,368u} r8={78d} r9={78d} r10={78d} r11={78d} r12={78d} r13={78d} r14={78d} r15={78d} r16={9u} r17={177d,65u} r18={78d} r19={78d} r20={78e} r21={79d} r22={79d} r23={79d} r24={79d} r25={79d} r26={79d} r27={79d} r28={79d} r29={78d} r30={78d} r31={78d} r32={78d} r33={78d} r34={78d} r35={78d} r36={78d} r37={86d,16u} r38={79d,1u} r39={78d} r40={78d} r41={1d,10u,6e} r42={1d,6u,2e} r43={12d,12u} r44={1d,23u} r45={78d} r46={78d} r47={78d} r48={78d} r49={78d} r50={78d} r51={78d} r52={78d} r53={78d} r54={78d} r55={78d} r56={78d} r57={78d} r58={78d} r59={78d} r60={78d} r61={78d} r62={78d} r63={78d} r64={78d} r65={78d} r66={78d} r67={78d} r68={78d} r69={78d} r70={78d} r71={78d} r72={78d} r73={78d} r74={78d} r75={78d} r76={78d} r77={78d} r78={78d} r79={78d} r80={78d} r141={1e} 
;;    total ref usage 7042{6018d,913u,111e} in 535{457 regular + 78 call} insns.
(note 1 0 16 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 16 [argp] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 41 [r12] 42 [r13] 43 [r14]
;; live  kill	 17 [flags]
(note 16 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 16 3 2 (set (reg/f:DI 6 bp [orig:253 <retval> ] [253])
        (reg:DI 5 di [ .result_ptr ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 43 r14 [orig:254 dbname ] [254])
        (reg:DI 4 si [ dbname ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 42 r13 [orig:255 env ] [255])
        (reg:DI 1 dx [ env ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])
        (reg:DI 2 cx [ options ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [19 %sfp+-184 S8 A64])
        (reg:DI 37 r8 [ table_cache ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/v/f:DI 3 bx [orig:258 iter ] [258])
        (reg:DI 38 r9 [ iter ])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 288 [0x120])) [3 meta+0 S8 A64])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 9 18 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 216 [0xd8])) [3 D.51474+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [454])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:22 986 {stack_tls_protect_set_di}
     (nil))
(insn 18 11 19 2 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/status.h:24 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (const_int 0 [0])) db/builder.cc:24 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 0 ax [orig:261 iter_19(D)->_vptr.Iterator ] [261])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:25 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 21 20 22 2 NOTE_INSN_DELETED)
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:25 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:261 iter_19(D)->_vptr.Iterator ] [261])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_21;(struct Iterator)iter_19(D)->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:25 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       192 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 44 [r15]
;; live  kill	 17 [flags]
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 44 r15 [450])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 176 [0xb0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:27 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 26 25 28 3 (set (reg:DI 1 dx [orig:264 meta_17(D)->number ] [264])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 28 26 29 3 (set (reg:DI 4 si)
        (reg/v/f:DI 43 r14 [orig:254 dbname ] [254])) db/builder.cc:27 89 {*movdi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:DI 5 di)
        (reg/f:DI 44 r15 [450])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 30 29 31 3 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>) [0 TableFileName S1 A8])
        (const_int 0 [0])) db/builder.cc:27 660 {*call}
     (expr_list:REG_EH_REGION (const_int 1 [0x1])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       192 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:DI 0 ax [orig:265 iter_19(D)->_vptr.Iterator ] [265])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:28 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 33 32 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:28 89 {*movdi_internal}
     (nil))
(call_insn 35 34 1012 4 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:265 iter_19(D)->_vptr.Iterator ] [265])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_26 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_27;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:28 669 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 5, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 1012 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 1012 38 5 (set (reg:QI 0 ax [orig:94 D.51467 ] [94])
        (reg:QI 0 ax)) db/builder.cc:28 93 {*movqi_internal}
     (nil))
(insn 38 36 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:94 D.51467 ] [94])
            (const_int 0 [0]))) db/builder.cc:28 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 39 38 1187 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1294)
            (pc))) db/builder.cc:28 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1294)
;;  succ:       7 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 6, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
(note 1187 39 1166 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1187 1295 6 (set (reg/f:DI 43 r14 [447])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 128 [0x80]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(jump_insn 1295 1166 1296 6 (set (pc)
        (label_ref 576)) 654 {jump}
     (nil)
 -> 576)
;;  succ:       114 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1296 1295 1294)
;; basic block 7, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 1294 1296 40 7 200 "" [1 uses])
(note 40 1294 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 0 ax [orig:267 env_30(D)->_vptr.Env ] [267])
        (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 42 41 43 7 (set (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:267 env_30(D)->_vptr.Env ] [267])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_31 + 32B]+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (nil))
(note 43 42 45 7 NOTE_INSN_DELETED)
(insn 45 43 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:96 D.51465 ] [96])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 228)
;;  succ:       8 [80.0%]  (FALLTHRU)
;;              35 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 8, loop depth 0, count 0, freq 2381, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [80.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:DI 4 si [orig:171 D.51471 ] [171])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 1 dx [orig:270 _223->_vptr.Env ] [270])
        (mem/f:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171]) [3 _223->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171]) [3 _223->_vptr.Env+0 S8 A64])
        (nil)))
(insn 50 49 53 8 (set (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:270 _223->_vptr.Env ] [270])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_224 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 53 50 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:173 D.51465 ] [173])
            (reg/f:DI 0 ax [orig:96 D.51465 ] [96]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 216)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              33 [20.0%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 9, loop depth 0, count 0, freq 1905, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 4 si [orig:175 D.51471 ] [175])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:171 D.51471 ] [171])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_223].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 57 56 58 9 (set (reg/f:DI 0 ax [orig:273 _228->_vptr.Env ] [273])
        (mem/f:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175]) [3 _228->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175]) [3 _228->_vptr.Env+0 S8 A64])
        (nil)))
(insn 58 57 61 9 (set (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:273 _228->_vptr.Env ] [273])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_229 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 61 58 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:177 D.51465 ] [177])
            (reg/f:DI 37 r8 [orig:173 D.51465 ] [173]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1999 (nil))
 -> 204)
;;  succ:       10 [80.0%]  (FALLTHRU)
;;              31 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 10, loop depth 0, count 0, freq 1524, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [80.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 4 si [orig:179 D.51471 ] [179])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:175 D.51471 ] [175])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_228].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 65 64 66 10 (set (reg/f:DI 1 dx [orig:276 _233->_vptr.Env ] [276])
        (mem/f:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179]) [3 _233->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179]) [3 _233->_vptr.Env+0 S8 A64])
        (nil)))
(insn 66 65 69 10 (set (reg/f:DI 37 r8 [orig:181 D.51465 ] [181])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:276 _233->_vptr.Env ] [276])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_234 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 69 66 70 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:181 D.51465 ] [181])
            (reg/f:DI 0 ax [orig:177 D.51465 ] [177]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 192)
;;  succ:       11 [80.0%]  (FALLTHRU)
;;              29 [20.0%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 11, loop depth 0, count 0, freq 1219, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [80.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg/f:DI 4 si [orig:183 D.51471 ] [183])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:179 D.51471 ] [179])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_233].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 73 72 74 11 (set (reg/f:DI 0 ax [orig:279 _238->_vptr.Env ] [279])
        (mem/f:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183]) [3 _238->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183]) [3 _238->_vptr.Env+0 S8 A64])
        (nil)))
(insn 74 73 77 11 (set (reg/f:DI 0 ax [orig:185 D.51465 ] [185])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:279 _238->_vptr.Env ] [279])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_239 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 77 74 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:185 D.51465 ] [185])
            (reg/f:DI 37 r8 [orig:181 D.51465 ] [181]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1970 (nil))
 -> 180)
;;  succ:       12 [80.3%]  (FALLTHRU)
;;              27 [19.7%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 12, loop depth 0, count 0, freq 979, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [80.3%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 4 si [orig:187 D.51471 ] [187])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:183 D.51471 ] [183])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_238].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 81 80 82 12 (set (reg/f:DI 1 dx [orig:282 _243->_vptr.Env ] [282])
        (mem/f:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187]) [3 _243->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187]) [3 _243->_vptr.Env+0 S8 A64])
        (nil)))
(insn 82 81 85 12 (set (reg/f:DI 37 r8 [orig:189 D.51465 ] [189])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:282 _243->_vptr.Env ] [282])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_244 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 85 82 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:189 D.51465 ] [189])
            (reg/f:DI 0 ax [orig:185 D.51465 ] [185]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1976 (nil))
 -> 168)
;;  succ:       13 [80.2%]  (FALLTHRU)
;;              25 [19.8%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 13, loop depth 0, count 0, freq 786, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [80.2%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg/f:DI 4 si [orig:191 D.51471 ] [191])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:187 D.51471 ] [187])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_243].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 89 88 90 13 (set (reg/f:DI 0 ax [orig:285 _248->_vptr.Env ] [285])
        (mem/f:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191]) [3 _248->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191]) [3 _248->_vptr.Env+0 S8 A64])
        (nil)))
(insn 90 89 93 13 (set (reg/f:DI 0 ax [orig:193 D.51465 ] [193])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:285 _248->_vptr.Env ] [285])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_249 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 93 90 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:193 D.51465 ] [193])
            (reg/f:DI 37 r8 [orig:189 D.51465 ] [189]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 94 93 95 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 156)
;;  succ:       14 [80.0%]  (FALLTHRU)
;;              23 [20.0%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [80.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags] 37 [r8]
;; live  kill	
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg/f:DI 4 si [orig:195 D.51471 ] [195])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:191 D.51471 ] [191])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_248].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 97 96 98 14 (set (reg/f:DI 1 dx [orig:288 _253->_vptr.Env ] [288])
        (mem/f:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195]) [3 _253->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195]) [3 _253->_vptr.Env+0 S8 A64])
        (nil)))
(insn 98 97 101 14 (set (reg/f:DI 37 r8 [orig:197 D.51465 ] [197])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:288 _253->_vptr.Env ] [288])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_254 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 101 98 102 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 37 r8 [orig:197 D.51465 ] [197])
            (reg/f:DI 0 ax [orig:193 D.51465 ] [193]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 102 101 103 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1940 (nil))
 -> 144)
;;  succ:       15 [80.6%]  (FALLTHRU)
;;              21 [19.4%] 
;; lr  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]

;; basic block 15, loop depth 0, count 0, freq 507, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [80.6%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (set (reg/f:DI 4 si [orig:199 D.51471 ] [199])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:195 D.51471 ] [195])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_253].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 105 104 106 15 (set (reg/f:DI 0 ax [orig:291 _258->_vptr.Env ] [291])
        (mem/f:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199]) [3 _258->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199]) [3 _258->_vptr.Env+0 S8 A64])
        (nil)))
(insn 106 105 109 15 (set (reg/f:DI 0 ax [orig:201 D.51465 ] [201])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:291 _258->_vptr.Env ] [291])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_259 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 109 106 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:201 D.51465 ] [201])
            (reg/f:DI 37 r8 [orig:197 D.51465 ] [197]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1952 (nil))
 -> 131)
;;  succ:       16 [80.5%]  (FALLTHRU)
;;              19 [19.5%] 
;; lr  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 16, loop depth 0, count 0, freq 408, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [80.5%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (set (reg/f:DI 4 si [orig:203 D.51471 ] [203])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:199 D.51471 ] [199])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_258].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 113 112 114 16 (set (reg/f:DI 5 di [294])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 114 113 116 16 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 116 114 117 16 (set (reg/f:DI 0 ax [orig:297 _263->_vptr.Env ] [297])
        (mem/f:DI (reg/f:DI 4 si [orig:203 D.51471 ] [203]) [3 _263->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 117 116 118 16 NOTE_INSN_DELETED)
(insn 118 117 119 16 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 119 118 122 16 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 122 119 141 16 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:297 _263->_vptr.Env ] [297])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_264 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_265;(struct Env)_263->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       17 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 17, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              34 [100.0%] 
;;              20 [100.0%] 
;;              22 [100.0%] 
;;              24 [100.0%] 
;;              26 [100.0%] 
;;              28 [100.0%] 
;;              30 [100.0%] 
;;              32 [100.0%] 
;;              36 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 141 122 123 17 41 "" [9 uses])
(note 123 141 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 17 (set (reg/f:DI 5 di [orig:206 D.51463 ] [206])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 125 124 126 17 (set (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:206 D.51463 ] [206])
            (reg/f:DI 0 ax [orig:87 D.51463 ] [87]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 127 126 130 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 8986 (nil))
 -> 240)
;;  succ:       37 [89.9%] 
;;              18 [10.1%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 302, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       17 [10.1%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 130 127 1297 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1297 130 1298 18 (set (pc)
        (label_ref 261)) 654 {jump}
     (nil)
 -> 261)
;;  succ:       44 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1298 1297 131)
;; basic block 19, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [19.5%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 131 1298 132 19 38 "" [1 uses])
(note 132 131 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 19 (set (reg/f:DI 5 di [299])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 134 133 136 19 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 136 134 137 19 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 137 136 140 19 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 140 137 1299 19 (call (mem:QI (reg/f:DI 0 ax [orig:201 D.51465 ] [201]) [0 *OBJ_TYPE_REF(_260;(struct Env)_258->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1299 140 1300 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1300 1299 1301 20 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1301 1300 144)
;; basic block 21, loop depth 0, count 0, freq 122, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       14 [19.4%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 144 1301 145 21 37 "" [1 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg/f:DI 5 di [302])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 147 146 149 21 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 149 147 150 21 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 150 149 153 21 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 153 150 1302 21 (call (mem:QI (reg/f:DI 37 r8 [orig:197 D.51465 ] [197]) [0 *OBJ_TYPE_REF(_255;(struct Env)_253->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 22, loop depth 0, count 0, freq 122, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1302 153 1303 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1303 1302 1304 22 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1304 1303 156)
;; basic block 23, loop depth 0, count 0, freq 157, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [20.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 156 1304 157 23 36 "" [1 uses])
(note 157 156 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 23 (set (reg/f:DI 5 di [305])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 159 158 161 23 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 161 159 162 23 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 162 161 165 23 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 165 162 1305 23 (call (mem:QI (reg/f:DI 0 ax [orig:193 D.51465 ] [193]) [0 *OBJ_TYPE_REF(_250;(struct Env)_248->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 24, loop depth 0, count 0, freq 157, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1305 165 1306 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1306 1305 1307 24 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1307 1306 168)
;; basic block 25, loop depth 0, count 0, freq 193, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [19.8%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 168 1307 169 25 35 "" [1 uses])
(note 169 168 170 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 25 (set (reg/f:DI 5 di [308])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 171 170 173 25 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 173 171 174 25 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 174 173 177 25 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 177 174 1308 25 (call (mem:QI (reg/f:DI 37 r8 [orig:189 D.51465 ] [189]) [0 *OBJ_TYPE_REF(_245;(struct Env)_243->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 193, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1308 177 1309 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1309 1308 1310 26 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1310 1309 180)
;; basic block 27, loop depth 0, count 0, freq 240, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [19.7%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 180 1310 181 27 34 "" [1 uses])
(note 181 180 182 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 27 (set (reg/f:DI 5 di [311])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 183 182 185 27 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 185 183 186 27 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 186 185 189 27 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 189 186 1311 27 (call (mem:QI (reg/f:DI 0 ax [orig:185 D.51465 ] [185]) [0 *OBJ_TYPE_REF(_240;(struct Env)_238->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 240, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1311 189 1312 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1312 1311 1313 28 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1313 1312 192)
;; basic block 29, loop depth 0, count 0, freq 305, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [20.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 192 1313 193 29 33 "" [1 uses])
(note 193 192 194 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 29 (set (reg/f:DI 5 di [314])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 195 194 197 29 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 197 195 198 29 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 198 197 201 29 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 201 198 1314 29 (call (mem:QI (reg/f:DI 37 r8 [orig:181 D.51465 ] [181]) [0 *OBJ_TYPE_REF(_235;(struct Env)_233->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 30, loop depth 0, count 0, freq 305, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1314 201 1315 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1315 1314 1316 30 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1316 1315 204)
;; basic block 31, loop depth 0, count 0, freq 381, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [20.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 204 1316 205 31 32 "" [1 uses])
(note 205 204 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 31 (set (reg/f:DI 5 di [317])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 207 206 209 31 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 209 207 210 31 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 210 209 213 31 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 213 210 1317 31 (call (mem:QI (reg/f:DI 0 ax [orig:177 D.51465 ] [177]) [0 *OBJ_TYPE_REF(_230;(struct Env)_228->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 381, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1317 213 1318 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1318 1317 1319 32 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1319 1318 216)
;; basic block 33, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [20.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 37 [r8] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 6 [bp] 7 [sp] 37 [r8] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 216 1319 217 33 31 "" [1 uses])
(note 217 216 218 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 33 (set (reg/f:DI 5 di [320])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) ./include/leveldb/env.h:290 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 219 218 221 33 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 221 219 222 33 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 222 221 225 33 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 225 222 1320 33 (call (mem:QI (reg/f:DI 37 r8 [orig:173 D.51465 ] [173]) [0 *OBJ_TYPE_REF(_225;(struct Env)_223->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 34, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1320 225 1321 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1321 1320 1322 34 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1322 1321 228)
;; basic block 35, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [20.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 43 [r14]
;; live  kill	 17 [flags]
(code_label 228 1322 229 35 30 "" [1 uses])
(note 229 228 230 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 35 (set (reg/f:DI 5 di [323])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 48 [0x30]))) db/builder.cc:30 214 {*leadi}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -176 [0xffffffffffffff50]))
        (nil)))
(insn 231 230 233 35 (parallel [
            (set (reg/f:DI 43 r14 [447])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 128 [0x80])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:30 218 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 233 231 234 35 (set (reg:DI 2 cx)
        (reg/f:DI 43 r14 [447])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 234 233 235 35 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 235 234 237 35 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:255 env ] [255])) db/builder.cc:30 89 {*movdi_internal}
     (nil))
(call_insn 237 235 1323 35 (call (mem:QI (reg/f:DI 0 ax [orig:96 D.51465 ] [96]) [0 *OBJ_TYPE_REF(_32;(struct Env)env_30(D)->4) S1 A8])
        (const_int 0 [0])) db/builder.cc:30 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 36, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1323 237 1324 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1324 1323 1325 36 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1325 1324 240)
;; basic block 37, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       17 [89.9%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 240 1325 241 37 39 "" [1 uses])
(note 241 240 242 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:206 D.51463 ] [206])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 244 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 248)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 248)
;;  succ:       38 [69.8%]  (FALLTHRU)
;;              39 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       37 [69.8%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 244 243 246 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(call_insn 246 244 247 38 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 247 246 248 38 (set (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       37 [30.2%] 
;;              38 [100.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 248 247 249 39 42 "" [1 uses])
(note 249 248 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 251 250 252 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1003)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1003)
;;  succ:       40 [69.8%]  (FALLTHRU)
;;              42 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 40, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       39 [69.8%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 252 251 253 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 40 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 D.51463 ] [87])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(call_insn 254 253 1022 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 4 [0x4])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       162 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 41, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       40 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1022 254 255 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 255 1022 257 41 (set (reg/f:DI 0 ax [orig:87 D.51463 ] [87])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 257 255 1326 41 (set (reg/f:DI 5 di [orig:250 D.51463 ] [250])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1326 257 1327 41 (set (pc)
        (label_ref 258)) 654 {jump}
     (nil)
 -> 258)
;;  succ:       43 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1327 1326 1003)
;; basic block 42, loop depth 0, count 0, freq 807, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       39 [30.2%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1003 1327 1002 42 114 "" [1 uses])
(note 1002 1003 12 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 12 1002 258 42 (set (reg/f:DI 5 di [orig:250 D.51463 ] [250])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       42 [100.0%]  (FALLTHRU)
;;              41 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 258 12 259 43 43 "" [1 uses])
(note 259 258 260 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 43 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:87 D.51463 ] [87])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 44, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 261 260 262 44 40 "" [1 uses])
(note 262 261 263 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:250 D.51463 ] [250])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 264 263 265 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 268)
;;  succ:       45 [69.8%]  (FALLTHRU)
;;              46 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 45, loop depth 0, count 0, freq 2078, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       44 [69.8%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 265 264 267 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(call_insn 267 265 268 45 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 46, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       44 [30.2%] 
;;              45 [100.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 268 267 269 46 44 "" [1 uses])
(note 269 268 270 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:31 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 271 270 272 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 817)
            (pc))) db/builder.cc:31 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 817)
;;  succ:       160 [93.3%] 
;;              47 [6.7%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 47, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       46 [6.7%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 272 271 273 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 47 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 274 273 1023 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/builder.cc:35 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       47 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 1023 274 275 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 275 1023 1417 48 (set (reg/f:DI 0 ax [orig:100 D.51468 ] [100])
        (reg:DI 0 ax)) db/builder.cc:35 89 {*movdi_internal}
     (expr_list:REG_NOALIAS (reg/f:DI 326)
        (nil)))
(insn 1417 275 279 48 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])
        (reg/f:DI 0 ax [orig:100 D.51468 ] [100])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 279 1417 280 48 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 280 279 281 48 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 281 280 282 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:100 D.51468 ] [100])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 282 281 283 48 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_EH_REGION (const_int 5 [0x5])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       166 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 49, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 283 282 284 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 49 (set (reg/f:DI 0 ax [orig:328 iter_19(D)->_vptr.Iterator ] [328])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 285 284 286 49 NOTE_INSN_DELETED)
(insn 286 285 287 49 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:36 89 {*movdi_internal}
     (nil))
(call_insn 287 286 1024 49 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:328 iter_19(D)->_vptr.Iterator ] [328])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_44 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_45;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:36 669 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 50, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       49 [100.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
(note 1024 287 1087 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1087 1024 1088 50 (set (reg:DI 0 ax [orig:444 D.44372 ] [444])
        (reg:DI 0 ax)) db/builder.cc:36 89 {*movdi_internal}
     (nil))
(insn 1088 1087 290 50 (set (reg:DI 37 r8 [orig:445 D.44372+8 ] [445])
        (reg:DI 1 dx [+8 ])) db/builder.cc:36 89 {*movdi_internal}
     (nil))
(insn 290 1088 291 50 (set (reg:DI 1 dx [orig:330 MEM[(long unsigned int *)meta_17(D) + 32B] ] [330])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])
        (nil)))
(insn 291 290 293 50 (parallel [
            (set (reg/f:DI 5 di [orig:331 D.51470 ] [331])
                (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:153 218 {*adddi_1}
     (nil))
(insn 293 291 295 50 (set (reg:DI 2 cx)
        (reg:DI 0 ax [orig:444 D.44372 ] [444])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 295 293 297 50 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(call_insn 297 295 298 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       51 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 51, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       50 [100.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 298 297 320 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 320 298 1412 51 (parallel [
            (set (reg/f:DI 0 ax [orig:451 D.51470 ] [451])
                (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:153 218 {*adddi_1}
     (nil))
(insn 1412 320 336 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])
        (reg/f:DI 0 ax [orig:451 D.51470 ] [451])) ./db/dbformat.h:153 89 {*movdi_internal}
     (nil))
(insn 336 1412 1413 51 (parallel [
            (set (reg/f:DI 0 ax [452])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:40 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 1413 336 337 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [19 %sfp+-200 S8 A64])
        (reg/f:DI 0 ax [452])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(insn 337 1413 1414 51 (parallel [
            (set (reg/f:DI 0 ax [453])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:40 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(insn 1414 337 347 51 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [19 %sfp+-192 S8 A64])
        (reg/f:DI 0 ax [453])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
;;  succ:       52 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 52, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       51 [100.0%]  (FALLTHRU)
;;              59 [100.0%]  (DFS_BACK)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 347 1414 299 52 47 "" [1 uses])
(note 299 347 300 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 52 (set (reg/f:DI 0 ax [orig:332 iter_19(D)->_vptr.Iterator ] [332])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 301 300 302 52 NOTE_INSN_DELETED)
(insn 302 301 303 52 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 303 302 1025 52 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:332 iter_19(D)->_vptr.Iterator ] [332])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_49 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_50;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:37 669 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              53 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 53, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       52 [100.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 1025 303 304 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 304 1025 306 53 (set (reg:QI 0 ax [orig:107 D.51467 ] [107])
        (reg:QI 0 ax)) db/builder.cc:37 93 {*movqi_internal}
     (nil))
(insn 306 304 307 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 0 ax [orig:107 D.51467 ] [107])
            (const_int 0 [0]))) db/builder.cc:37 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 307 306 308 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) db/builder.cc:37 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 350)
;;  succ:       54 [98.0%]  (FALLTHRU)
;;              60 [2.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 54, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [98.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 308 307 309 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 54 (set (reg/f:DI 0 ax [orig:334 iter_19(D)->_vptr.Iterator ] [334])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:38 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 310 309 311 54 NOTE_INSN_DELETED)
(insn 311 310 312 54 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:38 89 {*movdi_internal}
     (nil))
(call_insn 312 311 1026 54 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:334 iter_19(D)->_vptr.Iterator ] [334])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_53 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_54;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:38 669 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 55, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	
(note 1026 312 313 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 313 1026 315 55 (set (reg:TI 0 ax [336])
        (reg:TI 0 ax)) db/builder.cc:38 88 {*movti_internal}
     (expr_list:REG_EQUIV (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 key+0 S16 A128])
        (nil)))
(insn 315 313 317 55 (set (mem/c:TI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [6 key+0 S16 A128])
        (reg:TI 0 ax [336])) db/builder.cc:38 88 {*movti_internal}
     (nil))
(note 317 315 319 55 NOTE_INSN_DELETED)
(insn 319 317 321 55 (set (reg:DI 1 dx [orig:340 MEM[(long unsigned int *)meta_17(D) + 64B] ] [340])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])
        (nil)))
(insn 321 319 322 55 (set (reg:DI 37 r8)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 152 [0x98])) [4 MEM[(long unsigned int *)&key + 8B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 322 321 324 55 (set (reg:DI 2 cx)
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 MEM[(const char * *)&key]+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 324 322 325 55 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 325 324 326 55 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 16 [0x10])) [19 %sfp+-208 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(call_insn 326 325 327 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       56 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 56, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       55 [100.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di]
;; live  kill	
(note 327 326 328 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 56 (set (reg/f:DI 0 ax [orig:342 iter_19(D)->_vptr.Iterator ] [342])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 329 328 330 56 NOTE_INSN_DELETED)
(insn 330 329 331 56 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 331 330 1027 56 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:342 iter_19(D)->_vptr.Iterator ] [342])
                        (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_57 + 72B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_58;(const struct Iterator)iter_19(D)->9) S1 A8])
            (const_int 0 [0]))) db/builder.cc:40 669 {*call_value}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 57, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       56 [100.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 1027 331 332 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 332 1027 334 57 (set (reg:TI 0 ax [344])
        (reg:TI 0 ax)) db/builder.cc:40 88 {*movti_internal}
     (expr_list:REG_EQUIV (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 D.44375+0 S16 A128])
        (nil)))
(insn 334 332 338 57 (set (mem/c:TI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [6 D.44375+0 S16 A128])
        (reg:TI 0 ax [344])) db/builder.cc:40 88 {*movti_internal}
     (nil))
(insn 338 334 339 57 (set (reg:DI 1 dx)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 24 [0x18])) [19 %sfp+-200 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 339 338 340 57 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 32 [0x20])) [19 %sfp+-192 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(insn 340 339 341 57 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 341 340 342 57 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>) [0 Add S1 A8])
        (const_int 0 [0])) db/builder.cc:40 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 58, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       57 [100.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 342 341 343 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 58 (set (reg/f:DI 0 ax [orig:348 iter_19(D)->_vptr.Iterator ] [348])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 344 343 345 58 NOTE_INSN_DELETED)
(insn 345 344 346 58 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 346 345 1328 58 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:348 iter_19(D)->_vptr.Iterator ] [348])
                    (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_63 + 48B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_64;(struct Iterator)iter_19(D)->6) S1 A8])
        (const_int 0 [0])) db/builder.cc:37 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              59 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 59, loop depth 0, count 0, freq 9800, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       58 [100.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1328 346 1329 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1329 1328 1330 59 (set (pc)
        (label_ref 347)) 654 {jump}
     (nil)
 -> 347)
;;  succ:       52 [100.0%]  (DFS_BACK)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1330 1329 350)
;; basic block 60, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [2.0%]  (LOOP_EXIT)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 350 1330 351 60 46 "" [1 uses])
(note 351 350 352 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:44 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 353 352 354 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) db/builder.cc:44 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 401)
;;  succ:       61 [15.0%]  (FALLTHRU)
;;              74 [85.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 61, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       60 [15.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 354 353 355 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 61 (parallel [
            (set (reg/f:DI 5 di [350])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 64 [0x40])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:45 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -160 [0xffffffffffffff60]))
        (nil)))
(insn 356 355 358 61 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:45 89 {*movdi_internal}
     (nil))
(call_insn 358 356 359 61 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>) [0 Finish S1 A8])
        (const_int 0 [0])) db/builder.cc:45 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 62, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       61 [100.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 359 358 360 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 62 (set (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 361 360 362 62 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 362 361 363 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
            (reg/f:DI 5 di [orig:167 D.51463 ] [167]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 363 362 364 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 384)
;;  succ:       63 [89.9%]  (FALLTHRU)
;;              70 [10.1%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 63, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       62 [89.9%]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 364 363 365 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:97 D.51463 ] [97])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 366 365 367 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 371)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 371)
;;  succ:       64 [69.8%]  (FALLTHRU)
;;              65 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 64, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       63 [69.8%]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 367 366 368 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 64 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:97 D.51463 ] [97])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (nil))
(call_insn 369 368 370 64 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 370 369 371 64 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 65, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       63 [30.2%] 
;;              64 [100.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 371 370 372 65 50 "" [1 uses])
(note 372 371 373 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:167 D.51463 ] [167])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 374 373 375 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1007)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1007)
;;  succ:       66 [69.8%]  (FALLTHRU)
;;              68 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 66, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       65 [69.8%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 375 374 377 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(call_insn 377 375 1029 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 9 [0x9])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       168 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 67, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1029 377 378 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 378 1029 380 67 (set (reg/f:DI 0 ax [orig:207 D.51463 ] [207])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 380 378 1331 67 (set (reg/f:DI 5 di [orig:167 D.51463 ] [167])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1331 380 1332 67 (set (pc)
        (label_ref 381)) 654 {jump}
     (nil)
 -> 381)
;;  succ:       69 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1332 1331 1007)
;; basic block 68, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       65 [30.2%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1007 1332 1006 68 115 "" [1 uses])
(note 1006 1007 14 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 14 1006 381 68 (set (reg/f:DI 0 ax [orig:207 D.51463 ] [207])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       69 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 69, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       68 [100.0%]  (FALLTHRU)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 381 14 382 69 51 "" [1 uses])
(note 382 381 383 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 69 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:207 D.51463 ] [207])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       70 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 70, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       69 [100.0%]  (FALLTHRU)
;;              62 [10.1%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 384 383 385 70 49 "" [1 uses])
(note 385 384 386 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:167 D.51463 ] [167])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 387 386 388 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 949)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 949)
;;  succ:       71 [69.8%]  (FALLTHRU)
;;              196 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 71, loop depth 0, count 0, freq 21, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       70 [69.8%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 388 387 390 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(call_insn 390 388 1333 71 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1333 390 1334 71 (set (pc)
        (label_ref 949)) 654 {jump}
     (nil)
 -> 949)
;;  succ:       196 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1334 1333 951)
;; basic block 72, loop depth 0, count 0, freq 2
;;  prev block 71, next block 73, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       197 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 951 1334 393 72 106 "" [1 uses])
(note 393 951 394 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 72 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:47 89 {*movdi_internal}
     (nil))
(call_insn 395 394 1030 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>) [0 FileSize S1 A8])
            (const_int 0 [0]))) db/builder.cc:47 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              73 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 73, loop depth 0, count 0, freq 2
;;  prev block 72, next block 74, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       72 [100.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 1030 395 396 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 396 1030 398 73 (set (reg:DI 0 ax [orig:119 D.51466 ] [119])
        (reg:DI 0 ax)) db/builder.cc:47 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (nil)))
(insn 398 396 1335 73 (set (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (reg:DI 0 ax [orig:119 D.51466 ] [119])) db/builder.cc:47 89 {*movdi_internal}
     (nil))
(jump_insn 1335 398 1336 73 (set (pc)
        (label_ref 405)) 654 {jump}
     (nil)
 -> 405)
;;  succ:       75 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1336 1335 401)
;; basic block 74, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       60 [85.0%] 
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 401 1336 402 74 48 "" [1 uses])
(note 402 401 403 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 74 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:51 89 {*movdi_internal}
     (nil))
(call_insn 404 403 405 74 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>) [0 Abandon S1 A8])
        (const_int 0 [0])) db/builder.cc:51 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              75 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 75, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       196 [93.3%] 
;;              74 [100.0%]  (FALLTHRU)
;;              73 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 405 404 406 75 53 "" [2 uses])
(note 406 405 1418 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(note 1418 406 407 75 NOTE_INSN_DELETED)
(insn 407 1418 408 75 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:53 89 {*movdi_internal}
     (nil))
(call_insn 408 407 409 75 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 75 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:53 89 {*movdi_internal}
     (nil))
(call_insn 410 409 411 75 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 411 410 412 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:56 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 412 411 417 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:56 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 500)
;;  succ:       76 [6.7%]  (FALLTHRU)
;;              99 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 76, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       75 [6.7%]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 417 412 418 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 76 (set (reg/f:DI 4 si [orig:122 D.51469 ] [122])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:57 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 419 418 420 76 (parallel [
            (set (reg/f:DI 5 di [351])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:57 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -144 [0xffffffffffffff70]))
        (nil)))
(insn 420 419 421 76 (set (reg/f:DI 0 ax [orig:352 _83->_vptr.WritableFile ] [352])
        (mem/f:DI (reg/f:DI 4 si [orig:122 D.51469 ] [122]) [3 _83->_vptr.WritableFile+0 S8 A64])) db/builder.cc:57 89 {*movdi_internal}
     (nil))
(note 421 420 424 76 NOTE_INSN_DELETED)
(call_insn 424 421 425 76 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:352 _83->_vptr.WritableFile ] [352])
                    (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_84 + 40B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_85;(struct WritableFile)_83->5) S1 A8])
        (const_int 0 [0])) db/builder.cc:57 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 77, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 76, next block 79, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       76 [100.0%]  (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 425 424 426 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 77 (set (reg/f:DI 5 di [orig:116 D.51463 ] [116])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 427 426 428 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:116 D.51463 ] [116])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 428 427 429 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 447)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 447)
;;  succ:       79 [89.9%]  (FALLTHRU)
;;              85 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 79, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 77, next block 80, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       77 [89.9%]  (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 429 428 430 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:116 D.51463 ] [116])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 431 430 432 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 435)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 435)
;;  succ:       80 [69.8%]  (FALLTHRU)
;;              81 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 80, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       79 [69.8%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 432 431 434 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(call_insn 434 432 435 80 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       81 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 81, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       79 [30.2%] 
;;              80 [100.0%]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 435 434 436 81 57 "" [1 uses])
(note 436 435 437 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 1173 81 (set (reg/f:DI 5 di [orig:446 D.51463 ] [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1173 437 438 81 (set (reg/f:DI 0 ax [orig:209 D.51463 ] [209])
        (reg/f:DI 5 di [orig:446 D.51463 ] [446])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 438 1173 439 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:446 D.51463 ] [446])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 439 438 440 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 444)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 444)
;;  succ:       82 [69.8%]  (FALLTHRU)
;;              84 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 82, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       81 [69.8%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 440 439 442 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(call_insn 442 440 1031 82 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 10 [0xa])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              83 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 83, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       82 [100.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1031 442 443 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 443 1031 1168 83 (set (reg/f:DI 0 ax [orig:209 D.51463 ] [209])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1168 443 444 83 (set (reg/f:DI 5 di [orig:446 D.51463 ] [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       84 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 84, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       81 [30.2%] 
;;              83 [100.0%]  (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 444 1168 445 84 58 "" [1 uses])
(note 445 444 446 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 84 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:209 D.51463 ] [209])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       85 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 85, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       84 [100.0%]  (FALLTHRU)
;;              77 [10.1%] 
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 447 446 448 85 56 "" [1 uses])
(note 448 447 450 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 450 448 451 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:446 D.51463 ] [446])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 451 450 452 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 455)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 455)
;;  succ:       86 [69.8%]  (FALLTHRU)
;;              87 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 86, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       85 [69.8%]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 452 451 454 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(call_insn 454 452 455 86 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       87 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 87, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       85 [30.2%] 
;;              86 [100.0%]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 455 454 456 87 59 "" [1 uses])
(note 456 455 458 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 458 456 459 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:59 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 459 458 460 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:59 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 500)
;;  succ:       88 [100.0%]  (FALLTHRU)
;;              99
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 88, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       87 [100.0%]  (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 460 459 461 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 88 (set (reg/f:DI 4 si [orig:129 D.51469 ] [129])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 462 461 463 88 (parallel [
            (set (reg/f:DI 5 di [354])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:60 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))
(insn 463 462 464 88 (set (reg/f:DI 0 ax [orig:355 _93->_vptr.WritableFile ] [355])
        (mem/f:DI (reg/f:DI 4 si [orig:129 D.51469 ] [129]) [3 _93->_vptr.WritableFile+0 S8 A64])) db/builder.cc:60 89 {*movdi_internal}
     (nil))
(note 464 463 467 88 NOTE_INSN_DELETED)
(call_insn 467 464 468 88 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:355 _93->_vptr.WritableFile ] [355])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_94 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_95;(struct WritableFile)_93->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:60 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              89 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 89, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 88, next block 91, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       88 [100.0%]  (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 468 467 469 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 89 (set (reg/f:DI 5 di [orig:125 D.51463 ] [125])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 470 469 471 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:125 D.51463 ] [125])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 471 470 472 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 490)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 490)
;;  succ:       91 [89.9%]  (FALLTHRU)
;;              97 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 91, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 89, next block 92, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       89 [89.9%]  (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 472 471 473 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:125 D.51463 ] [125])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 474 473 475 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 478)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 478)
;;  succ:       92 [69.8%]  (FALLTHRU)
;;              93 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 92, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       91 [69.8%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 475 474 477 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(call_insn 477 475 478 92 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       93 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 93, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       91 [30.2%] 
;;              92 [100.0%]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 478 477 479 93 62 "" [1 uses])
(note 479 478 480 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 1184 93 (set (reg/f:DI 5 di [orig:448 D.51463 ] [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1184 480 481 93 (set (reg/f:DI 0 ax [orig:211 D.51463 ] [211])
        (reg/f:DI 5 di [orig:448 D.51463 ] [448])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 481 1184 482 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:448 D.51463 ] [448])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 482 481 483 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 487)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 487)
;;  succ:       94 [69.8%]  (FALLTHRU)
;;              96 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 94, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       93 [69.8%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 483 482 485 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(call_insn 485 483 1032 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 11 [0xb])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       176 (ABNORMAL,ABNORMAL_CALL,EH)
;;              95 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 95, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       94 [100.0%]  (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1032 485 486 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 486 1032 1170 95 (set (reg/f:DI 0 ax [orig:211 D.51463 ] [211])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1170 486 487 95 (set (reg/f:DI 5 di [orig:448 D.51463 ] [448])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       96 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 96, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       93 [30.2%] 
;;              95 [100.0%]  (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 487 1170 488 96 63 "" [1 uses])
(note 488 487 489 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 96 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:211 D.51463 ] [211])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 97, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       96 [100.0%]  (FALLTHRU)
;;              89 [10.1%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 490 489 491 97 61 "" [1 uses])
(note 491 490 493 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 493 491 494 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:448 D.51463 ] [448])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 494 493 495 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 500)
;;  succ:       98 [69.8%]  (FALLTHRU)
;;              99 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 98, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       97 [69.8%]  (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 495 494 497 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(call_insn 497 495 500 98 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 99, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       75 [93.3%] 
;;              98 [100.0%]  (FALLTHRU)
;;              87
;;              97 [30.2%] 
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 500 497 501 99 55 "" [3 uses])
(note 501 500 502 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 99 (set (reg/f:DI 5 di [orig:135 D.51469 ] [135])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(insn 503 502 504 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:135 D.51469 ] [135])
            (const_int 0 [0]))) db/builder.cc:62 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 504 503 505 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 510)
            (pc))) db/builder.cc:62 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 510)
;;  succ:       100 [69.8%]  (FALLTHRU)
;;              101 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 100, loop depth 0, count 0, freq 140, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       99 [69.8%]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 505 504 506 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 100 (set (reg/f:DI 0 ax [orig:357 _102->_vptr.WritableFile ] [357])
        (mem/f:DI (reg/f:DI 5 di [orig:135 D.51469 ] [135]) [3 _102->_vptr.WritableFile+0 S8 A64])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(note 507 506 509 100 NOTE_INSN_DELETED)
(call_insn 509 507 510 100 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:357 _102->_vptr.WritableFile ] [357])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_103 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_104;(struct WritableFile)_102->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:62 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       101 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 101, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       99 [30.2%] 
;;              100 [100.0%]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 510 509 511 101 65 "" [1 uses])
(note 511 510 512 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 101 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 file+0 S8 A128])
        (const_int 0 [0])) db/builder.cc:63 89 {*movdi_internal}
     (nil))
(insn 513 512 514 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:65 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 514 513 515 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 576)
            (pc))) db/builder.cc:65 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 576)
;;  succ:       102 [6.7%]  (FALLTHRU)
;;              114 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 102, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       101 [6.7%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
(note 515 514 516 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 102 (set (reg:DI 2 cx [orig:139 D.51466 ] [139])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (nil)))
(insn 517 516 518 102 (set (reg:DI 1 dx [orig:140 D.51466 ] [140])
        (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 518 517 519 102 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [9 D.44398.verify_checksums+0 S1 A128])
        (const_int 0 [0])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 519 518 520 102 (set (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                (const_int 161 [0xa1])) [9 D.44398.fill_cache+0 S1 A8])
        (const_int 1 [0x1])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 520 519 521 102 (set (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 168 [0xa8])) [3 D.44398.snapshot+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 89 {*movdi_internal}
     (nil))
(insn 521 520 522 102 (parallel [
            (set (reg/f:DI 4 si [359])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:69 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 522 521 526 102 (set (reg:DI 37 r8)
        (const_int 0 [0])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 526 522 527 102 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 40 [0x28])) [19 %sfp+-184 S8 A64])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 527 526 1033 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>) [0 NewIterator S1 A8])
            (const_int 0 [0]))) db/builder.cc:69 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              103 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 103, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       102 [100.0%]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 1033 527 528 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 528 1033 1420 103 (set (reg/v/f:DI 4 si [orig:141 it ] [141])
        (reg:DI 0 ax)) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 1420 528 530 103 (set (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])
        (reg/v/f:DI 4 si [orig:141 it ] [141])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 530 1420 1415 103 (parallel [
            (set (reg/f:DI 5 di [360])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:70 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -112 [0xffffffffffffff90]))
        (nil)))
(insn 1415 530 531 103 (set (reg/v/f:DI 0 ax [orig:141 it ] [141])
        (reg/v/f:DI 4 si [orig:141 it ] [141])) db/builder.cc:70 89 {*movdi_internal}
     (nil))
(insn 531 1415 532 103 (set (reg/f:DI 0 ax [orig:361 it_113->_vptr.Iterator ] [361])
        (mem/f:DI (reg/v/f:DI 0 ax [orig:141 it ] [141]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:70 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 141 [ it ]) [3 it_113->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 532 531 535 103 NOTE_INSN_DELETED)
(call_insn 535 532 536 103 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:361 it_113->_vptr.Iterator ] [361])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_115 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_116;(const struct Iterator)it_113->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:70 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              104 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 104, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 103, next block 106, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 536 535 537 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 104 (set (reg/f:DI 5 di [orig:132 D.51463 ] [132])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 538 537 539 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:132 D.51463 ] [132])
            (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 539 538 540 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 961)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 961)
;;  succ:       106 [89.9%]  (FALLTHRU)
;;              198 [10.1%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 106, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 104, next block 107, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       104 [89.9%]  (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 540 539 541 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:132 D.51463 ] [132])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 542 541 543 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 546)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 546)
;;  succ:       107 [69.8%]  (FALLTHRU)
;;              108 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 107, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       106 [69.8%]  (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 543 542 545 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(call_insn 545 543 546 107 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 108, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       106 [30.2%] 
;;              107 [100.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 546 545 547 108 68 "" [1 uses])
(note 547 546 548 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 1185 108 (set (reg/f:DI 5 di [orig:449 D.51463 ] [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1185 548 549 108 (set (reg/f:DI 0 ax [orig:213 D.51463 ] [213])
        (reg/f:DI 5 di [orig:449 D.51463 ] [449])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 549 1185 550 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:449 D.51463 ] [449])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 550 549 551 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 555)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 555)
;;  succ:       109 [69.8%]  (FALLTHRU)
;;              111 [30.2%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 109, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       108 [69.8%]  (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 551 550 553 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(call_insn 553 551 1034 109 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 13 [0xd])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       180 (ABNORMAL,ABNORMAL_CALL,EH)
;;              110 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 110, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       109 [100.0%]  (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1034 553 554 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 554 1034 1172 110 (set (reg/f:DI 0 ax [orig:213 D.51463 ] [213])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1172 554 555 110 (set (reg/f:DI 5 di [orig:449 D.51463 ] [449])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       111 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 111, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       108 [30.2%] 
;;              110 [100.0%]  (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 555 1172 556 111 69 "" [1 uses])
(note 556 555 557 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 1346 111 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:213 D.51463 ] [213])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(jump_insn 1346 557 1347 111 (set (pc)
        (label_ref 961)) 654 {jump}
     (nil)
 -> 961)
;;  succ:       198 [100.0%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1347 1346 964)
;; basic block 112, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       198 [69.8%] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 964 1347 560 112 108 "" [1 uses])
(note 560 964 562 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(call_insn 562 560 958 112 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       113 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 113, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       112 [100.0%]  (FALLTHRU)
;;              199 [100.0%] 
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 958 562 563 113 107 "" [1 uses])
(note 563 958 1421 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1421 563 1416 113 (set (reg/v/f:DI 5 di [orig:141 it ] [141])
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(insn 1416 1421 564 113 (set (reg/v/f:DI 0 ax [orig:141 it ] [141])
        (reg/v/f:DI 5 di [orig:141 it ] [141])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(insn 564 1416 565 113 (set (reg/f:DI 0 ax [orig:363 it_113->_vptr.Iterator ] [363])
        (mem/f:DI (reg/v/f:DI 0 ax [orig:141 it ] [141]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(note 565 564 567 113 NOTE_INSN_DELETED)
(call_insn 567 565 576 113 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:363 it_113->_vptr.Iterator ] [363])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_120 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_121;(struct Iterator)it_113->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:71 660 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       114 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 114, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       101 [93.3%] 
;;              113 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 576 567 577 114 29 "" [2 uses])
(note 577 576 579 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 579 577 580 114 (set (reg/f:DI 0 ax [orig:366 iter_19(D)->_vptr.Iterator ] [366])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 580 579 581 114 NOTE_INSN_DELETED)
(insn 581 580 582 114 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:76 89 {*movdi_internal}
     (nil))
(insn 582 581 583 114 (set (reg:DI 5 di)
        (reg/f:DI 43 r14 [447])) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(call_insn 583 582 584 114 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:366 iter_19(D)->_vptr.Iterator ] [366])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_132 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_133;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:76 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              115 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 115, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       114 [100.0%]  (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 584 583 585 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 115 (set (reg/f:DI 5 di [orig:151 D.51463 ] [151])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 128 [0x80])) [3 D.44418.state_+0 S8 A128])) ./include/leveldb/status.h:52 89 {*movdi_internal}
     (nil))
(insn 586 585 587 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:151 D.51463 ] [151])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 587 586 588 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 973)
;;  succ:       116 [69.8%]  (FALLTHRU)
;;              127 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 116, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       115 [69.8%]  (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 588 587 590 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(call_insn 590 588 591 116 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 591 590 592 116 (parallel [
            (set (reg/f:DI 5 di [368])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 144 [0x90])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:77 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(insn 592 591 593 116 (set (reg/f:DI 0 ax [orig:369 iter_19(D)->_vptr.Iterator ] [369])
        (mem/f:DI (reg/v/f:DI 3 bx [orig:258 iter ] [258]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:77 89 {*movdi_internal}
     (nil))
(note 593 592 594 116 NOTE_INSN_DELETED)
(insn 594 593 596 116 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:258 iter ] [258])) db/builder.cc:77 89 {*movdi_internal}
     (nil))
(call_insn 596 594 597 116 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:369 iter_19(D)->_vptr.Iterator ] [369])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_138 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_139;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:77 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              117 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 117, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 116, next block 118, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       116 [100.0%]  (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 597 596 598 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 117 (set (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 599 598 600 117 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 600 599 601 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
            (reg/f:DI 5 di [orig:168 D.51463 ] [168]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 601 600 602 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 622)
;;  succ:       118 [89.9%]  (FALLTHRU)
;;              125 [10.1%] 
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 118, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 117, next block 119, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       117 [89.9%]  (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 602 601 603 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:144 D.51463 ] [144])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 604 603 605 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 609)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 609)
;;  succ:       119 [69.8%]  (FALLTHRU)
;;              120 [30.2%] 
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 119, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       118 [69.8%]  (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
(note 605 604 606 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 119 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:144 D.51463 ] [144])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (nil))
(call_insn 607 606 608 119 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 608 607 609 119 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       120 [100.0%]  (FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 120, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       118 [30.2%] 
;;              119 [100.0%]  (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 609 608 610 120 73 "" [1 uses])
(note 610 609 611 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 612 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:168 D.51463 ] [168])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 612 611 613 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1011)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 1011)
;;  succ:       121 [69.8%]  (FALLTHRU)
;;              123 [30.2%] 
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 121, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       120 [69.8%]  (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 613 612 615 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(call_insn 615 613 1035 121 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_EH_REGION (const_int 14 [0xe])
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       184 (ABNORMAL,ABNORMAL_CALL,EH)
;;              122 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 122, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       121 [100.0%]  (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 5 [di]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 1035 615 616 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 616 1035 618 122 (set (reg/f:DI 0 ax [orig:214 D.51463 ] [214])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 618 616 1348 122 (set (reg/f:DI 5 di [orig:168 D.51463 ] [168])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1348 618 1349 122 (set (pc)
        (label_ref 619)) 654 {jump}
     (nil)
 -> 619)
;;  succ:       124 [100.0%] 
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

(barrier 1349 1348 1011)
;; basic block 123, loop depth 0, count 0, freq 601, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       120 [30.2%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1011 1349 1010 123 116 "" [1 uses])
(note 1010 1011 15 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 15 1010 619 123 (set (reg/f:DI 0 ax [orig:214 D.51463 ] [214])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       124 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 124, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       123 [100.0%]  (FALLTHRU)
;;              122 [100.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 619 15 620 124 74 "" [1 uses])
(note 620 619 621 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 124 (set (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 0 ax [orig:214 D.51463 ] [214])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       125 [100.0%]  (FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 125, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       124 [100.0%]  (FALLTHRU)
;;              117 [10.1%] 
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 622 621 623 125 72 "" [1 uses])
(note 623 622 624 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:168 D.51463 ] [168])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 625 624 626 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 973)
;;  succ:       126 [69.8%]  (FALLTHRU)
;;              127 [30.2%] 
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 126, loop depth 0, count 0, freq 1549, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       125 [69.8%]  (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	
;; live  kill	
(note 626 625 628 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(call_insn 628 626 973 126 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 127, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       125 [30.2%] 
;;              126 [100.0%]  (FALLTHRU)
;;              115 [30.2%] 
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 973 628 631 127 110 "" [2 uses])
(note 631 973 632 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 633 632 634 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 976)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 976)
;;  succ:       128 [15.0%]  (FALLTHRU)
;;              200 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 128, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       127 [15.0%]  (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 634 633 635 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/v/f:DI 41 r12 [orig:259 meta ] [259])
                    (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 636 635 1350 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 817)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 817)
;;  succ:       160 [50.0%] 
;;              129 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]

;; basic block 129, loop depth 0, count 0, freq 238, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       128 [50.0%]  (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1350 636 1351 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1351 1350 1352 129 (set (pc)
        (label_ref 976)) 654 {jump}
     (nil)
 -> 976)
;;  succ:       200 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 42 [r13] 44 [r15]

(barrier 1352 1351 980)
;; basic block 130, loop depth 0, count 0, freq 736, maybe hot
;; Invalid sum of incoming frequencies 2347, should be 736
;;  prev block 129, next block 131, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       200 [79.9%] 
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(code_label 980 1352 640 130 111 "" [1 uses])
(note 640 980 641 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 130 (set (reg/f:DI 4 si [orig:154 D.51471 ] [154])
        (mem/f:DI (plus:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 642 641 643 130 (set (reg/f:DI 1 dx [orig:371 _141->_vptr.Env ] [371])
        (mem/f:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154]) [3 _141->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154]) [3 _141->_vptr.Env+0 S8 A64])
        (nil)))
(insn 643 642 646 130 (set (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:371 _141->_vptr.Env ] [371])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_291 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 646 643 647 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:216 D.51465 ] [216])
            (reg/f:DI 0 ax [orig:159 D.51465 ] [159]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 647 646 648 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1977 (nil))
 -> 792)
;;  succ:       131 [80.2%]  (FALLTHRU)
;;              155 [19.8%] 
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 131, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 130, next block 132, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       130 [80.2%]  (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 648 647 649 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 131 (set (reg/f:DI 4 si [orig:218 D.51471 ] [218])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:154 D.51471 ] [154])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_141].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 650 649 651 131 (set (reg/f:DI 0 ax [orig:374 _295->_vptr.Env ] [374])
        (mem/f:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218]) [3 _295->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218]) [3 _295->_vptr.Env+0 S8 A64])
        (nil)))
(insn 651 650 654 131 (set (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:374 _295->_vptr.Env ] [374])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_296 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 654 651 655 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:220 D.51465 ] [220])
            (reg/f:DI 2 cx [orig:216 D.51465 ] [216]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 655 654 656 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1963 (nil))
 -> 782)
;;  succ:       132 [80.4%]  (FALLTHRU)
;;              153 [19.6%] 
;; lr  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 132, loop depth 0, count 0, freq 474, maybe hot
;;  prev block 131, next block 133, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       131 [80.4%]  (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 656 655 657 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 132 (set (reg/f:DI 4 si [orig:222 D.51471 ] [222])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:218 D.51471 ] [218])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_295].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 658 657 659 132 (set (reg/f:DI 1 dx [orig:377 _300->_vptr.Env ] [377])
        (mem/f:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222]) [3 _300->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222]) [3 _300->_vptr.Env+0 S8 A64])
        (nil)))
(insn 659 658 662 132 (set (reg/f:DI 2 cx [orig:224 D.51465 ] [224])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:377 _300->_vptr.Env ] [377])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_301 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 662 659 663 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:224 D.51465 ] [224])
            (reg/f:DI 0 ax [orig:220 D.51465 ] [220]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 663 662 664 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1953 (nil))
 -> 772)
;;  succ:       133 [80.5%]  (FALLTHRU)
;;              151 [19.5%] 
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 133, loop depth 0, count 0, freq 382, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       132 [80.5%]  (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 664 663 665 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 133 (set (reg/f:DI 4 si [orig:226 D.51471 ] [226])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:222 D.51471 ] [222])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_300].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 666 665 667 133 (set (reg/f:DI 0 ax [orig:380 _305->_vptr.Env ] [380])
        (mem/f:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226]) [3 _305->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226]) [3 _305->_vptr.Env+0 S8 A64])
        (nil)))
(insn 667 666 670 133 (set (reg/f:DI 0 ax [orig:228 D.51465 ] [228])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:380 _305->_vptr.Env ] [380])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_306 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 670 667 671 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:228 D.51465 ] [228])
            (reg/f:DI 2 cx [orig:224 D.51465 ] [224]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 671 670 672 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 762)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1933 (nil))
 -> 762)
;;  succ:       134 [80.7%]  (FALLTHRU)
;;              149 [19.3%] 
;; lr  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 134, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       133 [80.7%]  (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 672 671 673 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 134 (set (reg/f:DI 4 si [orig:230 D.51471 ] [230])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:226 D.51471 ] [226])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_305].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 674 673 675 134 (set (reg/f:DI 1 dx [orig:383 _310->_vptr.Env ] [383])
        (mem/f:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230]) [3 _310->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230]) [3 _310->_vptr.Env+0 S8 A64])
        (nil)))
(insn 675 674 678 134 (set (reg/f:DI 2 cx [orig:232 D.51465 ] [232])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:383 _310->_vptr.Env ] [383])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_311 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 678 675 679 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:232 D.51465 ] [232])
            (reg/f:DI 0 ax [orig:228 D.51465 ] [228]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 679 678 680 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1839 (nil))
 -> 752)
;;  succ:       135 [81.6%]  (FALLTHRU)
;;              147 [18.4%] 
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 135, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 134, next block 136, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       134 [81.6%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 680 679 681 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 135 (set (reg/f:DI 4 si [orig:234 D.51471 ] [234])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:230 D.51471 ] [230])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_310].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 682 681 683 135 (set (reg/f:DI 0 ax [orig:386 _315->_vptr.Env ] [386])
        (mem/f:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234]) [3 _315->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234]) [3 _315->_vptr.Env+0 S8 A64])
        (nil)))
(insn 683 682 686 135 (set (reg/f:DI 0 ax [orig:236 D.51465 ] [236])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:386 _315->_vptr.Env ] [386])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_316 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 686 683 687 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:236 D.51465 ] [236])
            (reg/f:DI 2 cx [orig:232 D.51465 ] [232]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 687 686 688 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 742)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1798 (nil))
 -> 742)
;;  succ:       136 [82.0%]  (FALLTHRU)
;;              145 [18.0%] 
;; lr  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 136, loop depth 0, count 0, freq 206, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       135 [82.0%]  (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 688 687 689 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 136 (set (reg/f:DI 4 si [orig:238 D.51471 ] [238])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:234 D.51471 ] [234])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_315].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 690 689 691 136 (set (reg/f:DI 1 dx [orig:389 _320->_vptr.Env ] [389])
        (mem/f:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238]) [3 _320->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238]) [3 _320->_vptr.Env+0 S8 A64])
        (nil)))
(insn 691 690 694 136 (set (reg/f:DI 2 cx [orig:240 D.51465 ] [240])
        (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:389 _320->_vptr.Env ] [389])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_321 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 694 691 695 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:240 D.51465 ] [240])
            (reg/f:DI 0 ax [orig:236 D.51465 ] [236]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 695 694 696 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 732)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 1935 (nil))
 -> 732)
;;  succ:       137 [80.7%]  (FALLTHRU)
;;              143 [19.4%] 
;; lr  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 137, loop depth 0, count 0, freq 166, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       136 [80.7%]  (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(note 696 695 697 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 697 696 698 137 (set (reg/f:DI 4 si [orig:242 D.51471 ] [242])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:238 D.51471 ] [238])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_320].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 698 697 699 137 (set (reg/f:DI 0 ax [orig:392 _325->_vptr.Env ] [392])
        (mem/f:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242]) [3 _325->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242]) [3 _325->_vptr.Env+0 S8 A64])
        (nil)))
(insn 699 698 702 137 (set (reg/f:DI 0 ax [orig:244 D.51465 ] [244])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:392 _325->_vptr.Env ] [392])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_326 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 702 699 703 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:244 D.51465 ] [244])
            (reg/f:DI 2 cx [orig:240 D.51465 ] [240]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 703 702 704 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 2000 (nil))
 -> 721)
;;  succ:       138 [80.0%]  (FALLTHRU)
;;              141 [20.0%] 
;; lr  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]

;; basic block 138, loop depth 0, count 0, freq 133, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       137 [80.0%]  (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(note 704 703 705 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 138 (set (reg/f:DI 4 si [orig:246 D.51471 ] [246])
        (mem/f:DI (plus:DI (reg/f:DI 4 si [orig:242 D.51471 ] [242])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_325].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(insn 706 705 708 138 (parallel [
            (set (reg/f:DI 5 di [395])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 708 706 709 138 (set (reg/f:DI 0 ax [orig:397 _330->_vptr.Env ] [397])
        (mem/f:DI (reg/f:DI 4 si [orig:246 D.51471 ] [246]) [3 _330->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 709 708 710 138 NOTE_INSN_DELETED)
(insn 710 709 713 138 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 713 710 729 138 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:397 _330->_vptr.Env ] [397])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_331 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_332;(struct Env)_330->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (nil)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       139 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 139, loop depth 0, count 0, freq 921, maybe hot
;;  prev block 138, next block 140, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       138 [100.0%]  (FALLTHRU)
;;              156 [100.0%] 
;;              142 [100.0%] 
;;              144 [100.0%] 
;;              146 [100.0%] 
;;              148 [100.0%] 
;;              150 [100.0%] 
;;              152 [100.0%] 
;;              154 [100.0%] 
;;              158 [100.0%] 
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 729 713 714 139 87 "" [9 uses])
(note 714 729 715 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 139 (set (reg/f:DI 5 di [orig:166 D.51463 ] [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 160 [0xa0])) [3 D.44420.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 716 715 717 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:166 D.51463 ] [166])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 717 716 1353 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 811)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 6983 (nil))
 -> 811)
;;  succ:       159 [69.8%] 
;;              140 [30.2%]  (FALLTHRU)
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 140, loop depth 0, count 0, freq 278, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       139 [30.2%]  (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1353 717 1354 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1354 1353 1355 140 (set (pc)
        (label_ref 817)) 654 {jump}
     (nil)
 -> 817)
;;  succ:       160 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1355 1354 721)
;; basic block 141, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       137 [20.0%] 
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 721 1355 722 141 84 "" [1 uses])
(note 722 721 723 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 725 141 (parallel [
            (set (reg/f:DI 5 di [399])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 725 723 728 141 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 728 725 1356 141 (call (mem:QI (reg/f:DI 0 ax [orig:244 D.51465 ] [244]) [0 *OBJ_TYPE_REF(_327;(struct Env)_325->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              142 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 142, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       141 [100.0%]  (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1356 728 1357 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1357 1356 1358 142 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1358 1357 732)
;; basic block 143, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 142, next block 144, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       136 [19.4%] 
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 732 1358 733 143 83 "" [1 uses])
(note 733 732 734 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 734 733 736 143 (parallel [
            (set (reg/f:DI 5 di [401])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 736 734 739 143 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 739 736 1359 143 (call (mem:QI (reg/f:DI 2 cx [orig:240 D.51465 ] [240]) [0 *OBJ_TYPE_REF(_322;(struct Env)_320->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              144 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 144, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       143 [100.0%]  (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1359 739 1360 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1360 1359 1361 144 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1361 1360 742)
;; basic block 145, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 144, next block 146, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       135 [18.0%] 
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 742 1361 743 145 82 "" [1 uses])
(note 743 742 744 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 746 145 (parallel [
            (set (reg/f:DI 5 di [403])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 746 744 749 145 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 749 746 1362 145 (call (mem:QI (reg/f:DI 0 ax [orig:236 D.51465 ] [236]) [0 *OBJ_TYPE_REF(_317;(struct Env)_315->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              146 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 146, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       145 [100.0%]  (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1362 749 1363 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1363 1362 1364 146 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1364 1363 752)
;; basic block 147, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 146, next block 148, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       134 [18.4%] 
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 752 1364 753 147 81 "" [1 uses])
(note 753 752 754 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 756 147 (parallel [
            (set (reg/f:DI 5 di [405])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 756 754 759 147 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 759 756 1365 147 (call (mem:QI (reg/f:DI 2 cx [orig:232 D.51465 ] [232]) [0 *OBJ_TYPE_REF(_312;(struct Env)_310->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              148 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 148, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       147 [100.0%]  (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1365 759 1366 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1366 1365 1367 148 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1367 1366 762)
;; basic block 149, loop depth 0, count 0, freq 74, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       133 [19.3%] 
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 762 1367 763 149 80 "" [1 uses])
(note 763 762 764 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 766 149 (parallel [
            (set (reg/f:DI 5 di [407])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 766 764 769 149 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 769 766 1368 149 (call (mem:QI (reg/f:DI 0 ax [orig:228 D.51465 ] [228]) [0 *OBJ_TYPE_REF(_307;(struct Env)_305->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              150 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 150, loop depth 0, count 0, freq 74, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       149 [100.0%]  (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1368 769 1369 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1369 1368 1370 150 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1370 1369 772)
;; basic block 151, loop depth 0, count 0, freq 93, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       132 [19.5%] 
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 772 1370 773 151 79 "" [1 uses])
(note 773 772 774 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 776 151 (parallel [
            (set (reg/f:DI 5 di [409])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 776 774 779 151 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 779 776 1371 151 (call (mem:QI (reg/f:DI 2 cx [orig:224 D.51465 ] [224]) [0 *OBJ_TYPE_REF(_302;(struct Env)_300->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 152, loop depth 0, count 0, freq 93, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       151 [100.0%]  (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1371 779 1372 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1372 1371 1373 152 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1373 1372 782)
;; basic block 153, loop depth 0, count 0, freq 116, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       131 [19.6%] 
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 0 [ax] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 782 1373 783 153 78 "" [1 uses])
(note 783 782 784 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 786 153 (parallel [
            (set (reg/f:DI 5 di [411])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 786 784 789 153 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 789 786 1374 153 (call (mem:QI (reg/f:DI 0 ax [orig:220 D.51465 ] [220]) [0 *OBJ_TYPE_REF(_297;(struct Env)_295->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              154 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 154, loop depth 0, count 0, freq 116, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       153 [100.0%]  (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1374 789 1375 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1375 1374 1376 154 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1376 1375 792)
;; basic block 155, loop depth 0, count 0, freq 145, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       130 [19.8%] 
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 2 [cx] 4 [si] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	 17 [flags]
(code_label 792 1376 793 155 77 "" [1 uses])
(note 793 792 794 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 796 155 (parallel [
            (set (reg/f:DI 5 di [413])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 796 794 799 155 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 799 796 1377 155 (call (mem:QI (reg/f:DI 2 cx [orig:216 D.51465 ] [216]) [0 *OBJ_TYPE_REF(_292;(struct Env)_141->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              156 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 156, loop depth 0, count 0, freq 145, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       155 [100.0%]  (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1377 799 1378 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1378 1377 1379 156 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1379 1378 1408)
;; basic block 157, loop depth 0, count 0, freq 185, maybe hot
;; Invalid sum of incoming frequencies 591, should be 185
;;  prev block 156, next block 158, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       201 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	 17 [flags]
(code_label 1408 1379 802 157 204 "" [1 uses])
(note 802 1408 803 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 805 157 (parallel [
            (set (reg/f:DI 5 di [415])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:83 218 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 805 803 806 157 (set (reg:DI 1 dx)
        (reg/f:DI 44 r15 [450])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 806 805 808 157 (set (reg:DI 4 si)
        (reg/v/f:DI 42 r13 [orig:255 env ] [255])) db/builder.cc:83 89 {*movdi_internal}
     (nil))
(call_insn 808 806 1380 157 (call (mem:QI (reg/f:DI 0 ax [orig:159 D.51465 ] [159]) [0 *OBJ_TYPE_REF(_148;(struct Env)env_30(D)->7) S1 A8])
        (const_int 0 [0])) db/builder.cc:83 660 {*call}
     (expr_list:REG_EH_REGION (const_int 2 [0x2])
        (expr_list:REG_CALL_DECL (nil)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              158 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 158, loop depth 0, count 0, freq 185, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       157 [100.0%]  (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1380 808 1381 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1381 1380 1382 158 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

(barrier 1382 1381 811)
;; basic block 159, loop depth 0, count 0, freq 643, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       139 [69.8%] 
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 811 1382 812 159 85 "" [1 uses])
(note 812 811 814 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(call_insn 814 812 817 159 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 6 [bp] 7 [sp] 44 [r15]

;; basic block 160, loop depth 0, count 0, freq 5952, maybe hot
;; Invalid sum of incoming frequencies 3935, should be 5952
;;  prev block 159, next block 161, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       46 [93.3%] 
;;              159 [100.0%]  (FALLTHRU)
;;              128 [50.0%] 
;;              140 [100.0%] 
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 817 814 818 160 70 "" [3 uses])
(note 818 817 819 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 821 160 (set (reg/f:DI 5 di [orig:160 D.51472 ] [160])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 821 819 822 160 (parallel [
            (set (reg/f:DI 0 ax [418])
                (plus:DI (reg/f:DI 44 r15 [450])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (nil))
(insn 822 821 823 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:160 D.51472 ] [160])
            (reg/f:DI 0 ax [418]))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (nil))
(jump_insn 823 822 824 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 989)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 989)
;;  succ:       161 [78.3%]  (FALLTHRU)
;;              202 [21.6%] 
;; lr  out 	 5 [di] 6 [bp] 7 [sp]
;; live  out 	 5 [di] 6 [bp] 7 [sp]

;; basic block 161, loop depth 0, count 0, freq 4664, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       160 [78.3%]  (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 824 823 826 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(call_insn 826 824 1383 161 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1383 826 1384 161 (set (pc)
        (label_ref 989)) 654 {jump}
     (nil)
 -> 989)
;;  succ:       202 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 1384 1383 1059)
;; basic block 162, loop depth 0, count 0, freq 0
;;  prev block 161, next block 164, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       40 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 162 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 162 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1059 1384 1062 162 119 "" [1 uses])
(note 1062 1059 1060 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1062 833 162 (set (reg:DI 3 bx [421])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 833 1060 834 162 (set (reg/f:DI 5 di [orig:161 D.51463 ] [161])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 48 [0x30])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 834 833 835 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:161 D.51463 ] [161])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 835 834 836 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       164 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 164, loop depth 0, count 0, freq 0
;;  prev block 162, next block 166, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       162 [69.8%]  (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 836 835 838 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(call_insn 838 836 1385 164 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1385 838 1386 164 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1386 1385 1063)
;; basic block 166, loop depth 0, count 0, freq 0
;;  prev block 164, next block 168, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 166 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 166 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di]
;; live  kill	
(code_label/s 1063 1386 1066 166 120 "" [1 uses])
(note 1066 1063 1064 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1064 1066 847 166 (set (reg:DI 3 bx [424])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 847 1064 848 166 (set (reg:DI 5 di)
        (mem/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [19 %sfp+-216 S8 A64])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 848 847 1387 166 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1387 848 1388 166 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1388 1387 1067)
;; basic block 168, loop depth 0, count 0, freq 0
;;  prev block 166, next block 170, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       66 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 168 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 168 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1067 1388 1070 168 121 "" [1 uses])
(note 1070 1067 1068 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1068 1070 855 168 (set (reg:DI 3 bx [426])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 855 1068 856 168 (set (reg/f:DI 5 di [orig:148 D.51463 ] [148])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 64 [0x40])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 856 855 857 168 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:148 D.51463 ] [148])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 857 856 858 168 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       170 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 170, loop depth 0, count 0, freq 0
;;  prev block 168, next block 172, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       168 [69.8%]  (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 858 857 860 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(call_insn 860 858 1389 170 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1389 860 1390 170 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1390 1389 1071)
;; basic block 172, loop depth 0, count 0, freq 0
;;  prev block 170, next block 174, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       82 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 172 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 172 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1071 1390 1074 172 122 "" [1 uses])
(note 1074 1071 1072 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1072 1074 869 172 (set (reg:DI 3 bx [428])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 869 1072 870 172 (set (reg/f:DI 5 di [orig:120 D.51463 ] [120])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 80 [0x50])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 870 869 871 172 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:120 D.51463 ] [120])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 871 870 872 172 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       174 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 174, loop depth 0, count 0, freq 0
;;  prev block 172, next block 176, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       172 [69.8%]  (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 872 871 874 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(call_insn 874 872 1391 174 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1391 874 1392 174 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1392 1391 1075)
;; basic block 176, loop depth 0, count 0, freq 0
;;  prev block 174, next block 178, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       94 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 176 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 176 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1075 1392 1078 176 123 "" [1 uses])
(note 1078 1075 1076 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 1076 1078 883 176 (set (reg:DI 3 bx [430])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 883 1076 884 176 (set (reg/f:DI 5 di [orig:127 D.51463 ] [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 96 [0x60])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 884 883 885 176 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:127 D.51463 ] [127])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 885 884 886 176 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       178 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 178, loop depth 0, count 0, freq 0
;;  prev block 176, next block 180, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       176 [69.8%]  (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 886 885 888 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(call_insn 888 886 1393 178 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1393 888 1394 178 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1394 1393 1079)
;; basic block 180, loop depth 0, count 0, freq 0
;;  prev block 178, next block 182, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       109 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 180 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 180 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1079 1394 1082 180 124 "" [1 uses])
(note 1082 1079 1080 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1082 897 180 (set (reg:DI 3 bx [432])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 897 1080 898 180 (set (reg/f:DI 5 di [orig:134 D.51463 ] [134])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 112 [0x70])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 898 897 899 180 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:134 D.51463 ] [134])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 899 898 900 180 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       182 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 182, loop depth 0, count 0, freq 0
;;  prev block 180, next block 184, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       180 [69.8%]  (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 900 899 902 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(call_insn 902 900 1395 182 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1395 902 1396 182 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1396 1395 1083)
;; basic block 184, loop depth 0, count 0, freq 0
;;  prev block 182, next block 186, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       121 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 184 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 184 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label/s 1083 1396 1086 184 125 "" [1 uses])
(note 1086 1083 1084 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1086 911 184 (set (reg:DI 3 bx [434])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
(insn 911 1084 912 184 (set (reg/f:DI 5 di [orig:147 D.51463 ] [147])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 144 [0x90])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 912 911 913 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:147 D.51463 ] [147])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 913 912 914 184 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 921)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 921)
;;  succ:       186 [69.8%]  (FALLTHRU)
;;              189 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]

;; basic block 186, loop depth 0, count 0, freq 0
;;  prev block 184, next block 188, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       184 [69.8%]  (FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	
;; live  kill	
(note 914 913 916 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(call_insn 916 914 1397 186 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1397 916 1398 186 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

(barrier 1398 1397 1053)
;; basic block 188, loop depth 0, count 0, freq 0
;;  prev block 186, next block 189, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              54 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              56 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 (ABNORMAL,ABNORMAL_CALL,EH)
;;              74 (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 (ABNORMAL,ABNORMAL_CALL,EH)
;;              88 (ABNORMAL,ABNORMAL_CALL,EH)
;;              102 (ABNORMAL,ABNORMAL_CALL,EH)
;;              103 (ABNORMAL,ABNORMAL_CALL,EH)
;;              114 (ABNORMAL,ABNORMAL_CALL,EH)
;;              116 (ABNORMAL,ABNORMAL_CALL,EH)
;;              138 (ABNORMAL,ABNORMAL_CALL,EH)
;;              141 (ABNORMAL,ABNORMAL_CALL,EH)
;;              143 (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 (ABNORMAL,ABNORMAL_CALL,EH)
;;              147 (ABNORMAL,ABNORMAL_CALL,EH)
;;              149 (ABNORMAL,ABNORMAL_CALL,EH)
;;              151 (ABNORMAL,ABNORMAL_CALL,EH)
;;              153 (ABNORMAL,ABNORMAL_CALL,EH)
;;              155 (ABNORMAL,ABNORMAL_CALL,EH)
;;              157 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 188 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 188 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 44 [r15]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1053 1398 1058 188 118 "" [1 uses])
(note 1058 1053 1054 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1058 921 188 (set (reg:DI 3 bx [420])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
;;  succ:       189 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 44 [r15]

;; basic block 189, loop depth 0, count 0, freq 0
;;  prev block 188, next block 190, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       178 [100.0%] 
;;              188 [100.0%]  (FALLTHRU)
;;              174 [100.0%] 
;;              166 [100.0%] 
;;              182 [100.0%] 
;;              170 [100.0%] 
;;              164 [100.0%] 
;;              186 [100.0%] 
;;              162 [30.2%] 
;;              168 [30.2%] 
;;              172 [30.2%] 
;;              176 [30.2%] 
;;              180 [30.2%] 
;;              184 [30.2%] 
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 921 1054 922 189 91 "" [13 uses])
(note 922 921 923 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 923 922 925 189 (set (reg/f:DI 5 di [orig:156 D.51472 ] [156])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 176 [0xb0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 925 923 926 189 (parallel [
            (set (reg/f:DI 0 ax [437])
                (plus:DI (reg/f:DI 44 r15 [450])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (nil))
(insn 926 925 927 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:156 D.51472 ] [156])
            (reg/f:DI 0 ax [437]))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (nil))
(jump_insn 927 926 928 189 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 935)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 935)
;;  succ:       190 [69.8%]  (FALLTHRU)
;;              193 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 190, loop depth 0, count 0, freq 0
;;  prev block 189, next block 192, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       189 [69.8%]  (FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 928 927 930 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(call_insn 930 928 1399 190 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1399 930 1400 190 (set (pc)
        (label_ref 935)) 654 {jump}
     (nil)
 -> 935)
;;  succ:       193 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 1400 1399 1047)
;; basic block 192, loop depth 0, count 0, freq 0
;;  prev block 190, next block 193, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 192 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 192 artificial_uses: { u-1(7){ }u-1(16){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp]
;; lr  use 	 7 [sp] 16 [argp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label/s 1047 1400 1052 192 117 "" [1 uses])
(note 1052 1047 1048 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1052 935 192 (set (reg:DI 3 bx [438])
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (nil))
;;  succ:       193 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 193, loop depth 0, count 0, freq 0
;;  prev block 192, next block 194, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       192 [100.0%]  (FALLTHRU)
;;              190 [100.0%] 
;;              189 [30.2%] 
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(code_label 935 1048 936 193 104 "" [2 uses])
(note 936 935 937 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 193 (set (reg/f:DI 5 di [orig:162 D.51463 ] [162])
        (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 938 937 939 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:162 D.51463 ] [162])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 939 938 940 193 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 943)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 3017 (nil))
 -> 943)
;;  succ:       194 [69.8%]  (FALLTHRU)
;;              195 [30.2%] 
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 194, loop depth 0, count 0, freq 0
;;  prev block 193, next block 195, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       193 [69.8%]  (FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 940 939 942 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(call_insn 942 940 943 194 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       195 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 195, loop depth 0, count 0, freq 0
;;  prev block 194, next block 196, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       193 [30.2%] 
;;              194 [100.0%]  (FALLTHRU)
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 943 942 944 195 105 "" [1 uses])
(note 944 943 946 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 946 944 947 195 (set (reg:DI 5 di)
        (reg:DI 3 bx [438])) 89 {*movdi_internal}
     (nil))
(call_insn 947 946 948 195 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 948 947 949)
;; basic block 196, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 195, next block 197, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       70 [30.2%] 
;;              71 [100.0%] 
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 949 948 950 196 52 "" [2 uses])
(note 950 949 952 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 952 950 953 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 6 bp [orig:253 <retval> ] [253]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:46 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 953 952 1401 196 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) db/builder.cc:46 612 {*jcc_1}
     (int_list:REG_BR_PROB 9328 (nil))
 -> 405)
;;  succ:       197 [6.7%]  (FALLTHRU)
;;              75 [93.3%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 197, loop depth 0, count 0, freq 2
;;  prev block 196, next block 198, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       196 [6.7%]  (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1401 953 1402 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1402 1401 1403 197 (set (pc)
        (label_ref 951)) 654 {jump}
     (nil)
 -> 951)
;;  succ:       72 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1403 1402 961)
;; basic block 198, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 197, next block 199, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       104 [10.1%] 
;;              111 [100.0%] 
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 961 1403 962 198 67 "" [2 uses])
(note 962 961 965 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 965 962 966 198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:449 D.51463 ] [449])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 966 965 1404 198 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 964)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (int_list:REG_BR_PROB 6983 (nil))
 -> 964)
;;  succ:       112 [69.8%] 
;;              199 [30.2%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 199, loop depth 0, count 0, freq 4
;;  prev block 198, next block 200, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       198 [30.2%]  (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1404 966 1405 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1405 1404 1406 199 (set (pc)
        (label_ref 958)) 654 {jump}
     (nil)
 -> 958)
;;  succ:       113 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 16 [argp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1406 1405 976)
;; basic block 200, loop depth 0, count 0, freq 2938, maybe hot
;;  prev block 199, next block 201, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       127 [85.0%] 
;;              129 [100.0%] 
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 976 1406 977 200 76 "" [2 uses])
(note 977 976 978 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 978 977 979 200 (set (reg/f:DI 0 ax [orig:440 env_30(D)->_vptr.Env ] [440])
        (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 42 r13 [orig:255 env ] [255]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 979 978 981 200 (set (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:440 env_30(D)->_vptr.Env ] [440])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_147 + 56B]+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (nil))
(note 981 979 983 200 NOTE_INSN_DELETED)
(insn 983 981 984 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:159 D.51465 ] [159])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 984 983 1407 200 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 980)
            (pc))) 612 {*jcc_1}
     (int_list:REG_BR_PROB 7987 (nil))
 -> 980)
;;  succ:       130 [79.9%] 
;;              201 [20.1%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]

;; basic block 201, loop depth 0, count 0, freq 591, maybe hot
;;  prev block 200, next block 202, flags: (NEW, REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       200 [20.1%]  (FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1407 984 1409 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1409 1407 1410 201 (set (pc)
        (label_ref 1408)) 654 {jump}
     (nil)
 -> 1408)
;;  succ:       157 [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]

(barrier 1410 1409 989)
;; basic block 202, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 201, next block 203, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       160 [21.6%] 
;;              161 [100.0%] 
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 2 [cx]
(code_label 989 1410 999 202 28 "" [2 uses])
(note 999 989 991 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 991 999 993 202 (set (reg/i:DI 0 ax)
        (reg/f:DI 6 bp [orig:253 <retval> ] [253])) db/builder.cc:86 89 {*movdi_internal}
     (nil))
(insn 993 991 994 202 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 216 [0xd8])) [3 D.51474+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 2 cx [455]))
        ]) db/builder.cc:86 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 994 993 1045 202 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 997)
            (pc))) db/builder.cc:86 612 {*jcc_1}
     (int_list:REG_BR_PROB 9996 (nil))
 -> 997)
;;  succ:       204 [100.0%] 
;;              203 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 203, loop depth 0, count 0, freq 2
;;  prev block 202, next block 204, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       202 [0.0%]  (FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1045 994 995 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(call_insn 995 1045 996 203 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/builder.cc:86 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 996 995 997)
;; basic block 204, loop depth 0, count 0, freq 5950, maybe hot
;;  prev block 203, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       202 [100.0%] 
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 997 996 1046 204 113 "" [1 uses])
(note 1046 997 998 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 998 1046 1411 204 (use (reg/i:DI 0 ax)) db/builder.cc:86 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(note 1411 998 0 NOTE_INSN_DELETED)
