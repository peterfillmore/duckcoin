
;; Function int main() (main, funcdef_no=0, decl_uid=2324, cgraph_uid=0, symbol_order=0) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=3
  mem: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:DI (reg/f:DI 20 frame)
    (const_int -8 [0xfffffffffffffff8]))
  gid=0 offset=-8 
 processing const base store gid=0[-8..0)
mems_found = 1, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f772d2fb6c0 __stack_chk_fail>)

   after canon_rtx address: (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f772d2fb6c0 __stack_chk_fail>)
  gid=1 offset=0 
 processing const load gid=1[0..1)

**scanning insn=16
mems_found = 0, cannot_delete = false
group 0 is frame related group 0(8+0): n 1, 2, 3, 4, 5, 6, 7, 8 p 
group 1(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8

( 0 )->[2]->( 4 3 )
  in:   1, 2, 3, 4, 5, 6, 7, 8
  gen:  1, 2, 3, 4, 5, 6, 7, 8
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8

( 2 )->[3]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8

( 2 )->[4]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8

( 4 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8
  gen:  1, 2, 3, 4, 5, 6, 7, 8
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 12
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 11
  v:  1, 2, 3, 4, 5, 6, 7, 8
wild read
starting to process insn 10
  v:  
starting to process insn 3
  v:  
starting to process insn 13
  v:  1, 2, 3, 4, 5, 6, 7, 8
non-frame wild read
starting to process insn 16
  v:  1, 2, 3, 4, 5, 6, 7, 8
dse: local deletions = 0, global deletions = 0, spill deletions = 0
starting the processing of deferred insns
ending the processing of deferred insns


int main()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 7[sp] 17[flags]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r4={2d} r5={2d} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={3d,1u} r18={1d} r19={1d} r20={1d,6u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 115{94d,21u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.2333+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) <stdin>:1 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 3 11 2 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) <stdin>:1 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.2333+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) <stdin>:1 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 12 11 18 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) <stdin>:1 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 15)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 18 12 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 13 18 15 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f772d2fb6c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) <stdin>:1 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f772d2fb6c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(6){ }u13(7){ }u14(16){ }u15(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 15 13 19 4 2 "" [1 uses])
(note 19 15 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 19 0 4 (use (reg/i:SI 0 ax)) <stdin>:1 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

