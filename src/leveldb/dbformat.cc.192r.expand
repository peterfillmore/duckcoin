
;; Function virtual const char* leveldb::InternalKeyComparator::Name() const (_ZNK7leveldb21InternalKeyComparator4NameEv, funcdef_no=1420, decl_uid=30090, cgraph_uid=590, symbol_order=602)

virtual const char* leveldb::InternalKeyComparator::Name() const (const struct InternalKeyComparator * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return "leveldb.InternalKeyComparator";
;;    succ:       EXIT

}



Partition map 


After Coalescing:

Partition map 


virtual const char* leveldb::InternalKeyComparator::Name() const (const struct InternalKeyComparator * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  return "leveldb.InternalKeyComparator";
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return "leveldb.InternalKeyComparator";

(insn 6 5 7 (set (reg:DI 87 [ <retval> ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7feb014d1a20 *.LC0>)) db/dbformat.cc:47 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) db/dbformat.cc:47 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 88 [ this ])
        (reg:DI 5 di [ this ])) db/dbformat.cc:46 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 10 2 (set (reg:DI 87 [ <retval> ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7feb014d1a20 *.LC0>)) db/dbformat.cc:47 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg:DI 87 [ <retval> ])) db/dbformat.cc:48 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) db/dbformat.cc:48 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual int leveldb::InternalKeyComparator::Compare(const leveldb::Slice&, const leveldb::Slice&) const (_ZNK7leveldb21InternalKeyComparator7CompareERKNS_5SliceES3_, funcdef_no=1421, decl_uid=30094, cgraph_uid=591, symbol_order=603)

virtual int leveldb::InternalKeyComparator::Compare(const leveldb::Slice&, const leveldb::Slice&) const (const struct InternalKeyComparator * const this, const struct Slice & akey, const struct Slice & bkey)
{
  int r;
  struct Slice D.30479;
  struct Slice D.30480;
  const struct Comparator * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  long unsigned int _8;
  long unsigned int _10;
  const char * _15;
  sizetype _16;
  const char * _17;
  long unsigned int _18;
  const char * _19;
  long unsigned int _20;
  sizetype _21;
  const char * _22;
  long unsigned int _23;
  const char * _25;
  const char * _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  bool _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->user_comparator_;
  _5 = _4->_vptr.Comparator;
  _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B];
  _10 = MEM[(long unsigned int *)bkey_7(D) + 8B];
  _18 = _10 + 18446744073709551608;
  _15 = MEM[(const char * *)bkey_7(D)];
  MEM[(struct Slice *)&D.30480] = _15;
  MEM[(struct Slice *)&D.30480 + 8B] = _18;
  _23 = MEM[(long unsigned int *)akey_9(D) + 8B];
  _20 = _23 + 18446744073709551608;
  _19 = MEM[(const char * *)akey_9(D)];
  MEM[(struct Slice *)&D.30479] = _19;
  MEM[(struct Slice *)&D.30479 + 8B] = _20;
  r_12 = OBJ_TYPE_REF(_6;(const struct Comparator)_4->2) (_4, &D.30479, &D.30480);
  D.30479 ={v} {CLOBBER};
  D.30480 ={v} {CLOBBER};
  if (r_12 == 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _25 = MEM[(const char * *)akey_9(D)];
  _27 = MEM[(long unsigned int *)akey_9(D) + 8B];
  _16 = _27 + 18446744073709551608;
  _17 = _25 + _16;
  _29 = MEM[(char * {ref-all})_17];
  _26 = MEM[(const char * *)bkey_7(D)];
  _28 = MEM[(long unsigned int *)bkey_7(D) + 8B];
  _21 = _28 + 18446744073709551608;
  _22 = _26 + _21;
  _8 = MEM[(char * {ref-all})_22];
  if (_8 < _29)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _39 = _8 > _29;
  r_35 = (int) _39;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  # r_1 = PHI <r_12(2), r_35(4), -1(3)>
  return r_1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (r_1 - 1 )
Partition 3 (this_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (bkey_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (akey_9(D) - 9 )
Partition 10 (_10 - 10 )
Partition 12 (r_12 - 12 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 35 (r_35 - 35 )
Partition 39 (_39 - 39 )


Partition map 

Partition 0 (r_1 - 1 )
Partition 1 (this_3(D) - 3 )
Partition 2 (bkey_7(D) - 7 )
Partition 3 (akey_9(D) - 9 )
Partition 4 (r_12 - 12 )
Partition 5 (r_35 - 35 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(7800) r_1 <-> r_12
(5856) r_1 <-> r_35

Partition map 

Partition 0 (r_1 - 1 )
Partition 1 (this_3(D) - 3 )
Partition 2 (bkey_7(D) - 7 )
Partition 3 (akey_9(D) - 9 )
Partition 4 (r_12 - 12 )
Partition 5 (r_35 - 35 )

Coalesce list: (1)r_1 & (12)r_12 [map: 0, 4] : Success -> 0
Coalesce list: (1)r_1 & (35)r_35 [map: 0, 5] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (r_1 - 1 12 35 )
Partition 1 (this_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_6 - 6 )
Partition 5 (bkey_7(D) - 7 )
Partition 6 (_8 - 8 )
Partition 7 (akey_9(D) - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_15 - 15 )
Partition 10 (_16 - 16 )
Partition 11 (_17 - 17 )
Partition 12 (_18 - 18 )
Partition 13 (_19 - 19 )
Partition 14 (_20 - 20 )
Partition 15 (_21 - 21 )
Partition 16 (_22 - 22 )
Partition 17 (_23 - 23 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_27 - 27 )
Partition 21 (_28 - 28 )
Partition 22 (_29 - 29 )
Partition 23 (_39 - 39 )


Replacing Expressions
_5 replace with --> _5 = _4->_vptr.Comparator;

_10 replace with --> _10 = MEM[(long unsigned int *)bkey_7(D) + 8B];

_15 replace with --> _15 = MEM[(const char * *)bkey_7(D)];

_16 replace with --> _16 = _27 + 18446744073709551608;

_17 replace with --> _17 = _25 + _16;

_19 replace with --> _19 = MEM[(const char * *)akey_9(D)];

_21 replace with --> _21 = _28 + 18446744073709551608;

_22 replace with --> _22 = _26 + _21;

_23 replace with --> _23 = MEM[(long unsigned int *)akey_9(D) + 8B];

_25 replace with --> _25 = MEM[(const char * *)akey_9(D)];

_26 replace with --> _26 = MEM[(const char * *)bkey_7(D)];

_27 replace with --> _27 = MEM[(long unsigned int *)akey_9(D) + 8B];

_28 replace with --> _28 = MEM[(long unsigned int *)bkey_7(D) + 8B];

_39 replace with --> _39 = _8 > _29;


virtual int leveldb::InternalKeyComparator::Compare(const leveldb::Slice&, const leveldb::Slice&) const (const struct InternalKeyComparator * const this, const struct Slice & akey, const struct Slice & bkey)
{
  int r;
  struct Slice D.30479;
  struct Slice D.30480;
  const struct Comparator * _4;
  int (*__vtbl_ptr_type) () * _5;
  int (*__vtbl_ptr_type) () _6;
  long unsigned int _8;
  long unsigned int _10;
  const char * _15;
  sizetype _16;
  const char * _17;
  long unsigned int _18;
  const char * _19;
  long unsigned int _20;
  sizetype _21;
  const char * _22;
  long unsigned int _23;
  const char * _25;
  const char * _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  bool _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = this_3(D)->user_comparator_;
  _5 = _4->_vptr.Comparator;
  _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B];
  _10 = MEM[(long unsigned int *)bkey_7(D) + 8B];
  _18 = _10 + 18446744073709551608;
  _15 = MEM[(const char * *)bkey_7(D)];
  MEM[(struct Slice *)&D.30480] = _15;
  MEM[(struct Slice *)&D.30480 + 8B] = _18;
  _23 = MEM[(long unsigned int *)akey_9(D) + 8B];
  _20 = _23 + 18446744073709551608;
  _19 = MEM[(const char * *)akey_9(D)];
  MEM[(struct Slice *)&D.30479] = _19;
  MEM[(struct Slice *)&D.30479 + 8B] = _20;
  r_12 = OBJ_TYPE_REF(_6;(const struct Comparator)_4->2) (_4, &D.30479, &D.30480);
  D.30479 ={v} {CLOBBER};
  D.30480 ={v} {CLOBBER};
  if (r_12 == 0)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _25 = MEM[(const char * *)akey_9(D)];
  _27 = MEM[(long unsigned int *)akey_9(D) + 8B];
  _16 = _27 + 18446744073709551608;
  _17 = _25 + _16;
  _29 = MEM[(char * {ref-all})_17];
  _26 = MEM[(const char * *)bkey_7(D)];
  _28 = MEM[(long unsigned int *)bkey_7(D) + 8B];
  _21 = _28 + 18446744073709551608;
  _22 = _26 + _21;
  _8 = MEM[(char * {ref-all})_22];
  if (_8 < _29)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _39 = _8 > _29;
  r_35 = (int) _39;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                4
;;                3
  # r_1 = PHI <r_12(2), r_35(4), -1(3)>
  return r_1;
;;    succ:       EXIT

}


Partition 1: size 16 align 16
	D.30480
Partition 0: size 16 align 16
	D.30479
Inserting a value copy on edge BB3->BB5 : PART.0 = -1

;; Generating RTL for gimple basic block 2

;; _4 = this_3(D)->user_comparator_;

(insn 11 10 0 (set (reg/f:DI 88 [ D.33293 ])
        (mem/f:DI (plus:DI (reg/f:DI 109 [ this ])
                (const_int 8 [0x8])) [3 this_3(D)->user_comparator_+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))

;; _6 = MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B];

(insn 12 11 13 (set (reg/f:DI 113)
        (mem/f:DI (reg/f:DI 88 [ D.33293 ]) [3 _4->_vptr.Comparator+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))

(insn 13 12 0 (set (reg/f:DI 90 [ D.33295 ])
        (mem/f:DI (plus:DI (reg/f:DI 113)
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))

;; _18 = _10 + 18446744073709551608;

(insn 14 13 15 (set (reg:DI 114)
        (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])) ./db/dbformat.h:100 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg:DI 96 [ D.33296 ])
                (plus:DI (reg:DI 114)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                    (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

;; MEM[(struct Slice *)&D.30480] = _15;

(insn 16 15 17 (set (reg/f:DI 115)
        (mem/f:DI (reg/v/f:DI 111 [ bkey ]) [3 MEM[(const char * *)bkey_7(D)]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))

(insn 17 16 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 MEM[(struct Slice *)&D.30480]+0 S8 A128])
        (reg/f:DI 115)) db/dbformat.cc:55 -1
     (nil))

;; MEM[(struct Slice *)&D.30480 + 8B] = _18;

(insn 18 17 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 MEM[(struct Slice *)&D.30480 + 8B]+0 S8 A64])
        (reg:DI 96 [ D.33296 ])) db/dbformat.cc:55 -1
     (nil))

;; _20 = _23 + 18446744073709551608;

(insn 19 18 20 (set (reg:DI 116)
        (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])) ./db/dbformat.h:100 -1
     (nil))

(insn 20 19 0 (parallel [
            (set (reg:DI 98 [ D.33296 ])
                (plus:DI (reg:DI 116)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                    (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

;; MEM[(struct Slice *)&D.30479] = _19;

(insn 21 20 22 (set (reg/f:DI 117)
        (mem/f:DI (reg/v/f:DI 110 [ akey ]) [3 MEM[(const char * *)akey_9(D)]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))

(insn 22 21 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 MEM[(struct Slice *)&D.30479]+0 S8 A128])
        (reg/f:DI 117)) db/dbformat.cc:55 -1
     (nil))

;; MEM[(struct Slice *)&D.30479 + 8B] = _20;

(insn 23 22 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 MEM[(struct Slice *)&D.30479 + 8B]+0 S8 A64])
        (reg:DI 98 [ D.33296 ])) db/dbformat.cc:55 -1
     (nil))

;; r_12 = OBJ_TYPE_REF(_6;_4->2) (_4, &D.30479, &D.30480);

(insn 24 23 25 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:55 -1
     (nil))

(insn 25 24 26 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:55 -1
     (nil))

(insn 26 25 27 (set (reg:DI 1 dx)
        (reg:DI 118)) db/dbformat.cc:55 -1
     (nil))

(insn 27 26 28 (set (reg:DI 4 si)
        (reg:DI 119)) db/dbformat.cc:55 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.33293 ])) db/dbformat.cc:55 -1
     (nil))

(call_insn 29 28 30 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 90 [ D.33295 ]) [0 *OBJ_TYPE_REF(_6;(const struct Comparator)_4->2) S1 A8])
            (const_int 0 [0]))) db/dbformat.cc:55 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

(insn 30 29 0 (set (reg/v:SI 87 [ r ])
        (reg:SI 0 ax)) db/dbformat.cc:55 -1
     (nil))

;; D.30479 ={v} {CLOBBER};

(nil)

;; D.30480 ={v} {CLOBBER};

(nil)

;; if (r_12 == 0)

(insn 31 30 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ r ])
            (const_int 0 [0]))) db/dbformat.cc:56 -1
     (nil))

(jump_insn 32 31 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) db/dbformat.cc:56 -1
     (int_list:REG_BR_PROB 3900 (nil)))

;; Generating RTL for gimple basic block 3

;; _29 = MEM[(char * {ref-all})_17];

(insn 34 33 35 (set (reg/f:DI 120)
        (mem/f:DI (reg/v/f:DI 110 [ akey ]) [3 MEM[(const char * *)akey_9(D)]+0 S8 A64])) -1
     (nil))

(insn 35 34 36 (set (reg:DI 121)
        (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])) -1
     (nil))

(insn 36 35 0 (set (reg:DI 106 [ D.33296 ])
        (mem:DI (plus:DI (plus:DI (reg/f:DI 120)
                    (reg:DI 121))
                (const_int -8 [0xfffffffffffffff8])) [0 MEM[(char * {ref-all})_17]+0 S8 A8])) -1
     (nil))

;; _8 = MEM[(char * {ref-all})_22];

(insn 37 36 38 (set (reg/f:DI 122)
        (mem/f:DI (reg/v/f:DI 111 [ bkey ]) [3 MEM[(const char * *)bkey_7(D)]+0 S8 A64])) -1
     (nil))

(insn 38 37 39 (set (reg:DI 123)
        (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])) -1
     (nil))

(insn 39 38 0 (set (reg:DI 91 [ D.33296 ])
        (mem:DI (plus:DI (plus:DI (reg/f:DI 122)
                    (reg:DI 123))
                (const_int -8 [0xfffffffffffffff8])) [0 MEM[(char * {ref-all})_22]+0 S8 A8])) -1
     (nil))

;; if (_8 < _29)

(insn 40 39 41 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.33296 ])
            (reg:DI 106 [ D.33296 ]))) db/dbformat.cc:59 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) db/dbformat.cc:59 -1
     (int_list:REG_BR_PROB 400 (nil)))

;; Generating RTL for gimple basic block 4

;; r_35 = (int) _39;

(insn 43 42 44 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.33296 ])
            (reg:DI 106 [ D.33296 ]))) -1
     (nil))

(insn 44 43 45 (set (reg:QI 125)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))

(insn 45 44 46 (set (reg:SI 124 [ D.33299 ])
        (zero_extend:SI (reg:QI 125))) -1
     (nil))

(insn 46 45 0 (set (reg/v:SI 87 [ r ])
        (reg:SI 124 [ D.33299 ])) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 47 46 48 3 "" [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; return r_1;

(insn 49 48 50 (set (reg:SI 108 [ <retval> ])
        (reg/v:SI 87 [ r ])) db/dbformat.cc:65 -1
     (nil))

(jump_insn 50 49 51 (set (pc)
        (label_ref 0)) db/dbformat.cc:65 -1
     (nil))

(barrier 51 50 0)
Edge 3->5 redirected to 8
Predictions for insn 56 bb 7
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 50.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/f:DI 109 [ this ])
        (reg:DI 5 di [ this ])) db/dbformat.cc:50 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 110 [ akey ])
        (reg:DI 4 si [ akey ])) db/dbformat.cc:50 -1
     (nil))
(insn 4 3 5 2 (set (reg/v/f:DI 111 [ bkey ])
        (reg:DI 1 dx [ bkey ])) db/dbformat.cc:50 -1
     (nil))
(note 5 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 5 7 2 (set (reg/f:DI 112)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7feb014b3d80 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [15  S8 A8])) db/dbformat.cc:50 -1
     (nil))
(insn 7 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.33300+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:50 -1
     (nil))
(insn 11 7 12 2 (set (reg/f:DI 88 [ D.33293 ])
        (mem/f:DI (plus:DI (reg/f:DI 109 [ this ])
                (const_int 8 [0x8])) [3 this_3(D)->user_comparator_+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 113)
        (mem/f:DI (reg/f:DI 88 [ D.33293 ]) [3 _4->_vptr.Comparator+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 90 [ D.33295 ])
        (mem/f:DI (plus:DI (reg/f:DI 113)
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 114)
        (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])) ./db/dbformat.h:100 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg:DI 96 [ D.33296 ])
                (plus:DI (reg:DI 114)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                    (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 115)
        (mem/f:DI (reg/v/f:DI 111 [ bkey ]) [3 MEM[(const char * *)bkey_7(D)]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [11 MEM[(struct Slice *)&D.30480]+0 S8 A128])
        (reg/f:DI 115)) db/dbformat.cc:55 -1
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [11 MEM[(struct Slice *)&D.30480 + 8B]+0 S8 A64])
        (reg:DI 96 [ D.33296 ])) db/dbformat.cc:55 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 116)
        (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])) ./db/dbformat.h:100 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:DI 98 [ D.33296 ])
                (plus:DI (reg:DI 116)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:100 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                    (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 117)
        (mem/f:DI (reg/v/f:DI 110 [ akey ]) [3 MEM[(const char * *)akey_9(D)]+0 S8 A64])) db/dbformat.cc:55 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [11 MEM[(struct Slice *)&D.30479]+0 S8 A128])
        (reg/f:DI 117)) db/dbformat.cc:55 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [11 MEM[(struct Slice *)&D.30479 + 8B]+0 S8 A64])
        (reg:DI 98 [ D.33296 ])) db/dbformat.cc:55 -1
     (nil))
(insn 24 23 25 2 (parallel [
            (set (reg:DI 118)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:55 -1
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg:DI 119)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:55 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg:DI 118)) db/dbformat.cc:55 -1
     (nil))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg:DI 119)) db/dbformat.cc:55 -1
     (nil))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.33293 ])) db/dbformat.cc:55 -1
     (nil))
(call_insn 29 28 30 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 90 [ D.33295 ]) [0 *OBJ_TYPE_REF(_6;(const struct Comparator)_4->2) S1 A8])
            (const_int 0 [0]))) db/dbformat.cc:55 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 30 29 31 2 (set (reg/v:SI 87 [ r ])
        (reg:SI 0 ax)) db/dbformat.cc:55 -1
     (nil))
(insn 31 30 32 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ r ])
            (const_int 0 [0]))) db/dbformat.cc:56 -1
     (nil))
(jump_insn 32 31 33 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 47)
            (pc))) db/dbformat.cc:56 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 47)
;;  succ:       4 [61.0%]  (FALLTHRU)
;;              7 [39.0%] 

;; basic block 4, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/f:DI 120)
        (mem/f:DI (reg/v/f:DI 110 [ akey ]) [3 MEM[(const char * *)akey_9(D)]+0 S8 A64])) -1
     (nil))
(insn 35 34 36 4 (set (reg:DI 121)
        (mem:DI (plus:DI (reg/v/f:DI 110 [ akey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)akey_9(D) + 8B]+0 S8 A64])) -1
     (nil))
(insn 36 35 37 4 (set (reg:DI 106 [ D.33296 ])
        (mem:DI (plus:DI (plus:DI (reg/f:DI 120)
                    (reg:DI 121))
                (const_int -8 [0xfffffffffffffff8])) [0 MEM[(char * {ref-all})_17]+0 S8 A8])) -1
     (nil))
(insn 37 36 38 4 (set (reg/f:DI 122)
        (mem/f:DI (reg/v/f:DI 111 [ bkey ]) [3 MEM[(const char * *)bkey_7(D)]+0 S8 A64])) -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 123)
        (mem:DI (plus:DI (reg/v/f:DI 111 [ bkey ])
                (const_int 8 [0x8])) [6 MEM[(long unsigned int *)bkey_7(D) + 8B]+0 S8 A64])) -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 91 [ D.33296 ])
        (mem:DI (plus:DI (plus:DI (reg/f:DI 122)
                    (reg:DI 123))
                (const_int -8 [0xfffffffffffffff8])) [0 MEM[(char * {ref-all})_22]+0 S8 A8])) -1
     (nil))
(insn 40 39 41 4 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.33296 ])
            (reg:DI 106 [ D.33296 ]))) db/dbformat.cc:59 -1
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 65)
            (pc))) db/dbformat.cc:59 612 {*jcc_1}
     (int_list:REG_BR_PROB 400 (nil))
 -> 65)
;;  succ:       6 [4.0%] 
;;              5 [96.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 5856, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [96.0%]  (FALLTHRU)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 5 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 91 [ D.33296 ])
            (reg:DI 106 [ D.33296 ]))) -1
     (nil))
(insn 44 43 45 5 (set (reg:QI 125)
        (gtu:QI (reg:CC 17 flags)
            (const_int 0 [0]))) -1
     (nil))
(insn 45 44 46 5 (set (reg:SI 124 [ D.33299 ])
        (zero_extend:SI (reg:QI 125))) -1
     (nil))
(insn 46 45 62 5 (set (reg/v:SI 87 [ r ])
        (reg:SI 124 [ D.33299 ])) -1
     (nil))
(jump_insn 62 46 63 5 (set (pc)
        (label_ref 47)) -1
     (nil)
 -> 47)
;;  succ:       7 [100.0%] 

(barrier 63 62 65)
;; basic block 6, loop depth 0, count 0, freq 244, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [4.0%] 
(code_label 65 63 64 6 5 "" [1 uses])
(note 64 65 8 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 8 64 47 6 (set (reg/v:SI 87 [ r ])
        (const_int -1 [0xffffffffffffffff])) db/dbformat.cc:60 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%] 
;;              6 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
(code_label 47 8 48 7 3 "" [2 uses])
(note 48 47 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 53 7 (set (reg:SI 108 [ <retval> ])
        (reg/v:SI 87 [ r ])) db/dbformat.cc:65 -1
     (nil))
(insn 53 49 54 7 (set (reg/i:SI 0 ax)
        (reg:SI 108 [ <retval> ])) db/dbformat.cc:66 -1
     (nil))
(insn 54 53 55 7 (set (reg/f:DI 127)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("__stack_chk_guard") [flags 0x40]  <var_decl 0x7feb014b3d80 __stack_chk_guard>)
                    ] UNSPEC_GOTPCREL)) [15  S8 A8])) db/dbformat.cc:66 -1
     (nil))
(insn 55 54 56 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.33300+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/dbformat.cc:66 -1
     (nil))
(jump_insn 56 55 66 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) db/dbformat.cc:66 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 59)
;;  succ:       10 [100.0%] 
;;              9 [0.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 4
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 [0.0%]  (FALLTHRU)
(note 66 56 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 57 66 58 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7feb014d40d8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/dbformat.cc:66 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7feb014d40d8 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

(barrier 58 57 59)
;; basic block 10, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%] 
(code_label 59 58 67 10 4 "" [1 uses])
(note 67 59 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 60 67 0 10 (use (reg/i:SI 0 ax)) db/dbformat.cc:66 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual const char* leveldb::InternalFilterPolicy::Name() const (_ZNK7leveldb20InternalFilterPolicy4NameEv, funcdef_no=1424, decl_uid=30154, cgraph_uid=594, symbol_order=606)

virtual const char* leveldb::InternalFilterPolicy::Name() const (const struct InternalFilterPolicy * const this)
{
  const struct FilterPolicy * _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () _5;
  const char * _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->user_policy_;
  _4 = _3->_vptr.FilterPolicy;
  _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B];
  _7 = OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) (_3); [tail call]
  return _7;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )
Partition 1 (_3 - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_5 - 5 )
Partition 4 (_7 - 7 )


Replacing Expressions
_4 replace with --> _4 = _3->_vptr.FilterPolicy;

_5 replace with --> _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B];


virtual const char* leveldb::InternalFilterPolicy::Name() const (const struct InternalFilterPolicy * const this)
{
  const struct FilterPolicy * _3;
  int (*__vtbl_ptr_type) () * _4;
  int (*__vtbl_ptr_type) () _5;
  const char * _7;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = this_2(D)->user_policy_;
  _4 = _3->_vptr.FilterPolicy;
  _5 = MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B];
  _7 = OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) (_3); [tail call]
  return _7;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = this_2(D)->user_policy_;

(insn 6 5 0 (set (reg/f:DI 87 [ D.33305 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->user_policy_+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))

;; _7 = OBJ_TYPE_REF(_5;_3->2) (_3); [tail call]

(insn 7 6 8 2 (set (reg/f:DI 93)
        (mem/f:DI (reg/f:DI 87 [ D.33305 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))

(insn 8 7 9 2 (set (reg/f:DI 94)
        (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))

(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.33305 ])) db/dbformat.cc:102 -1
     (nil))

(call_insn/j 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 94) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) S1 A8])
            (const_int 0 [0]))) db/dbformat.cc:102 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 11 10 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) db/dbformat.cc:101 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.33305 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->user_policy_+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 93)
        (mem/f:DI (reg/f:DI 87 [ D.33305 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 94)
        (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/dbformat.cc:102 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.33305 ])) db/dbformat.cc:102 -1
     (nil))
(call_insn/j 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 94) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) S1 A8])
            (const_int 0 [0]))) db/dbformat.cc:102 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 11 10 0)

;; Function virtual void leveldb::InternalFilterPolicy::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (_ZNK7leveldb20InternalFilterPolicy12CreateFilterEPKNS_5SliceEiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1425, decl_uid=30159, cgraph_uid=595, symbol_order=607)

virtual void leveldb::InternalFilterPolicy::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (const struct InternalFilterPolicy * const this, const struct Slice * keys, int n, struct string * dst)
{
  unsigned long ivtmp.164;
  void * _1;
  const size_t * _2;
  const struct FilterPolicy * _12;
  int (*__vtbl_ptr_type) () * _13;
  int (*__vtbl_ptr_type) () _14;
  long unsigned int _17;
  long unsigned int _18;
  unsigned int _26;
  unsigned int _27;
  unsigned long _29;
  unsigned long _30;
  sizetype _31;
  const struct Slice * _32;
  unsigned long _33;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (n_6(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                5
  _12 = this_11(D)->user_policy_;
  _13 = _12->_vptr.FilterPolicy;
  _14 = MEM[(int (*__vtbl_ptr_type) () *)_13 + 24B];
  OBJ_TYPE_REF(_14;(const struct FilterPolicy)_12->3) (_12, keys_3(D), n_6(D), dst_15(D)); [tail call]
  return;
;;    succ:       EXIT

;;   basic block 4, loop depth 0
;;    pred:       2
  _2 = keys_3(D) + 8;
  ivtmp.164_20 = (unsigned long) _2;
  _27 = (unsigned int) n_6(D);
  _26 = _27 + 4294967295;
  _29 = (unsigned long) _26;
  _30 = _29 * 16;
  _31 = _30 + 24;
  _32 = keys_3(D) + _31;
  _33 = (unsigned long) _32;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                5
  # ivtmp.164_24 = PHI <ivtmp.164_20(4), ivtmp.164_22(5)>
  _1 = (void *) ivtmp.164_24;
  _17 = MEM[base: _1, offset: 0B];
  _18 = _17 + 18446744073709551608;
  MEM[base: _1, offset: 0B] = _18;
  ivtmp.164_22 = ivtmp.164_24 + 16;
  if (ivtmp.164_22 == _33)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (keys_3(D) - 3 )
Partition 6 (n_6(D) - 6 )
Partition 11 (this_11(D) - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (dst_15(D) - 15 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 20 (ivtmp.164_20 - 20 )
Partition 22 (ivtmp.164_22 - 22 )
Partition 24 (ivtmp.164_24 - 24 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )


Partition map 

Partition 0 (keys_3(D) - 3 )
Partition 1 (n_6(D) - 6 )
Partition 2 (this_11(D) - 11 )
Partition 3 (dst_15(D) - 15 )
Partition 4 (ivtmp.164_20 - 20 )
Partition 5 (ivtmp.164_22 - 22 )
Partition 6 (ivtmp.164_24 - 24 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(16562) ivtmp.164_22 <-> ivtmp.164_24
(819) ivtmp.164_20 <-> ivtmp.164_24

Partition map 

Partition 0 (keys_3(D) - 3 )
Partition 1 (n_6(D) - 6 )
Partition 2 (this_11(D) - 11 )
Partition 3 (dst_15(D) - 15 )
Partition 4 (ivtmp.164_20 - 20 )
Partition 5 (ivtmp.164_22 - 22 )
Partition 6 (ivtmp.164_24 - 24 )

Coalesce list: (22)ivtmp.164_22 & (24)ivtmp.164_24 [map: 5, 6] : Success -> 5
Coalesce list: (20)ivtmp.164_20 & (24)ivtmp.164_22 [map: 4, 5] : Success -> 5
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (keys_3(D) - 3 )
Partition 3 (n_6(D) - 6 )
Partition 4 (this_11(D) - 11 )
Partition 5 (_12 - 12 )
Partition 6 (_13 - 13 )
Partition 7 (_14 - 14 )
Partition 8 (dst_15(D) - 15 )
Partition 9 (_17 - 17 )
Partition 10 (_18 - 18 )
Partition 11 (ivtmp.164_22 - 20 22 24 )
Partition 12 (_26 - 26 )
Partition 13 (_27 - 27 )
Partition 14 (_29 - 29 )
Partition 15 (_30 - 30 )
Partition 16 (_31 - 31 )
Partition 17 (_32 - 32 )
Partition 18 (_33 - 33 )


Replacing Expressions
_2 replace with --> _2 = keys_3(D) + 8;

_13 replace with --> _13 = _12->_vptr.FilterPolicy;

_14 replace with --> _14 = MEM[(int (*__vtbl_ptr_type) () *)_13 + 24B];

_17 replace with --> _17 = MEM[base: _1, offset: 0B];

_18 replace with --> _18 = _17 + 18446744073709551608;

_26 replace with --> _26 = _27 + 4294967295;

_27 replace with --> _27 = (unsigned int) n_6(D);

_29 replace with --> _29 = (unsigned long) _26;

_30 replace with --> _30 = _29 * 16;

_31 replace with --> _31 = _30 + 24;

_32 replace with --> _32 = keys_3(D) + _31;


virtual void leveldb::InternalFilterPolicy::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (const struct InternalFilterPolicy * const this, const struct Slice * keys, int n, struct string * dst)
{
  unsigned long ivtmp.164;
  void * _1;
  const size_t * _2;
  const struct FilterPolicy * _12;
  int (*__vtbl_ptr_type) () * _13;
  int (*__vtbl_ptr_type) () _14;
  long unsigned int _17;
  long unsigned int _18;
  unsigned int _26;
  unsigned int _27;
  unsigned long _29;
  unsigned long _30;
  sizetype _31;
  const struct Slice * _32;
  unsigned long _33;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (n_6(D) <= 0)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                5
  _12 = this_11(D)->user_policy_;
  _13 = _12->_vptr.FilterPolicy;
  _14 = MEM[(int (*__vtbl_ptr_type) () *)_13 + 24B];
  OBJ_TYPE_REF(_14;(const struct FilterPolicy)_12->3) (_12, keys_3(D), n_6(D), dst_15(D)); [tail call]
  return;
;;    succ:       EXIT

;;   basic block 4, loop depth 0
;;    pred:       2
  _2 = keys_3(D) + 8;
  ivtmp.164_20 = (unsigned long) _2;
  _27 = (unsigned int) n_6(D);
  _26 = _27 + 4294967295;
  _29 = (unsigned long) _26;
  _30 = _29 * 16;
  _31 = _30 + 24;
  _32 = keys_3(D) + _31;
  _33 = (unsigned long) _32;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       4
;;                5
  # ivtmp.164_24 = PHI <ivtmp.164_20(4), ivtmp.164_22(5)>
  _1 = (void *) ivtmp.164_24;
  _17 = MEM[base: _1, offset: 0B];
  _18 = _17 + 18446744073709551608;
  MEM[base: _1, offset: 0B] = _18;
  ivtmp.164_22 = ivtmp.164_24 + 16;
  if (ivtmp.164_22 == _33)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

}



;; Generating RTL for gimple basic block 2

;; if (n_6(D) <= 0)

(insn 31 30 32 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 126 [ n ])
            (const_int 0 [0]))) db/dbformat.cc:110 -1
     (nil))

(jump_insn 32 31 0 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) db/dbformat.cc:110 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 3

;; _12 = this_11(D)->user_policy_;

(insn 34 33 0 (set (reg/f:DI 111 [ D.33320 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ this ])
                (const_int 8 [0x8])) [3 this_11(D)->user_policy_+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))

;; OBJ_TYPE_REF(_14;_12->3) (_12, keys_3(D), n_6(D), dst_15(D)); [tail call]

(insn 35 34 36 3 (set (reg/f:DI 128)
        (mem/f:DI (reg/f:DI 111 [ D.33320 ]) [3 _12->_vptr.FilterPolicy+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))

(insn 36 35 37 3 (set (reg/f:DI 129)
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_13 + 24B]+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))

(insn 37 36 38 3 (set (reg:DI 2 cx)
        (reg/v/f:DI 127 [ dst ])) db/dbformat.cc:114 -1
     (nil))

(insn 38 37 39 3 (set (reg:SI 1 dx)
        (reg/v:SI 126 [ n ])) db/dbformat.cc:114 -1
     (nil))

(insn 39 38 40 3 (set (reg:DI 4 si)
        (reg/v/f:DI 125 [ keys ])) db/dbformat.cc:114 -1
     (nil))

(insn 40 39 41 3 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.33320 ])) db/dbformat.cc:114 -1
     (nil))

(call_insn/j 41 40 42 3 (call (mem:QI (reg/f:DI 129) [0 *OBJ_TYPE_REF(_14;(const struct FilterPolicy)_12->3) S1 A8])
        (const_int 0 [0])) db/dbformat.cc:114 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(barrier 42 41 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 43 42 44 11 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; ivtmp.164_20 = (unsigned long) _2;

(insn 45 44 0 (parallel [
            (set (reg:DI 116 [ ivtmp.164 ])
                (plus:DI (reg/v/f:DI 125 [ keys ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; _33 = (unsigned long) _32;

(insn 46 45 47 (parallel [
            (set (reg:SI 130 [ D.33324 ])
                (plus:SI (reg/v:SI 126 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 47 46 48 (set (reg:DI 131 [ D.33325 ])
        (zero_extend:DI (reg:SI 130 [ D.33324 ]))) -1
     (nil))

(insn 48 47 49 (parallel [
            (set (reg:DI 132 [ D.33325 ])
                (ashift:DI (reg:DI 131 [ D.33325 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 49 48 50 (parallel [
            (set (reg:DI 133 [ D.33326 ])
                (plus:DI (reg:DI 132 [ D.33325 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 50 49 0 (parallel [
            (set (reg:DI 123 [ D.33325 ])
                (plus:DI (reg/v/f:DI 125 [ keys ])
                    (reg:DI 133 [ D.33326 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _1 = (void *) ivtmp.164_24;

(insn 52 51 0 (set (reg/f:DI 109 [ D.33318 ])
        (reg:DI 116 [ ivtmp.164 ])) -1
     (nil))

;; MEM[base: _1, offset: 0B] = _18;

(insn 53 52 0 (parallel [
            (set (mem:DI (reg/f:DI 109 [ D.33318 ]) [11 MEM[base: _1, offset: 0B]+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 109 [ D.33318 ]) [6 MEM[base: _1, offset: 0B]+0 S8 A64])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:111 -1
     (nil))

;; ivtmp.164_22 = ivtmp.164_24 + 16;

(insn 54 53 0 (parallel [
            (set (reg:DI 116 [ ivtmp.164 ])
                (plus:DI (reg:DI 116 [ ivtmp.164 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.164_22 == _33)

(insn 56 54 57 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 116 [ ivtmp.164 ])
            (reg:DI 123 [ D.33325 ]))) db/dbformat.cc:110 -1
     (nil))

(jump_insn 57 56 61 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) db/dbformat.cc:110 -1
     (int_list:REG_BR_PROB 900 (nil)))

(note 61 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 59 61 60 7 (set (pc)
        (label_ref 58)) -1
     (nil))

(barrier 60 59 0)
deleting block 8


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 23 0 29 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 29 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 29 25 2 (set (reg/f:DI 124 [ this ])
        (reg:DI 5 di [ this ])) db/dbformat.cc:106 -1
     (nil))
(insn 25 24 26 2 (set (reg/v/f:DI 125 [ keys ])
        (reg:DI 4 si [ keys ])) db/dbformat.cc:106 -1
     (nil))
(insn 26 25 27 2 (set (reg/v:SI 126 [ n ])
        (reg:SI 1 dx [ n ])) db/dbformat.cc:106 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 127 [ dst ])
        (reg:DI 2 cx [ dst ])) db/dbformat.cc:106 -1
     (nil))
(note 28 27 31 2 NOTE_INSN_FUNCTION_BEG)
(insn 31 28 32 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 126 [ n ])
            (const_int 0 [0]))) db/dbformat.cc:110 -1
     (nil))
(jump_insn 32 31 55 2 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) db/dbformat.cc:110 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 43)
;;  succ:       4 [9.0%]  (FALLTHRU)
;;              5 [91.0%] 

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [9.0%]  (FALLTHRU)
;;              6 [9.0%] 
(code_label 55 32 33 4 12 "" [1 uses])
(note 33 55 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 4 (set (reg/f:DI 111 [ D.33320 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ this ])
                (const_int 8 [0x8])) [3 this_11(D)->user_policy_+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 128)
        (mem/f:DI (reg/f:DI 111 [ D.33320 ]) [3 _12->_vptr.FilterPolicy+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))
(insn 36 35 37 4 (set (reg/f:DI 129)
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_13 + 24B]+0 S8 A64])) db/dbformat.cc:114 -1
     (nil))
(insn 37 36 38 4 (set (reg:DI 2 cx)
        (reg/v/f:DI 127 [ dst ])) db/dbformat.cc:114 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 1 dx)
        (reg/v:SI 126 [ n ])) db/dbformat.cc:114 -1
     (nil))
(insn 39 38 40 4 (set (reg:DI 4 si)
        (reg/v/f:DI 125 [ keys ])) db/dbformat.cc:114 -1
     (nil))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg/f:DI 111 [ D.33320 ])) db/dbformat.cc:114 -1
     (nil))
(call_insn/j 41 40 42 4 (call (mem:QI (reg/f:DI 129) [0 *OBJ_TYPE_REF(_14;(const struct FilterPolicy)_12->3) S1 A8])
        (const_int 0 [0])) db/dbformat.cc:114 -1
     (expr_list:REG_CALL_DECL (nil)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 42 41 43)
;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [91.0%] 
(code_label 43 42 44 5 11 "" [1 uses])
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (parallel [
            (set (reg:DI 116 [ ivtmp.164 ])
                (plus:DI (reg/v/f:DI 125 [ keys ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 46 45 47 5 (parallel [
            (set (reg:SI 130 [ D.33324 ])
                (plus:SI (reg/v:SI 126 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 47 46 48 5 (set (reg:DI 131 [ D.33325 ])
        (zero_extend:DI (reg:SI 130 [ D.33324 ]))) -1
     (nil))
(insn 48 47 49 5 (parallel [
            (set (reg:DI 132 [ D.33325 ])
                (ashift:DI (reg:DI 131 [ D.33325 ])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 49 48 50 5 (parallel [
            (set (reg:DI 133 [ D.33326 ])
                (plus:DI (reg:DI 132 [ D.33325 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 50 49 58 5 (parallel [
            (set (reg:DI 123 [ D.33325 ])
                (plus:DI (reg/v/f:DI 125 [ keys ])
                    (reg:DI 133 [ D.33326 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
(code_label 58 50 51 6 13 "" [1 uses])
(note 51 58 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 6 (set (reg/f:DI 109 [ D.33318 ])
        (reg:DI 116 [ ivtmp.164 ])) -1
     (nil))
(insn 53 52 54 6 (parallel [
            (set (mem:DI (reg/f:DI 109 [ D.33318 ]) [11 MEM[base: _1, offset: 0B]+0 S8 A64])
                (plus:DI (mem:DI (reg/f:DI 109 [ D.33318 ]) [6 MEM[base: _1, offset: 0B]+0 S8 A64])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) db/dbformat.cc:111 -1
     (nil))
(insn 54 53 56 6 (parallel [
            (set (reg:DI 116 [ ivtmp.164 ])
                (plus:DI (reg:DI 116 [ ivtmp.164 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 56 54 57 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 116 [ ivtmp.164 ])
            (reg:DI 123 [ D.33325 ]))) db/dbformat.cc:110 -1
     (nil))
(jump_insn 57 56 61 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) db/dbformat.cc:110 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 55)
;;  succ:       4 [9.0%] 
;;              7 [91.0%]  (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [91.0%]  (FALLTHRU,DFS_BACK)
(note 61 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 61 60 7 (set (pc)
        (label_ref 58)) -1
     (nil)
 -> 58)
;;  succ:       6 [100.0%] 

(barrier 60 59 0)
