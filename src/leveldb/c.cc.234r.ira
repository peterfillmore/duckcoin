
;; Function virtual int leveldb_comparator_t::Compare(const leveldb::Slice&, const leveldb::Slice&) const (_ZNK20leveldb_comparator_t7CompareERKN7leveldb5SliceES3_, funcdef_no=1418, decl_uid=28838, cgraph_uid=525, symbol_order=528)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 95: local to bb 2 def dominates all uses has unique first use
Reg 97: local to bb 2 def dominates all uses has unique first use
Ignoring reg 99, has equiv memory
Reg 100: local to bb 2 def dominates all uses has unique first use
Reg 101: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 95 to be not moveable
Found def insn 4 for 97 to be not moveable
Found def insn 10 for 100 to be not moveable
Found def insn 11 for 101 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 99: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r101,l0) best AD_REGS, allocno AD_REGS
    a1 (r100,l0) best DIREG, allocno DIREG
    a3 (r99,l0) best DREG, allocno DREG
    a4 (r97,l0) best DREG, allocno DREG
    a2 (r96,l0) best SIREG, allocno SIREG
    a5 (r95,l0) best DIREG, allocno DIREG

  a0(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:13000,13000
  a3(r99,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a4(r97,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000
  a5(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r101: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DREG, alternative NO_REGS, allocno DREG
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a2(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:16000,16000
  a3(r99,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a4(r97,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000
  a5(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 4(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r101): [1..12]
 a1(r100): [3..14]
 a2(r96): [5..20]
 a3(r99): [7..16]
 a4(r97): [9..18]
 a5(r95): [13..22]
Compressing live ranges: from 25 to 4 - 16%
Ranges after the compression:
 a0(r101): [0..1]
 a1(r100): [0..3]
 a2(r96): [0..3]
 a3(r99): [0..3]
 a4(r97): [0..3]
 a5(r95): [2..3]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r101,l0) conflicts: a1(r100,l0) a2(r96,l0) a3(r99,l0) a4(r97,l0)
;;     total conflict hard regs: 1 2 4 5 37
;;     conflict hard regs: 1 2 4 5 37

;; a1(r100,l0) conflicts: a0(r101,l0) a2(r96,l0) a3(r99,l0) a4(r97,l0) a5(r95,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

;; a2(r96,l0) conflicts: a0(r101,l0) a1(r100,l0) a3(r99,l0) a4(r97,l0) a5(r95,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a3(r99,l0) conflicts: a0(r101,l0) a1(r100,l0) a2(r96,l0) a4(r97,l0) a5(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r97,l0) conflicts: a0(r101,l0) a1(r100,l0) a2(r96,l0) a3(r99,l0) a5(r95,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a5(r95,l0) conflicts: a1(r100,l0) a2(r96,l0) a3(r99,l0) a4(r97,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

  pref0:a1(r100)<-hr5@1500
  pref1:a4(r97)<-hr1@1500
  pref2:a2(r96)<-hr4@1500
  pref3:a5(r95)<-hr5@1500
  pref4:a3(r99)<-hr1@1000
  regions=1, blocks=3, points=4
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r101 1r100 2r96 3r99 4r97 5r95
    modified regnos: 95 96 97 99 100 101
    border:
    Pressure: GENERAL_REGS=6
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 38-44)@30000
          2:( 0 3-6 38-44)@38000
            3:( 0 3 5 6 38-44)@65000
              4:( 0 3 6 38-44)@16000
          5:( 1)@2000
      Allocno a0r101 of GENERAL_REGS(15) has 10 avail. regs  0 3 6 38-44, node:  0 3 6 38-44 (confl regs =  1 2 4 5 7-37 45-79)
      Allocno a1r100 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, node:  0 3 5 6 38-44 (confl regs =  1 2 4 7-37 45-79)
      Allocno a2r96 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, node:  0 3-6 38-44 (confl regs =  1 2 7-37 45-79)
      Allocno a3r99 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a4r97 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, node:  0-6 38-44 (confl regs =  7-37 45-79)
      Allocno a5r95 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 8-15 21-52 (confl regs =  1 4 7-36 45-79)
      Pushing a1(r100,l0)(cost 0)
      Pushing a0(r101,l0)(cost 0)
      Pushing a5(r95,l0)(cost 0)
      Pushing a4(r97,l0)(cost 0)
        Making a3(r99,l0) colorable
      Pushing a3(r99,l0)(cost 2000)
      Pushing a2(r96,l0)(cost 0)
      Popping a2(r96,l0)  -- assign reg 4
      Popping a3(r99,l0)  -- (memory is more profitable -1000 vs 2000) spill!
      Popping a4(r97,l0)  -- assign reg 1
      Popping a5(r95,l0)  -- assign reg 0
      Popping a0(r101,l0)  -- assign reg 0
      Popping a1(r100,l0)  -- assign reg 5
Disposition:
    5:r95  l0     0    2:r96  l0     4    4:r97  l0     1    3:r99  l0   mem
    1:r100 l0     5    0:r101 l0     0
New iteration of spill/restore move
+++Costs: overall -10000, reg -9000, mem -1000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual int leveldb_comparator_t::Compare(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r95={1d,2u} r96={1d,2u,1e} r97={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 129{102d,26u,1e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 97 99 100 101
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 95 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ a ])
        (reg:DI 4 si [ a ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ a ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ b ])
        (reg:DI 1 dx [ b ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ b ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 96 [ a ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)a_5(D) + 8B]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 96 [ a ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)a_5(D) + 8B]+0 S8 A64])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 100 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 101 [ this_2(D)->compare_ ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->compare_+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (mem:DI (plus:DI (reg/v/f:DI 97 [ b ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)b_4(D) + 8B]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 97 [ b ]) [3 MEM[(const char * *)b_4(D)]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ b ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 96 [ a ]) [3 MEM[(const char * *)a_5(D)]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ a ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 100 [ this_2(D)->state_ ])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 101 [ this_2(D)->compare_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:74 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 101 [ this_2(D)->compare_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function virtual const char* leveldb_comparator_t::Name() const (_ZNK20leveldb_comparator_t4NameEv, funcdef_no=1419, decl_uid=28840, cgraph_uid=526, symbol_order=529)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Found def insn 6 for 92 to be not moveable
Found def insn 7 for 93 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r93,l0) best AD_REGS, allocno AD_REGS
    a1 (r92,l0) best DIREG, allocno DIREG
    a2 (r91,l0) best DIREG, allocno DIREG

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r93: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r93): [1..4]
 a1(r92): [3..6]
 a2(r91): [5..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [0..3]
 a2(r91): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r93,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r92,l0) conflicts: a0(r93,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r92)<-hr5@1500
  pref1:a2(r91)<-hr5@1500
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r93 1r92 2r91
    modified regnos: 91 92 93
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
          2:( 0-4 6 37-44)@16000
      Allocno a0r93 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r92,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Popping a2(r91,l0)  -- assign reg 0
      Popping a0(r93,l0)  -- assign reg 0
      Popping a1(r92,l0)  -- assign reg 5
Disposition:
    2:r91  l0     0    1:r92  l0     5    0:r93  l0     0
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual const char* leveldb_comparator_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:78 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 93 [ this_2(D)->name_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 32 [0x20])) [3 this_2(D)->name_+0 S8 A64])) db/c.cc:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ this_2(D)->state_ ])) db/c.cc:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 93 [ this_2(D)->name_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:78 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->name_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 10 9 0)

;; Function virtual void leveldb_comparator_t::FindShortestSeparator(std::__cxx11::string*, const leveldb::Slice&) const (_ZNK20leveldb_comparator_t21FindShortestSeparatorEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKN7leveldb5SliceE, funcdef_no=1420, decl_uid=28844, cgraph_uid=527, symbol_order=530)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_comparator_t::FindShortestSeparator(std::__cxx11::string*, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_comparator_t::FindShortSuccessor(std::__cxx11::string*) const (_ZNK20leveldb_comparator_t18FindShortSuccessorEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1421, decl_uid=28847, cgraph_uid=528, symbol_order=531)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_comparator_t::FindShortSuccessor(std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual const char* leveldb_filterpolicy_t::Name() const (_ZNK22leveldb_filterpolicy_t4NameEv, funcdef_no=1426, decl_uid=28915, cgraph_uid=533, symbol_order=536)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Found def insn 6 for 92 to be not moveable
Found def insn 7 for 93 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r93,l0) best AD_REGS, allocno AD_REGS
    a1 (r92,l0) best DIREG, allocno DIREG
    a2 (r91,l0) best DIREG, allocno DIREG

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r93: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
   Insn 2(l0): point = 8
 a0(r93): [1..4]
 a1(r92): [3..6]
 a2(r91): [5..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [0..3]
 a2(r91): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r93,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r92,l0) conflicts: a0(r93,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r92)<-hr5@1500
  pref1:a2(r91)<-hr5@1500
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r93 1r92 2r91
    modified regnos: 91 92 93
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
          2:( 0-4 6 37-44)@16000
      Allocno a0r93 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r92,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Popping a2(r91,l0)  -- assign reg 0
      Popping a0(r93,l0)  -- assign reg 0
      Popping a1(r92,l0)  -- assign reg 5
Disposition:
    2:r91  l0     0    1:r92  l0     5    0:r93  l0     0
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual const char* leveldb_filterpolicy_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:105 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 93 [ this_2(D)->name_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->name_+0 S8 A64])) db/c.cc:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ this_2(D)->state_ ])) db/c.cc:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 93 [ this_2(D)->name_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:105 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->name_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 10 9 0)

;; Function virtual bool leveldb_filterpolicy_t::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const (_ZNK22leveldb_filterpolicy_t11KeyMayMatchERKN7leveldb5SliceES3_, funcdef_no=1428, decl_uid=28924, cgraph_uid=535, symbol_order=538)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 98: local to bb 2 def dominates all uses has unique first use
Ignoring reg 100, has equiv memory
Ignoring reg 101, has equiv memory
Reg 89 uninteresting
Reg 104 uninteresting
Found def insn 4 for 98 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 100: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 10 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r104,l0) best AREG, allocno AREG
    a3 (r101,l0) best DIREG, allocno DIREG
    a5 (r100,l0) best DREG, allocno DREG
    a6 (r98,l0) best DREG, allocno DREG
    a4 (r97,l0) best SIREG, allocno SIREG
    a2 (r96,l0) best DIREG, allocno DIREG
    a1 (r89,l0) best AREG, allocno AREG

  a0(r104,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6000,6000
  a1(r89,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000
  a2(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:13000,13000
  a3(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:13000,13000
  a5(r100,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a6(r98,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative NO_REGS, allocno DIREG
    r100: preferred DREG, alternative NO_REGS, allocno DREG
    r98: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6000,6000
  a1(r89,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000
  a2(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:16000,16000
  a3(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:16000,16000
  a5(r100,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a6(r98,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 20(l0): point = 4
   Insn 19(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
   Insn 16(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 4(l0): point = 26
   Insn 3(l0): point = 28
   Insn 2(l0): point = 30
 a0(r104): [3..4]
 a1(r89): [7..8]
 a2(r96): [11..30]
 a3(r101): [13..22]
 a4(r97): [15..28]
 a5(r100): [17..24]
 a6(r98): [19..26]
Compressing live ranges: from 33 to 6 - 18%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r89): [2..3]
 a2(r96): [4..5]
 a3(r101): [4..5]
 a4(r97): [4..5]
 a5(r100): [4..5]
 a6(r98): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 56)
;; a0(r104,l0) conflicts:;; a1(r89,l0) conflicts:;; a2(r96,l0) conflicts: a3(r101,l0) a4(r97,l0) a5(r100,l0) a6(r98,l0)
;;     total conflict hard regs: 1 2 4 5 37
;;     conflict hard regs: 1 2 4 5 37

;; a3(r101,l0) conflicts: a2(r96,l0) a4(r97,l0) a6(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r97,l0) conflicts: a2(r96,l0) a3(r101,l0) a5(r100,l0) a6(r98,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a5(r100,l0) conflicts: a2(r96,l0) a4(r97,l0) a6(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r98,l0) conflicts: a2(r96,l0) a3(r101,l0) a4(r97,l0) a5(r100,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

  pref0:a0(r104)<-hr0@1500
  pref1:a6(r98)<-hr1@1500
  pref2:a4(r97)<-hr4@1500
  pref3:a2(r96)<-hr5@1500
  pref4:a1(r89)<-hr0@1500
  pref5:a5(r100)<-hr1@1000
  pref6:a3(r101)<-hr5@1000
  regions=1, blocks=3, points=6
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r104 1r89 2r96 3r101 4r97 5r100 6r98
    modified regnos: 89 96 97 98 100 101 104
    border:
    Pressure: GENERAL_REGS=6
 Removing pref3:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@40000
          2:( 0-6 38-44)@30000
            3:( 0 3-6 38-44)@38000
              4:( 0 3 6 38-44)@38000
              5:( 5)@2000
            6:( 1)@2000
      Allocno a0r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r96 of GENERAL_REGS(15) has 10 avail. regs  0 3 6 38-44, node:  0 3 6 38-44 (confl regs =  1 2 4 5 7-37 45-79)
      Allocno a3r101 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a4r97 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, node:  0 3-6 38-44 (confl regs =  1 2 7-37 45-79)
      Allocno a5r100 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a6r98 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, node:  0-6 38-44 (confl regs =  7-37 45-79)
      Pushing a1(r89,l0)(cost 0)
      Pushing a0(r104,l0)(cost 0)
      Pushing a6(r98,l0)(cost 0)
        Making a5(r100,l0) colorable
      Pushing a5(r100,l0)(cost 2000)
      Pushing a4(r97,l0)(cost 0)
        Making a3(r101,l0) colorable
      Pushing a3(r101,l0)(cost 2000)
      Pushing a2(r96,l0)(cost 0)
      Popping a2(r96,l0)  -- assign reg 0
      Popping a3(r101,l0)  -- assign reg 5
      Popping a4(r97,l0)  -- assign reg 4
      Popping a5(r100,l0)  -- (memory is more profitable -1000 vs 2000) spill!
      Popping a6(r98,l0)  -- assign reg 1
      Popping a0(r104,l0)  -- assign reg 0
      Popping a1(r89,l0)  -- assign reg 0
Disposition:
    1:r89  l0     0    2:r96  l0     0    4:r97  l0     4    6:r98  l0     1
    5:r100 l0   mem    3:r101 l0     5    0:r104 l0     0
New iteration of spill/restore move
+++Costs: overall -16000, reg -15000, mem -1000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual bool leveldb_filterpolicy_t::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d,1u} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r96={1d,2u,1e} r97={1d,2u,1e} r98={1d,2u} r100={1d,1u} r101={1d,1u} r104={1d,1u} 
;;    total ref usage 137{105d,30u,2e} in 16{15 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 96 97 98 100 101 104
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 96 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 98 [ filter ])
        (reg:DI 1 dx [ filter ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ filter ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 97 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 97 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 101 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])
        (nil)))
(note 11 10 12 2 NOTE_INSN_DELETED)
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (mem:DI (plus:DI (reg/v/f:DI 98 [ filter ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)filter_4(D) + 8B]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 98 [ filter ]) [3 MEM[(const char * *)filter_4(D)]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ filter ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 97 [ key ]) [3 MEM[(const char * *)key_5(D)]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ key ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 101 [ this_2(D)->state_ ])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ this_2(D)->state_ ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                        (const_int 40 [0x28])) [3 this_2(D)->key_match_+0 S8 A64]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:122 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ this ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 18 17 19 2 (set (reg:QI 89 [ D.36856 ])
        (reg:QI 0 ax)) db/c.cc:122 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.36856 ])
            (const_int 0 [0]))) db/c.cc:123 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.36856 ])
        (nil)))
(insn 20 19 25 2 (set (reg:QI 104 [ D.36857 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:123 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 25 20 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 104 [ D.36857 ])) db/c.cc:124 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ D.36857 ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) db/c.cc:124 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Put(const leveldb::Slice&, const leveldb::Slice&) (_ZZ26leveldb_writebatch_iterateEN1H3PutERKN7leveldb5SliceES3_, funcdef_no=1467, decl_uid=31691, cgraph_uid=573, symbol_order=576)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93: local to bb 2 def dominates all uses has unique first use
Reg 95: local to bb 2 def dominates all uses has unique first use
Ignoring reg 97, has equiv memory
Reg 98: local to bb 2 def dominates all uses has unique first use
Reg 99: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 93 to be not moveable
Found def insn 4 for 95 to be not moveable
Found def insn 10 for 98 to be not moveable
Found def insn 11 for 99 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 97: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r99,l0) best AD_REGS, allocno AD_REGS
    a1 (r98,l0) best DIREG, allocno DIREG
    a3 (r97,l0) best DREG, allocno DREG
    a4 (r95,l0) best DREG, allocno DREG
    a2 (r94,l0) best SIREG, allocno SIREG
    a5 (r93,l0) best DIREG, allocno DIREG

  a0(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:13000,13000
  a3(r97,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a4(r95,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r99: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DREG, alternative NO_REGS, allocno DREG
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:16000,16000
  a3(r97,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a4(r95,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 4(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r99): [1..12]
 a1(r98): [3..14]
 a2(r94): [5..20]
 a3(r97): [7..16]
 a4(r95): [9..18]
 a5(r93): [13..22]
Compressing live ranges: from 25 to 4 - 16%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [0..3]
 a2(r94): [0..3]
 a3(r97): [0..3]
 a4(r95): [0..3]
 a5(r93): [2..3]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r99,l0) conflicts: a1(r98,l0) a2(r94,l0) a3(r97,l0) a4(r95,l0)
;;     total conflict hard regs: 1 2 4 5 37
;;     conflict hard regs: 1 2 4 5 37

;; a1(r98,l0) conflicts: a0(r99,l0) a2(r94,l0) a3(r97,l0) a4(r95,l0) a5(r93,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

;; a2(r94,l0) conflicts: a0(r99,l0) a1(r98,l0) a3(r97,l0) a4(r95,l0) a5(r93,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a3(r97,l0) conflicts: a0(r99,l0) a1(r98,l0) a2(r94,l0) a4(r95,l0) a5(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r95,l0) conflicts: a0(r99,l0) a1(r98,l0) a2(r94,l0) a3(r97,l0) a5(r93,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a5(r93,l0) conflicts: a1(r98,l0) a2(r94,l0) a3(r97,l0) a4(r95,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

  pref0:a1(r98)<-hr5@1500
  pref1:a4(r95)<-hr1@1500
  pref2:a2(r94)<-hr4@1500
  pref3:a5(r93)<-hr5@1500
  pref4:a3(r97)<-hr1@1000
  regions=1, blocks=3, points=4
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r99 1r98 2r94 3r97 4r95 5r93
    modified regnos: 93 94 95 97 98 99
    border:
    Pressure: GENERAL_REGS=6
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 38-44)@30000
          2:( 0 3-6 38-44)@38000
            3:( 0 3 5 6 38-44)@65000
              4:( 0 3 6 38-44)@16000
          5:( 1)@2000
      Allocno a0r99 of GENERAL_REGS(15) has 10 avail. regs  0 3 6 38-44, node:  0 3 6 38-44 (confl regs =  1 2 4 5 7-37 45-79)
      Allocno a1r98 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, node:  0 3 5 6 38-44 (confl regs =  1 2 4 7-37 45-79)
      Allocno a2r94 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, node:  0 3-6 38-44 (confl regs =  1 2 7-37 45-79)
      Allocno a3r97 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a4r95 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, node:  0-6 38-44 (confl regs =  7-37 45-79)
      Allocno a5r93 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 8-15 21-52 (confl regs =  1 4 7-36 45-79)
      Pushing a1(r98,l0)(cost 0)
      Pushing a0(r99,l0)(cost 0)
      Pushing a5(r93,l0)(cost 0)
      Pushing a4(r95,l0)(cost 0)
        Making a3(r97,l0) colorable
      Pushing a3(r97,l0)(cost 2000)
      Pushing a2(r94,l0)(cost 0)
      Popping a2(r94,l0)  -- assign reg 4
      Popping a3(r97,l0)  -- (memory is more profitable -1000 vs 2000) spill!
      Popping a4(r95,l0)  -- assign reg 1
      Popping a5(r93,l0)  -- assign reg 0
      Popping a0(r99,l0)  -- assign reg 0
      Popping a1(r98,l0)  -- assign reg 5
Disposition:
    5:r93  l0     0    2:r94  l0     4    4:r95  l0     1    3:r97  l0   mem
    1:r98  l0     5    0:r99  l0     0
New iteration of spill/restore move
+++Costs: overall -10000, reg -9000, mem -1000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Put(const leveldb::Slice&, const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r93={1d,2u} r94={1d,2u,1e} r95={1d,2u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 128{102d,25u,1e} in 12{11 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 97 98 99
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 95 [ value ])
        (reg:DI 1 dx [ value ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(note 8 5 9 2 NOTE_INSN_DELETED)
(insn 9 8 10 2 (set (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 94 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 94 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 98 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 99 [ this_2(D)->put_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->put_+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (mem:DI (plus:DI (reg/v/f:DI 95 [ value ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)value_4(D) + 8B]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 95 [ value ]) [3 MEM[(const char * *)value_4(D)]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ value ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 94 [ key ]) [3 MEM[(const char * *)key_5(D)]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ key ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 98 [ this_2(D)->state_ ])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 17 16 18 2 (call (mem:QI (reg/f:DI 99 [ this_2(D)->put_ ]) [0 *_3 S1 A8])
        (const_int 0 [0])) db/c.cc:373 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 99 [ this_2(D)->put_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Delete(const leveldb::Slice&) (_ZZ26leveldb_writebatch_iterateEN1H6DeleteERKN7leveldb5SliceE, funcdef_no=1468, decl_uid=31694, cgraph_uid=574, symbol_order=577)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91: local to bb 2 def dominates all uses has unique first use
Ignoring reg 93, has equiv memory
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 95: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 91 to be not moveable
Found def insn 8 for 94 to be not moveable
Found def insn 9 for 95 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r95,l0) best AD_REGS, allocno AD_REGS
    a1 (r94,l0) best DIREG, allocno DIREG
    a3 (r93,l0) best DREG, allocno DREG
    a2 (r92,l0) best SIREG, allocno SIREG
    a4 (r91,l0) best DIREG, allocno DIREG

  a0(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:13000,13000
  a3(r93,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a4(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r95: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DREG, alternative NO_REGS, allocno DREG
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:16000,16000
  a3(r93,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a4(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r95): [1..8]
 a1(r94): [3..10]
 a2(r92): [5..14]
 a3(r93): [7..12]
 a4(r91): [9..16]
Compressing live ranges: from 19 to 4 - 21%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [0..3]
 a2(r92): [0..3]
 a3(r93): [0..3]
 a4(r91): [2..3]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r95,l0) conflicts: a1(r94,l0) a2(r92,l0) a3(r93,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a1(r94,l0) conflicts: a0(r95,l0) a2(r92,l0) a3(r93,l0) a4(r91,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a2(r92,l0) conflicts: a0(r95,l0) a1(r94,l0) a3(r93,l0) a4(r91,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a3(r93,l0) conflicts: a0(r95,l0) a1(r94,l0) a2(r92,l0) a4(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r91,l0) conflicts: a1(r94,l0) a2(r92,l0) a3(r93,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  pref0:a1(r94)<-hr5@1500
  pref1:a2(r92)<-hr4@1500
  pref2:a4(r91)<-hr5@1500
  pref3:a3(r93)<-hr1@1000
  regions=1, blocks=3, points=4
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r95 1r94 2r92 3r93 4r91
    modified regnos: 91 92 93 94 95
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0 2-6 37-44)@38000
          2:( 0 2 3 5 6 37-44)@50000
            3:( 0 2 3 6 37-44)@16000
        4:( 1)@2000
      Allocno a0r95 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a1r94 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a2r92 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a3r93 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a4r91 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 8-15 21-52 (confl regs =  4 7-36 45-79)
      Pushing a1(r94,l0)(cost 0)
      Pushing a0(r95,l0)(cost 0)
      Pushing a4(r91,l0)(cost 0)
        Making a3(r93,l0) colorable
      Pushing a3(r93,l0)(cost 2000)
      Pushing a2(r92,l0)(cost 0)
      Popping a2(r92,l0)  -- assign reg 4
      Popping a3(r93,l0)  -- assign reg 1
      Popping a4(r91,l0)  -- assign reg 0
      Popping a0(r95,l0)  -- assign reg 0
      Popping a1(r94,l0)  -- assign reg 5
Disposition:
    4:r91  l0     0    2:r92  l0     4    3:r93  l0     1    1:r94  l0     5
    0:r95  l0     0
New iteration of spill/restore move
+++Costs: overall -9000, reg -9000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Delete(const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,2u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 120{99d,20u,1e} in 9{8 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:375 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:375 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 92 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_4(D) + 8B]+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 92 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_4(D) + 8B]+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 94 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 95 [ this_2(D)->deleted_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->deleted_+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 92 [ key ]) [3 MEM[(const char * *)key_4(D)]+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ key ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ this_2(D)->state_ ])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 13 12 14 2 (call (mem:QI (reg/f:DI 95 [ this_2(D)->deleted_ ]) [0 *_3 S1 A8])
        (const_int 0 [0])) db/c.cc:376 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 95 [ this_2(D)->deleted_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 14 13 0)

;; Function virtual const char* leveldb_filterpolicy_create_bloom(int)::Wrapper::Name() const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper4NameEv, funcdef_no=1514, decl_uid=31927, cgraph_uid=620, symbol_order=623)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 92 uninteresting
Ignoring reg 93, has equiv memory
Reg 94: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 94 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r94,l0) best AD_REGS, allocno AD_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r94: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r94): [1..4]
 a1(r87): [3..8]
 a2(r93): [5..6]
 a3(r92): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r94): [0..1]
 a1(r87): [0..3]
 a2(r93): [2..3]
 a3(r92): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r94,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r94,l0) a2(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r93,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts:  pref0:a3(r92)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r94 1r87 2r93 3r92
    modified regnos: 87 92 93 94
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r94 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r93,l0)(cost 0)
      Pushing a0(r94,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r94,l0)  -- assign reg 0
      Popping a2(r93,l0)  -- assign reg 0
      Popping a3(r92,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r92  l0     5    2:r93  l0     0    0:r94  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual const char* leveldb_filterpolicy_create_bloom(int)::Wrapper::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 113{96d,16u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.36874 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36874 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.36874 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36874 ])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36874 ])
        (nil)))
(call_insn/j 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) S1 A8])
            (const_int 0 [0]))) db/c.cc:506 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function virtual void leveldb_filterpolicy_create_bloom(int)::Wrapper::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper12CreateFilterEPKN7leveldb5SliceEiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1515, decl_uid=31932, cgraph_uid=621, symbol_order=624)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 91: local to bb 2 def dominates all uses has unique first use
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Ignoring reg 94, has equiv memory
Reg 95: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 90 to be not moveable
Found def insn 3 for 91 to be not moveable
Found def insn 4 for 92 to be not moveable
Found def insn 5 for 93 to be not moveable
Found def insn 11 for 95 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 94: (insn_list:REG_DEP_TRUE 10 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r95,l0) best AD_REGS, allocno AD_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r93,l0) best CREG, allocno CREG
    a3 (r92,l0) best DREG, allocno DREG
    a2 (r91,l0) best SIREG, allocno SIREG
    a6 (r90,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a3(r92,l0) costs: AREG:0,0 DREG:-2000,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:-2000,-2000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a6(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r95: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a3(r92,l0) costs: AREG:0,0 DREG:0,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-2000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a5(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a6(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 5(l0): point = 16
   Insn 4(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r95): [1..10]
 a1(r87): [3..14]
 a2(r91): [5..20]
 a3(r92): [7..18]
 a4(r93): [9..16]
 a5(r94): [11..12]
 a6(r90): [15..22]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r87): [0..3]
 a2(r91): [0..5]
 a3(r92): [0..5]
 a4(r93): [0..5]
 a5(r94): [2..3]
 a6(r90): [4..5]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r95,l0) conflicts: a1(r87,l0) a2(r91,l0) a3(r92,l0) a4(r93,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a1(r87,l0) conflicts: a0(r95,l0) a2(r91,l0) a3(r92,l0) a4(r93,l0) a5(r94,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a2(r91,l0) conflicts: a0(r95,l0) a1(r87,l0) a3(r92,l0) a4(r93,l0) a5(r94,l0) a6(r90,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a3(r92,l0) conflicts: a0(r95,l0) a1(r87,l0) a2(r91,l0) a4(r93,l0) a5(r94,l0) a6(r90,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a4(r93,l0) conflicts: a0(r95,l0) a1(r87,l0) a2(r91,l0) a3(r92,l0) a5(r94,l0) a6(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r94,l0) conflicts: a1(r87,l0) a2(r91,l0) a3(r92,l0) a4(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r90,l0) conflicts: a2(r91,l0) a3(r92,l0) a4(r93,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

  pref0:a4(r93)<-hr2@3000
  pref1:a3(r92)<-hr1@3000
  pref2:a2(r91)<-hr4@3000
  pref3:a6(r90)<-hr5@1500
  pref4:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r95 1r87 2r91 3r92 4r93 5r94 6r90
    modified regnos: 87 90 91 92 93 94 95
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
          2:( 0 1 3-6 37-44)@26000
            3:( 0 3-6 37-44)@26000
              4:( 0 3 5 6 37-44)@58000
                5:( 0 3 6 37-44)@16000
      Allocno a0r95 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 37-44, node:  0 1 3-6 37-44 (confl regs =  2 7-36 45-79)
      Allocno a4r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r90 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Pushing a6(r90,l0)(cost 0)
      Pushing a5(r94,l0)(cost 0)
      Pushing a4(r93,l0)(cost 0)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r95,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r95,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 4
      Popping a3(r92,l0)  -- assign reg 1
      Popping a4(r93,l0)  -- assign reg 2
      Popping a5(r94,l0)  -- assign reg 0
      Popping a6(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    6:r90  l0     5    2:r91  l0     4    3:r92  l0     1
    4:r93  l0     2    5:r94  l0     0    0:r95  l0     0
New iteration of spill/restore move
+++Costs: overall -24000, reg -24000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_filterpolicy_create_bloom(int)::Wrapper::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 127{102d,24u,1e} in 12{11 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92 93 94 95
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ keys ])
        (reg:DI 4 si [ keys ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ keys ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 92 [ n ])
        (reg:SI 1 dx [ n ])) db/c.cc:507 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ dst ])
        (reg:DI 2 cx [ dst ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ dst ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 87 [ D.36880 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36880 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.36880 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 93 [ dst ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ dst ])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (reg/v:SI 92 [ n ])) db/c.cc:508 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 92 [ n ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ keys ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ keys ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36880 ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36880 ])
        (nil)))
(call_insn/j 16 15 17 2 (call (mem:QI (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:508 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 17 16 0)

;; Function virtual bool leveldb_filterpolicy_create_bloom(int)::Wrapper::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper11KeyMayMatchERKN7leveldb5SliceES3_, funcdef_no=1516, decl_uid=31936, cgraph_uid=622, symbol_order=625)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Reg 94: local to bb 2 def dominates all uses has unique first use
Ignoring reg 95, has equiv memory
Reg 96: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 92 to be not moveable
Found def insn 3 for 93 to be not moveable
Found def insn 4 for 94 to be not moveable
Found def insn 10 for 96 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r96,l0) best AD_REGS, allocno AD_REGS
    a4 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r94,l0) best DREG, allocno DREG
    a2 (r93,l0) best SIREG, allocno SIREG
    a5 (r92,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a3(r94,l0) costs: AREG:0,0 DREG:-2000,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a4(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r96: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r96,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a3(r94,l0) costs: AREG:0,0 DREG:0,-2000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 4(l0): point = 14
   Insn 3(l0): point = 16
   Insn 2(l0): point = 18
 a0(r96): [1..8]
 a1(r87): [3..12]
 a2(r93): [5..16]
 a3(r94): [7..14]
 a4(r95): [9..10]
 a5(r92): [13..18]
Compressing live ranges: from 21 to 6 - 28%
Ranges after the compression:
 a0(r96): [0..1]
 a1(r87): [0..3]
 a2(r93): [0..5]
 a3(r94): [0..5]
 a4(r95): [2..3]
 a5(r92): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r96,l0) conflicts: a1(r87,l0) a2(r93,l0) a3(r94,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a1(r87,l0) conflicts: a0(r96,l0) a2(r93,l0) a3(r94,l0) a4(r95,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a2(r93,l0) conflicts: a0(r96,l0) a1(r87,l0) a3(r94,l0) a4(r95,l0) a5(r92,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a3(r94,l0) conflicts: a0(r96,l0) a1(r87,l0) a2(r93,l0) a4(r95,l0) a5(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r95,l0) conflicts: a1(r87,l0) a2(r93,l0) a3(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r92,l0) conflicts: a2(r93,l0) a3(r94,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

  pref0:a3(r94)<-hr1@3000
  pref1:a2(r93)<-hr4@3000
  pref2:a5(r92)<-hr5@1500
  pref3:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r96 1r87 2r93 3r94 4r95 5r92
    modified regnos: 87 92 93 94 95 96
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
          2:( 0 2-6 37-44)@26000
            3:( 0 2 3 5 6 37-44)@58000
              4:( 0 2 3 6 37-44)@16000
      Allocno a0r96 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a2r93 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a3r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r92 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Pushing a5(r92,l0)(cost 0)
      Pushing a4(r95,l0)(cost 0)
      Pushing a3(r94,l0)(cost 0)
      Pushing a2(r93,l0)(cost 0)
      Pushing a0(r96,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r96,l0)  -- assign reg 0
      Popping a2(r93,l0)  -- assign reg 4
      Popping a3(r94,l0)  -- assign reg 1
      Popping a4(r95,l0)  -- assign reg 0
      Popping a5(r92,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    5:r92  l0     5    2:r93  l0     4    3:r94  l0     1
    4:r95  l0     0    0:r96  l0     0
New iteration of spill/restore move
+++Costs: overall -18000, reg -18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual bool leveldb_filterpolicy_create_bloom(int)::Wrapper::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 123{100d,22u,1e} in 10{9 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94 95 96
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 94 [ filter ])
        (reg:DI 1 dx [ filter ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ filter ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.36885 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36885 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.36885 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 94 [ filter ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ filter ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ key ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ key ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36885 ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36885 ])
        (nil)))
(call_insn/j 14 13 15 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->4) S1 A8])
            (const_int 0 [0]))) db/c.cc:511 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 15 14 0)

;; Function static void leveldb_filterpolicy_create_bloom(int)::Wrapper::DoNothing(void*) (_ZZ33leveldb_filterpolicy_create_bloomEN7Wrapper9DoNothingEPv, funcdef_no=1517, decl_uid=31939, cgraph_uid=623, symbol_order=626)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure:
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


static void leveldb_filterpolicy_create_bloom(int)::Wrapper::DoNothing(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H() (_ZZ26leveldb_writebatch_iterateEN1HD2Ev, funcdef_no=1839, decl_uid=31720, cgraph_uid=946, symbol_order=951)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Ignoring reg 90, has equiv memory
Reg 89 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 90: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a2(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r88): [3..10]
 a1(r89): [5..6]
 a2(r90): [7..8]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r88): [0..3]
 a1(r89): [0..1]
 a2(r90): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r89,l0) a2(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r88)<-hr5@3000
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r89 2r90
    modified regnos: 88 89 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
      Allocno a0r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r89,l0)  -- assign reg 0
      Popping a2(r90,l0)  -- assign reg 0
Disposition:
    0:r88  l0     5    1:r89  l0     0    2:r90  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,2u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 109{95d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 88 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (plus:DI (reg:DI 90)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 88 [ this ]) [3 this_2(D)->D.31723._vptr.Handler+0 S8 A64])
        (reg/f:DI 89)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ this ])
        (nil)))
(call_insn/j 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function virtual leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H() (_ZZ26leveldb_writebatch_iterateEN1HD0Ev, funcdef_no=1841, decl_uid=31714, cgraph_uid=948, symbol_order=953)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Ignoring reg 90, has equiv memory
Reg 89 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 90: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:11000,11000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:14000,14000
  a1(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a2(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 12(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r88): [3..14]
 a1(r89): [9..10]
 a2(r90): [11..12]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r88): [0..3]
 a1(r89): [0..1]
 a2(r90): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r89,l0) a2(r90,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r88)<-hr5@4000
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r89 2r90
    modified regnos: 88 89 90
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@4000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@16000
          2:( 0-4 6 37-44)@28000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 3
      Popping a1(r89,l0)  -- assign reg 0
      Popping a2(r90,l0)  -- assign reg 0
Disposition:
    0:r88  l0     3    1:r89  l0     0    2:r90  l0     0
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 185{168d,17u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 88 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (plus:DI (reg:DI 90)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 88 [ this ]) [3 this_2(D)->D.31723._vptr.Handler+0 S8 A64])
        (reg/f:DI 89)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ this ])
        (nil)))
(call_insn/j 12 11 13 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:367 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 13 12 0)

;; Function leveldb_comparator_t::~leveldb_comparator_t() (_ZN20leveldb_comparator_tD2Ev, funcdef_no=1415, decl_uid=28870, cgraph_uid=522, symbol_order=525)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 92, has equiv memory
Reg 91 uninteresting
Ignoring reg 93, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best DIREG, allocno DIREG
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48000,48000 NO_REX_SSE_REGS:48000,48000 SSE_REGS:48000,48000 MMX_REGS:73000,73000 INT_SSE_REGS:53000,53000 ALL_REGS:1140000,1140000 MEM:20000,20000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative NO_REGS, allocno DIREG
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52000,52000 NO_REX_SSE_REGS:52000,52000 SSE_REGS:52000,52000 MMX_REGS:77000,77000 INT_SSE_REGS:57000,57000 ALL_REGS:1144000,1144000 MEM:23000,23000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r90): [3..16]
 a1(r93): [7..8]
 a2(r91): [11..12]
 a3(r92): [13..14]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r90): [0..5]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r92): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r90,l0) conflicts: a1(r93,l0) a2(r91,l0) a3(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@3000
  pref1:a1(r93)<-hr5@1000
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r93 2r91 3r92
    modified regnos: 90 91 92 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@16000
          2:( 0-4 6 37-44)@46000
          3:( 5)@2000
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 5
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r92,l0)  -- assign reg 0
Disposition:
    0:r90  l0     3    2:r91  l0     0    3:r92  l0     0    1:r93  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 189{169d,19u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                    (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64]) [0 *_4 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 15 14 0)

;; Function virtual leveldb_comparator_t::~leveldb_comparator_t() (_ZN20leveldb_comparator_tD0Ev, funcdef_no=1417, decl_uid=28864, cgraph_uid=524, symbol_order=527)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 92, has equiv memory
Reg 91 uninteresting
Ignoring reg 93, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best DIREG, allocno DIREG
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:86000,86000 INT_SSE_REGS:62000,62000 ALL_REGS:1348000,1348000 MEM:23000,23000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative NO_REGS, allocno DIREG
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60000,60000 NO_REX_SSE_REGS:60000,60000 SSE_REGS:60000,60000 MMX_REGS:90000,90000 INT_SSE_REGS:66000,66000 ALL_REGS:1352000,1352000 MEM:26000,26000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r90): [3..20]
 a1(r93): [11..12]
 a2(r91): [15..16]
 a3(r92): [17..18]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r90): [0..5]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r92): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r90,l0) conflicts: a1(r93,l0) a2(r91,l0) a3(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@4000
  pref1:a1(r93)<-hr5@1000
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r93 2r91 3r92
    modified regnos: 90 91 92 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@4000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@16000
          2:( 0-4 6 37-44)@52000
          3:( 5)@2000
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 5
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r92,l0)  -- assign reg 0
Disposition:
    0:r90  l0     3    2:r91  l0     0    3:r92  l0     0    1:r93  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 265{242d,22u,1e} in 11{8 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                    (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64]) [0 *_5 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:71 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 16 15 17 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:71 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 17 16 0)

;; Function leveldb_filterpolicy_t::~leveldb_filterpolicy_t() (_ZN22leveldb_filterpolicy_tD2Ev, funcdef_no=1423, decl_uid=28947, cgraph_uid=530, symbol_order=533)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 92, has equiv memory
Reg 91 uninteresting
Ignoring reg 93, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best DIREG, allocno DIREG
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48000,48000 NO_REX_SSE_REGS:48000,48000 SSE_REGS:48000,48000 MMX_REGS:73000,73000 INT_SSE_REGS:53000,53000 ALL_REGS:1140000,1140000 MEM:20000,20000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative NO_REGS, allocno DIREG
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52000,52000 NO_REX_SSE_REGS:52000,52000 SSE_REGS:52000,52000 MMX_REGS:77000,77000 INT_SSE_REGS:57000,57000 ALL_REGS:1144000,1144000 MEM:23000,23000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r90): [3..16]
 a1(r93): [7..8]
 a2(r91): [11..12]
 a3(r92): [13..14]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r90): [0..5]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r92): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r90,l0) conflicts: a1(r93,l0) a2(r91,l0) a3(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@3000
  pref1:a1(r93)<-hr5@1000
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r93 2r91 3r92
    modified regnos: 90 91 92 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@16000
          2:( 0-4 6 37-44)@46000
          3:( 5)@2000
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 5
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r92,l0)  -- assign reg 0
Disposition:
    0:r90  l0     3    2:r91  l0     0    3:r92  l0     0    1:r93  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 189{169d,19u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                    (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64]) [0 *_4 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 15 14 0)

;; Function virtual leveldb_filterpolicy_t::~leveldb_filterpolicy_t() (_ZN22leveldb_filterpolicy_tD0Ev, funcdef_no=1425, decl_uid=28941, cgraph_uid=532, symbol_order=535)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 92, has equiv memory
Reg 91 uninteresting
Ignoring reg 93, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best DIREG, allocno DIREG
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:86000,86000 INT_SSE_REGS:62000,62000 ALL_REGS:1348000,1348000 MEM:23000,23000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r93: preferred DIREG, alternative NO_REGS, allocno DIREG
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60000,60000 NO_REX_SSE_REGS:60000,60000 SSE_REGS:60000,60000 MMX_REGS:90000,90000 INT_SSE_REGS:66000,66000 ALL_REGS:1352000,1352000 MEM:26000,26000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 2(l0): point = 20
 a0(r90): [3..20]
 a1(r93): [11..12]
 a2(r91): [15..16]
 a3(r92): [17..18]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r90): [0..5]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r92): [4..5]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r90,l0) conflicts: a1(r93,l0) a2(r91,l0) a3(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@4000
  pref1:a1(r93)<-hr5@1000
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r93 2r91 3r92
    modified regnos: 90 91 92 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@4000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@16000
          2:( 0-4 6 37-44)@52000
          3:( 5)@2000
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 5
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r92,l0)  -- assign reg 0
Disposition:
    0:r90  l0     3    2:r91  l0     0    3:r92  l0     0    1:r93  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 265{242d,22u,1e} in 11{8 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])
        (nil)))
(note 10 9 11 2 NOTE_INSN_DELETED)
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                    (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64]) [0 *_5 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 16 15 17 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:102 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 17 16 0)

;; Function leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper() (_ZZ33leveldb_filterpolicy_create_bloomEN7WrapperD2Ev, funcdef_no=1511, decl_uid=31952, cgraph_uid=617, symbol_order=620)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 95, has equiv memory
Reg 94 uninteresting
Reg 87 uninteresting
Reg 96: local to bb 3 def dominates all uses has unique first use
Ignoring reg 99, has equiv memory
Reg 98 uninteresting
Ignoring reg 100, has equiv memory
Found def insn 13 for 96 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 22 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r100,l0) best DIREG, allocno DIREG
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best DIREG, allocno DIREG
    a5 (r87,l0) best DIREG, allocno DIREG

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:64000,64000 NO_REX_SSE_REGS:64000,64000 SSE_REGS:64000,64000 MMX_REGS:99000,99000 INT_SSE_REGS:71000,71000 ALL_REGS:1556000,1556000 MEM:28000,28000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a4(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32528,32528 NO_REX_SSE_REGS:32528,32528 SSE_REGS:32528,32528 MMX_REGS:45358,45358 INT_SSE_REGS:35094,35094 ALL_REGS:637728,637728 MEM:13481,13481
  a6(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative NO_REGS, allocno DIREG
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:68000,68000 NO_REX_SSE_REGS:68000,68000 SSE_REGS:68000,68000 MMX_REGS:103000,103000 INT_SSE_REGS:75000,75000 ALL_REGS:1560000,1560000 MEM:31000,31000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a4(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33528,33528 NO_REX_SSE_REGS:33528,33528 SSE_REGS:33528,33528 MMX_REGS:46358,46358 INT_SSE_REGS:36094,36094 ALL_REGS:641728,641728 MEM:13481,13481
  a6(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 22(l0): point = 8
   Insn 21(l0): point = 10
   Insn 20(l0): point = 12
   Insn 19(l0): point = 14
   Insn 16(l0): point = 17
   Insn 15(l0): point = 19
   Insn 13(l0): point = 21
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 6(l0): point = 34
   Insn 2(l0): point = 36
 a0(r93): [3..36]
 a1(r100): [7..8]
 a2(r98): [11..12]
 a3(r99): [13..14]
 a4(r96): [18..21]
 a5(r87): [20..28]
 a6(r94): [31..32]
 a7(r95): [33..34]
Compressing live ranges: from 39 to 12 - 30%
Ranges after the compression:
 a0(r93): [0..11]
 a1(r100): [0..1]
 a2(r98): [2..3]
 a3(r99): [4..5]
 a4(r96): [6..7]
 a5(r87): [6..7]
 a6(r94): [8..9]
 a7(r95): [10..11]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r93,l0) conflicts: a1(r100,l0) a2(r98,l0) a3(r99,l0) a4(r96,l0) a5(r87,l0) a6(r94,l0) a7(r95,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r100,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r98,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r99,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r96,l0) conflicts: a0(r93,l0) a5(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r87,l0) conflicts: a0(r93,l0) a4(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r94,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r95,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r93)<-hr5@3000
  pref1:a5(r87)<-hr5@1174
  pref2:a1(r100)<-hr5@1000
  regions=1, blocks=5, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r93 1r100 2r98 3r99 4r96 5r87 6r94 7r95
    modified regnos: 87 93 94 95 96 98 99 100
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@63660
          2:( 0-4 6 37-44)@74528
          3:( 5)@2000
      Allocno a0r93 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r100 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r96 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a4(r96,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a6(r94,l0)(cost 0)
      Pushing a3(r99,l0)(cost 0)
      Pushing a2(r98,l0)(cost 0)
      Pushing a1(r100,l0)(cost 0)
      Pushing a5(r87,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Popping a0(r93,l0)  -- assign reg 3
      Popping a5(r87,l0)  -- assign reg 5
      Popping a1(r100,l0)  -- assign reg 5
      Popping a2(r98,l0)  -- assign reg 0
      Popping a3(r99,l0)  -- assign reg 0
      Popping a6(r94,l0)  -- assign reg 0
      Popping a7(r95,l0)  -- assign reg 0
      Popping a4(r96,l0)  -- assign reg 0
Disposition:
    5:r87  l0     5    0:r93  l0     3    6:r94  l0     0    7:r95  l0     0
    4:r96  l0     0    2:r98  l0     0    3:r99  l0     0    1:r100 l0     5
New iteration of spill/restore move
+++Costs: overall -5349, reg -5349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={3d} r20={1d,4u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,3u} r93={1d,6u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 286{247d,38u,1e} in 18{15 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:505 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 this_3(D)->D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.36927 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 48 [0x30])) [3 this_3(D)->rep_+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.36927 ])
            (const_int 0 [0]))) db/c.cc:505 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:505 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36927 ]) [3 MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(note 14 13 15 3 NOTE_INSN_DELETED)
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36927 ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36927 ])
        (nil)))
(call_insn 16 15 17 3 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_7;(struct FilterPolicy)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:505 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100
(code_label 17 16 18 4 26 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 20 19 21 4 (set (reg/f:DI 98)
        (plus:DI (reg:DI 99)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 21 20 22 4 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 98)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_+0 S8 A64])
        (nil)))
(note 23 22 24 4 NOTE_INSN_DELETED)
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                    (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_+0 S8 A64]) [0 *_11 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -2 [0xfffffffffffffffe])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(call_insn/j 27 26 28 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 28 27 0)

;; Function bool SaveError(char**, const leveldb::Status&) (SaveError, funcdef_no=1429, decl_uid=31234, cgraph_uid=536, symbol_order=539)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 17 count 14 (    1)
rescanning insn with uid = 50.
deleting insn with uid = 49.
rescanning insn with uid = 24.
deleting insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 17 count 14 (    1)
Reg 98 uninteresting (no unique first use)
Reg 88 uninteresting
Ignoring reg 102, has equiv memory
Reg 95: def dominates all uses has unique first use
Ignoring reg 107, has equiv memory
Reg 92: def dominates all uses has unique first use
Reg 92 not local to one basic block
Reg 95 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 10 3 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { }
;; 13 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 102: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 54 (nil))
Reg 100 had equivalence, but can't be eliminated
Reg 105 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a2 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r107,l0) best AREG, allocno AREG
    a3 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r102,l0) best AREG, allocno AREG
    a10 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r98,l0) best SIREG, allocno SIREG
    a4 (r97,l0) best DIREG, allocno DIREG
    a8 (r95,l0) best DIREG, allocno DIREG
    a1 (r92,l0) best DIREG, allocno DIREG
    a7 (r88,l0) best DIREG, allocno DIREG
    a0 (r87,l0) best AREG, allocno AREG

  a0(r87,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:3998,3998
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-533,-533 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19524,19524 NO_REX_SSE_REGS:19524,19524 SSE_REGS:19524,19524 MMX_REGS:26004,26004 INT_SSE_REGS:20820,20820 ALL_REGS:348920,348920 MEM:6940,6940
  a2(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16023,16023 NO_REX_SSE_REGS:16023,16023 SSE_REGS:16023,16023 MMX_REGS:19838,19838 INT_SSE_REGS:16786,16786 ALL_REGS:317408,317408 MEM:4578,4578
  a3(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22127,22127 NO_REX_SSE_REGS:22127,22127 SSE_REGS:22127,22127 MMX_REGS:29757,29757 INT_SSE_REGS:23653,23653 ALL_REGS:476112,476112 MEM:7630,7630
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22360,22360 NO_REX_SSE_REGS:22360,22360 SSE_REGS:22360,22360 MMX_REGS:31335,31335 INT_SSE_REGS:24155,24155 ALL_REGS:473360,473360 MEM:8180,8180
  a5(r107,l0) costs: AREG:-763,-763 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12208,12208 NO_REX_SSE_REGS:12208,12208 SSE_REGS:12208,12208 MMX_REGS:16023,16023 INT_SSE_REGS:12971,12971 ALL_REGS:235004,235004 MEM:3815,3815
  a6(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1897,-1897 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23176,23176 NO_REX_SSE_REGS:23176,23176 SSE_REGS:23176,23176 MMX_REGS:32661,32661 INT_SSE_REGS:25073,25073 ALL_REGS:494576,494576 MEM:7691,7691
  a7(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-763,-763 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24064,24064 NO_REX_SSE_REGS:24064,24064 SSE_REGS:24064,24064 MMX_REGS:32369,32369 INT_SSE_REGS:25725,25725 ALL_REGS:438880,438880 MEM:9473,9473
  a8(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-105,-105 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3520,3520 NO_REX_SSE_REGS:3520,3520 SSE_REGS:3520,3520 MMX_REGS:4715,4715 INT_SSE_REGS:3759,3759 ALL_REGS:63648,63648 MEM:1253,1253
  a9(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2814,2814 NO_REX_SSE_REGS:2814,2814 SSE_REGS:2814,2814 MMX_REGS:3484,3484 INT_SSE_REGS:2948,2948 ALL_REGS:55744,55744 MEM:804,804
  a10(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3886,3886 NO_REX_SSE_REGS:3886,3886 SSE_REGS:3886,3886 MMX_REGS:5226,5226 INT_SSE_REGS:4154,4154 ALL_REGS:83616,83616 MEM:1340,1340
  a11(r102,l0) costs: AREG:-134,-134 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2144,2144 NO_REX_SSE_REGS:2144,2144 SSE_REGS:2144,2144 MMX_REGS:2814,2814 INT_SSE_REGS:2278,2278 ALL_REGS:41272,41272 MEM:670,670


Pass 1 for finding pseudo/allocno costs

    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6992,6992
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-533 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20287,20287 NO_REX_SSE_REGS:20287,20287 SSE_REGS:20287,20287 MMX_REGS:26767,26767 INT_SSE_REGS:21583,21583 ALL_REGS:351972,351972 MEM:6940,6940
  a2(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16023,16023 NO_REX_SSE_REGS:16023,16023 SSE_REGS:16023,16023 MMX_REGS:19838,19838 INT_SSE_REGS:16786,16786 ALL_REGS:317408,317408 MEM:4578,4578
  a3(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:22127,22127 NO_REX_SSE_REGS:22127,22127 SSE_REGS:22127,22127 MMX_REGS:29757,29757 INT_SSE_REGS:23653,23653 ALL_REGS:476112,476112 MEM:7630,7630
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26360,26360 NO_REX_SSE_REGS:26360,26360 SSE_REGS:26360,26360 MMX_REGS:35335,35335 INT_SSE_REGS:28155,28155 ALL_REGS:477360,477360 MEM:11180,11180
  a5(r107,l0) costs: AREG:0,-763 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15260,15260 NO_REX_SSE_REGS:15260,15260 SSE_REGS:15260,15260 MMX_REGS:19075,19075 INT_SSE_REGS:16023,16023 ALL_REGS:238056,238056 MEM:6104,6104
  a6(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1897 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27176,27176 NO_REX_SSE_REGS:27176,27176 SSE_REGS:27176,27176 MMX_REGS:36661,36661 INT_SSE_REGS:29073,29073 ALL_REGS:498576,498576 MEM:10691,10691
  a7(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-763 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24962,24962 NO_REX_SSE_REGS:24962,24962 SSE_REGS:24962,24962 MMX_REGS:33267,33267 INT_SSE_REGS:26623,26623 ALL_REGS:442472,442472 MEM:9473,9473
  a8(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-105 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3654,3654 NO_REX_SSE_REGS:3654,3654 SSE_REGS:3654,3654 MMX_REGS:4849,4849 INT_SSE_REGS:3893,3893 ALL_REGS:64184,64184 MEM:1253,1253
  a9(r104,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2814,2814 NO_REX_SSE_REGS:2814,2814 SSE_REGS:2814,2814 MMX_REGS:3484,3484 INT_SSE_REGS:2948,2948 ALL_REGS:55744,55744 MEM:804,804
  a10(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3886,3886 NO_REX_SSE_REGS:3886,3886 SSE_REGS:3886,3886 MMX_REGS:5226,5226 INT_SSE_REGS:4154,4154 ALL_REGS:83616,83616 MEM:1340,1340
  a11(r102,l0) costs: AREG:0,-134 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2680,2680 NO_REX_SSE_REGS:2680,2680 SSE_REGS:2680,2680 MMX_REGS:3350,3350 INT_SSE_REGS:2814,2814 ALL_REGS:41808,41808 MEM:1072,1072

   Insn 78(l0): point = 0
   Insn 75(l0): point = 3
   Insn 74(l0): point = 6
   Insn 73(l0): point = 8
   Insn 71(l0): point = 10
   Insn 7(l0): point = 13
   Insn 88(l0): point = 16
   Insn 8(l0): point = 18
   Insn 62(l0): point = 21
   Insn 61(l0): point = 23
   Insn 59(l0): point = 26
   Insn 58(l0): point = 28
   Insn 57(l0): point = 30
   Insn 55(l0): point = 32
   Insn 54(l0): point = 34
   Insn 52(l0): point = 36
   Insn 51(l0): point = 38
   Insn 50(l0): point = 40
   Insn 48(l0): point = 42
   Insn 47(l0): point = 44
   Insn 46(l0): point = 46
   Insn 45(l0): point = 48
   Insn 44(l0): point = 50
   Insn 43(l0): point = 52
   Insn 86(l0): point = 55
   Insn 9(l0): point = 57
   Insn 36(l0): point = 60
   Insn 35(l0): point = 62
   Insn 33(l0): point = 65
   Insn 32(l0): point = 67
   Insn 31(l0): point = 69
   Insn 29(l0): point = 71
   Insn 28(l0): point = 73
   Insn 26(l0): point = 75
   Insn 25(l0): point = 77
   Insn 24(l0): point = 79
   Insn 22(l0): point = 81
   Insn 21(l0): point = 83
   Insn 20(l0): point = 85
   Insn 19(l0): point = 87
   Insn 17(l0): point = 90
   Insn 16(l0): point = 92
   Insn 15(l0): point = 94
   Insn 13(l0): point = 97
   Insn 12(l0): point = 99
   Insn 6(l0): point = 101
   Insn 3(l0): point = 103
   Insn 2(l0): point = 105
 a0(r87): [55..57] [16..18] [11..13]
 a1(r92): [24..32]
 a2(r109): [29..30]
 a3(r105): [31..48]
 a4(r97): [74..105] [35..54]
 a5(r107): [35..36]
 a6(r98): [86..103] [47..54]
 a7(r88): [90..94] [53..54]
 a8(r95): [63..71]
 a9(r104): [68..69]
 a10(r100): [70..87]
 a11(r102): [74..75]
Compressing live ranges: from 108 to 26 - 24%
Ranges after the compression:
 a0(r87): [14..15] [0..3]
 a1(r92): [4..7]
 a2(r109): [4..5]
 a3(r105): [6..11]
 a4(r97): [20..25] [8..13]
 a5(r107): [8..9]
 a6(r98): [22..25] [10..13]
 a7(r88): [24..25] [12..13]
 a8(r95): [16..19]
 a9(r104): [16..17]
 a10(r100): [18..23]
 a11(r102): [20..21]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r87,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r92,l0) conflicts: a2(r109,l0) a3(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r109,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r105,l0) conflicts: a1(r92,l0) a5(r107,l0) a4(r97,l0) a6(r98,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a4(r97,l0) conflicts: a3(r105,l0) a5(r107,l0) a6(r98,l0) a7(r88,l0) a10(r100,l0) a11(r102,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a5(r107,l0) conflicts: a3(r105,l0) a4(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r98,l0) conflicts: a3(r105,l0) a4(r97,l0) a7(r88,l0) a10(r100,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a7(r88,l0) conflicts: a4(r97,l0) a6(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r95,l0) conflicts: a9(r104,l0) a10(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r104,l0) conflicts: a8(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r100,l0) conflicts: a4(r97,l0) a6(r98,l0) a8(r95,l0) a11(r102,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a11(r102,l0) conflicts: a4(r97,l0) a10(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r109)<->a3(r105)@95:shuffle
  cp1:a9(r104)<->a10(r100)@16:shuffle
  pref0:a5(r107)<-hr0@1144
  pref1:a11(r102)<-hr0@201
  pref2:a6(r98)<-hr4@2845
  pref3:a4(r97)<-hr5@1500
  pref4:a8(r95)<-hr5@157
  pref5:a1(r92)<-hr5@799
  pref6:a7(r88)<-hr5@1144
  pref7:a0(r87)<-hr0@1500
  pref8:a3(r105)<-hr5@763
  pref9:a10(r100)<-hr5@134
  regions=1, blocks=14, points=26
    allocnos=12 (big 0), copies=2, conflicts=0, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r87 1r92 2r109 3r105 4r97 5r107 6r98 7r88 8r95 9r104 10r100 11r102
    modified regnos: 87 88 92 95 97 98 100 102 104 105 107 109
    border:
    Pressure: GENERAL_REGS=4
 Removing pref8:hr5@763
 Removing pref3:hr5@1500
 Removing pref9:hr5@134
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@94220
          2:( 0-4 6 37-44)@21382
            3:( 1-3 6 37-44)@40300
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r105 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a4r97 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a5r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r98 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a7r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r100 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a11r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a2r109-a3r105 (freq=95):
        Result (freq=3815): a2r109(1526) a3r105(2289)
      Forming thread by copy 1:a9r104-a10r100 (freq=16):
        Result (freq=670): a9r104(268) a10r100(402)
      Pushing a11(r102,l0)(cost 0)
      Pushing a8(r95,l0)(cost 0)
      Pushing a9(r104,l0)(cost 0)
      Pushing a10(r100,l0)(cost 0)
      Pushing a5(r107,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a7(r88,l0)(cost 0)
      Pushing a4(r97,l0)(cost 0)
      Pushing a6(r98,l0)(cost 0)
      Pushing a2(r109,l0)(cost 0)
      Pushing a3(r105,l0)(cost 0)
      Popping a3(r105,l0)  -- assign reg 3
      Popping a2(r109,l0)  -- assign reg 3
      Popping a6(r98,l0)  -- assign reg 6
      Popping a4(r97,l0)  -- assign reg 41
      Popping a7(r88,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 5
      Popping a0(r87,l0)  -- assign reg 0
      Popping a5(r107,l0)  -- assign reg 0
      Popping a10(r100,l0)  -- assign reg 3
      Popping a9(r104,l0)  -- assign reg 3
      Popping a8(r95,l0)  -- assign reg 5
      Popping a11(r102,l0)  -- assign reg 0
Disposition:
    0:r87  l0     0    7:r88  l0     5    1:r92  l0     5    8:r95  l0     5
    4:r97  l0    41    6:r98  l0     6   10:r100 l0     3   11:r102 l0     0
    9:r104 l0     3    3:r105 l0     3    5:r107 l0     0    2:r109 l0     3
New iteration of spill/restore move
+++Costs: overall -9894, reg -9894, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


bool SaveError(char**, const leveldb::Status&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,4u} r1={9d} r2={9d} r4={11d,3u} r5={16d,8u} r6={1d,13u} r7={1d,21u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,12u} r17={18d,5u} r18={8d} r19={8d} r20={1d,21u,4e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={3d,1u} r88={1d,2u} r92={1d,2u} r95={1d,2u} r97={1d,3u,2e} r98={1d,3u} r100={1d,2u} r102={1d,1u} r104={1d,1u} r105={1d,2u} r107={1d,1u} r109={1d,1u} 
;;    total ref usage 743{629d,108u,6e} in 48{40 regular + 8 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 98
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 97 [ errptr ])
        (reg:DI 5 di [ errptr ])) db/c.cc:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ errptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 98 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.36951+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:132 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 6 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 98 [ s ]) [3 s_4(D)->state_+0 S8 A128])
            (const_int 0 [0]))) db/c.cc:134 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) db/c.cc:134 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 83)
;;  succ:       10 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags] 88
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:DI 88 [ D.36948 ])
        (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])) db/c.cc:136 89 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.36948 ])
            (const_int 0 [0]))) db/c.cc:136 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) db/c.cc:136 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 41)
;;  succ:       4 [15.0%]  (FALLTHRU)
;;              7 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98

;; basic block 4, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [15.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 100 102 104
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:137 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ s ])) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ s ])
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 100)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 22 21 24 4 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) db/c.cc:137 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 24 22 25 4 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.36936]+0 S8 A128])) db/c.cc:137 89 {*movdi_internal}
     (nil))
(call_insn 25 24 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:137 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 28 4 (set (reg/f:DI 102)
        (reg:DI 0 ax)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
            (expr_list:REG_NOALIAS (reg/f:DI 102)
                (nil)))))
(insn 28 26 29 4 (set (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
        (reg/f:DI 102)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_DEAD (reg/v/f:DI 97 [ errptr ])
            (nil))))
(insn 29 28 31 4 (set (reg/f:DI 95 [ D.36948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.36936]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 31 29 32 4 (parallel [
            (set (reg/f:DI 104)
                (plus:DI (reg/f:DI 100)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.36948 ])
            (reg/f:DI 104))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 37)
;;  succ:       5 [78.3%]  (FALLTHRU)
;;              6 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95

;; basic block 5, loop depth 0, count 0, freq 1056, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [78.3%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.36948 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.36948 ])
        (nil)))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [21.6%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 37 36 38 6 35 "" [1 uses])
(note 38 37 9 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 9 38 86 6 (set (reg:QI 87 [ D.36947 ])
        (const_int 1 [0x1])) db/c.cc:137 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 86 9 87 6 (set (pc)
        (label_ref 65)) 654 {jump}
     (nil)
 -> 65)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 87 86 41)
;; basic block 7, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [85.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 105 107 109
(code_label 41 87 42 7 34 "" [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.36948 ])) db/c.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.36948 ])
        (nil)))
(call_insn 44 43 45 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:140 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 7 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:141 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 46 45 47 7 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ s ])) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ s ])
        (nil)))
(insn 47 46 48 7 (set (reg:DI 5 di)
        (reg/f:DI 105)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 48 47 50 7 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) db/c.cc:141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 50 48 51 7 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31237]+0 S8 A128])) db/c.cc:141 89 {*movdi_internal}
     (nil))
(call_insn 51 50 52 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 54 7 (set (reg/f:DI 107)
        (reg:DI 0 ax)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
            (expr_list:REG_NOALIAS (reg/f:DI 107)
                (nil)))))
(insn 54 52 55 7 (set (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
        (reg/f:DI 107)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_DEAD (reg/v/f:DI 97 [ errptr ])
            (nil))))
(insn 55 54 57 7 (set (reg/f:DI 92 [ D.36948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31237]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 57 55 58 7 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.36948 ])
            (reg/f:DI 109))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(jump_insn 59 58 60 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 63)
;;  succ:       8 [69.8%]  (FALLTHRU)
;;              9 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 8, loop depth 0, count 0, freq 5334, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [69.8%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.36948 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.36948 ])
        (nil)))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [30.2%] 
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 63 62 64 9 36 "" [1 uses])
(note 64 63 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 64 88 9 (set (reg:QI 87 [ D.36947 ])
        (const_int 1 [0x1])) db/c.cc:143 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 88 8 89 9 (set (pc)
        (label_ref 65)) 654 {jump}
     (nil)
 -> 65)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 89 88 83)
;; basic block 10, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 83 89 82 10 38 "" [1 uses])
(note 82 83 7 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 7 82 65 10 (set (reg:QI 87 [ D.36947 ])
        (const_int 0 [0])) db/c.cc:135 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
(code_label 65 7 66 11 33 "" [2 uses])
(note 66 65 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 66 73 11 (set (reg/i:QI 0 ax)
        (reg:QI 87 [ D.36947 ])) db/c.cc:144 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.36947 ])
        (nil)))
(insn 73 71 74 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.36951+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:144 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 74 73 84 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) db/c.cc:144 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 77)
;;  succ:       13 [100.0%] 
;;              12 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 4
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [0.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 84 74 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 84 76 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:144 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 76 75 77)
;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 77 76 85 13 37 "" [1 uses])
(note 85 77 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 85 0 13 (use (reg/i:QI 0 ax)) db/c.cc:144 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_filterpolicy_t::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (_ZNK22leveldb_filterpolicy_t12CreateFilterEPKN7leveldb5SliceEiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1427, decl_uid=28920, cgraph_uid=534, symbol_order=537)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 46 count 38 (  1.1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 129: def dominates all uses has unique first use
Reg 130 uninteresting (no unique first use)
Reg 133 uninteresting
Ignoring reg 137, has equiv memory
Reg 114: def dominates all uses has unique first use
Reg 115: def dominates all uses has unique first use
Reg 142 uninteresting
Ignoring reg 139, has equiv memory
Ignoring reg 140, has equiv memory
Reg 144: def dominates all uses has unique first use
Reg 114 not local to one basic block
Reg 115 not local to one basic block
Reg 129 not local to one basic block
Reg 144 not local to one basic block
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
;;
;; Loop 3
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 2
;;  header 13, latch 13
;;  depth 1, outer 0
;;  nodes: 13
;;
;; Loop 1
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;; 2 succs { 3 9 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 7 6 }
;; 7 succs { 29 8 }
;; 8 succs { 13 }
;; 9 succs { 10 }
;; 10 succs { 24 11 }
;; 11 succs { 12 19 }
;; 12 succs { 18 }
;; 13 succs { 14 13 }
;; 14 succs { 10 15 }
;; 15 succs { 16 }
;; 16 succs { 17 16 }
;; 17 succs { 10 }
;; 18 succs { 24 }
;; 19 succs { 20 24 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 32 }
;; 23 succs { 32 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 30 28 }
;; 28 succs { 31 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { }
;; 32 succs { 34 33 }
;; 33 succs { }
;; 34 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 133: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 71 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 95 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 110 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r144,l0) best AREG, allocno AREG
    a0 (r143,l0) best AREG, allocno AREG
    a13 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r140,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r139,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r137,l0) best DIREG, allocno DIREG
    a19 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r131,l1) best CREG, allocno CREG
    a36 (r131,l2) best CREG, allocno CREG
    a26 (r131,l3) best CREG, allocno CREG
    a5 (r131,l0) best CREG, allocno CREG
    a43 (r130,l1) best DREG, allocno DREG
    a35 (r130,l2) best DREG, allocno DREG
    a25 (r130,l3) best DREG, allocno DREG
    a8 (r130,l0) best DREG, allocno DREG
    a42 (r129,l1) best SIREG, allocno SIREG
    a34 (r129,l2) best SIREG, allocno SIREG
    a11 (r129,l0) best SIREG, allocno SIREG
    a41 (r128,l1) best DIREG, allocno DIREG
    a33 (r128,l2) best DIREG, allocno DIREG
    a24 (r128,l3) best DIREG, allocno DIREG
    a7 (r128,l0) best DIREG, allocno DIREG
    a40 (r127,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r124,l2) best AREG, allocno AREG
    a23 (r124,l3) best AREG, allocno AREG
    a3 (r124,l0) best AREG, allocno AREG
    a39 (r123,l1) best AREG, allocno AREG
    a31 (r123,l2) best AREG, allocno AREG
    a22 (r123,l3) best AREG, allocno AREG
    a1 (r123,l0) best AREG, allocno AREG
    a21 (r121,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r120,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r115,l0) best DREG, allocno DREG
    a4 (r114,l0) best AREG, allocno AREG
    a30 (r111,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r110,l1) best DIREG, allocno DIREG
    a17 (r110,l0) best DIREG, allocno DIREG
    a37 (r109,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r109,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r143,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a1(r123,l0) costs: AREG:-81,-81 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-71,-71 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2728,17280 NO_REX_SSE_REGS:2728,17280 SSE_REGS:2728,17280 MMX_REGS:3983,27630 INT_SSE_REGS:2979,19350 ALL_REGS:61208,439560 MEM:933,8209
  a2(r144,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a3(r124,l0) costs: AREG:-81,-81 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-63,-63 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2664,17208 NO_REX_SSE_REGS:2664,17208 SSE_REGS:2664,17208 MMX_REGS:3879,27513 INT_SSE_REGS:2907,19269 ALL_REGS:59544,437688 MEM:909,8181
  a4(r114,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-89,-89 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2144,2144 NO_REX_SSE_REGS:2144,2144 SSE_REGS:2144,2144 MMX_REGS:3034,3034 INT_SSE_REGS:2322,2322 ALL_REGS:46024,46024 MEM:624,624
  a5(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:-89,-89 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2152,2152 NO_REX_SSE_REGS:2152,2152 SSE_REGS:2152,2152 MMX_REGS:3047,3047 INT_SSE_REGS:2331,2331 ALL_REGS:46232,46232 MEM:717,717
  a6(r115,l0) costs: AREG:0,0 DREG:-89,-89 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2512,2512 NO_REX_SSE_REGS:2512,2512 SSE_REGS:2512,2512 MMX_REGS:3407,3407 INT_SSE_REGS:2691,2691 ALL_REGS:46592,46592 MEM:897,897
  a7(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2880,2880 NO_REX_SSE_REGS:2880,2880 SSE_REGS:2880,2880 MMX_REGS:4230,4230 INT_SSE_REGS:3150,3150 ALL_REGS:65160,65160 MEM:1170,1170
  a8(r130,l0) costs: AREG:0,0 DREG:-90,-90 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2808,10080 NO_REX_SSE_REGS:2808,10080 SSE_REGS:2808,10080 MMX_REGS:4113,15930 INT_SSE_REGS:3069,11250 ALL_REGS:63288,252360 MEM:954,3681
  a9(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,41553 NO_REX_SSE_REGS:648,41553 SSE_REGS:648,41553 MMX_REGS:648,59733 INT_SSE_REGS:648,45189 ALL_REGS:8100,953460 MEM:81,15534
  a10(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,48825 NO_REX_SSE_REGS:648,48825 SSE_REGS:648,48825 MMX_REGS:648,71550 INT_SSE_REGS:648,53370 ALL_REGS:8100,1142532 MEM:81,20079
  a11(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1368,1368 NO_REX_SSE_REGS:1368,1368 SSE_REGS:1368,1368 MMX_REGS:1773,1773 INT_SSE_REGS:1449,1449 ALL_REGS:25848,25848 MEM:333,333
  a12(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:630,630
  a13(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:720,720
  a14(r137,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:-90,-90
  a15(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,34281 NO_REX_SSE_REGS:648,34281 SSE_REGS:648,34281 MMX_REGS:648,47916 INT_SSE_REGS:648,37008 ALL_REGS:8100,764388 MEM:81,11898
  a16(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3186,17738 NO_REX_SSE_REGS:3186,17738 SSE_REGS:3186,17738 MMX_REGS:4446,28093 INT_SSE_REGS:3438,19809 ALL_REGS:71136,449488 MEM:1287,6744
  a17(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-81,-81 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2349,2349 NO_REX_SSE_REGS:2349,2349 SSE_REGS:2349,2349 MMX_REGS:3159,3159 INT_SSE_REGS:2511,2511 ALL_REGS:50544,50544 MEM:810,810
  a18(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,34318 NO_REX_SSE_REGS:648,34318 SSE_REGS:648,34318 MMX_REGS:648,47968 INT_SSE_REGS:648,37048 ALL_REGS:8100,765220 MEM:81,11911
  a19(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1620,1620 NO_REX_SSE_REGS:1620,1620 SSE_REGS:1620,1620 MMX_REGS:2025,2025 INT_SSE_REGS:1701,1701 ALL_REGS:25272,25272 MEM:567,567
  a20(r120,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48177,48177 NO_REX_SSE_REGS:48177,48177 SSE_REGS:48177,48177 MMX_REGS:70902,70902 INT_SSE_REGS:52722,52722 ALL_REGS:1134432,1134432 MEM:19998,19998
  a21(r121,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40905,40905 NO_REX_SSE_REGS:40905,40905 SSE_REGS:40905,40905 MMX_REGS:59085,59085 INT_SSE_REGS:44541,44541 ALL_REGS:945360,945360 MEM:15453,15453
  a22(r123,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a23(r124,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a24(r128,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a25(r130,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:2727,2727
  a26(r131,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r140,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18180,18180 NO_REX_SSE_REGS:18180,18180 SSE_REGS:18180,18180 MMX_REGS:22725,22725 INT_SSE_REGS:19089,19089 ALL_REGS:283608,283608 MEM:0,0
  a28(r139,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18180,18180 NO_REX_SSE_REGS:18180,18180 SSE_REGS:18180,18180 MMX_REGS:22725,22725 INT_SSE_REGS:19089,19089 ALL_REGS:283608,283608 MEM:0,0
  a29(r109,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:2727,2727
  a30(r111,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33633,33633 NO_REX_SSE_REGS:33633,33633 SSE_REGS:33633,33633 MMX_REGS:47268,47268 INT_SSE_REGS:36360,36360 ALL_REGS:756288,756288 MEM:11817,11817
  a31(r123,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a32(r124,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a33(r128,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a34(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a35(r130,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a36(r131,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r109,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a38(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r123,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:3640,3640
  a40(r127,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33670,33670 NO_REX_SSE_REGS:33670,33670 SSE_REGS:33670,33670 MMX_REGS:47320,47320 INT_SSE_REGS:36400,36400 ALL_REGS:757120,757120 MEM:11830,11830
  a41(r128,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a42(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r130,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a44(r131,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r144: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r137: preferred DIREG, alternative NO_REGS, allocno DIREG
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a44 (r131,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r131,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r131,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a43 (r130,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r130,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r130,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a42 (r129,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r129,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r128,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r128,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r128,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r124,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r124,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a39 (r123,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r123,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r123,l3) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r110,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r143,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a1(r123,l0) costs: AREG:0,-81 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-71,-71 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3088,17640 NO_REX_SSE_REGS:3088,17640 SSE_REGS:3088,17640 MMX_REGS:4343,27990 INT_SSE_REGS:3339,19710 ALL_REGS:61568,439920 MEM:1203,8479
  a2(r144,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a3(r124,l0) costs: AREG:0,-81 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-63,-63 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3024,17568 NO_REX_SSE_REGS:3024,17568 SSE_REGS:3024,17568 MMX_REGS:4239,27873 INT_SSE_REGS:3267,19629 ALL_REGS:59904,438048 MEM:1179,8451
  a4(r114,l0) costs: AREG:0,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-89,-89 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2504,2504 NO_REX_SSE_REGS:2504,2504 SSE_REGS:2504,2504 MMX_REGS:3394,3394 INT_SSE_REGS:2682,2682 ALL_REGS:46384,46384 MEM:894,894
  a5(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-90 BREG:0,0 SIREG:0,0 DIREG:-89,-89 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2512,2512 NO_REX_SSE_REGS:2512,2512 SSE_REGS:2512,2512 MMX_REGS:3407,3407 INT_SSE_REGS:2691,2691 ALL_REGS:46592,46592 MEM:987,987
  a6(r115,l0) costs: AREG:0,0 DREG:0,-89 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2602,2602 NO_REX_SSE_REGS:2602,2602 SSE_REGS:2602,2602 MMX_REGS:3497,3497 INT_SSE_REGS:2781,2781 ALL_REGS:46952,46952 MEM:897,897
  a7(r128,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3240,3240 NO_REX_SSE_REGS:3240,3240 SSE_REGS:3240,3240 MMX_REGS:4590,4590 INT_SSE_REGS:3510,3510 ALL_REGS:65520,65520 MEM:1440,1440
  a8(r130,l0) costs: AREG:0,0 DREG:0,-90 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3168,10440 NO_REX_SSE_REGS:3168,10440 SSE_REGS:3168,10440 MMX_REGS:4473,16290 INT_SSE_REGS:3429,11610 ALL_REGS:63648,252720 MEM:1224,3951
  a9(r121,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,41877 NO_REX_SSE_REGS:972,41877 SSE_REGS:972,41877 MMX_REGS:972,60057 INT_SSE_REGS:972,45513 ALL_REGS:8424,953784 MEM:324,15777
  a10(r120,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,49149 NO_REX_SSE_REGS:972,49149 SSE_REGS:972,49149 MMX_REGS:972,71874 INT_SSE_REGS:972,53694 ALL_REGS:8424,1142856 MEM:324,20322
  a11(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1728,1728 NO_REX_SSE_REGS:1728,1728 SSE_REGS:1728,1728 MMX_REGS:2133,2133 INT_SSE_REGS:1809,1809 ALL_REGS:26208,26208 MEM:603,603
  a12(r141,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:630,630
  a13(r142,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:28440,28440 MEM:720,720
  a14(r137,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:28440,28440 MEM:-90,-90
  a15(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,34605 NO_REX_SSE_REGS:972,34605 SSE_REGS:972,34605 MMX_REGS:972,48240 INT_SSE_REGS:972,37332 ALL_REGS:8424,764712 MEM:324,12141
  a16(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3186,17738 NO_REX_SSE_REGS:3186,17738 SSE_REGS:3186,17738 MMX_REGS:4446,28093 INT_SSE_REGS:3438,19809 ALL_REGS:71136,449488 MEM:1287,6744
  a17(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-81 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2349,2349 NO_REX_SSE_REGS:2349,2349 SSE_REGS:2349,2349 MMX_REGS:3159,3159 INT_SSE_REGS:2511,2511 ALL_REGS:50544,50544 MEM:810,810
  a18(r127,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,34642 NO_REX_SSE_REGS:972,34642 SSE_REGS:972,34642 MMX_REGS:972,48292 INT_SSE_REGS:972,37372 ALL_REGS:8424,765544 MEM:324,12154
  a19(r133,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1701,1701 NO_REX_SSE_REGS:1701,1701 SSE_REGS:1701,1701 MMX_REGS:2106,2106 INT_SSE_REGS:1782,1782 ALL_REGS:25596,25596 MEM:567,567
  a20(r120,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:48177,48177 NO_REX_SSE_REGS:48177,48177 SSE_REGS:48177,48177 MMX_REGS:70902,70902 INT_SSE_REGS:52722,52722 ALL_REGS:1134432,1134432 MEM:19998,19998
  a21(r121,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:40905,40905 NO_REX_SSE_REGS:40905,40905 SSE_REGS:40905,40905 MMX_REGS:59085,59085 INT_SSE_REGS:44541,44541 ALL_REGS:945360,945360 MEM:15453,15453
  a22(r123,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a23(r124,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a24(r128,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a25(r130,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:2727,2727
  a26(r131,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r140,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19089,19089 NO_REX_SSE_REGS:19089,19089 SSE_REGS:19089,19089 MMX_REGS:23634,23634 INT_SSE_REGS:19998,19998 ALL_REGS:287244,287244 MEM:0,0
  a28(r139,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19089,19089 NO_REX_SSE_REGS:19089,19089 SSE_REGS:19089,19089 MMX_REGS:23634,23634 INT_SSE_REGS:19998,19998 ALL_REGS:287244,287244 MEM:0,0
  a29(r109,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:2727,2727
  a30(r111,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:33633,33633 NO_REX_SSE_REGS:33633,33633 SSE_REGS:33633,33633 MMX_REGS:47268,47268 INT_SSE_REGS:36360,36360 ALL_REGS:756288,756288 MEM:11817,11817
  a31(r123,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a32(r124,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7272,7272 NO_REX_SSE_REGS:7272,7272 SSE_REGS:7272,7272 MMX_REGS:11817,11817 INT_SSE_REGS:8181,8181 ALL_REGS:189072,189072 MEM:3636,3636
  a33(r128,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a34(r129,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a35(r130,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a36(r131,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r109,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a38(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r123,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:3640,3640
  a40(r127,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:33670,33670 NO_REX_SSE_REGS:33670,33670 SSE_REGS:33670,33670 MMX_REGS:47320,47320 INT_SSE_REGS:36400,36400 ALL_REGS:757120,757120 MEM:11830,11830
  a41(r128,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a42(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a43(r130,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a44(r131,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0

   Insn 171(l0): point = 1
   Insn 170(l0): point = 4
   Insn 169(l0): point = 6
   Insn 165(l0): point = 9
   Insn 164(l0): point = 11
   Insn 160(l0): point = 14
   Insn 159(l0): point = 16
   Insn 188(l0): point = 19
   Insn 233(l0): point = 22
   Insn 155(l0): point = 25
   Insn 154(l0): point = 27
   Insn 152(l0): point = 29
   Insn 149(l0): point = 32
   Insn 148(l0): point = 34
   Insn 146(l0): point = 37
   Insn 145(l0): point = 39
   Insn 184(l0): point = 42
   Insn 230(l0): point = 45
   Insn 138(l0): point = 47
   Insn 137(l0): point = 49
   Insn 135(l0): point = 52
   Insn 134(l0): point = 54
   Insn 131(l0): point = 57
   Insn 130(l0): point = 59
   Insn 128(l0): point = 62
   Insn 127(l0): point = 64
   Insn 126(l0): point = 66
   Insn 125(l0): point = 68
   Insn 123(l0): point = 71
   Insn 122(l0): point = 73
   Insn 121(l0): point = 75
   Insn 120(l0): point = 77
   Insn 116(l0): point = 80
   Insn 115(l0): point = 82
   Insn 35(l0): point = 85
   Insn 92(l0): point = 87
   Insn 225(l0): point = 90
   Insn 113(l0): point = 93
   Insn 112(l0): point = 95
   Insn 111(l0): point = 97
   Insn 110(l0): point = 99
   Insn 109(l0): point = 101
   Insn 79(l0): point = 103
   Insn 78(l0): point = 106
   Insn 77(l0): point = 108
   Insn 76(l0): point = 110
   Insn 75(l0): point = 112
   Insn 74(l0): point = 114
   Insn 73(l0): point = 116
   Insn 71(l0): point = 118
   Insn 90(l0): point = 121
   Insn 89(l0): point = 123
   Insn 228(l0): point = 126
   Insn 33(l0): point = 129
   Insn 32(l0): point = 131
   Insn 221(l0): point = 134
   Insn 34(l0): point = 136
   Insn 64(l0): point = 138
   Insn 63(l0): point = 141
   Insn 62(l0): point = 143
   Insn 31(l0): point = 146
   Insn 53(l0): point = 148
   Insn 52(l0): point = 150
   Insn 51(l0): point = 152
   Insn 50(l0): point = 154
   Insn 46(l0): point = 157
   Insn 44(l0): point = 160
   Insn 43(l0): point = 162
   Insn 42(l0): point = 164
   Insn 40(l0): point = 167
   Insn 39(l0): point = 169
   Insn 38(l0): point = 171
   Insn 30(l0): point = 173
   Insn 27(l0): point = 175
   Insn 26(l0): point = 177
   Insn 25(l0): point = 179
   Insn 24(l0): point = 181
   Insn 102(l3): point = 184
   Insn 101(l3): point = 186
   Insn 100(l3): point = 188
   Insn 99(l3): point = 190
   Insn 98(l3): point = 192
   Insn 97(l3): point = 194
   Insn 96(l3): point = 196
   Insn 95(l3): point = 198
   Insn 87(l2): point = 201
   Insn 86(l2): point = 203
   Insn 85(l2): point = 205
   Insn 84(l2): point = 207
   Insn 60(l1): point = 210
   Insn 59(l1): point = 212
   Insn 57(l1): point = 214
   Insn 56(l1): point = 216
 a0(r143): [22..29] [12..19]
 a1(r123): [134..148] [50..129] [25..44] [17..21]
 a2(r144): [30..42]
 a3(r124): [134..138] [60..131] [35..44]
 a4(r114): [93..103] [69..79]
 a5(r131): [160..175] [93..156] [85..89] [74..79]
 a6(r115): [93..101] [78..79]
 a7(r128): [160..181] [107..156] [85..89]
 a8(r130): [160..177] [115..156] [85..89]
 a9(r121): [85..85]
 a10(r120): [85..87]
 a11(r129): [160..179] [134..156] [121..125] [88..89]
 a12(r141): [96..97]
 a13(r142): [98..99]
 a14(r137): [109..118]
 a15(r111): [134..136]
 a16(r109): [160..171] [134..156]
 a17(r110): [144..154]
 a18(r127): [146..146]
 a19(r133): [163..164]
 a20(r120): [184..200]
 a21(r121): [184..200]
 a22(r123): [184..200]
 a23(r124): [184..200]
 a24(r128): [184..200]
 a25(r130): [184..200]
 a26(r131): [184..200]
 a27(r140): [193..194]
 a28(r139): [197..198]
 a29(r109): [201..209]
 a30(r111): [201..209]
 a31(r123): [201..209]
 a32(r124): [201..209]
 a33(r128): [201..209]
 a34(r129): [201..209]
 a35(r130): [201..209]
 a36(r131): [201..209]
 a37(r109): [210..218]
 a38(r110): [210..218]
 a39(r123): [210..218]
 a40(r127): [210..218]
 a41(r128): [210..218]
 a42(r129): [210..218]
 a43(r130): [210..218]
 a44(r131): [210..218]
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 139
      Moving ranges of a44r131 to a5r131:  [210..218]
      Moving ranges of a36r131 to a5r131:  [201..209]
      Moving ranges of a26r131 to a5r131:  [184..200]
      Moving ranges of a43r130 to a8r130:  [210..218]
      Moving ranges of a35r130 to a8r130:  [201..209]
      Moving ranges of a25r130 to a8r130:  [184..200]
      Moving ranges of a42r129 to a11r129:  [210..218]
      Moving ranges of a34r129 to a11r129:  [201..209]
      Moving ranges of a41r128 to a7r128:  [210..218]
      Moving ranges of a33r128 to a7r128:  [201..209]
      Moving ranges of a24r128 to a7r128:  [184..200]
      Moving ranges of a40r127 to a18r127:  [210..218]
      Moving ranges of a32r124 to a3r124:  [201..209]
      Moving ranges of a23r124 to a3r124:  [184..200]
      Moving ranges of a39r123 to a1r123:  [210..218]
      Moving ranges of a31r123 to a1r123:  [201..209]
      Moving ranges of a22r123 to a1r123:  [184..200]
      Moving ranges of a21r121 to a9r121:  [184..200]
      Moving ranges of a20r120 to a10r120:  [184..200]
      Moving ranges of a30r111 to a15r111:  [201..209]
      Moving ranges of a38r110 to a17r110:  [210..218]
      Moving ranges of a37r109 to a16r109:  [210..218]
      Moving ranges of a29r109 to a16r109:  [201..209]
Compressing live ranges: from 219 to 35 - 15%
Ranges after the compression:
 a0(r143): [0..3]
 a1(r123): [27..34] [0..24]
 a2(r144): [4..5]
 a3(r124): [27..32] [4..21]
 a4(r114): [12..15] [6..7]
 a5(r131): [6..34]
 a6(r115): [12..15] [6..7]
 a7(r128): [16..34] [8..11]
 a8(r130): [16..34] [8..11]
 a9(r121): [27..30] [8..8]
 a10(r120): [27..30] [8..9]
 a11(r129): [31..34] [18..26] [10..11]
 a12(r141): [12..13]
 a13(r142): [14..15]
 a14(r137): [16..17]
 a15(r111): [31..32] [20..21]
 a16(r109): [31..34] [20..26]
 a17(r110): [33..34] [22..24]
 a18(r127): [33..34] [23..23]
 a19(r133): [25..26]
 a27(r140): [27..28]
 a28(r139): [29..30]
+++Allocating 176 bytes for conflict table (uncompressed size 360)
;; a0(r143,l0) conflicts: a1(r123,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r123,l0) conflicts: a0(r143,l0) a2(r144,l0) a3(r124,l0) a4(r114,l0) a6(r115,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a12(r141,l0) a13(r142,l0) a14(r137,l0) a15(r111,l0) a16(r109,l0) a17(r110,l0) a18(r127,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a2(r144,l0) conflicts: a1(r123,l0) a3(r124,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a3(r124,l0) conflicts: a1(r123,l0) a2(r144,l0) a4(r114,l0) a6(r115,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a12(r141,l0) a13(r142,l0) a14(r137,l0) a15(r111,l0) a16(r109,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r114,l0) conflicts: a1(r123,l0) a3(r124,l0) a6(r115,l0) a5(r131,l0) a12(r141,l0) a13(r142,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a5(r131,l0) conflicts: a1(r123,l0) a3(r124,l0) a4(r114,l0) a6(r115,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a12(r141,l0) a13(r142,l0) a14(r137,l0) a15(r111,l0) a16(r109,l0) a17(r110,l0) a18(r127,l0) a19(r133,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a6(r115,l0) conflicts: a1(r123,l0) a3(r124,l0) a4(r114,l0) a5(r131,l0) a12(r141,l0) a13(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r128,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a8(r130,l0) a11(r129,l0) a14(r137,l0) a15(r111,l0) a16(r109,l0) a17(r110,l0) a18(r127,l0) a19(r133,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a8(r130,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a11(r129,l0) a14(r137,l0) a15(r111,l0) a16(r109,l0) a17(r110,l0) a18(r127,l0) a19(r133,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a9(r121,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r120,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a9(r121,l0) a7(r128,l0) a8(r130,l0) a27(r140,l0) a28(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r129,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0) a15(r111,l0) a16(r109,l0) a17(r110,l0) a18(r127,l0) a19(r133,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a12(r141,l0) conflicts: a1(r123,l0) a3(r124,l0) a4(r114,l0) a6(r115,l0) a5(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r142,l0) conflicts: a1(r123,l0) a3(r124,l0) a4(r114,l0) a6(r115,l0) a5(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r137,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r111,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a16(r109,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r109,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a15(r111,l0) a17(r110,l0) a18(r127,l0) a19(r133,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a17(r110,l0) conflicts: a1(r123,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a16(r109,l0) a18(r127,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a18(r127,l0) conflicts: a1(r123,l0) a5(r131,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a16(r109,l0) a17(r110,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r133,l0) conflicts: a5(r131,l0) a7(r128,l0) a8(r130,l0) a11(r129,l0) a16(r109,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r140,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r139,l0) conflicts: a1(r123,l0) a3(r124,l0) a5(r131,l0) a9(r121,l0) a10(r120,l0) a7(r128,l0) a8(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r143)<->a2(r144)@1:move
  cp1:a10(r120)<->a11(r129)@81:move
  cp2:a12(r141)<->a13(r142)@90:constraint
  pref0:a5(r131)<-hr2@135
  pref1:a8(r130)<-hr1@135
  pref2:a11(r129)<-hr4@135
  pref3:a7(r128)<-hr5@135
  pref4:a3(r124)<-hr0@121
  pref5:a1(r123)<-hr0@121
  pref6:a6(r115)<-hr1@133
  pref7:a4(r114)<-hr0@135
  pref8:a17(r110)<-hr5@202
  pref9:a0(r143)<-hr5@1
  pref10:a1(r123)<-hr5@71
  pref11:a0(r143)<-hr0@1
  pref12:a3(r124)<-hr5@63
  pref13:a2(r144)<-hr0@1
  pref14:a4(r114)<-hr5@89
  pref15:a4(r114)<-hr4@89
  pref16:a5(r131)<-hr5@89
  pref17:a8(r130)<-hr2@90
  pref18:a3(r124)<-hr1@90
  pref19:a1(r123)<-hr4@90
  pref20:a14(r137)<-hr5@90
  regions=4, blocks=35, points=35
    allocnos=45 (big 0), copies=3, conflicts=0, ranges=36

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r143 1r123 2r144 3r124 4r114 5r131 6r115 7r128 8r130 9r121 10r120 11r129 12r141 13r142 14r137 15r111 16r109 17r110 18r127 19r133 27r140 28r139
    modified regnos: 109 110 111 114 115 120 121 123 124 127 128 129 130 131 133 137 139 140 141 142 143 144
    border:
    Pressure: GENERAL_REGS=9
 Removing pref9:hr5@1
 Removing pref19:hr4@90
 Removing pref10:hr5@71
 Removing pref5:hr0@121
 Removing pref18:hr1@90
 Removing pref12:hr5@63
 Removing pref4:hr0@121
 Removing pref15:hr4@89
 Removing pref14:hr5@89
 Removing pref7:hr0@135
 Removing pref16:hr5@89
 Removing pref0:hr2@135
 Removing pref3:hr5@135
 Removing pref17:hr2@90
 Removing pref1:hr1@135
 Removing pref2:hr4@135
 Removing pref8:hr5@202
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@126950
          2:( 0-4 6 37-44)@22
            3:( 1-4 6 37-44)@1620
              4:( 3 6 41-44)@63105
          5:( 5)@180
      Allocno a0r143 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r123 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a2r144 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a3r124 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r114 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a5r131 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a6r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r128 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a8r130 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a9r121 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a11r129 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a12r141 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r142 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r137 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a15r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r109 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a17r110 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a18r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r133 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r140 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a28r139 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 2:a12r141-a13r142 (freq=90):
        Result (freq=360): a12r141(180) a13r142(180)
      Forming thread by copy 1:a10r120-a11r129 (freq=81):
        Result (freq=3888): a10r120(3717) a11r129(171)
      Forming thread by copy 0:a0r143-a2r144 (freq=1):
        Result (freq=5): a0r143(3) a2r144(2)
      Pushing a2(r144,l0)(cost 0)
      Pushing a0(r143,l0)(cost 0)
      Pushing a19(r133,l0)(cost 0)
      Pushing a14(r137,l0)(cost 0)
      Pushing a17(r110,l0)(cost 0)
      Pushing a6(r115,l0)(cost 0)
        Making a4(r114,l0) colorable
      Pushing a4(r114,l0)(cost 894)
      Pushing a13(r142,l0)(cost 0)
      Pushing a12(r141,l0)(cost 0)
      Pushing a28(r139,l0)(cost 0)
      Pushing a27(r140,l0)(cost 0)
      Pushing a15(r111,l0)(cost 0)
      Pushing a18(r127,l0)(cost 0)
      Pushing a10(r120,l0)(cost 0)
      Pushing a9(r121,l0)(cost 0)
      Pushing a11(r129,l0)(potential spill: pri=603, cost=603)
        Making a1(r123,l0) colorable
        Making a3(r124,l0) colorable
        Making a5(r131,l0) colorable
        Making a7(r128,l0) colorable
        Making a8(r130,l0) colorable
        Making a16(r109,l0) colorable
      Pushing a5(r131,l0)(cost 987)
      Pushing a7(r128,l0)(cost 1440)
      Pushing a8(r130,l0)(cost 3951)
      Pushing a3(r124,l0)(cost 8451)
      Pushing a1(r123,l0)(cost 8479)
      Pushing a16(r109,l0)(cost 6744)
      Popping a16(r109,l0)  -- assign reg 3
      Popping a1(r123,l0)  -- assign reg 6
      Popping a3(r124,l0)  -- assign reg 41
      Popping a8(r130,l0)  -- assign reg 42
      Popping a7(r128,l0)  -- assign reg 43
      Popping a5(r131,l0)  -- assign reg 44
      Popping a11(r129,l0)  -- spill
      Popping a9(r121,l0)  -- assign reg 0
      Popping a10(r120,l0)  -- assign reg 1
      Popping a18(r127,l0)  -- assign reg 0
      Popping a15(r111,l0)  -- assign reg 0
      Popping a27(r140,l0)  -- assign reg 2
      Popping a28(r139,l0)  -- assign reg 2
      Popping a12(r141,l0)  -- assign reg 0
      Popping a13(r142,l0)  -- assign reg 0
      Popping a4(r114,l0)  -- assign reg 3
      Popping a6(r115,l0)  -- assign reg 1
      Popping a17(r110,l0)  -- assign reg 41
      Popping a14(r137,l0)  -- assign reg 5
      Popping a19(r133,l0)  -- assign reg 0
      Popping a0(r143,l0)  -- assign reg 3
      Popping a2(r144,l0)  -- assign reg 3
Disposition:
   16:r109 l0     3   17:r110 l0    41   15:r111 l0     0    4:r114 l0     3
    6:r115 l0     1   10:r120 l0     1    9:r121 l0     0    1:r123 l0     6
    3:r124 l0    41   18:r127 l0     0    7:r128 l0    43   11:r129 l0   mem
    8:r130 l0    42    5:r131 l0    44   19:r133 l0     0   14:r137 l0     5
   28:r139 l0     2   27:r140 l0     2   12:r141 l0     0   13:r142 l0     0
    0:r143 l0     3    2:r144 l0     3
New iteration of spill/restore move
+++Costs: overall 66, reg -537, mem 603, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual void leveldb_filterpolicy_t::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={16d,5u} r1={18d,3u} r2={15d,2u} r4={16d,3u} r5={25d,12u} r6={1d,34u} r7={1d,47u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,33u} r17={32d,12u} r18={13d} r19={13d} r20={1d,38u} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={15d,1u} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r109={1d,5u,1e} r110={1d,2u} r111={2d,3u} r114={1d,2u} r115={1d,2u} r120={2d,3u,2e} r121={2d,4u} r123={2d,7u} r124={2d,7u} r127={2d,3u} r128={1d,2u,1e} r129={1d,1u} r130={1d,4u} r131={1d,2u,1e} r133={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,1u} r144={1d,1u} 
;;    total ref usage 1274{1024d,245u,5e} in 93{80 regular + 13 call} insns.
(note 23 0 36 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 128 129 130 131
(note 36 23 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 36 25 2 (set (reg/f:DI 128 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 25 24 26 2 (set (reg/v/f:DI 129 [ keys ])
        (reg:DI 4 si [ keys ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ keys ])
        (nil)))
(insn 26 25 27 2 (set (reg/v:SI 130 [ n ])
        (reg:SI 1 dx [ n ])) db/c.cc:108 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))
(insn 27 26 28 2 (set (reg/v/f:DI 131 [ dst ])
        (reg:DI 2 cx [ dst ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ dst ])
        (nil)))
(note 28 27 30 2 NOTE_INSN_FUNCTION_BEG)
(insn 30 28 38 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37019+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:108 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 30 39 2 (set (reg/v:DI 109 [ __n ])
        (sign_extend:DI (reg/v:SI 130 [ n ]))) db/c.cc:109 142 {*extendsidi2_rex64}
     (nil))
(insn 39 38 40 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 176)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:170 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 176)
;;  succ:       3 [90.0%]  (FALLTHRU)
;;              9 [10.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131

;; basic block 3, loop depth 0, count 0, freq 810, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [90.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(6){ }u13(7){ }u14(16){ }u15(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 17 [flags] 133
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 3 (set (reg:DI 133)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) /usr/include/c++/5/ext/new_allocator.h:101 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 2305843009213693951 [0x1fffffffffffffff])
        (nil)))
(insn 43 42 44 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 109 [ __n ])
            (reg:DI 133))) /usr/include/c++/5/ext/new_allocator.h:101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 133)
        (expr_list:REG_EQUAL (compare:CC (reg/v:DI 109 [ __n ])
                (const_int 2305843009213693951 [0x1fffffffffffffff]))
            (nil))))
(jump_insn 44 43 45 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) /usr/include/c++/5/ext/new_allocator.h:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 48)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [0.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 46 45 47 4 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7fb5388d8438 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:102 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7fb5388d8438 __throw_bad_alloc>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 47 46 48)
;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 123 127
(code_label 48 47 49 5 46 "" [1 uses])
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (parallel [
            (set (reg:DI 110 [ D.37015 ])
                (ashift:DI (reg/v:DI 109 [ __n ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/new_allocator.h:104 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 110 [ D.37015 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
(call_insn 52 51 53 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 31 5 (set (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(insn 31 53 58 5 (set (reg:DI 127 [ ivtmp.359 ])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131

;; basic block 6, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              6 [91.0%]  (DFS_BACK)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 127
;; lr  def 	 17 [flags] 127
(code_label 58 31 55 6 47 "" [1 uses])
(note 55 58 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 127 [ ivtmp.359 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) [3 MEM[base: key_pointers$_M_impl$_M_start_78, index: ivtmp.359_107, step: 8, offset: 0B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:770 89 {*movdi_internal}
     (nil))
(insn 57 56 59 6 (parallel [
            (set (reg:DI 127 [ ivtmp.359 ])
                (plus:DI (reg:DI 127 [ ivtmp.359 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 57 60 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (reg:DI 127 [ ivtmp.359 ]))) /usr/include/c++/5/bits/stl_algobase.h:768 8 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:768 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 58)
;;  succ:       7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              6 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131

;; basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg:DI 5 di)
        (reg:DI 110 [ D.37015 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.37015 ])
        (nil)))
(call_insn 63 62 179 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131

;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 111 124
(note 179 63 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 179 34 8 (set (reg/v/f:DI 124 [ __first ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 135)
            (nil))))
(insn 34 64 221 8 (set (reg:DI 111 [ ivtmp.351 ])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(jump_insn 221 34 222 8 (set (pc)
        (label_ref 82)) 654 {jump}
     (nil)
 -> 82)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131

(barrier 222 221 176)
;; basic block 9, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       2 [10.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123 124
(code_label 176 222 175 9 59 "" [1 uses])
(note 175 176 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 32 175 33 9 (set (reg/v/f:DI 124 [ __first ])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 33 32 68 9 (set (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       14
;;              9 [100.0%]  (FALLTHRU)
;;              17 [100.0%]  (LOOP_EXIT)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 137
(code_label 68 33 69 10 45 "" [2 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(note 70 69 71 10 NOTE_INSN_DELETED)
(insn 71 70 72 10 (set (reg/f:DI 137 [ this_21(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 128 [ this ])
                (const_int 8 [0x8])) [3 this_21(D)->state_+0 S8 A64])) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 128 [ this ])
                (const_int 8 [0x8])) [3 this_21(D)->state_+0 S8 A64])
        (nil)))
(note 72 71 73 10 NOTE_INSN_DELETED)
(insn 73 72 74 10 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))) db/c.cc:116 214 {*leadi}
     (nil))
(insn 74 73 75 10 (set (reg:SI 2 cx)
        (reg/v:SI 130 [ n ])) db/c.cc:116 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 130 [ n ])
        (nil)))
(insn 75 74 76 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ __first ])) db/c.cc:116 89 {*movdi_internal}
     (nil))
(insn 76 75 77 10 (set (reg:DI 4 si)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) db/c.cc:116 89 {*movdi_internal}
     (nil))
(insn 77 76 78 10 (set (reg:DI 5 di)
        (reg/f:DI 137 [ this_21(D)->state_ ])) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ this_21(D)->state_ ])
        (nil)))
(call_insn 78 77 180 10 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 128 [ this ])
                        (const_int 32 [0x20])) [3 this_21(D)->create_+0 S8 A64]) [0 *_22 S1 A8])
            (const_int 0 [0]))) db/c.cc:116 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 128 [ this ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       24 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 114 115 141 142
(note 180 78 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 180 109 11 (set (reg/v/f:DI 114 [ filter ])
        (reg:DI 0 ax)) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 109 79 110 11 (set (reg:DI 115 [ D.37015 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 len+0 S8 A64])) db/c.cc:117 89 {*movdi_internal}
     (nil))
(insn 110 109 111 11 (set (reg:DI 142)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) /usr/include/c++/5/bits/basic_string.h:270 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 9223372036854775807 [0x7fffffffffffffff])
        (nil)))
(insn 111 110 112 11 (parallel [
            (set (reg:DI 141 [ D.37015 ])
                (minus:DI (reg:DI 142)
                    (mem:DI (plus:DI (reg/v/f:DI 131 [ dst ])
                            (const_int 8 [0x8])) [9 MEM[(long unsigned int *)dst_28(D) + 8B]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:270 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:DI (const_int 9223372036854775807 [0x7fffffffffffffff])
                    (mem:DI (plus:DI (reg/v/f:DI 131 [ dst ])
                            (const_int 8 [0x8])) [9 MEM[(long unsigned int *)dst_28(D) + 8B]+0 S8 A64]))
                (nil)))))
(insn 112 111 113 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 115 [ D.37015 ])
            (reg:DI 141 [ D.37015 ]))) /usr/include/c++/5/bits/basic_string.h:270 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.37015 ])
        (nil)))
(jump_insn 113 112 223 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) /usr/include/c++/5/bits/basic_string.h:270 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 118)
;;  succ:       12 [0.0%]  (FALLTHRU)
;;              19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, RTL, MODIFIED)
;;  pred:       11 [0.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 223 113 225 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 225 223 226 12 (set (pc)
        (label_ref 224)) 654 {jump}
     (nil)
 -> 224)
;;  succ:       18 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124

(barrier 226 225 82)
;; basic block 13, loop depth 1, count 0, freq 9097, maybe hot
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       13 [91.0%]  (DFS_BACK)
;;              8 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 124
;; lr  def 	 17 [flags] 111
(code_label 82 226 83 13 48 "" [2 uses])
(note 83 82 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 13 (set (mem:DI (plus:DI (mult:DI (reg:DI 111 [ ivtmp.351 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 124 [ __first ])) [9 MEM[base: __first_81, index: ivtmp.351_100, step: 8, offset: 0B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:770 89 {*movdi_internal}
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:DI 111 [ ivtmp.351 ])
                (plus:DI (reg:DI 111 [ ivtmp.351 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 87 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (reg:DI 111 [ ivtmp.351 ]))) /usr/include/c++/5/bits/stl_algobase.h:768 8 {*cmpdi_1}
     (nil))
(jump_insn 87 86 88 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 82)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:768 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 82)
;;  succ:       14 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              13 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131

;; basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  def 	 17 [flags]
(note 88 87 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 14 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 130 [ n ])
            (const_int 0 [0]))) db/c.cc:111 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 90 89 91 14 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) db/c.cc:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 68)
;;  succ:       10
;;              15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131

;; basic block 15, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  def 	 120 121
(note 91 90 92 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 35 15 (set (reg:DI 120 [ ivtmp.343 ])
        (reg/v/f:DI 129 [ keys ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ keys ])
        (nil)))
(insn 35 92 103 15 (set (reg:DI 121 [ ivtmp.341 ])
        (const_int 0 [0])) db/c.cc:111 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131

;; basic block 16, loop depth 1, count 0, freq 9097, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              16 [91.0%]  (DFS_BACK)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 130
;; lr  def 	 17 [flags] 120 121 139 140
(code_label 103 35 93 16 50 "" [1 uses])
(note 93 103 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 95 93 96 16 (set (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])
        (mem/f:DI (reg:DI 120 [ ivtmp.343 ]) [3 MEM[base: _50, offset: 0B]+0 S8 A64])) db/c.cc:112 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg:DI 120 [ ivtmp.343 ]) [3 MEM[base: _50, offset: 0B]+0 S8 A64])
        (nil)))
(insn 96 95 97 16 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) [3 MEM[base: key_pointers$_M_impl$_M_start_78, index: ivtmp.341_102, step: 8, offset: 0]+0 S8 A64])
        (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])) db/c.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])
        (nil)))
(insn 97 96 98 16 (set (reg:DI 140 [ MEM[base: _50, offset: 8B] ])
        (mem:DI (plus:DI (reg:DI 120 [ ivtmp.343 ])
                (const_int 8 [0x8])) [9 MEM[base: _50, offset: 8B]+0 S8 A64])) db/c.cc:113 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg:DI 120 [ ivtmp.343 ])
                (const_int 8 [0x8])) [9 MEM[base: _50, offset: 8B]+0 S8 A64])
        (nil)))
(insn 98 97 99 16 (set (mem:DI (plus:DI (mult:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 124 [ __first ])) [9 MEM[base: __first_81, index: ivtmp.341_102, step: 8, offset: 0]+0 S8 A64])
        (reg:DI 140 [ MEM[base: _50, offset: 8B] ])) db/c.cc:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140 [ MEM[base: _50, offset: 8B] ])
        (nil)))
(insn 99 98 100 16 (parallel [
            (set (reg:DI 121 [ ivtmp.341 ])
                (plus:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 16 (parallel [
            (set (reg:DI 120 [ ivtmp.343 ])
                (plus:DI (reg:DI 120 [ ivtmp.343 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 130 [ n ])
            (subreg:SI (reg:DI 121 [ ivtmp.341 ]) 0))) db/c.cc:111 7 {*cmpsi_1}
     (nil))
(jump_insn 102 101 227 16 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) db/c.cc:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 103)
;;  succ:       17 [9.0%]  (FALLTHRU)
;;              16 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131

;; basic block 17, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 16, next block 18, flags: (NEW, RTL, MODIFIED)
;;  pred:       16 [9.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 227 102 228 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(jump_insn 228 227 229 17 (set (pc)
        (label_ref 68)) 654 {jump}
     (nil)
 -> 68)
;;  succ:       10 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131

(barrier 229 228 224)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       12 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 224 229 114 18 77 "" [1 uses])
(note 114 224 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb536e1f1b0 *.LC20>)) /usr/include/c++/5/bits/basic_string.h:271 89 {*movdi_internal}
     (nil))
(call_insn 116 115 117 18 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d8948 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:271 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 5 [0x5])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d8948 __throw_length_error>)
                (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124

(barrier 117 116 118)
;; basic block 19, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       11 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u136(6){ }u137(7){ }u138(16){ }u139(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 118 117 119 19 51 "" [1 uses])
(note 119 118 120 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 19 (set (reg:DI 1 dx)
        (reg:DI 115 [ D.37015 ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ D.37015 ])
        (nil)))
(insn 121 120 122 19 (set (reg:DI 4 si)
        (reg/v/f:DI 114 [ filter ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (nil))
(insn 122 121 123 19 (set (reg:DI 5 di)
        (reg/v/f:DI 131 [ dst ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 131 [ dst ])
        (nil)))
(call_insn 123 122 124 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb537cf7bd0 _M_append>) [0 _M_append S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1015 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 5 [0x5])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb537cf7bd0 _M_append>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       20 [100.0%]  (FALLTHRU)
;;              24 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124

;; basic block 20, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 124 123 125 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 20 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ filter ])) db/c.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ filter ])
        (nil)))
(call_insn 126 125 127 20 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:118 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 127 126 128 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ __first ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 128 127 129 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 132)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 132)
;;  succ:       21 [69.8%]  (FALLTHRU)
;;              22 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124

;; basic block 21, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 20, next block 22, flags: (RTL)
;;  pred:       20 [69.8%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 129 128 130 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 21 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ __first ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ __first ])
        (nil)))
(call_insn 131 130 132 21 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 22, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 21, next block 23, flags: (RTL)
;;  pred:       20 [30.2%] 
;;              21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u163(6){ }u164(7){ }u165(16){ }u166(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags]
(code_label 132 131 133 22 52 "" [1 uses])
(note 133 132 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 135 134 136 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 167)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 167)
;;  succ:       23 [78.3%]  (FALLTHRU)
;;              32 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 23, loop depth 0, count 0, freq 705, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 [78.3%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u169(6){ }u170(7){ }u171(16){ }u172(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 136 135 137 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 23 (set (reg:DI 5 di)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (nil)))
(call_insn 138 137 230 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 230 138 231 23 (set (pc)
        (label_ref 167)) db/c.cc:119 654 {jump}
     (nil)
 -> 167)
;;  succ:       32 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 231 230 183)
;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL)
;;  pred:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              18 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 24 artificial_defs: { d5(0){ }d21(1){ }}
;; bb 24 artificial_uses: { u176(6){ }u177(7){ }u178(16){ }u179(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 144
(code_label/s 183 231 186 24 61 "" [1 uses])
(note 186 183 184 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 184 186 143 24 (set (reg:DI 144)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL)
;;  pred:       24 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags]
(code_label 143 184 144 25 54 "" [0 uses])
(note 144 143 145 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ __first ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 146 145 147 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 150)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 150)
;;  succ:       26 [69.8%]  (FALLTHRU)
;;              27 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL)
;;  pred:       25 [69.8%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 147 146 148 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 26 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ __first ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ __first ])
        (nil)))
(call_insn 149 148 150 26 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       25 [30.2%] 
;;              26 [100.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  def 	 17 [flags] 143
(code_label 150 149 151 27 55 "" [1 uses])
(note 151 150 152 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 154 27 (set (reg:DI 143)
        (reg:DI 144)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 154 152 155 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 155 154 232 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 157)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 157)
;;  succ:       30 [69.8%] 
;;              28 [30.2%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, RTL, MODIFIED)
;;  pred:       27 [30.2%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 232 155 233 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 233 232 234 28 (set (pc)
        (label_ref 161)) 654 {jump}
     (nil)
 -> 161)
;;  succ:       31 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143

(barrier 234 233 187)
;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL)
;;  pred:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 29 artificial_defs: { d3(0){ }d19(1){ }}
;; bb 29 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 143
(code_label/s 187 234 192 29 62 "" [1 uses])
(note 192 187 188 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 188 192 157 29 (set (reg:DI 143)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL)
;;  pred:       29 [100.0%]  (FALLTHRU,PRESERVE)
;;              27 [69.8%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u206(6){ }u207(7){ }u208(16){ }u209(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 157 188 158 30 57 "" [1 uses])
(note 158 157 159 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 30 (set (reg:DI 5 di)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (nil)))
(call_insn 160 159 161 30 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143

;; basic block 31, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL)
;;  pred:       30 [100.0%]  (FALLTHRU)
;;              28 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 161 160 162 31 56 "" [1 uses])
(note 162 161 164 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 164 162 165 31 (set (reg:DI 5 di)
        (reg:DI 143)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(call_insn 165 164 166 31 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 166 165 167)
;; basic block 32, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 31, next block 33, flags: (RTL)
;;  pred:       22 [21.6%] 
;;              23 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u220(6){ }u221(7){ }u222(16){ }u223(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 167 166 174 32 44 "" [2 uses])
(note 174 167 169 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 169 174 170 32 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37019+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:119 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 170 169 181 32 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) db/c.cc:119 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 173)
;;  succ:       34 [100.0%] 
;;              33 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL)
;;  pred:       32 [0.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u226(6){ }u227(7){ }u228(16){ }u229(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 181 170 171 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(call_insn 171 181 172 33 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:119 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 172 171 173)
;; basic block 34, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 33, next block 1, flags: (RTL)
;;  pred:       32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u231(6){ }u232(7){ }u233(16){ }u234(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 173 172 182 34 58 "" [1 uses])
(note 182 173 0 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper() (_ZZ33leveldb_filterpolicy_create_bloomEN7WrapperD0Ev, funcdef_no=1513, decl_uid=31946, cgraph_uid=619, symbol_order=622)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 95, has equiv memory
Reg 94 uninteresting
Reg 87 uninteresting
Reg 96: local to bb 3 def dominates all uses has unique first use
Ignoring reg 99, has equiv memory
Reg 98 uninteresting
Ignoring reg 100, has equiv memory
Found def insn 13 for 96 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 22 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r100,l0) best DIREG, allocno DIREG
    a3 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best DIREG, allocno DIREG
    a5 (r87,l0) best DIREG, allocno DIREG

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:72000,72000 NO_REX_SSE_REGS:72000,72000 SSE_REGS:72000,72000 MMX_REGS:112000,112000 INT_SSE_REGS:80000,80000 ALL_REGS:1764000,1764000 MEM:31000,31000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:-1000,-1000
  a2(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a4(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32528,32528 NO_REX_SSE_REGS:32528,32528 SSE_REGS:32528,32528 MMX_REGS:45358,45358 INT_SSE_REGS:35094,35094 ALL_REGS:637728,637728 MEM:13481,13481
  a6(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative NO_REGS, allocno DIREG
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:76000,76000 NO_REX_SSE_REGS:76000,76000 SSE_REGS:76000,76000 MMX_REGS:116000,116000 INT_SSE_REGS:84000,84000 ALL_REGS:1768000,1768000 MEM:34000,34000
  a1(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:-1000,-1000
  a2(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a3(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a4(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a5(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33528,33528 NO_REX_SSE_REGS:33528,33528 SSE_REGS:33528,33528 MMX_REGS:46358,46358 INT_SSE_REGS:36094,36094 ALL_REGS:641728,641728 MEM:13481,13481
  a6(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 27(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
   Insn 22(l0): point = 12
   Insn 21(l0): point = 14
   Insn 20(l0): point = 16
   Insn 19(l0): point = 18
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 13(l0): point = 25
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 2(l0): point = 40
 a0(r93): [3..40]
 a1(r100): [11..12]
 a2(r98): [15..16]
 a3(r99): [17..18]
 a4(r96): [22..25]
 a5(r87): [24..32]
 a6(r94): [35..36]
 a7(r95): [37..38]
Compressing live ranges: from 43 to 12 - 27%
Ranges after the compression:
 a0(r93): [0..11]
 a1(r100): [0..1]
 a2(r98): [2..3]
 a3(r99): [4..5]
 a4(r96): [6..7]
 a5(r87): [6..7]
 a6(r94): [8..9]
 a7(r95): [10..11]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r93,l0) conflicts: a1(r100,l0) a2(r98,l0) a3(r99,l0) a4(r96,l0) a5(r87,l0) a6(r94,l0) a7(r95,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r100,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r98,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r99,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r96,l0) conflicts: a0(r93,l0) a5(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r87,l0) conflicts: a0(r93,l0) a4(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r94,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r95,l0) conflicts: a0(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r93)<-hr5@4000
  pref1:a5(r87)<-hr5@1174
  pref2:a1(r100)<-hr5@1000
  regions=1, blocks=5, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r93 1r100 2r98 3r99 4r96 5r87 6r94 7r95
    modified regnos: 87 93 94 95 96 98 99 100
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@4000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@63660
          2:( 0-4 6 37-44)@80528
          3:( 5)@2000
      Allocno a0r93 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r100 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r96 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a4(r96,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a6(r94,l0)(cost 0)
      Pushing a3(r99,l0)(cost 0)
      Pushing a2(r98,l0)(cost 0)
      Pushing a1(r100,l0)(cost 0)
      Pushing a5(r87,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Popping a0(r93,l0)  -- assign reg 3
      Popping a5(r87,l0)  -- assign reg 5
      Popping a1(r100,l0)  -- assign reg 5
      Popping a2(r98,l0)  -- assign reg 0
      Popping a3(r99,l0)  -- assign reg 0
      Popping a6(r94,l0)  -- assign reg 0
      Popping a7(r95,l0)  -- assign reg 0
      Popping a4(r96,l0)  -- assign reg 0
Disposition:
    5:r87  l0     5    0:r93  l0     3    6:r94  l0     0    7:r95  l0     0
    4:r96  l0     0    2:r98  l0     0    3:r99  l0     0    1:r100 l0     5
New iteration of spill/restore move
+++Costs: overall -5349, reg -5349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={5d,1u} r18={4d} r19={4d} r20={1d,4u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,7u,1e} r94={1d,1u} r95={1d,1u} r96={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 362{320d,41u,1e} in 20{16 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:505 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 this_2(D)->D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.37025 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37025 ])
            (const_int 0 [0]))) db/c.cc:505 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:505 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.37025 ]) [3 MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(note 14 13 15 3 NOTE_INSN_DELETED)
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37025 ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37025 ])
        (nil)))
(call_insn 16 15 17 3 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_7;(struct FilterPolicy)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:505 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100
(code_label 17 16 18 4 84 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 20 19 21 4 (set (reg/f:DI 98)
        (plus:DI (reg:DI 99)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 21 20 22 4 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 98)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_+0 S8 A64])
        (nil)))
(note 23 22 24 4 NOTE_INSN_DELETED)
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                    (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_+0 S8 A64]) [0 *_8 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(call_insn 27 26 28 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(call_insn/j 29 28 30 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:505 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 30 29 0)

;; Function leveldb_t* leveldb_open(const leveldb_options_t*, const char*, char**) (leveldb_open, funcdef_no=1431, decl_uid=2156, cgraph_uid=538, symbol_order=541)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 40 count 32 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 104: def dominates all uses has unique first use
Reg 105 uninteresting (no unique first use)
Reg 106: def dominates all uses has unique first use
Reg 113 uninteresting
Ignoring reg 117, has equiv memory
Ignoring reg 118, has equiv memory
Reg 89: def dominates all uses has unique first use
Reg 91 uninteresting
Reg 95: def dominates all uses has unique first use
Reg 130: local to bb 18 def dominates all uses has unique first use
Ignoring reg 131, has equiv memory
Reg 134: def dominates all uses has unique first use
Reg 90 uninteresting
Reg 94: def dominates all uses has unique first use
Reg 89 not local to one basic block
Reg 94 not local to one basic block
Reg 95 not local to one basic block
Reg 104 not local to one basic block
Reg 106 not local to one basic block
Found def insn 116 for 130 to be not moveable
Reg 134 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
;; 2 succs { 3 29 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 25 12 }
;; 12 succs { 21 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 19 18 }
;; 18 succs { 19 }
;; 19 succs { 31 20 }
;; 20 succs { 30 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { }
;; 29 succs { }
;; 30 succs { }
;; 31 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 117: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 49 (nil))
init_insns for 131: (insn_list:REG_DEP_TRUE 118 (nil))
Reg 140 had equivalence, but can't be eliminated
Reg 142 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a3 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r141,l0) best CREG, allocno CREG
    a14 (r140,l0) best SIREG, allocno SIREG
    a2 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r134,l0) best AREG, allocno AREG
    a0 (r133,l0) best AREG, allocno AREG
    a8 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r130,l0) best AREG, allocno AREG
    a11 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r113,l0) best AREG, allocno AREG
    a22 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r106,l0) best DREG, allocno DREG
    a20 (r105,l0) best SIREG, allocno SIREG
    a15 (r104,l0) best DIREG, allocno DIREG
    a19 (r98,l0) best DIREG, allocno DIREG
    a18 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best DIREG, allocno DIREG
    a1 (r94,l0) best DIREG, allocno DIREG
    a12 (r91,l0) best DIREG, allocno DIREG
    a5 (r90,l0) best DIREG, allocno DIREG
    a9 (r89,l0) best AREG, allocno AREG
    a6 (r87,l0) best AREG, allocno AREG

  a0(r133,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a2(r138,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r134,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a5(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a6(r87,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22264,22264 NO_REX_SSE_REGS:22264,22264 SSE_REGS:22264,22264 MMX_REGS:27259,27259 INT_SSE_REGS:23263,23263 ALL_REGS:386192,386192 MEM:4781,4781
  a7(r130,l0) costs: AREG:-785,-785 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18840,18840 NO_REX_SSE_REGS:18840,18840 SSE_REGS:18840,18840 MMX_REGS:26690,26690 INT_SSE_REGS:20410,20410 ALL_REGS:405060,405060 MEM:6280,6280
  a8(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15700,15700 NO_REX_SSE_REGS:15700,15700 SSE_REGS:15700,15700 MMX_REGS:19625,19625 INT_SSE_REGS:16485,16485 ALL_REGS:244920,244920 MEM:0,0
  a9(r89,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4995,4995
  a10(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-698,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25564,25564 NO_REX_SSE_REGS:25564,25564 SSE_REGS:25564,25564 MMX_REGS:34049,34049 INT_SSE_REGS:27261,27261 ALL_REGS:456872,456872 MEM:9087,9087
  a11(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a12(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-698,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25564,25564 NO_REX_SSE_REGS:25564,25564 SSE_REGS:25564,25564 MMX_REGS:34049,34049 INT_SSE_REGS:27261,27261 ALL_REGS:456872,456872 MEM:10086,10086
  a13(r106,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a14(r140,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28971,28971 NO_REX_SSE_REGS:28971,28971 SSE_REGS:28971,28971 MMX_REGS:38961,38961 INT_SSE_REGS:30969,30969 ALL_REGS:623376,623376 MEM:9990,9990
  a15(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a16(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:-999,-999 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23278,23278 NO_REX_SSE_REGS:23278,23278 SSE_REGS:23278,23278 MMX_REGS:29718,29718 INT_SSE_REGS:24566,24566 ALL_REGS:475488,475488 MEM:7856,7856
  a17(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37472,37472 NO_REX_SSE_REGS:37472,37472 SSE_REGS:37472,37472 MMX_REGS:53557,53557 INT_SSE_REGS:40689,40689 ALL_REGS:801484,801484 MEM:14406,14406
  a18(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17232,17232 NO_REX_SSE_REGS:17232,17232 SSE_REGS:17232,17232 MMX_REGS:22227,22227 INT_SSE_REGS:18231,18231 ALL_REGS:308940,308940 MEM:5931,5931
  a19(r98,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-312,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7296,7296 NO_REX_SSE_REGS:7296,7296 SSE_REGS:7296,7296 MMX_REGS:10301,10301 INT_SSE_REGS:7897,7897 ALL_REGS:156108,156108 MEM:2403,2403
  a20(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1312,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29672,29672 NO_REX_SSE_REGS:29672,29672 SSE_REGS:29672,29672 MMX_REGS:43217,43217 INT_SSE_REGS:32381,32381 ALL_REGS:663472,663472 MEM:10525,10525
  a21(r113,l0) costs: AREG:-999,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34464,34464 NO_REX_SSE_REGS:34464,34464 SSE_REGS:34464,34464 MMX_REGS:51009,51009 INT_SSE_REGS:37773,37773 ALL_REGS:788172,788172 MEM:11925,11925
  a22(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a23(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a24(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5780,5780 NO_REX_SSE_REGS:5780,5780 SSE_REGS:5780,5780 MMX_REGS:7225,7225 INT_SSE_REGS:6069,6069 ALL_REGS:90168,90168 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r134: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r133,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a2(r138,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r142,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r134,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a5(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a6(r87,l0) costs: AREG:0,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29400,29400 NO_REX_SSE_REGS:29400,29400 SSE_REGS:29400,29400 MMX_REGS:34395,34395 INT_SSE_REGS:30399,30399 ALL_REGS:393328,393328 MEM:10133,10133
  a7(r130,l0) costs: AREG:0,-785 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21980,21980 NO_REX_SSE_REGS:21980,21980 SSE_REGS:21980,21980 MMX_REGS:29830,29830 INT_SSE_REGS:23550,23550 ALL_REGS:408200,408200 MEM:8635,8635
  a8(r131,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16485,16485 NO_REX_SSE_REGS:16485,16485 SSE_REGS:16485,16485 MMX_REGS:20410,20410 INT_SSE_REGS:17270,17270 ALL_REGS:248060,248060 MEM:0,0
  a9(r89,l0) costs: AREG:0,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7992,7992
  a10(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26563,26563 NO_REX_SSE_REGS:26563,26563 SSE_REGS:26563,26563 MMX_REGS:35048,35048 INT_SSE_REGS:28260,28260 ALL_REGS:460868,460868 MEM:9087,9087
  a11(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a12(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26563,26563 NO_REX_SSE_REGS:26563,26563 SSE_REGS:26563,26563 MMX_REGS:35048,35048 INT_SSE_REGS:28260,28260 ALL_REGS:460868,460868 MEM:10086,10086
  a13(r106,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a14(r140,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28971,28971 NO_REX_SSE_REGS:28971,28971 SSE_REGS:28971,28971 MMX_REGS:38961,38961 INT_SSE_REGS:30969,30969 ALL_REGS:623376,623376 MEM:9990,9990
  a15(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a16(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-999 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23278,23278 NO_REX_SSE_REGS:23278,23278 SSE_REGS:23278,23278 MMX_REGS:29718,29718 INT_SSE_REGS:24566,24566 ALL_REGS:475488,475488 MEM:7856,7856
  a17(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:41780,41780 NO_REX_SSE_REGS:41780,41780 SSE_REGS:41780,41780 MMX_REGS:57865,57865 INT_SSE_REGS:44997,44997 ALL_REGS:806728,806728 MEM:17403,17403
  a18(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20292,20292 NO_REX_SSE_REGS:20292,20292 SSE_REGS:20292,20292 MMX_REGS:25287,25287 INT_SSE_REGS:21291,21291 ALL_REGS:312936,312936 MEM:7992,7992
  a19(r98,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8540,8540 NO_REX_SSE_REGS:8540,8540 SSE_REGS:8540,8540 MMX_REGS:11545,11545 INT_SSE_REGS:9141,9141 ALL_REGS:157352,157352 MEM:3336,3336
  a20(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33672,33672 NO_REX_SSE_REGS:33672,33672 SSE_REGS:33672,33672 MMX_REGS:47217,47217 INT_SSE_REGS:36381,36381 ALL_REGS:667472,667472 MEM:13525,13525
  a21(r113,l0) costs: AREG:0,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38460,38460 NO_REX_SSE_REGS:38460,38460 SSE_REGS:38460,38460 MMX_REGS:55005,55005 INT_SSE_REGS:41769,41769 ALL_REGS:792168,792168 MEM:14922,14922
  a22(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a23(r118,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a24(r117,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6069,6069 NO_REX_SSE_REGS:6069,6069 SSE_REGS:6069,6069 MMX_REGS:7514,7514 INT_SSE_REGS:6358,6358 ALL_REGS:91324,91324 MEM:0,0

   Insn 166(l0): point = 0
   Insn 163(l0): point = 3
   Insn 156(l0): point = 6
   Insn 155(l0): point = 8
   Insn 151(l0): point = 11
   Insn 150(l0): point = 13
   Insn 146(l0): point = 16
   Insn 145(l0): point = 18
   Insn 143(l0): point = 21
   Insn 142(l0): point = 23
   Insn 141(l0): point = 25
   Insn 139(l0): point = 27
   Insn 178(l0): point = 30
   Insn 220(l0): point = 33
   Insn 135(l0): point = 35
   Insn 132(l0): point = 38
   Insn 131(l0): point = 40
   Insn 129(l0): point = 43
   Insn 128(l0): point = 45
   Insn 127(l0): point = 47
   Insn 184(l0): point = 50
   Insn 218(l0): point = 53
   Insn 162(l0): point = 56
   Insn 161(l0): point = 58
   Insn 159(l0): point = 60
   Insn 13(l0): point = 63
   Insn 119(l0): point = 65
   Insn 118(l0): point = 67
   Insn 116(l0): point = 69
   Insn 115(l0): point = 71
   Insn 114(l0): point = 73
   Insn 112(l0): point = 76
   Insn 111(l0): point = 78
   Insn 12(l0): point = 80
   Insn 108(l0): point = 83
   Insn 107(l0): point = 85
   Insn 105(l0): point = 88
   Insn 104(l0): point = 90
   Insn 103(l0): point = 92
   Insn 101(l0): point = 94
   Insn 98(l0): point = 97
   Insn 97(l0): point = 99
   Insn 95(l0): point = 102
   Insn 94(l0): point = 104
   Insn 93(l0): point = 106
   Insn 91(l0): point = 108
   Insn 90(l0): point = 111
   Insn 89(l0): point = 113
   Insn 88(l0): point = 115
   Insn 85(l0): point = 118
   Insn 84(l0): point = 120
   Insn 83(l0): point = 122
   Insn 82(l0): point = 124
   Insn 81(l0): point = 126
   Insn 78(l0): point = 128
   Insn 77(l0): point = 130
   Insn 76(l0): point = 132
   Insn 73(l0): point = 135
   Insn 72(l0): point = 137
   Insn 69(l0): point = 139
   Insn 68(l0): point = 141
   Insn 67(l0): point = 143
   Insn 66(l0): point = 145
   Insn 198(l0): point = 148
   Insn 9(l0): point = 150
   Insn 214(l0): point = 153
   Insn 197(l0): point = 155
   Insn 58(l0): point = 157
   Insn 55(l0): point = 160
   Insn 54(l0): point = 162
   Insn 212(l0): point = 165
   Insn 196(l0): point = 167
   Insn 11(l0): point = 169
   Insn 49(l0): point = 171
   Insn 48(l0): point = 173
   Insn 46(l0): point = 176
   Insn 45(l0): point = 178
   Insn 210(l0): point = 181
   Insn 40(l0): point = 183
   Insn 39(l0): point = 185
   Insn 38(l0): point = 187
   Insn 37(l0): point = 189
   Insn 36(l0): point = 191
   Insn 35(l0): point = 193
   Insn 34(l0): point = 195
   Insn 33(l0): point = 197
   Insn 31(l0): point = 199
   Insn 29(l0): point = 202
   Insn 28(l0): point = 204
   Insn 27(l0): point = 206
   Insn 26(l0): point = 208
   Insn 24(l0): point = 210
   Insn 23(l0): point = 212
   Insn 22(l0): point = 214
   Insn 20(l0): point = 217
   Insn 19(l0): point = 219
   Insn 18(l0): point = 221
   Insn 17(l0): point = 223
   Insn 16(l0): point = 225
   Insn 7(l0): point = 227
   Insn 4(l0): point = 229
   Insn 3(l0): point = 231
   Insn 2(l0): point = 233
 a0(r133): [33..35] [14..30]
 a1(r94): [19..27]
 a2(r138): [24..25]
 a3(r142): [93..225] [26..52]
 a4(r134): [36..50]
 a5(r90): [41..47]
 a6(r87): [76..80] [61..63]
 a7(r130): [64..69]
 a8(r131): [66..67]
 a9(r89): [79..108]
 a10(r95): [86..94]
 a11(r129): [91..92]
 a12(r91): [100..106]
 a13(r106): [114..229]
 a14(r140): [116..128]
 a15(r104): [123..233]
 a16(r141): [181..199] [165..167] [153..155] [127..148]
 a17(r96): [202..208] [153..180] [131..137]
 a18(r97): [165..169] [153..157] [131..135]
 a19(r98): [181..189] [142..150]
 a20(r105): [174..231] [160..164] [144..152]
 a21(r113): [176..210] [160..164] [146..152]
 a22(r111): [202..223] [170..180] [158..164] [151..152]
 a23(r118): [172..173]
 a24(r117): [184..185]
Compressing live ranges: from 236 to 42 - 17%
Ranges after the compression:
 a0(r133): [0..5]
 a1(r94): [0..3]
 a2(r138): [0..1]
 a3(r142): [16..41] [2..7]
 a4(r134): [6..7]
 a5(r90): [6..7]
 a6(r87): [12..13] [8..9]
 a7(r130): [10..11]
 a8(r131): [10..11]
 a9(r89): [12..19]
 a10(r95): [14..17]
 a11(r129): [14..15]
 a12(r91): [18..19]
 a13(r106): [20..41]
 a14(r140): [20..21]
 a15(r104): [20..41]
 a16(r141): [38..39] [32..33] [28..29] [20..25]
 a17(r96): [40..41] [28..37] [22..23]
 a18(r97): [32..33] [28..29] [22..23]
 a19(r98): [38..39] [24..25]
 a20(r105): [36..41] [30..31] [24..27]
 a21(r113): [36..41] [30..31] [24..27]
 a22(r111): [40..41] [34..37] [30..31] [26..27]
 a23(r118): [34..35]
 a24(r117): [38..39]
+++Allocating 200 bytes for conflict table (uncompressed size 200)
;; a0(r133,l0) conflicts: a2(r138,l0) a1(r94,l0) a3(r142,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r94,l0) conflicts: a2(r138,l0) a0(r133,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r138,l0) conflicts: a1(r94,l0) a0(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r142,l0) conflicts: a1(r94,l0) a0(r133,l0) a4(r134,l0) a5(r90,l0) a9(r89,l0) a10(r95,l0) a12(r91,l0) a14(r140,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a18(r97,l0) a17(r96,l0) a19(r98,l0) a20(r105,l0) a21(r113,l0) a22(r111,l0) a23(r118,l0) a24(r117,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r134,l0) conflicts: a3(r142,l0) a5(r90,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r90,l0) conflicts: a3(r142,l0) a4(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r87,l0) conflicts: a9(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r130,l0) conflicts: a8(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r131,l0) conflicts: a7(r130,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r89,l0) conflicts: a3(r142,l0) a6(r87,l0) a11(r129,l0) a10(r95,l0) a12(r91,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a10(r95,l0) conflicts: a3(r142,l0) a9(r89,l0) a11(r129,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r129,l0) conflicts: a9(r89,l0) a10(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r91,l0) conflicts: a3(r142,l0) a9(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r106,l0) conflicts: a3(r142,l0) a14(r140,l0) a16(r141,l0) a15(r104,l0) a18(r97,l0) a17(r96,l0) a19(r98,l0) a20(r105,l0) a21(r113,l0) a22(r111,l0) a23(r118,l0) a24(r117,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a14(r140,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a15(r104,l0) conflicts: a3(r142,l0) a14(r140,l0) a16(r141,l0) a13(r106,l0) a18(r97,l0) a17(r96,l0) a19(r98,l0) a20(r105,l0) a21(r113,l0) a22(r111,l0) a23(r118,l0) a24(r117,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a16(r141,l0) conflicts: a3(r142,l0) a14(r140,l0) a13(r106,l0) a15(r104,l0) a18(r97,l0) a17(r96,l0) a19(r98,l0) a20(r105,l0) a21(r113,l0) a24(r117,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a17(r96,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a18(r97,l0) a20(r105,l0) a21(r113,l0) a22(r111,l0) a23(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r97,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a17(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r98,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a20(r105,l0) a21(r113,l0) a24(r117,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a20(r105,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a17(r96,l0) a19(r98,l0) a21(r113,l0) a22(r111,l0) a24(r117,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a21(r113,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a17(r96,l0) a19(r98,l0) a20(r105,l0) a22(r111,l0) a24(r117,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a22(r111,l0) conflicts: a3(r142,l0) a13(r106,l0) a15(r104,l0) a17(r96,l0) a20(r105,l0) a21(r113,l0) a23(r118,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a23(r118,l0) conflicts: a3(r142,l0) a13(r106,l0) a15(r104,l0) a17(r96,l0) a22(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r117,l0) conflicts: a3(r142,l0) a16(r141,l0) a13(r106,l0) a15(r104,l0) a19(r98,l0) a20(r105,l0) a21(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r138)<->a3(r142)@1:shuffle
  cp1:a0(r133)<->a4(r134)@1:move
  cp2:a6(r87)<->a7(r130)@785:move
  cp3:a3(r142)<->a11(r129)@124:shuffle
  cp4:a19(r98)<->a22(r111)@22:move
  cp5:a18(r97)<->a22(r111)@488:move
  cp6:a18(r97)<->a22(r111)@199:move
  pref0:a16(r141)<-hr2@1498
  pref1:a14(r140)<-hr4@1498
  pref2:a7(r130)<-hr0@1177
  pref3:a21(r113)<-hr0@1498
  pref4:a13(r106)<-hr1@1500
  pref5:a20(r105)<-hr4@1968
  pref6:a15(r104)<-hr5@1500
  pref7:a19(r98)<-hr5@468
  pref8:a10(r95)<-hr5@1047
  pref9:a12(r91)<-hr5@1047
  pref10:a9(r89)<-hr0@1498
  pref11:a6(r87)<-hr0@1498
  pref12:a0(r133)<-hr5@1
  pref13:a1(r94)<-hr5@1
  pref14:a0(r133)<-hr0@1
  pref15:a5(r90)<-hr5@1
  pref16:a4(r134)<-hr0@1
  pref17:a13(r106)<-hr5@999
  pref18:a3(r142)<-hr1@999
  pref19:a15(r104)<-hr4@999
  pref20:a14(r140)<-hr5@999
  pref21:a21(r113)<-hr1@312
  pref22:a16(r141)<-hr4@289
  pref23:a3(r142)<-hr5@289
  pref24:a19(r98)<-hr0@289
  pref25:a20(r105)<-hr5@999
  regions=1, blocks=32, points=42
    allocnos=25 (big 0), copies=7, conflicts=0, ranges=42

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r133 1r94 2r138 3r142 4r134 5r90 6r87 7r130 8r131 9r89 10r95 11r129 12r91 13r106 14r140 15r104 16r141 17r96 18r97 19r98 20r105 21r113 22r111 23r118 24r117
    modified regnos: 87 89 90 91 94 95 96 97 98 104 105 106 111 113 117 118 129 130 131 133 134 138 140 141 142
    border:
    Pressure: GENERAL_REGS=9
 Removing pref12:hr5@1
 Removing pref23:hr5@289
 Removing pref18:hr1@999
 Removing pref10:hr0@1498
 Removing pref17:hr5@999
 Removing pref4:hr1@1500
 Removing pref20:hr5@999
 Removing pref1:hr4@1498
 Removing pref19:hr4@999
 Removing pref6:hr5@1500
 Removing pref22:hr4@289
 Removing pref25:hr5@999
 Removing pref5:hr4@1968
 Removing pref21:hr1@312
 Removing pref3:hr0@1498
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@157806
          2:( 1-4 6 37-44)@20254
            3:( 2 3 6 37-44)@76878
              4:( 3 6 41-44)@93687
      Allocno a0r133 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r138 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r142 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r134 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r130 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r131 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r89 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a10r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a11r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r106 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a14r140 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a15r104 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a16r141 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a17r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a18r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r98 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a20r105 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a21r113 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a22r111 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a23r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a24r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 2:a6r87-a7r130 (freq=785):
        Result (freq=5138): a6r87(2783) a7r130(2355)
      Forming thread by copy 5:a18r97-a22r111 (freq=488):
        Result (freq=4707): a18r97(1998) a22r111(2709)
      Forming thread by copy 4:a19r98-a22r111 (freq=22):
        Result (freq=5619): a19r98(912) a18r97(1998) a22r111(2709)
      Forming thread by copy 0:a2r138-a3r142 (freq=1):
        Result (freq=4290): a2r138(2) a3r142(4288)
      Forming thread by copy 1:a0r133-a4r134 (freq=1):
        Result (freq=5): a0r133(3) a4r134(2)
      Pushing a5(r90,l0)(cost 0)
      Pushing a1(r94,l0)(cost 0)
      Pushing a4(r134,l0)(cost 0)
      Pushing a0(r133,l0)(cost 0)
      Pushing a23(r118,l0)(cost 0)
      Pushing a24(r117,l0)(cost 0)
      Pushing a8(r131,l0)(cost 0)
      Pushing a11(r129,l0)(cost 0)
      Pushing a9(r89,l0)(cost 0)
      Pushing a16(r141,l0)(cost 0)
      Pushing a12(r91,l0)(cost 0)
      Pushing a10(r95,l0)(cost 0)
      Pushing a14(r140,l0)(cost 0)
      Pushing a20(r105,l0)(cost 0)
      Pushing a2(r138,l0)(cost 0)
      Pushing a21(r113,l0)(cost 0)
      Pushing a17(r96,l0)(cost 0)
      Forming thread by copy 3:a3r142-a11r129 (freq=124):
        Result (freq=6288): a2r138(2) a11r129(1998) a3r142(4288)
        Making a3(r142,l0) colorable
        Making a13(r106,l0) colorable
        Making a15(r104,l0) colorable
      Pushing a15(r104,l0)(cost 6997)
      Pushing a13(r106,l0)(cost 6997)
      Pushing a7(r130,l0)(cost 0)
      Pushing a6(r87,l0)(cost 0)
      Pushing a19(r98,l0)(cost 0)
      Pushing a18(r97,l0)(cost 0)
      Pushing a22(r111,l0)(cost 0)
      Pushing a3(r142,l0)(cost 14864)
      Popping a3(r142,l0)  -- assign reg 3
      Popping a22(r111,l0)  -- assign reg 6
      Popping a18(r97,l0)  -- assign reg 6
      Popping a19(r98,l0)  -- assign reg 5
      Popping a6(r87,l0)  -- assign reg 0
      Popping a7(r130,l0)  -- assign reg 0
      Popping a13(r106,l0)  -- assign reg 41
      Popping a15(r104,l0)  -- assign reg 42
      Popping a17(r96,l0)  -- assign reg 0
      Popping a21(r113,l0)  -- assign reg 43
      Popping a2(r138,l0)  -- assign reg 3
      Popping a20(r105,l0)  -- assign reg 44
      Popping a14(r140,l0)  -- assign reg 6
      Popping a10(r95,l0)  -- assign reg 5
      Popping a12(r91,l0)  -- assign reg 5
      Popping a16(r141,l0)  -- assign reg 2
      Popping a9(r89,l0)  -- assign reg 6
      Popping a11(r129,l0)  -- assign reg 3
      Popping a8(r131,l0)  -- assign reg 1
      Popping a24(r117,l0)  -- assign reg 0
      Popping a23(r118,l0)  -- assign reg 1
      Popping a0(r133,l0)  -- assign reg 6
      Popping a4(r134,l0)  -- assign reg 6
      Popping a1(r94,l0)  -- assign reg 5
      Popping a5(r90,l0)  -- assign reg 5
Disposition:
    6:r87  l0     0    9:r89  l0     6    5:r90  l0     5   12:r91  l0     5
    1:r94  l0     5   10:r95  l0     5   17:r96  l0     0   18:r97  l0     6
   19:r98  l0     5   15:r104 l0    42   20:r105 l0    44   13:r106 l0    41
   22:r111 l0     6   21:r113 l0    43   24:r117 l0     0   23:r118 l0     1
   11:r129 l0     3    7:r130 l0     0    8:r131 l0     1    0:r133 l0     6
    4:r134 l0     6    2:r138 l0     3   14:r140 l0     6   16:r141 l0     2
    3:r142 l0     3
New iteration of spill/restore move
+++Costs: overall -8671, reg -8671, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_t* leveldb_open(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={17d,8u} r1={19d,4u} r2={15d,1u} r4={18d,5u} r5={26d,13u} r6={1d,31u} r7={1d,44u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,30u} r17={30d,10u} r18={13d} r19={13d} r20={1d,53u,15e} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={14d} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r87={2d,1u} r89={1d,1u} r90={1d,2u} r91={1d,2u} r94={1d,2u} r95={1d,2u} r96={2d,4u} r97={3d,1u} r98={2d,2u} r104={1d,1u} r105={1d,4u} r106={1d,1u} r111={1d,4u} r113={1d,4u} r117={1d,1u} r118={1d,1u} r129={1d,1u} r130={1d,2u} r131={1d,1u} r133={2d,1u} r134={1d,1u} r138={1d,1u} r140={1d,2u} r141={4d,2u} r142={1d,5u} 
;;    total ref usage 1294{1031d,248u,15e} in 103{90 regular + 13 call} insns.
(note 1 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105 106 111 142
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 104 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 105 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 16 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37054+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:155 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 7 17 2 (parallel [
            (set (reg/f:DI 142)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 111)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31250]._M_p+0 S8 A128])
        (reg/f:DI 111)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 153)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              29 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 113
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 26 3 (set (reg:DI 113)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 24 27 3 (set (reg:DI 96 [ D.37051 ])
        (reg:DI 113)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])
        (reg:DI 113)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 113)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 29 28 30 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 43)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 117 141
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 33 4 (parallel [
            (set (reg/f:DI 141)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8]))
            (nil))))
(insn 33 31 34 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/f:DI 141)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 142)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 37 36 38 4 (set (reg/f:DI 98 [ D.37050 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])
        (reg/f:DI 98 [ D.37050 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 117 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])
        (nil)))
(insn 40 39 210 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31250 + 16B]+0 S8 A128])
        (reg:DI 117 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ __dnew ])
        (nil)))
(jump_insn 210 40 211 4 (set (pc)
        (label_ref 61)) 654 {jump}
     (nil)
 -> 61)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142

(barrier 211 210 43)
;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
(code_label 43 211 44 5 91 "" [1 uses])
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 96 [ D.37051 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 46 45 47 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 52)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 111
;; lr  def 	 97 118 141
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 105 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ name ])
        (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31250 + 16]+0 S1 A128])
            (nil))))
(insn 49 48 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31250 + 16]+0 S1 A128])
        (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 49 196 6 (set (reg/f:DI 97 [ D.37050 ])
        (reg/f:DI 111)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 196 11 212 6 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))
(jump_insn 212 196 213 6 (set (pc)
        (label_ref 74)) 654 {jump}
     (nil)
 -> 74)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

(barrier 213 212 52)
;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
(code_label 52 213 53 7 93 "" [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 96 [ D.37051 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 169)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 169)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 97 141
(note 56 55 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 56 197 8 (set (reg/f:DI 97 [ D.37050 ])
        (reg/f:DI 111)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 197 58 214 8 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))
(jump_insn 214 197 215 8 (set (pc)
        (label_ref 74)) 654 {jump}
     (nil)
 -> 74)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

(barrier 215 214 169)
;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 98 141
(code_label 169 215 168 9 103 "" [1 uses])
(note 168 169 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 168 198 9 (set (reg/f:DI 98 [ D.37050 ])
        (reg/f:DI 111)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 198 9 61 9 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 105 113
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
(code_label 61 198 62 10 92 "" [1 uses])
(note 62 61 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 62 67 10 (set (reg:DI 1 dx)
        (reg:DI 113)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 67 66 68 10 (set (reg:DI 4 si)
        (reg/v/f:DI 105 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ name ])
        (nil)))
(insn 68 67 69 10 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.37050 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.37050 ])
        (nil)))
(call_insn 69 68 72 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 72 69 73 10 (set (reg:DI 96 [ D.37051 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 73 72 74 10 (set (reg/f:DI 97 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              8 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 141 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140
(code_label 74 73 75 11 94 "" [2 uses])
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31250 + 8B]+0 S8 A64])
        (reg:DI 96 [ D.37051 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 77 76 78 11 (set (mem:QI (plus:DI (reg/f:DI 97 [ D.37050 ])
                (reg:DI 96 [ D.37051 ])) [0 MEM[(char_type &)_55]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.37050 ])
        (expr_list:REG_DEAD (reg:DI 96 [ D.37051 ])
            (nil))))
(insn 78 77 81 11 (parallel [
            (set (reg/f:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:157 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 81 78 82 11 (set (reg:DI 2 cx)
        (reg/f:DI 141)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8]))
            (nil))))
(insn 82 81 83 11 (set (reg:DI 1 dx)
        (reg/f:DI 142)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 83 82 84 11 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ options ])) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ options ])
        (nil)))
(insn 84 83 85 11 (set (reg:DI 5 di)
        (reg/f:DI 140)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 85 84 86 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb2DB4OpenERKNS_7OptionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPS0_") [flags 0x41]  <function_decl 0x7fb537815a20 Open>) [0 Open S1 A8])
        (const_int 0 [0])) db/c.cc:157 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb2DB4OpenERKNS_7OptionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPS0_") [flags 0x41]  <function_decl 0x7fb537815a20 Open>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 86 85 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 86 89 12 (set (reg:DI 4 si)
        (reg/f:DI 140)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 89 88 90 12 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ errptr ])) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ errptr ])
        (nil)))
(call_insn 90 89 174 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:157 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 3 [0x3])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 91
(note 174 90 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 174 93 13 (set (reg:QI 89 [ D.37047 ])
        (reg:QI 0 ax)) db/c.cc:157 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 93 91 94 13 (set (reg/f:DI 91 [ D.37048 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31251.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 94 93 95 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37048 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 95 94 96 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 99)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37048 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37048 ])
        (nil)))
(call_insn 98 97 99 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u138(6){ }u139(7){ }u140(16){ }u141(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 95 129
(code_label 99 98 100 15 95 "" [1 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 103 15 (set (reg/f:DI 95 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 103 101 104 15 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.37050 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 109)
;;  succ:       16 [69.8%]  (FALLTHRU)
;;              17 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95

;; basic block 16, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [69.8%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.37050 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.37050 ])
        (nil)))
(call_insn 108 107 109 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 17, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [30.2%] 
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags] 87
(code_label 109 108 110 17 96 "" [1 uses])
(note 110 109 12 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 12 110 111 17 (set (reg/f:DI 87 [ D.37045 ])
        (const_int 0 [0])) db/c.cc:158 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 111 12 112 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.37047 ])
            (const_int 0 [0]))) db/c.cc:157 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.37047 ])
        (nil)))
(jump_insn 112 111 113 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 120)
            (pc))) db/c.cc:157 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 120)
;;  succ:       19 [21.4%] 
;;              18 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 18, loop depth 0, count 0, freq 7858, maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [78.6%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 130 131
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:160 89 {*movdi_internal}
     (nil))
(call_insn 115 114 116 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:160 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 116 115 118 18 (set (reg/f:DI 130)
        (reg:DI 0 ax)) db/c.cc:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(insn 118 116 119 18 (set (reg/f:DI 131 [ db ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 db+0 S8 A64])) db/c.cc:161 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 db+0 S8 A64])
        (nil)))
(insn 119 118 13 18 (set (mem/f:DI (reg/f:DI 130) [3 result_18->rep+0 S8 A64])
        (reg/f:DI 131 [ db ])) db/c.cc:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ db ])
        (nil)))
(insn 13 119 120 18 (set (reg/f:DI 87 [ D.37045 ])
        (reg/f:DI 130)) db/c.cc:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 19, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [21.4%] 
;;              18 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(6){ }u172(7){ }u173(16){ }u174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
(code_label 120 13 121 19 97 "" [1 uses])
(note 121 120 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 121 161 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37045 ])) db/c.cc:163 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37045 ])
        (nil)))
(insn 161 159 162 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37054+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:163 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 162 161 216 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) db/c.cc:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 165)
;;  succ:       31 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 216 162 218 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 218 216 219 20 (set (pc)
        (label_ref 217)) 654 {jump}
     (nil)
 -> 217)
;;  succ:       30 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 219 218 183)
;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d7(0){ }d25(1){ }}
;; bb 21 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 134
(code_label/s 183 219 186 21 106 "" [1 uses])
(note 186 183 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 184 186 125 21 (set (reg:DI 134)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(code_label 125 184 126 22 98 "" [0 uses])
(note 126 125 127 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 22 (set (reg/f:DI 90 [ D.37048 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31251.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 128 127 129 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37048 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 129 128 130 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 133)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 133)
;;  succ:       23 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [69.8%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u190(6){ }u191(7){ }u192(16){ }u193(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 130 129 131 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 23 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37048 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37048 ])
        (nil)))
(call_insn 132 131 133 23 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [30.2%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 133
(code_label 133 132 134 24 99 "" [1 uses])
(note 134 133 135 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 220 24 (set (reg:DI 133)
        (reg:DI 134)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
(jump_insn 220 135 221 24 (set (pc)
        (label_ref 137)) 654 {jump}
     (nil)
 -> 137)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142

(barrier 221 220 177)
;; basic block 25, loop depth 0, count 0, freq 0
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 25 artificial_defs: { d5(0){ }d23(1){ }}
;; bb 25 artificial_uses: { u202(6){ }u203(7){ }u204(16){ }u205(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 133
(code_label/s 177 221 182 25 105 "" [1 uses])
(note 182 177 178 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 178 182 137 25 (set (reg:DI 133)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142

;; basic block 26, loop depth 0, count 0, freq 0
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       25 [100.0%]  (FALLTHRU)
;;              24 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 94 138
(code_label 137 178 138 26 100 "" [1 uses])
(note 138 137 139 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 141 26 (set (reg/f:DI 94 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 141 139 142 26 (parallel [
            (set (reg/f:DI 138)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.37050 ])
            (reg/f:DI 138))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(jump_insn 143 142 144 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 147)
;;  succ:       27 [69.8%]  (FALLTHRU)
;;              28 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133

;; basic block 27, loop depth 0, count 0, freq 0
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [69.8%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 144 143 145 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 27 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37050 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37050 ])
        (nil)))
(call_insn 146 145 147 27 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133

;; basic block 28, loop depth 0, count 0, freq 0
;;  prev block 27, next block 29, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [30.2%] 
;;              27 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u223(6){ }u224(7){ }u225(16){ }u226(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 147 146 148 28 101 "" [1 uses])
(note 148 147 150 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 150 148 151 28 (set (reg:DI 5 di)
        (reg:DI 133)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 151 150 152 28 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 152 151 153)
;; basic block 29, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 153 152 154 29 90 "" [1 uses])
(note 154 153 155 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 29 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 156 155 157 29 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 157 156 217)
;; basic block 30, loop depth 0, count 0, freq 4
;;  prev block 29, next block 31, flags: (HOT_PARTITION, RTL)
;;  pred:       20 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u236(6){ }u237(7){ }u238(16){ }u239(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 217 157 175 30 113 "" [1 uses])
(note 175 217 163 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(call_insn 163 175 164 30 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:163 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 164 163 165)
;; basic block 31, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 30, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 165 164 176 31 102 "" [1 uses])
(note 176 165 166 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 166 176 0 31 (use (reg/i:DI 0 ax)) db/c.cc:163 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_close(leveldb_t*) (leveldb_close, funcdef_no=1432, decl_uid=2158, cgraph_uid=539, symbol_order=542)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Reg 87 uninteresting
Reg 91: local to bb 3 def dominates all uses has unique first use
Found def insn 10 for 91 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG
    a2 (r87,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32528,32528 NO_REX_SSE_REGS:32528,32528 SSE_REGS:32528,32528 MMX_REGS:45358,45358 INT_SSE_REGS:35094,35094 ALL_REGS:637728,637728 MEM:13481,13481


Pass 1 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33528,33528 NO_REX_SSE_REGS:33528,33528 SSE_REGS:33528,33528 MMX_REGS:46358,46358 INT_SSE_REGS:36094,36094 ALL_REGS:641728,641728 MEM:13481,13481

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 10(l0): point = 9
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..18]
 a1(r91): [6..9]
 a2(r87): [8..16]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r91): [0..1]
 a2(r87): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r90,l0) conflicts: a1(r91,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r91,l0) conflicts: a0(r90,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r87,l0) conflicts: a0(r90,l0) a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@3000
  pref1:a2(r87)<-hr5@1174
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r90 1r91 2r87
    modified regnos: 87 90 91
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@31660
          2:( 0-4 6 37-44)@34528
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r91,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r91,l0)  -- assign reg 0
Disposition:
    2:r87  l0     5    0:r90  l0     3    1:r91  l0     0
New iteration of spill/restore move
+++Costs: overall -2349, reg -2349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_close(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} 
;;    total ref usage 196{169d,27u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:165 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37063 ])
        (mem/f:DI (reg/v/f:DI 90 [ db ]) [3 db_3(D)->rep+0 S8 A64])) db/c.cc:166 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37063 ])
            (const_int 0 [0]))) db/c.cc:166 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37063 ]) [3 _4->_vptr.DB+0 S8 A64])) db/c.cc:166 89 {*movdi_internal}
     (nil))
(note 11 10 12 3 NOTE_INSN_DELETED)
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37063 ])) db/c.cc:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37063 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.DB ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_6;(struct DB)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:166 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 14 13 15 4 120 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ db ])) db/c.cc:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ db ])
        (nil)))
(call_insn/j 17 16 18 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:167 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function void leveldb_put(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, const char*, size_t, char**) (leveldb_put, funcdef_no=1433, decl_uid=2166, cgraph_uid=540, symbol_order=543)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 95: local to bb 2 def dominates all uses has unique first use
Ignoring reg 96, has equiv memory
Ignoring reg 97, has equiv memory
Reg 100: local to bb 2 def dominates all uses has unique first use
Ignoring reg 102, has equiv memory
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 91 uninteresting
Reg 107: def dominates all uses has unique first use
Reg 93 uninteresting
Found def insn 16 for 90 to be not moveable
Found def insn 2 for 94 to be not moveable
Found def insn 3 for 95 to be not moveable
Found def insn 8 for 100 to be not moveable
Reg 107 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 9 }
;; 4 succs { 9 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 96: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 97: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 102: (insn_list:REG_DEP_TRUE 15 (nil))
Reg 103 had equivalence, but can't be eliminated
Reg 105 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r107,l0) best AREG, allocno AREG
    a8 (r105,l0) best CREG, allocno CREG
    a4 (r103,l0) best SIREG, allocno SIREG
    a11 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r100,l0) best DIREG, allocno DIREG
    a9 (r97,l0) best CREG, allocno CREG
    a10 (r96,l0) best DREG, allocno DREG
    a7 (r95,l0) best DREG, allocno DREG
    a12 (r94,l0) best DIREG, allocno DIREG
    a1 (r93,l0) best DIREG, allocno DIREG
    a2 (r91,l0) best DIREG, allocno DIREG
    a5 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best SIREG, allocno SIREG

  a0(r107,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349
  a3(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a6(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a7(r95,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a8(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a9(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a10(r96,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a11(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a12(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r107,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:10349,10349
  a3(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:7000,7000
  a4(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a6(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a7(r95,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a8(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a9(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a10(r96,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a11(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a12(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 63(l0): point = 1
   Insn 62(l0): point = 4
   Insn 61(l0): point = 6
   Insn 57(l0): point = 9
   Insn 56(l0): point = 11
   Insn 52(l0): point = 14
   Insn 51(l0): point = 16
   Insn 49(l0): point = 19
   Insn 48(l0): point = 21
   Insn 47(l0): point = 23
   Insn 70(l0): point = 26
   Insn 84(l0): point = 29
   Insn 40(l0): point = 31
   Insn 39(l0): point = 33
   Insn 37(l0): point = 36
   Insn 36(l0): point = 38
   Insn 35(l0): point = 40
   Insn 33(l0): point = 43
   Insn 32(l0): point = 45
   Insn 31(l0): point = 47
   Insn 29(l0): point = 49
   Insn 28(l0): point = 51
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 25(l0): point = 57
   Insn 24(l0): point = 59
   Insn 23(l0): point = 61
   Insn 21(l0): point = 63
   Insn 20(l0): point = 65
   Insn 19(l0): point = 67
   Insn 18(l0): point = 69
   Insn 17(l0): point = 71
   Insn 16(l0): point = 73
   Insn 15(l0): point = 75
   Insn 14(l0): point = 77
   Insn 11(l0): point = 79
   Insn 8(l0): point = 81
   Insn 5(l0): point = 83
   Insn 4(l0): point = 85
   Insn 3(l0): point = 87
   Insn 2(l0): point = 89
 a0(r107): [12..26]
 a1(r93): [17..23]
 a2(r91): [34..40]
 a3(r100): [46..81]
 a4(r103): [48..63]
 a5(r90): [50..73]
 a6(r88): [54..77]
 a7(r95): [56..87]
 a8(r105): [58..61]
 a9(r97): [66..83]
 a10(r96): [68..85]
 a11(r102): [74..75]
 a12(r94): [78..89]
Compressing live ranges: from 92 to 12 - 13%
Ranges after the compression:
 a0(r107): [0..1]
 a1(r93): [0..1]
 a2(r91): [2..3]
 a3(r100): [4..11]
 a4(r103): [4..5]
 a5(r90): [4..7]
 a6(r88): [4..9]
 a7(r95): [4..11]
 a8(r105): [4..5]
 a9(r97): [6..11]
 a10(r96): [6..11]
 a11(r102): [8..9]
 a12(r94): [10..11]
+++Allocating 96 bytes for conflict table (uncompressed size 104)
;; a0(r107,l0) conflicts: a1(r93,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts:;; a3(r100,l0) conflicts: a4(r103,l0) a8(r105,l0) a5(r90,l0) a6(r88,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0) a11(r102,l0) a12(r94,l0)
;;     total conflict hard regs: 1 2 4 5 37 38
;;     conflict hard regs: 1 2 4 5 37 38

;; a4(r103,l0) conflicts: a8(r105,l0) a5(r90,l0) a6(r88,l0) a3(r100,l0) a7(r95,l0)
;;     total conflict hard regs: 1 2 4 5 37
;;     conflict hard regs: 1 2 4 5 37

;; a5(r90,l0) conflicts: a4(r103,l0) a8(r105,l0) a6(r88,l0) a3(r100,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 1 2 4 5 37 38
;;     conflict hard regs: 1 2 4 5 37 38

;; a6(r88,l0) conflicts: a4(r103,l0) a8(r105,l0) a5(r90,l0) a3(r100,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0) a11(r102,l0)
;;     total conflict hard regs: 1 2 37 38
;;     conflict hard regs: 1 2 37 38

;; a7(r95,l0) conflicts: a4(r103,l0) a8(r105,l0) a5(r90,l0) a6(r88,l0) a3(r100,l0) a9(r97,l0) a10(r96,l0) a11(r102,l0) a12(r94,l0)
;;     total conflict hard regs: 1 2 37 38
;;     conflict hard regs: 1 2 37 38

;; a8(r105,l0) conflicts: a4(r103,l0) a5(r90,l0) a6(r88,l0) a3(r100,l0) a7(r95,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a9(r97,l0) conflicts: a5(r90,l0) a6(r88,l0) a3(r100,l0) a7(r95,l0) a10(r96,l0) a11(r102,l0) a12(r94,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a10(r96,l0) conflicts: a5(r90,l0) a6(r88,l0) a3(r100,l0) a7(r95,l0) a9(r97,l0) a11(r102,l0) a12(r94,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a11(r102,l0) conflicts: a6(r88,l0) a3(r100,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a12(r94,l0) conflicts: a3(r100,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

  pref0:a8(r105)<-hr2@1500
  pref1:a4(r103)<-hr4@1500
  pref2:a3(r100)<-hr5@1500
  pref3:a9(r97)<-hr2@1500
  pref4:a10(r96)<-hr1@1500
  pref5:a7(r95)<-hr1@1500
  pref6:a12(r94)<-hr5@1500
  pref7:a2(r91)<-hr5@1174
  pref8:a6(r88)<-hr4@1500
  pref9:a0(r107)<-hr5@1
  pref10:a1(r93)<-hr5@1
  pref11:a0(r107)<-hr0@1
  pref12:a7(r95)<-hr4@1000
  pref13:a4(r103)<-hr5@1000
  regions=1, blocks=12, points=12
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r107 1r93 2r91 3r100 4r103 5r90 6r88 7r95 8r105 9r97 10r96 11r102 12r94
    modified regnos: 88 90 91 93 94 95 96 97 100 102 103 105 107
    border:
    Pressure: GENERAL_REGS=8
 Removing pref9:hr5@1
 Removing pref2:hr5@1500
 Removing pref13:hr5@1000
 Removing pref1:hr4@1500
 Removing pref5:hr1@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@25424
          2:( 0-6 38-44)@20000
            3:( 0-6 39-44)@22000
              4:( 0 1 3-6 39-44)@22000
                5:( 0 3-6 39-44)@56000
                  6:( 0 3 5 6 39-44)@22000
                    7:( 0 3 6 39-44)@36000
                      8:( 0 3 6 41-44)@14
                        9:( 3 6 41-44)@14000
      Allocno a0r107 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r100 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  1 2 4 5 7-38 45-79)
      Allocno a4r103 of GENERAL_REGS(15) has 10 avail. regs  0 3 6 38-44, ^node:  0-6 38-44 (confl regs =  1 2 4 5 7-37 45-79)
      Allocno a5r90 of GENERAL_REGS(15) has 9 avail. regs  0 3 6 39-44, node:  0 3 6 39-44 (confl regs =  1 2 4 5 7-38 45-79)
      Allocno a6r88 of GENERAL_REGS(15) has 11 avail. regs  0 3-6 39-44, node:  0 3-6 39-44 (confl regs =  1 2 7-38 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 11 avail. regs  0 3-6 39-44, node:  0 3-6 39-44 (confl regs =  1 2 7-38 45-79)
      Allocno a8r105 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, node:  0-6 38-44 (confl regs =  7-37 45-79)
      Allocno a9r97 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, node:  0-6 39-44 (confl regs =  7-38 45-79)
      Allocno a10r96 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, node:  0 1 3-6 39-44 (confl regs =  2 7-38 45-79)
      Allocno a11r102 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, node:  0-6 39-44 (confl regs =  7-38 45-79)
      Allocno a12r94 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, node:  0 3 5 6 39-44 (confl regs =  1 2 4 7-38 45-79)
      Pushing a0(r107,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a12(r94,l0)(cost 0)
      Pushing a11(r102,l0)(cost 0)
      Pushing a10(r96,l0)(cost 0)
      Pushing a9(r97,l0)(cost 0)
        Making a3(r100,l0) colorable
      Pushing a8(r105,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a5(r90,l0)(cost 0)
      Pushing a3(r100,l0)(cost 7000)
      Pushing a2(r91,l0)(cost 0)
      Pushing a6(r88,l0)(cost 0)
      Pushing a4(r103,l0)(cost 0)
      Popping a4(r103,l0)  -- assign reg 3
      Popping a6(r88,l0)  -- assign reg 4
      Popping a2(r91,l0)  -- assign reg 5
      Popping a3(r100,l0)  -- assign reg 6
      Popping a5(r90,l0)  -- assign reg 0
      Popping a7(r95,l0)  -- assign reg 39
      Popping a8(r105,l0)  -- assign reg 2
      Popping a9(r97,l0)  -- assign reg 2
      Popping a10(r96,l0)  -- assign reg 1
      Popping a11(r102,l0)  -- assign reg 0
      Popping a12(r94,l0)  -- assign reg 5
      Popping a1(r93,l0)  -- assign reg 5
      Popping a0(r107,l0)  -- assign reg 3
Disposition:
    6:r88  l0     4    5:r90  l0     0    2:r91  l0     5    1:r93  l0     5
   12:r94  l0     5    7:r95  l0    39   10:r96  l0     1    9:r97  l0     2
    3:r100 l0     6   11:r102 l0     0    4:r103 l0     3    8:r105 l0     2
    0:r107 l0     3
New iteration of spill/restore move
+++Costs: overall -17352, reg -17352, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_put(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,11u} r17={12d,3u} r18={6d} r19={6d} r20={1d,22u,7e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,2u} r38={7d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u,1e} r90={1d,1u} r91={1d,2u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r100={1d,1u} r102={1d,1u} r103={1d,2u} r105={1d,1u} r107={1d,1u} 
;;    total ref usage 588{482d,98u,8e} in 41{35 regular + 6 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 94 95 96 97 100 102 103 105
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 96 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 D.31298.data_+0 S8 A128])
            (nil))))
(insn 5 4 6 2 (set (reg/v:DI 97 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [9 D.31298.size_+0 S8 A64])
            (nil))))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 8 2 NOTE_INSN_DELETED)
(insn 8 7 9 2 (set (reg/v/f:DI 100 [ errptr ])
        (mem/f/c:DI (reg/f:DI 16 argp) [3 errptr+0 S8 A64])) db/c.cc:175 89 {*movdi_internal}
     (nil))
(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 9 14 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37076+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:175 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 11 15 2 (set (reg/f:DI 88 [ D.37071 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_3(D)->rep+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 102 [ _4->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37071 ]) [3 _4->_vptr.DB+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 88 [ D.37071 ]) [3 _4->_vptr.DB+0 S8 A64])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.37073 ])
        (mem/f:DI (plus:DI (reg/f:DI 102 [ _4->_vptr.DB ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B]+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _4->_vptr.DB ])
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31299.data_+0 S8 A128])
        (reg:DI 37 r8 [ val ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ val ])
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31299.size_+0 S8 A64])
        (reg:DI 38 r9 [ vallen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ vallen ])
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31298.data_+0 S8 A128])
        (reg/v/f:DI 96 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ key ])
        (nil)))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 D.31298.size_+0 S8 A64])
        (reg/v:DI 97 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ keylen ])
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(note 22 21 23 2 NOTE_INSN_DELETED)
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 24 23 25 2 (set (reg:DI 37 r8)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -32 [0xffffffffffffffe0]))) db/c.cc:177 214 {*leadi}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 105)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ options ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.37071 ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37071 ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 103)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 29 28 31 2 (call (mem:QI (reg/f:DI 90 [ D.37073 ]) [0 *OBJ_TYPE_REF(_6;(struct DB)_4->2) S1 A8])
        (const_int 0 [0])) db/c.cc:177 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37073 ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 31 29 32 2 (set (reg:DI 4 si)
        (reg/f:DI 103)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ errptr ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ errptr ])
        (nil)))
(call_insn 33 32 34 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:177 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 91 [ D.37074 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31300.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37074 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 59)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37074 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37074 ])
        (nil)))
(call_insn 40 39 84 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 84 40 85 4 (set (pc)
        (label_ref 59)) db/c.cc:178 654 {jump}
     (nil)
 -> 59)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 85 84 69)
;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 107
(code_label/s 69 85 71 5 130 "" [1 uses])
(note 71 69 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 71 45 5 (set (reg:DI 107)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(code_label 45 70 46 6 127 "" [0 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 93 [ D.37074 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31300.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37074 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 53)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37074 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37074 ])
        (nil)))
(call_insn 52 51 53 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 53 52 54 8 128 "" [1 uses])
(note 54 53 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 57 8 (set (reg:DI 5 di)
        (reg:DI 107)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 57 56 58 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 58 57 59)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 59 58 66 9 125 "" [2 uses])
(note 66 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 66 62 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37076+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:178 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 62 61 67 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) db/c.cc:178 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 65)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(6){ }u94(7){ }u95(16){ }u96(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 67 62 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 63 67 64 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:178 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 64 63 65)
;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 65 64 68 11 129 "" [1 uses])
(note 68 65 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_delete(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, char**) (leveldb_delete, funcdef_no=1434, decl_uid=2172, cgraph_uid=541, symbol_order=544)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 95: local to bb 2 def dominates all uses has unique first use
Ignoring reg 96, has equiv memory
Ignoring reg 97, has equiv memory
Reg 98: local to bb 2 def dominates all uses has unique first use
Ignoring reg 100, has equiv memory
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Reg 104: def dominates all uses has unique first use
Reg 92 uninteresting
Found def insn 14 for 89 to be not moveable
Found def insn 2 for 94 to be not moveable
Found def insn 3 for 95 to be not moveable
Found def insn 6 for 98 to be not moveable
Reg 104 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 9 }
;; 4 succs { 9 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 96: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 97: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 13 (nil))
Reg 101 had equivalence, but can't be eliminated
Reg 102 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r104,l0) best AREG, allocno AREG
    a8 (r102,l0) best CREG, allocno CREG
    a4 (r101,l0) best SIREG, allocno SIREG
    a11 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best DIREG, allocno DIREG
    a9 (r97,l0) best CREG, allocno CREG
    a10 (r96,l0) best DREG, allocno DREG
    a7 (r95,l0) best DREG, allocno DREG
    a12 (r94,l0) best DIREG, allocno DIREG
    a1 (r92,l0) best DIREG, allocno DIREG
    a2 (r90,l0) best DIREG, allocno DIREG
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best SIREG, allocno SIREG

  a0(r104,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349
  a3(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a4(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a7(r95,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a8(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a9(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a10(r96,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a11(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a12(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:10349,10349
  a3(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a7(r95,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a8(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a9(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a10(r96,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a11(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a12(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 57(l0): point = 1
   Insn 56(l0): point = 4
   Insn 55(l0): point = 6
   Insn 51(l0): point = 9
   Insn 50(l0): point = 11
   Insn 46(l0): point = 14
   Insn 45(l0): point = 16
   Insn 43(l0): point = 19
   Insn 42(l0): point = 21
   Insn 41(l0): point = 23
   Insn 64(l0): point = 26
   Insn 78(l0): point = 29
   Insn 34(l0): point = 31
   Insn 33(l0): point = 33
   Insn 31(l0): point = 36
   Insn 30(l0): point = 38
   Insn 29(l0): point = 40
   Insn 27(l0): point = 43
   Insn 26(l0): point = 45
   Insn 25(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 18(l0): point = 59
   Insn 17(l0): point = 61
   Insn 16(l0): point = 63
   Insn 15(l0): point = 65
   Insn 14(l0): point = 67
   Insn 13(l0): point = 69
   Insn 12(l0): point = 71
   Insn 9(l0): point = 73
   Insn 6(l0): point = 75
   Insn 5(l0): point = 77
   Insn 4(l0): point = 79
   Insn 3(l0): point = 81
   Insn 2(l0): point = 83
 a0(r104): [12..26]
 a1(r92): [17..23]
 a2(r90): [34..40]
 a3(r98): [46..75]
 a4(r101): [48..61]
 a5(r89): [50..67]
 a6(r87): [54..71]
 a7(r95): [56..81]
 a8(r102): [58..59]
 a9(r97): [64..77]
 a10(r96): [66..79]
 a11(r100): [68..69]
 a12(r94): [72..83]
Compressing live ranges: from 86 to 12 - 13%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r92): [0..1]
 a2(r90): [2..3]
 a3(r98): [4..11]
 a4(r101): [4..5]
 a5(r89): [4..7]
 a6(r87): [4..9]
 a7(r95): [4..11]
 a8(r102): [4..5]
 a9(r97): [6..11]
 a10(r96): [6..11]
 a11(r100): [8..9]
 a12(r94): [10..11]
+++Allocating 96 bytes for conflict table (uncompressed size 104)
;; a0(r104,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r92,l0) conflicts: a0(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts:;; a3(r98,l0) conflicts: a4(r101,l0) a8(r102,l0) a5(r89,l0) a6(r87,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0) a11(r100,l0) a12(r94,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a4(r101,l0) conflicts: a8(r102,l0) a5(r89,l0) a6(r87,l0) a3(r98,l0) a7(r95,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a5(r89,l0) conflicts: a4(r101,l0) a8(r102,l0) a6(r87,l0) a3(r98,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a6(r87,l0) conflicts: a4(r101,l0) a8(r102,l0) a5(r89,l0) a3(r98,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0) a11(r100,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a7(r95,l0) conflicts: a4(r101,l0) a8(r102,l0) a5(r89,l0) a6(r87,l0) a3(r98,l0) a9(r97,l0) a10(r96,l0) a11(r100,l0) a12(r94,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a8(r102,l0) conflicts: a4(r101,l0) a5(r89,l0) a6(r87,l0) a3(r98,l0) a7(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r97,l0) conflicts: a5(r89,l0) a6(r87,l0) a3(r98,l0) a7(r95,l0) a10(r96,l0) a11(r100,l0) a12(r94,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a10(r96,l0) conflicts: a5(r89,l0) a6(r87,l0) a3(r98,l0) a7(r95,l0) a9(r97,l0) a11(r100,l0) a12(r94,l0)
;;     total conflict hard regs: 2 37
;;     conflict hard regs: 2 37

;; a11(r100,l0) conflicts: a6(r87,l0) a3(r98,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r94,l0) conflicts: a3(r98,l0) a7(r95,l0) a9(r97,l0) a10(r96,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

  pref0:a8(r102)<-hr2@1500
  pref1:a4(r101)<-hr4@1500
  pref2:a3(r98)<-hr5@1500
  pref3:a9(r97)<-hr2@1500
  pref4:a10(r96)<-hr1@1500
  pref5:a7(r95)<-hr1@1500
  pref6:a12(r94)<-hr5@1500
  pref7:a2(r90)<-hr5@1174
  pref8:a6(r87)<-hr4@1500
  pref9:a0(r104)<-hr5@1
  pref10:a1(r92)<-hr5@1
  pref11:a0(r104)<-hr0@1
  pref12:a7(r95)<-hr4@1000
  pref13:a3(r98)<-hr37@2000
  pref14:a4(r101)<-hr5@1000
  regions=1, blocks=12, points=12
    allocnos=13 (big 0), copies=0, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r104 1r92 2r90 3r98 4r101 5r89 6r87 7r95 8r102 9r97 10r96 11r100 12r94
    modified regnos: 87 89 90 92 94 95 96 97 98 100 101 102 104
    border:
    Pressure: GENERAL_REGS=7
 Removing pref9:hr5@1
 Removing pref2:hr5@1500
 Removing pref14:hr5@1000
 Removing pref1:hr4@1500
 Removing pref5:hr1@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@45424
          2:( 0 3-6 37-44)@36000
            3:( 0 3 6 37-44)@36000
              4:( 0 3 6 41-44)@14
      Allocno a0r104 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r98 of GENERAL_REGS(15) has 7 avail. regs  3 6 37 41-44, ^node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a4r101 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a5r89 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a6r87 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, ^node:  0 3-6 37-44 (confl regs =  1 2 7-37 45-79)
      Allocno a8r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r97 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, ^node:  0-6 37-44 (confl regs =  7-37 45-79)
      Allocno a10r96 of GENERAL_REGS(15) has 13 avail. regs  0 1 3-6 38-44, ^node:  0-6 37-44 (confl regs =  2 7-37 45-79)
      Allocno a11r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r94 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, ^node:  0 3-6 37-44 (confl regs =  1 2 4 7-37 45-79)
      Pushing a0(r104,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a12(r94,l0)(cost 0)
      Pushing a11(r100,l0)(cost 0)
      Pushing a10(r96,l0)(cost 0)
        Making a3(r98,l0) colorable
      Pushing a9(r97,l0)(cost 0)
      Pushing a8(r102,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a5(r89,l0)(cost 0)
      Pushing a3(r98,l0)(cost 7000)
      Pushing a2(r90,l0)(cost 0)
      Pushing a6(r87,l0)(cost 0)
      Pushing a4(r101,l0)(cost 0)
      Popping a4(r101,l0)  -- assign reg 3
      Popping a6(r87,l0)  -- assign reg 4
      Popping a2(r90,l0)  -- assign reg 5
      Popping a3(r98,l0)  -- assign reg 6
      Popping a5(r89,l0)  -- assign reg 0
      Popping a7(r95,l0)  -- assign reg 38
      Popping a8(r102,l0)  -- assign reg 2
      Popping a9(r97,l0)  -- assign reg 2
      Popping a10(r96,l0)  -- assign reg 1
      Popping a11(r100,l0)  -- assign reg 0
      Popping a12(r94,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 5
      Popping a0(r104,l0)  -- assign reg 3
Disposition:
    6:r87  l0     4    5:r89  l0     0    2:r90  l0     5    1:r92  l0     5
   12:r94  l0     5    7:r95  l0    38   10:r96  l0     1    9:r97  l0     2
    3:r98  l0     6   11:r100 l0     0    4:r101 l0     3    8:r102 l0     2
    0:r104 l0     3
New iteration of spill/restore move
+++Costs: overall -17352, reg -17352, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_delete(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={12d,3u} r18={6d} r19={6d} r20={1d,19u,7e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d,1u} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u,1e} r89={1d,1u} r90={1d,2u} r92={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,2u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 581{481d,92u,8e} in 38{32 regular + 6 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 94 95 96 97 98 100 101 102
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 96 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 D.31308.data_+0 S8 A128])
            (nil))))
(insn 5 4 6 2 (set (reg/v:DI 97 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [9 D.31308.size_+0 S8 A64])
            (nil))))
(insn 6 5 7 2 (set (reg/v/f:DI 98 [ errptr ])
        (reg:DI 37 r8 [ errptr ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ errptr ])
        (nil)))
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37086+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:184 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 9 13 2 (set (reg/f:DI 87 [ D.37081 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 100 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37081 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37081 ]) [3 _3->_vptr.DB+0 S8 A64])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 89 [ D.37083 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _3->_vptr.DB ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _3->_vptr.DB ])
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31308.data_+0 S8 A128])
        (reg/v/f:DI 96 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ key ])
        (nil)))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31308.size_+0 S8 A64])
        (reg/v:DI 97 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ keylen ])
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 101)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 102)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ options ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37081 ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37081 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 101)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 23 22 25 2 (call (mem:QI (reg/f:DI 89 [ D.37083 ]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:185 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37083 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 25 23 26 2 (set (reg:DI 4 si)
        (reg/f:DI 101)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ errptr ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ errptr ])
        (nil)))
(call_insn 27 26 28 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:185 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 3 (set (reg/f:DI 90 [ D.37084 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31309.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37084 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 31 30 32 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 53)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37084 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37084 ])
        (nil)))
(call_insn 34 33 78 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 78 34 79 4 (set (pc)
        (label_ref 53)) db/c.cc:186 654 {jump}
     (nil)
 -> 53)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 79 78 63)
;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
(code_label/s 63 79 65 5 144 "" [1 uses])
(note 65 63 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 65 39 5 (set (reg:DI 104)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 39 64 40 6 141 "" [0 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:DI 92 [ D.37084 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31309.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37084 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 47)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 47)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37084 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37084 ])
        (nil)))
(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 47 46 48 8 142 "" [1 uses])
(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 48 51 8 (set (reg:DI 5 di)
        (reg:DI 104)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 52 51 53)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 53 52 60 9 139 "" [2 uses])
(note 60 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 60 56 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37086+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:186 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 56 55 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) db/c.cc:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 59)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 61 56 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 57 61 58 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:186 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 58 57 59)
;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 59 58 62 11 143 "" [1 uses])
(note 62 59 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_write(leveldb_t*, const leveldb_writeoptions_t*, leveldb_writebatch_t*, char**) (leveldb_write, funcdef_no=1435, decl_uid=2177, cgraph_uid=542, symbol_order=545)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 95: local to bb 2 def dominates all uses has unique first use
Reg 96: local to bb 2 def dominates all uses has unique first use
Reg 97: local to bb 2 def dominates all uses has unique first use
Reg 98: local to bb 2 def dominates all uses has unique first use
Reg 87: local to bb 2 def dominates all uses has unique first use
Reg 101: local to bb 2 def dominates all uses has unique first use
Reg 93 uninteresting
Reg 104: def dominates all uses has unique first use
Reg 92 uninteresting
Found def insn 11 for 87 to be not moveable
Found def insn 2 for 95 to be not moveable
Found def insn 3 for 96 to be not moveable
Found def insn 4 for 97 to be not moveable
Found def insn 5 for 98 to be not moveable
Found def insn 13 for 101 to be not moveable
Reg 104 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 9 }
;; 4 succs { 9 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 100 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r104,l0) best AREG, allocno AREG
    a5 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r100,l0) best SIREG, allocno SIREG
    a3 (r98,l0) best CREG, allocno CREG
    a8 (r97,l0) best DREG, allocno DREG
    a7 (r96,l0) best DREG, allocno DREG
    a9 (r95,l0) best DIREG, allocno DIREG
    a2 (r93,l0) best DIREG, allocno DIREG
    a1 (r92,l0) best DIREG, allocno DIREG
    a6 (r87,l0) best SIREG, allocno SIREG

  a0(r104,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a2(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349
  a3(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a4(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a7(r96,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a8(r97,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a9(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r104: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r104,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a2(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:10349,10349
  a3(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a7(r96,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a8(r97,l0) costs: AREG:0,0 DREG:0,-1000 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a9(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 53(l0): point = 1
   Insn 52(l0): point = 4
   Insn 51(l0): point = 6
   Insn 47(l0): point = 9
   Insn 46(l0): point = 11
   Insn 42(l0): point = 14
   Insn 41(l0): point = 16
   Insn 39(l0): point = 19
   Insn 38(l0): point = 21
   Insn 37(l0): point = 23
   Insn 60(l0): point = 26
   Insn 74(l0): point = 29
   Insn 30(l0): point = 31
   Insn 29(l0): point = 33
   Insn 27(l0): point = 36
   Insn 26(l0): point = 38
   Insn 25(l0): point = 40
   Insn 23(l0): point = 43
   Insn 22(l0): point = 45
   Insn 21(l0): point = 47
   Insn 19(l0): point = 49
   Insn 18(l0): point = 51
   Insn 17(l0): point = 53
   Insn 16(l0): point = 55
   Insn 15(l0): point = 57
   Insn 13(l0): point = 59
   Insn 12(l0): point = 61
   Insn 11(l0): point = 63
   Insn 8(l0): point = 65
   Insn 5(l0): point = 67
   Insn 4(l0): point = 69
   Insn 3(l0): point = 71
   Insn 2(l0): point = 73
 a0(r104): [12..26]
 a1(r92): [17..23]
 a2(r93): [34..40]
 a3(r98): [46..67]
 a4(r100): [48..61]
 a5(r101): [50..59]
 a6(r87): [54..63]
 a7(r96): [56..71]
 a8(r97): [58..69]
 a9(r95): [64..73]
Compressing live ranges: from 76 to 8 - 10%
Ranges after the compression:
 a0(r104): [0..1]
 a1(r92): [0..1]
 a2(r93): [2..3]
 a3(r98): [4..7]
 a4(r100): [4..5]
 a5(r101): [4..5]
 a6(r87): [4..5]
 a7(r96): [4..7]
 a8(r97): [4..7]
 a9(r95): [6..7]
+++Allocating 72 bytes for conflict table (uncompressed size 80)
;; a0(r104,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r92,l0) conflicts: a0(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r93,l0) conflicts:;; a3(r98,l0) conflicts: a4(r100,l0) a5(r101,l0) a6(r87,l0) a7(r96,l0) a8(r97,l0) a9(r95,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a4(r100,l0) conflicts: a5(r101,l0) a6(r87,l0) a3(r98,l0) a7(r96,l0) a8(r97,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a5(r101,l0) conflicts: a4(r100,l0) a6(r87,l0) a3(r98,l0) a7(r96,l0) a8(r97,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a6(r87,l0) conflicts: a4(r100,l0) a5(r101,l0) a3(r98,l0) a7(r96,l0) a8(r97,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a7(r96,l0) conflicts: a4(r100,l0) a5(r101,l0) a6(r87,l0) a3(r98,l0) a8(r97,l0) a9(r95,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a8(r97,l0) conflicts: a4(r100,l0) a5(r101,l0) a6(r87,l0) a3(r98,l0) a7(r96,l0) a9(r95,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a9(r95,l0) conflicts: a3(r98,l0) a7(r96,l0) a8(r97,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

  pref0:a4(r100)<-hr4@1500
  pref1:a3(r98)<-hr2@1500
  pref2:a8(r97)<-hr1@1500
  pref3:a7(r96)<-hr1@1500
  pref4:a9(r95)<-hr5@1500
  pref5:a2(r93)<-hr5@1174
  pref6:a6(r87)<-hr4@1500
  pref7:a0(r104)<-hr5@1
  pref8:a1(r92)<-hr5@1
  pref9:a0(r104)<-hr0@1
  pref10:a7(r96)<-hr4@1000
  pref11:a8(r97)<-hr2@1000
  pref12:a4(r100)<-hr5@1000
  pref13:a3(r98)<-hr5@1000
  regions=1, blocks=12, points=8
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r104 1r92 2r93 3r98 4r100 5r101 6r87 7r96 8r97 9r95
    modified regnos: 87 92 93 95 96 97 98 100 101 104
    border:
    Pressure: GENERAL_REGS=7
 Removing pref7:hr5@1
 Removing pref13:hr5@1000
 Removing pref1:hr2@1500
 Removing pref12:hr5@1000
 Removing pref0:hr4@1500
 Removing pref3:hr1@1500
 Removing pref11:hr2@1000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@25424
          2:( 0 1 3-6 37-44)@20000
            3:( 0 3-6 37-44)@48000
              4:( 0 3 5 6 37-44)@22000
                5:( 0 3 6 37-44)@36000
                  6:( 0 3 6 41-44)@14
                    7:( 3 6 41-44)@14000
      Allocno a0r104 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r98 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a4r100 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a5r101 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a6r87 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a7r96 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a8r97 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 37-44, node:  0 1 3-6 37-44 (confl regs =  2 7-36 45-79)
      Allocno a9r95 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Pushing a0(r104,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a9(r95,l0)(cost 0)
        Making a3(r98,l0) colorable
      Pushing a8(r97,l0)(cost 0)
      Pushing a7(r96,l0)(cost 0)
      Pushing a5(r101,l0)(cost 0)
      Pushing a3(r98,l0)(cost 7000)
      Pushing a2(r93,l0)(cost 0)
      Pushing a6(r87,l0)(cost 0)
      Pushing a4(r100,l0)(cost 0)
      Popping a4(r100,l0)  -- assign reg 3
      Popping a6(r87,l0)  -- assign reg 4
      Popping a2(r93,l0)  -- assign reg 5
      Popping a3(r98,l0)  -- assign reg 6
      Popping a5(r101,l0)  -- assign reg 0
      Popping a7(r96,l0)  -- assign reg 37
      Popping a8(r97,l0)  -- assign reg 1
      Popping a9(r95,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 5
      Popping a0(r104,l0)  -- assign reg 3
Disposition:
    6:r87  l0     4    1:r92  l0     5    2:r93  l0     5    9:r95  l0     5
    7:r96  l0    37    8:r97  l0     1    3:r98  l0     6    4:r100 l0     3
    5:r101 l0     0    0:r104 l0     3
New iteration of spill/restore move
+++Costs: overall -11352, reg -11352, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_write(leveldb_t*, const leveldb_writeoptions_t*, leveldb_writebatch_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r92={1d,2u} r93={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,2u} r101={1d,1u} r104={1d,1u} 
;;    total ref usage 565{477d,85u,3e} in 33{27 regular + 6 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 95 96 97 98 100 101
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 95 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ batch ])
        (reg:DI 1 dx [ batch ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ batch ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 98 [ errptr ])
        (reg:DI 2 cx [ errptr ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ errptr ])
        (nil)))
(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37097+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:193 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg/f:DI 87 [ D.37091 ])
        (mem/f:DI (reg/v/f:DI 95 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ db ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:194 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 13 12 14 2 (set (reg/f:DI 101 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37091 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:194 89 {*movdi_internal}
     (nil))
(note 14 13 15 2 NOTE_INSN_DELETED)
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 97 [ batch ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ batch ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 96 [ options ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ options ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37091 ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37091 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/f:DI 100)) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(call_insn 19 18 21 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 101 [ _3->_vptr.DB ])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->4) S1 A8])
        (const_int 0 [0])) db/c.cc:194 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _3->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 21 19 22 2 (set (reg:DI 4 si)
        (reg/f:DI 100)) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ errptr ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ errptr ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:194 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg/f:DI 93 [ D.37096 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31316.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37096 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 49)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37096 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37096 ])
        (nil)))
(call_insn 30 29 74 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 74 30 75 4 (set (pc)
        (label_ref 49)) db/c.cc:195 654 {jump}
     (nil)
 -> 49)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 75 74 59)
;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
(code_label/s 59 75 61 5 158 "" [1 uses])
(note 61 59 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 61 35 5 (set (reg:DI 104)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 35 60 36 6 155 "" [0 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 92 [ D.37096 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31316.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37096 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 43)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37096 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37096 ])
        (nil)))
(call_insn 42 41 43 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 43 42 44 8 156 "" [1 uses])
(note 44 43 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 47 8 (set (reg:DI 5 di)
        (reg:DI 104)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 47 46 48 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 49)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 49 48 56 9 153 "" [2 uses])
(note 56 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 56 52 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37097+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:195 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 52 51 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) db/c.cc:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 55)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 57 52 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 53 57 54 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:195 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 54 53 55)
;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 55 54 58 11 157 "" [1 uses])
(note 58 55 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* leveldb_get(leveldb_t*, const leveldb_readoptions_t*, const char*, size_t, size_t*, char**) (leveldb_get, funcdef_no=1436, decl_uid=2184, cgraph_uid=543, symbol_order=546)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 24 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 101: local to bb 2 def dominates all uses has unique first use
Reg 102: local to bb 2 def dominates all uses has unique first use
Ignoring reg 103, has equiv memory
Ignoring reg 104, has equiv memory
Reg 105 uninteresting (no unique first use)
Reg 106: def dominates all uses has unique first use
Ignoring reg 110, has equiv memory
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 94 uninteresting
Reg 126: def dominates all uses has unique first use
Reg 92 uninteresting
Reg 91: def dominates all uses has unique first use
Found def insn 22 for 89 to be not moveable
Reg 91 not local to one basic block
Found def insn 2 for 101 to be not moveable
Found def insn 3 for 102 to be not moveable
Reg 106 not local to one basic block
Reg 126 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;; 2 succs { 18 3 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 9 }
;; 6 succs { 14 7 }
;; 7 succs { 9 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 23 13 }
;; 13 succs { 22 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 21 }
;; 20 succs { 21 }
;; 21 succs { }
;; 22 succs { }
;; 23 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 103: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 109: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 21 (nil))
Reg 113 had equivalence, but can't be eliminated
Reg 132 had equivalence, but can't be eliminated
Reg 133 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a11 (r133,l0) best SIREG, allocno SIREG
    a3 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r126,l0) best AREG, allocno AREG
    a0 (r125,l0) best AREG, allocno AREG
    a8 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r113,l0) best CREG, allocno CREG
    a20 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r106,l0) best DIREG, allocno DIREG
    a12 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r104,l0) best CREG, allocno CREG
    a19 (r103,l0) best DREG, allocno DREG
    a16 (r102,l0) best DREG, allocno DREG
    a21 (r101,l0) best DIREG, allocno DIREG
    a6 (r99,l0) best AREG, allocno AREG
    a7 (r98,l0) best DIREG, allocno DIREG
    a13 (r94,l0) best DREG, allocno DREG
    a9 (r93,l0) best DIREG, allocno DIREG
    a5 (r92,l0) best DIREG, allocno DIREG
    a1 (r91,l0) best DIREG, allocno DIREG
    a14 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r87,l0) best SIREG, allocno SIREG

  a0(r125,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a2(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37008,37008 NO_REX_SSE_REGS:37008,37008 SSE_REGS:37008,37008 MMX_REGS:52013,52013 INT_SSE_REGS:40009,40009 ALL_REGS:832208,832208 MEM:14003,14003
  a4(r126,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a6(r99,l0) costs: AREG:-1067,-1067 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16528,16528 NO_REX_SSE_REGS:16528,16528 SSE_REGS:16528,16528 MMX_REGS:21863,21863 INT_SSE_REGS:17595,17595 ALL_REGS:321836,321836 MEM:4200,4200
  a7(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26788,26788 NO_REX_SSE_REGS:26788,26788 SSE_REGS:26788,26788 MMX_REGS:36038,36038 INT_SSE_REGS:28638,28638 ALL_REGS:488696,488696 MEM:9546,9546
  a8(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a9(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-698,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:49580,49580 NO_REX_SSE_REGS:49580,49580 SSE_REGS:49580,49580 MMX_REGS:66865,66865 INT_SSE_REGS:53037,53037 ALL_REGS:909064,909064 MEM:20438,20438
  a10(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-843,-843 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14744,14744 NO_REX_SSE_REGS:14744,14744 SSE_REGS:14744,14744 MMX_REGS:18959,18959 INT_SSE_REGS:15587,15587 ALL_REGS:275344,275344 MEM:3529,3529
  a11(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-843,-843 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27744,27744 NO_REX_SSE_REGS:27744,27744 SSE_REGS:27744,27744 MMX_REGS:36959,36959 INT_SSE_REGS:29587,29587 ALL_REGS:591344,591344 MEM:9529,9529
  a12(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:4996,4996
  a13(r94,l0) costs: AREG:0,0 DREG:-67,-67 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2412,2412 NO_REX_SSE_REGS:2412,2412 SSE_REGS:2412,2412 MMX_REGS:3417,3417 INT_SSE_REGS:2613,2613 ALL_REGS:48776,48776 MEM:938,938
  a14(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a15(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a16(r102,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a17(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a18(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a19(r103,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a20(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a21(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a22(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r133: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r126: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r125,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a2(r130,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r132,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37008,37008 NO_REX_SSE_REGS:37008,37008 SSE_REGS:37008,37008 MMX_REGS:52013,52013 INT_SSE_REGS:40009,40009 ALL_REGS:832208,832208 MEM:14003,14003
  a4(r126,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a5(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a6(r99,l0) costs: AREG:0,-1067 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20524,20524 NO_REX_SSE_REGS:20524,20524 SSE_REGS:20524,20524 MMX_REGS:25859,25859 INT_SSE_REGS:21591,21591 ALL_REGS:325832,325832 MEM:7197,7197
  a7(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27787,27787 NO_REX_SSE_REGS:27787,27787 SSE_REGS:27787,27787 MMX_REGS:37037,37037 INT_SSE_REGS:29637,29637 ALL_REGS:492692,492692 MEM:9546,9546
  a8(r123,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a9(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:51407,51407 NO_REX_SSE_REGS:51407,51407 SSE_REGS:51407,51407 MMX_REGS:68692,68692 INT_SSE_REGS:54864,54864 ALL_REGS:916372,916372 MEM:20438,20438
  a10(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-843 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18744,18744 NO_REX_SSE_REGS:18744,18744 SSE_REGS:18744,18744 MMX_REGS:22959,22959 INT_SSE_REGS:19587,19587 ALL_REGS:279344,279344 MEM:6529,6529
  a11(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-843 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27744,27744 NO_REX_SSE_REGS:27744,27744 SSE_REGS:27744,27744 MMX_REGS:36959,36959 INT_SSE_REGS:29587,29587 ALL_REGS:591344,591344 MEM:9529,9529
  a12(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:7996,7996
  a13(r94,l0) costs: AREG:0,0 DREG:0,-67 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2479,2479 NO_REX_SSE_REGS:2479,2479 SSE_REGS:2479,2479 MMX_REGS:3484,3484 INT_SSE_REGS:2680,2680 ALL_REGS:49044,49044 MEM:938,938
  a14(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a15(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a16(r102,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a17(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a18(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a19(r103,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a20(r110,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a21(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a22(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000

   Insn 131(l0): point = 0
   Insn 128(l0): point = 3
   Insn 121(l0): point = 6
   Insn 120(l0): point = 8
   Insn 116(l0): point = 11
   Insn 115(l0): point = 13
   Insn 113(l0): point = 16
   Insn 112(l0): point = 18
   Insn 111(l0): point = 20
   Insn 109(l0): point = 22
   Insn 136(l0): point = 25
   Insn 170(l0): point = 28
   Insn 105(l0): point = 30
   Insn 102(l0): point = 33
   Insn 101(l0): point = 35
   Insn 99(l0): point = 38
   Insn 98(l0): point = 40
   Insn 97(l0): point = 42
   Insn 142(l0): point = 45
   Insn 168(l0): point = 48
   Insn 127(l0): point = 51
   Insn 126(l0): point = 53
   Insn 124(l0): point = 55
   Insn 89(l0): point = 58
   Insn 88(l0): point = 60
   Insn 86(l0): point = 63
   Insn 85(l0): point = 65
   Insn 84(l0): point = 67
   Insn 12(l0): point = 70
   Insn 80(l0): point = 72
   Insn 79(l0): point = 74
   Insn 78(l0): point = 76
   Insn 164(l0): point = 79
   Insn 11(l0): point = 81
   Insn 73(l0): point = 83
   Insn 71(l0): point = 86
   Insn 70(l0): point = 88
   Insn 69(l0): point = 90
   Insn 67(l0): point = 93
   Insn 66(l0): point = 95
   Insn 65(l0): point = 97
   Insn 62(l0): point = 100
   Insn 61(l0): point = 102
   Insn 59(l0): point = 104
   Insn 162(l0): point = 107
   Insn 52(l0): point = 109
   Insn 51(l0): point = 111
   Insn 50(l0): point = 113
   Insn 49(l0): point = 115
   Insn 45(l0): point = 117
   Insn 43(l0): point = 119
   Insn 42(l0): point = 121
   Insn 41(l0): point = 123
   Insn 40(l0): point = 125
   Insn 39(l0): point = 127
   Insn 37(l0): point = 130
   Insn 36(l0): point = 132
   Insn 35(l0): point = 134
   Insn 33(l0): point = 137
   Insn 32(l0): point = 139
   Insn 31(l0): point = 141
   Insn 30(l0): point = 143
   Insn 29(l0): point = 145
   Insn 28(l0): point = 147
   Insn 27(l0): point = 149
   Insn 25(l0): point = 151
   Insn 24(l0): point = 153
   Insn 23(l0): point = 155
   Insn 22(l0): point = 157
   Insn 21(l0): point = 159
   Insn 20(l0): point = 161
   Insn 19(l0): point = 163
   Insn 18(l0): point = 165
   Insn 17(l0): point = 167
   Insn 16(l0): point = 169
   Insn 15(l0): point = 171
   Insn 10(l0): point = 173
   Insn 7(l0): point = 175
   Insn 6(l0): point = 177
   Insn 5(l0): point = 179
   Insn 4(l0): point = 181
   Insn 3(l0): point = 183
   Insn 2(l0): point = 185
 a0(r125): [28..30] [9..25]
 a1(r91): [14..22]
 a2(r130): [19..20]
 a3(r132): [68..171] [21..47]
 a4(r126): [31..45]
 a5(r92): [36..42]
 a6(r99): [107..119] [79..81] [56..70]
 a7(r98): [107..117] [79..83] [61..72]
 a8(r123): [66..67]
 a9(r93): [130..134] [100..106] [86..90] [77..78]
 a10(r106): [130..175] [96..106]
 a11(r133): [130..151] [98..106]
 a12(r105): [126..177] [105..106]
 a13(r94): [116..127]
 a14(r89): [138..157]
 a15(r87): [142..161]
 a16(r102): [144..183]
 a17(r113): [146..149]
 a18(r104): [154..179]
 a19(r103): [156..181]
 a20(r110): [158..159]
 a21(r101): [162..185]
 a22(r109): [168..169]
Compressing live ranges: from 188 to 34 - 18%
Ranges after the compression:
 a0(r125): [0..5]
 a1(r91): [0..3]
 a2(r130): [0..1]
 a3(r132): [10..33] [2..7]
 a4(r126): [6..7]
 a5(r92): [6..7]
 a6(r99): [20..21] [14..15] [8..11]
 a7(r98): [20..21] [14..15] [8..11]
 a8(r123): [8..9]
 a9(r93): [24..25] [16..19] [12..13]
 a10(r106): [24..33] [18..19]
 a11(r133): [24..27] [18..19]
 a12(r105): [22..33] [18..19]
 a13(r94): [20..23]
 a14(r89): [26..29]
 a15(r87): [26..31]
 a16(r102): [26..33]
 a17(r113): [26..27]
 a18(r104): [28..33]
 a19(r103): [28..33]
 a20(r110): [30..31]
 a21(r101): [32..33]
 a22(r109): [32..33]
+++Allocating 184 bytes for conflict table (uncompressed size 184)
;; a0(r125,l0) conflicts: a2(r130,l0) a1(r91,l0) a3(r132,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r91,l0) conflicts: a2(r130,l0) a0(r125,l0) a3(r132,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r130,l0) conflicts: a1(r91,l0) a0(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r132,l0) conflicts: a1(r91,l0) a0(r125,l0) a4(r126,l0) a5(r92,l0) a6(r99,l0) a7(r98,l0) a9(r93,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0) a13(r94,l0) a17(r113,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r126,l0) conflicts: a3(r132,l0) a5(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r92,l0) conflicts: a3(r132,l0) a4(r126,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r99,l0) conflicts: a3(r132,l0) a8(r123,l0) a7(r98,l0) a13(r94,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a7(r98,l0) conflicts: a3(r132,l0) a8(r123,l0) a6(r99,l0) a13(r94,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a8(r123,l0) conflicts: a6(r99,l0) a7(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r93,l0) conflicts: a3(r132,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r106,l0) conflicts: a3(r132,l0) a9(r93,l0) a11(r133,l0) a12(r105,l0) a17(r113,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a11(r133,l0) conflicts: a3(r132,l0) a9(r93,l0) a10(r106,l0) a12(r105,l0) a17(r113,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a12(r105,l0) conflicts: a3(r132,l0) a9(r93,l0) a11(r133,l0) a10(r106,l0) a13(r94,l0) a17(r113,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a13(r94,l0) conflicts: a3(r132,l0) a6(r99,l0) a7(r98,l0) a12(r105,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a14(r89,l0) conflicts: a3(r132,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0) a17(r113,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0)
;;     total conflict hard regs: 1 2 4 5 37
;;     conflict hard regs: 1 2 4 5 37

;; a15(r87,l0) conflicts: a3(r132,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0) a17(r113,l0) a14(r89,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a20(r110,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a16(r102,l0) conflicts: a3(r132,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0) a17(r113,l0) a14(r89,l0) a15(r87,l0) a18(r104,l0) a19(r103,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 1 2 37 38
;;     conflict hard regs: 1 2 37 38

;; a17(r113,l0) conflicts: a3(r132,l0) a11(r133,l0) a10(r106,l0) a12(r105,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a18(r104,l0) conflicts: a3(r132,l0) a10(r106,l0) a12(r105,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0) a19(r103,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 37 38
;;     conflict hard regs: 37 38

;; a19(r103,l0) conflicts: a3(r132,l0) a10(r106,l0) a12(r105,l0) a14(r89,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a20(r110,l0) a21(r101,l0) a22(r109,l0)
;;     total conflict hard regs: 2 37 38
;;     conflict hard regs: 2 37 38

;; a20(r110,l0) conflicts: a3(r132,l0) a10(r106,l0) a12(r105,l0) a15(r87,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r101,l0) conflicts: a3(r132,l0) a10(r106,l0) a12(r105,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a22(r109,l0)
;;     total conflict hard regs: 1 2 4 37 38
;;     conflict hard regs: 1 2 4 37 38

;; a22(r109,l0) conflicts: a3(r132,l0) a10(r106,l0) a12(r105,l0) a16(r102,l0) a18(r104,l0) a19(r103,l0) a21(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r130)<->a3(r132)@1:shuffle
  cp1:a0(r125)<->a4(r126)@1:move
  cp2:a3(r132)<->a8(r123)@125:shuffle
  pref0:a11(r133)<-hr4@1264
  pref1:a17(r113)<-hr2@1500
  pref2:a10(r106)<-hr5@1264
  pref3:a18(r104)<-hr2@1500
  pref4:a19(r103)<-hr1@1500
  pref5:a16(r102)<-hr1@1500
  pref6:a21(r101)<-hr5@1500
  pref7:a6(r99)<-hr0@1600
  pref8:a7(r98)<-hr5@1174
  pref9:a13(r94)<-hr1@100
  pref10:a9(r93)<-hr5@1047
  pref11:a15(r87)<-hr4@1500
  pref12:a0(r125)<-hr5@1
  pref13:a1(r91)<-hr5@1
  pref14:a0(r125)<-hr0@1
  pref15:a5(r92)<-hr5@1
  pref16:a4(r126)<-hr0@1
  pref17:a13(r94)<-hr5@67
  pref18:a7(r98)<-hr4@67
  pref19:a6(r99)<-hr5@67
  pref20:a16(r102)<-hr4@1000
  pref21:a12(r105)<-hr37@2000
  pref22:a10(r106)<-hr38@2000
  pref23:a3(r132)<-hr37@1000
  pref24:a11(r133)<-hr5@1000
  regions=1, blocks=24, points=34
    allocnos=23 (big 0), copies=3, conflicts=0, ranges=33

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r125 1r91 2r130 3r132 4r126 5r92 6r99 7r98 8r123 9r93 10r106 11r133 12r105 13r94 14r89 15r87 16r102 17r113 18r104 19r103 20r110 21r101 22r109
    modified regnos: 87 89 91 92 93 94 98 99 101 102 103 104 105 106 109 110 113 123 125 126 130 132 133
    border:
    Pressure: GENERAL_REGS=10
 Removing pref12:hr5@1
 Removing pref23:hr37@1000
 Removing pref19:hr5@67
 Removing pref7:hr0@1600
 Removing pref18:hr4@67
 Removing pref8:hr5@1174
 Removing pref22:hr38@2000
 Removing pref2:hr5@1264
 Removing pref24:hr5@1000
 Removing pref0:hr4@1264
 Removing pref21:hr37@2000
 Removing pref17:hr5@67
 Removing pref5:hr1@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@73130
          2:( 0 1 3-6 38-44)@10000
            3:( 0 3-6 38-44)@36000
              4:( 3 6 41-44)@92121
      Allocno a0r125 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r130 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r132 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r126 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0 3-6 38-44 (confl regs =  5 7-36 45-79)
      Allocno a5r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r99 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, ^node:  0-6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a7r98 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, ^node:  0-6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a8r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r106 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a11r133 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a12r105 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a13r94 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a14r89 of GENERAL_REGS(15) has 10 avail. regs  0 3 6 38-44, ^node:  0 3-6 38-44 (confl regs =  1 2 4 5 7-37 45-79)
      Allocno a15r87 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, node:  0 3-6 38-44 (confl regs =  1 2 7-37 45-79)
      Allocno a16r102 of GENERAL_REGS(15) has 11 avail. regs  0 3-6 39-44, ^node:  0 3-6 38-44 (confl regs =  1 2 7-38 45-79)
      Allocno a17r113 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, ^node:  0-6 37-44 (confl regs =  7-37 45-79)
      Allocno a18r104 of GENERAL_REGS(15) has 13 avail. regs  0-6 39-44, ^node:  0-6 37-44 (confl regs =  7-38 45-79)
      Allocno a19r103 of GENERAL_REGS(15) has 12 avail. regs  0 1 3-6 39-44, ^node:  0 1 3-6 38-44 (confl regs =  2 7-38 45-79)
      Allocno a20r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a21r101 of GENERAL_REGS(15) has 10 avail. regs  0 3 5 6 39-44, ^node:  0 3-6 38-44 (confl regs =  1 2 4 7-38 45-79)
      Allocno a22r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a2r130-a3r132 (freq=1):
        Result (freq=4003): a2r130(2) a3r132(4001)
      Forming thread by copy 1:a0r125-a4r126 (freq=1):
        Result (freq=5): a0r125(3) a4r126(2)
      Pushing a5(r92,l0)(cost 0)
      Pushing a1(r91,l0)(cost 0)
      Pushing a4(r126,l0)(cost 0)
      Pushing a0(r125,l0)(cost 0)
      Pushing a13(r94,l0)(cost 0)
      Pushing a22(r109,l0)(cost 0)
      Pushing a21(r101,l0)(cost 0)
        Making a16(r102,l0) colorable
      Pushing a20(r110,l0)(cost 0)
      Pushing a19(r103,l0)(cost 0)
      Pushing a18(r104,l0)(cost 0)
      Pushing a17(r113,l0)(cost 0)
      Pushing a16(r102,l0)(cost 10000)
      Pushing a14(r89,l0)(cost 0)
        Making a11(r133,l0) colorable
        Making a10(r106,l0) colorable
        Making a12(r105,l0) colorable
      Pushing a10(r106,l0)(cost 10529)
      Pushing a12(r105,l0)(cost 11996)
      Forming thread by copy 2:a3r132-a8r123 (freq=125):
        Result (freq=6003): a2r130(2) a8r123(2000) a3r132(4001)
        Making a3(r132,l0) colorable
      Pushing a8(r123,l0)(cost 0)
      Pushing a6(r99,l0)(cost 0)
      Pushing a11(r133,l0)(cost 9529)
      Pushing a7(r98,l0)(cost 0)
      Pushing a15(r87,l0)(cost 0)
      Pushing a2(r130,l0)(cost 0)
      Pushing a9(r93,l0)(cost 0)
      Pushing a3(r132,l0)(cost 14003)
      Popping a3(r132,l0)  -- assign reg 3
      Popping a9(r93,l0)  -- assign reg 5
      Popping a2(r130,l0)  -- assign reg 3
      Popping a15(r87,l0)  -- assign reg 4
      Popping a7(r98,l0)  -- assign reg 6
      Popping a11(r133,l0)  -- assign reg 6
      Popping a6(r99,l0)  -- assign reg 41
      Popping a8(r123,l0)  -- assign reg 3
      Popping a12(r105,l0)  -- assign reg 41
      Popping a10(r106,l0)  -- assign reg 42
      Popping a14(r89,l0)  -- assign reg 0
      Popping a16(r102,l0)  -- assign reg 39
      Popping a17(r113,l0)  -- assign reg 2
      Popping a18(r104,l0)  -- assign reg 2
      Popping a19(r103,l0)  -- assign reg 1
      Popping a20(r110,l0)  -- assign reg 0
      Popping a21(r101,l0)  -- assign reg 5
      Popping a22(r109,l0)  -- assign reg 0
      Popping a13(r94,l0)  -- assign reg 42
      Popping a0(r125,l0)  -- assign reg 6
      Popping a4(r126,l0)  -- assign reg 6
      Popping a1(r91,l0)  -- assign reg 5
      Popping a5(r92,l0)  -- assign reg 5
Disposition:
   15:r87  l0     4   14:r89  l0     0    1:r91  l0     5    5:r92  l0     5
    9:r93  l0     5   13:r94  l0    42    7:r98  l0     6    6:r99  l0    41
   21:r101 l0     5   16:r102 l0    39   19:r103 l0     1   18:r104 l0     2
   12:r105 l0    41   10:r106 l0    42   22:r109 l0     0   20:r110 l0     0
   17:r113 l0     2    8:r123 l0     3    0:r125 l0     6    4:r126 l0     6
    2:r130 l0     3    3:r132 l0     3   11:r133 l0     6
New iteration of spill/restore move
+++Costs: overall -17100, reg -17100, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


char* leveldb_get(leveldb_t*, const leveldb_readoptions_t*, const char*, size_t, size_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={14d,5u} r1={15d,3u} r2={12d,2u} r4={14d,4u} r5={20d,10u} r6={1d,23u} r7={1d,33u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,22u} r17={24d,7u} r18={10d} r19={10d} r20={1d,41u,10e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={12d,2u} r38={11d,1u} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,2u,1e} r89={1d,1u} r91={1d,2u} r92={1d,2u} r93={2d,4u} r94={1d,3u} r98={3d,3u} r99={3d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r109={1d,1u} r110={1d,1u} r113={1d,1u} r123={1d,1u} r125={2d,1u} r126={1d,1u} r130={1d,1u} r132={1d,4u} r133={1d,2u} 
;;    total ref usage 1006{803d,192u,11e} in 83{73 regular + 10 call} insns.
(note 1 0 13 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 101 102 103 104 105 106 109 110 113 132 133
(note 13 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 101 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 102 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 103 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [3 D.31380.data_+0 S8 A128])
            (nil))))
(insn 5 4 6 2 (set (reg/v:DI 104 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [9 D.31380.size_+0 S8 A64])
            (nil))))
(insn 6 5 7 2 (set (reg/v/f:DI 105 [ vallen ])
        (reg:DI 37 r8 [ vallen ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ vallen ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 106 [ errptr ])
        (reg:DI 38 r9 [ errptr ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ errptr ])
        (nil)))
(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 8 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37118+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:202 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 10 16 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
            (nil))))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
        (reg/f:DI 109)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&tmp + 8B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&tmp + 16]+0 S1 A128])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 87 [ D.37109 ])
        (mem/f:DI (reg/v/f:DI 101 [ db ]) [3 db_6(D)->rep+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ db ])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 110 [ _7->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37109 ]) [3 _7->_vptr.DB+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37109 ]) [3 _7->_vptr.DB+0 S8 A64])
        (nil)))
(insn 22 21 23 2 (set (reg/f:DI 89 [ D.37111 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _7->_vptr.DB ])
                (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_8 + 40B]+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ _7->_vptr.DB ])
        (nil)))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31380.data_+0 S8 A128])
        (reg/v/f:DI 103 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 103 [ key ])
        (nil)))
(insn 24 23 25 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 D.31380.size_+0 S8 A64])
        (reg/v:DI 104 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 104 [ keylen ])
        (nil)))
(insn 25 24 27 2 (parallel [
            (set (reg/f:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:205 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 27 25 28 2 (parallel [
            (set (reg/f:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:205 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 28 27 29 2 (set (reg:DI 37 r8)
        (reg/f:DI 132)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 2 cx)
        (reg/f:DI 113)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 30 29 31 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 102 [ options ])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 102 [ options ])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37109 ])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37109 ])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/f:DI 133)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (reg/f:DI 89 [ D.37111 ]) [0 *OBJ_TYPE_REF(_9;(struct DB)_7->5) S1 A8])
        (const_int 0 [0])) db/c.cc:205 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37111 ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (nil)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       18 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 93 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:52 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37114 ])
            (const_int 0 [0]))) db/c.cc:206 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) db/c.cc:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 57)
;;  succ:       4 [6.7%]  (FALLTHRU)
;;              5 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133

;; basic block 4, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [6.7%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 98 99
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:DI 94 [ D.37115 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(long unsigned int *)&tmp + 8B]+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (mem:DI (reg/v/f:DI 105 [ vallen ]) [9 *vallen_16(D)+0 S8 A64])
        (reg:DI 94 [ D.37115 ])) db/c.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ vallen ])
        (nil)))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (reg:DI 94 [ D.37115 ])) db/c.cc:147 89 {*movdi_internal}
     (nil))
(call_insn 42 41 43 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb538d21798 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) db/c.cc:147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb538d21798 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 45 4 (set (reg/v/f:DI 99 [ result ])
        (reg:DI 0 ax)) db/c.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 114)
            (nil))))
(insn 45 43 49 4 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 49 45 50 4 (set (reg:DI 1 dx)
        (reg:DI 94 [ D.37115 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.37115 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg/f:DI 98 [ D.37113 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ result ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (nil))
(call_insn 52 51 162 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:53 669 {*call_value}
     (expr_list:REG_RETURNED (reg/v/f:DI 99 [ result ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                            (expr_list:REG_EH_REGION (const_int 0 [0])
                                (nil))))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 162 52 163 4 (set (pc)
        (label_ref 81)) 654 {jump}
     (nil)
 -> 81)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

(barrier 163 162 57)
;; basic block 5, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [93.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105
;; lr  def 	 17 [flags]
(code_label 57 163 58 5 168 "" [1 uses])
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (mem:DI (reg/v/f:DI 105 [ vallen ]) [9 *vallen_16(D)+0 S8 A64])
        (const_int 0 [0])) db/c.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ vallen ])
        (nil)))
(note 60 59 61 5 NOTE_INSN_DELETED)
(insn 61 60 62 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/f:DI 93 [ D.37114 ])
                    (const_int 4 [0x4])) [0 MEM[(const char *)_5 + 4B]+0 S1 A8])
            (const_int 1 [0x1]))) db/c.cc:211 5 {*cmpqi_1}
     (nil))
(jump_insn 62 61 63 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 76)
            (pc))) db/c.cc:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1126 (nil)))
 -> 76)
;;  succ:       6 [88.7%]  (FALLTHRU)
;;              9 [11.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 106 132 133

;; basic block 6, loop depth 0, count 0, freq 8435, maybe hot
;; Invalid sum of incoming frequencies 8278, should be 8435
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [88.7%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 63 62 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 6 (set (reg:DI 4 si)
        (reg/f:DI 133)) db/c.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 66 65 67 6 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ errptr ])) db/c.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ errptr ])
        (nil)))
(call_insn 67 66 68 6 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:212 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       14 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132

;; basic block 7, loop depth 0, count 0, freq 8278, maybe hot
;; Invalid sum of incoming frequencies 8435, should be 8278
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg/f:DI 93 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37114 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7167 (nil)))
 -> 76)
;;  succ:       9 [71.7%] 
;;              8 [28.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132

;; basic block 8, loop depth 0, count 0, freq 2345, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [28.3%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 98 99
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 11 8 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 11 73 164 8 (set (reg/v/f:DI 99 [ result ])
        (const_int 0 [0])) db/c.cc:203 89 {*movdi_internal}
     (nil))
(jump_insn 164 11 165 8 (set (pc)
        (label_ref 81)) 654 {jump}
     (nil)
 -> 81)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

(barrier 165 164 76)
;; basic block 9, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [71.7%] 
;;              5 [11.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(6){ }u98(7){ }u99(16){ }u100(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99
(code_label 76 165 77 9 170 "" [2 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37114 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37114 ])
        (nil)))
(call_insn 79 78 80 9 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 12 9 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 12 80 81 9 (set (reg/v/f:DI 99 [ result ])
        (const_int 0 [0])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

;; basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;;              9 [100.0%]  (FALLTHRU)
;;              8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 132
;; lr  def 	 17 [flags] 123
(code_label 81 12 82 10 169 "" [2 uses])
(note 82 81 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 10 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.37113 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 90)
;;  succ:       11 [78.3%]  (FALLTHRU)
;;              12 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99

;; basic block 11, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [78.3%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.37113 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.37113 ])
        (nil)))
(call_insn 89 88 90 11 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99

;; basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [21.6%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 0 [ax] 17 [flags]
(code_label 90 89 91 12 171 "" [1 uses])
(note 91 90 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 124 91 126 12 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 99 [ result ])) db/c.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ result ])
        (nil)))
(insn 126 124 127 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37118+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:216 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 127 126 166 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) db/c.cc:216 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 130)
;;  succ:       23 [100.0%] 
;;              13 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 4
;;  prev block 12, next block 14, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       12 [0.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 166 127 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 168 166 169 13 (set (pc)
        (label_ref 167)) 654 {jump}
     (nil)
 -> 167)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 169 168 141)
;; basic block 14, loop depth 0, count 0, freq 0
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 14 artificial_defs: { d6(0){ }d20(1){ }}
;; bb 14 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 126
(code_label/s 141 169 144 14 178 "" [1 uses])
(note 144 141 142 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 142 144 95 14 (set (reg:DI 126)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132

;; basic block 15, loop depth 0, count 0, freq 0
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
(code_label 95 142 96 15 172 "" [0 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:DI 92 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 98 97 99 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37114 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 99 98 100 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 103)
;;  succ:       16 [69.8%]  (FALLTHRU)
;;              17 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132

;; basic block 16, loop depth 0, count 0, freq 0
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [69.8%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37114 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37114 ])
        (nil)))
(call_insn 102 101 103 16 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132

;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [30.2%] 
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(6){ }u147(7){ }u148(16){ }u149(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 125
(code_label 103 102 104 17 173 "" [1 uses])
(note 104 103 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 170 17 (set (reg:DI 125)
        (reg:DI 126)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
(jump_insn 170 105 171 17 (set (pc)
        (label_ref 107)) 654 {jump}
     (nil)
 -> 107)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132

(barrier 171 170 135)
;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 18 artificial_defs: { d4(0){ }d18(1){ }}
;; bb 18 artificial_uses: { u151(6){ }u152(7){ }u153(16){ }u154(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
(code_label/s 135 171 140 18 177 "" [1 uses])
(note 140 135 136 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 136 140 107 18 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags] 91 130
(code_label 107 136 108 19 174 "" [1 uses])
(note 108 107 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 111 19 (set (reg/f:DI 91 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 111 109 112 19 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37113 ])
            (reg/f:DI 130))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(jump_insn 113 112 114 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       20 [69.8%]  (FALLTHRU)
;;              21 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [69.8%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u165(6){ }u166(7){ }u167(16){ }u168(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 114 113 115 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 20 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37113 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37113 ])
        (nil)))
(call_insn 116 115 117 20 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125

;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [30.2%] 
;;              20 [100.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 117 116 118 21 175 "" [1 uses])
(note 118 117 120 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 120 118 121 21 (set (reg:DI 5 di)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 121 120 122 21 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 122 121 167)
;; basic block 22, loop depth 0, count 0, freq 4
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u179(6){ }u180(7){ }u181(16){ }u182(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 167 122 133 22 185 "" [1 uses])
(note 133 167 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 133 129 22 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:216 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 129 128 130)
;; basic block 23, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 22, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u184(6){ }u185(7){ }u186(16){ }u187(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 130 129 134 23 176 "" [1 uses])
(note 134 130 131 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 131 134 0 23 (use (reg/i:DI 0 ax)) db/c.cc:216 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_iterator_t* leveldb_create_iterator(leveldb_t*, const leveldb_readoptions_t*) (leveldb_create_iterator, funcdef_no=1437, decl_uid=2187, cgraph_uid=544, symbol_order=547)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 95: local to bb 2 def dominates all uses has unique first use
Reg 88 uninteresting
Reg 97: local to bb 2 def dominates all uses has unique first use
Ignoring reg 92, has equiv memory
Found def insn 2 for 94 to be not moveable
Found def insn 3 for 95 to be not moveable
Found def insn 12 for 97 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 92: (insn_list:REG_DEP_TRUE 18 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r96,l0) best AREG, allocno AREG
    a4 (r95,l0) best SIREG, allocno SIREG
    a5 (r94,l0) best DIREG, allocno DIREG
    a1 (r92,l0) best AREG, allocno AREG
    a3 (r88,l0) best DIREG, allocno DIREG

  a0(r96,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r92,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a4(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r96,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r92,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a4(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 24(l0): point = 0
   Insn 23(l0): point = 2
   Insn 18(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r96): [3..18]
 a1(r92): [5..6]
 a2(r97): [9..14]
 a3(r88): [11..16]
 a4(r95): [13..24]
 a5(r94): [17..26]
Compressing live ranges: from 29 to 6 - 20%
Ranges after the compression:
 a0(r96): [0..5]
 a1(r92): [0..1]
 a2(r97): [2..3]
 a3(r88): [2..3]
 a4(r95): [2..5]
 a5(r94): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r96,l0) conflicts: a1(r92,l0) a2(r97,l0) a3(r88,l0) a4(r95,l0) a5(r94,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a1(r92,l0) conflicts: a0(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r97,l0) conflicts: a0(r96,l0) a3(r88,l0) a4(r95,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a3(r88,l0) conflicts: a0(r96,l0) a2(r97,l0) a4(r95,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a4(r95,l0) conflicts: a0(r96,l0) a2(r97,l0) a3(r88,l0) a5(r94,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a5(r94,l0) conflicts: a0(r96,l0) a4(r95,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

  pref0:a0(r96)<-hr0@3000
  pref1:a4(r95)<-hr4@3000
  pref2:a5(r94)<-hr5@1500
  pref3:a1(r92)<-hr0@1500
  pref4:a3(r88)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r96 1r92 2r97 3r88 4r95 5r94
    modified regnos: 88 92 94 95 96 97
    border:
    Pressure: GENERAL_REGS=4
 Removing pref0:hr0@3000
 Removing pref2:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@28000
            3:( 0-3 6 37-44)@16000
              4:( 1-3 6 37-44)@38000
      Allocno a0r96 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r97 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a3r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a4r95 of GENERAL_REGS(15) has 7 avail. regs  3 4 6 41-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Pushing a5(r94,l0)(cost 0)
      Pushing a4(r95,l0)(cost 0)
      Pushing a2(r97,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a3(r88,l0)(cost 0)
      Pushing a0(r96,l0)(cost 0)
      Popping a0(r96,l0)  -- assign reg 3
      Popping a3(r88,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 0
      Popping a2(r97,l0)  -- assign reg 0
      Popping a4(r95,l0)  -- assign reg 6
      Popping a5(r94,l0)  -- assign reg 41
Disposition:
    3:r88  l0     5    1:r92  l0     0    5:r94  l0    41    4:r95  l0     6
    0:r96  l0     3    2:r97  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_iterator_t* leveldb_create_iterator(leveldb_t*, const leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r92={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,2u,1e} r97={1d,1u} 
;;    total ref usage 200{173d,26u,1e} in 14{12 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 92 94 95 96 97
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:221 89 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:221 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 11 2 (set (reg/f:DI 96)
        (reg:DI 0 ax)) db/c.cc:221 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))
(insn 11 9 12 2 (set (reg/f:DI 88 [ D.37127 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_4(D)->rep+0 S8 A64])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 97 [ _5->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37127 ]) [3 _5->_vptr.DB+0 S8 A64])) db/c.cc:222 89 {*movdi_internal}
     (nil))
(note 13 12 14 2 NOTE_INSN_DELETED)
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ options ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37127 ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37127 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 97 [ _5->_vptr.DB ])
                        (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_7;(struct DB)_5->6) S1 A8])
            (const_int 0 [0]))) db/c.cc:222 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _5->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 92 [ D.37131 ])
        (reg:DI 0 ax)) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 96) [3 result_3->rep+0 S8 A64])
            (nil))))
(insn 18 17 23 2 (set (mem/f:DI (reg/f:DI 96) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 92 [ D.37131 ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37131 ])
        (nil)))
(insn 23 18 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 96)) db/c.cc:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) db/c.cc:224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const leveldb_snapshot_t* leveldb_create_snapshot(leveldb_t*) (leveldb_create_snapshot, funcdef_no=1438, decl_uid=2189, cgraph_uid=545, symbol_order=548)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93: local to bb 2 def dominates all uses has unique first use
Reg 88 uninteresting
Reg 95: local to bb 2 def dominates all uses has unique first use
Ignoring reg 91, has equiv memory
Found def insn 2 for 93 to be not moveable
Found def insn 11 for 95 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 16 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno AREG
    a4 (r93,l0) best DIREG, allocno DIREG
    a1 (r91,l0) best AREG, allocno AREG
    a3 (r88,l0) best DIREG, allocno DIREG

  a0(r94,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r91,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r91,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 22(l0): point = 0
   Insn 21(l0): point = 2
   Insn 16(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 6(l0): point = 20
   Insn 2(l0): point = 22
 a0(r94): [3..16]
 a1(r91): [5..6]
 a2(r95): [9..12]
 a3(r88): [11..14]
 a4(r93): [15..22]
Compressing live ranges: from 25 to 6 - 24%
Ranges after the compression:
 a0(r94): [0..5]
 a1(r91): [0..1]
 a2(r95): [2..3]
 a3(r88): [2..3]
 a4(r93): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r94,l0) conflicts: a1(r91,l0) a2(r95,l0) a3(r88,l0) a4(r93,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a1(r91,l0) conflicts: a0(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r95,l0) conflicts: a0(r94,l0) a3(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a3(r88,l0) conflicts: a0(r94,l0) a2(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r93,l0) conflicts: a0(r94,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

  pref0:a0(r94)<-hr0@3000
  pref1:a4(r93)<-hr5@1500
  pref2:a1(r91)<-hr0@1500
  pref3:a3(r88)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r94 1r91 2r95 3r88 4r93
    modified regnos: 88 91 93 94 95
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr0@3000
 Removing pref1:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
          2:( 0-4 6 37-44)@16000
            3:( 1-4 6 37-44)@38000
      Allocno a0r94 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r95 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a3r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r93 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Pushing a4(r93,l0)(cost 0)
      Pushing a2(r95,l0)(cost 0)
      Pushing a1(r91,l0)(cost 0)
      Pushing a3(r88,l0)(cost 0)
      Pushing a0(r94,l0)(cost 0)
      Popping a0(r94,l0)  -- assign reg 3
      Popping a3(r88,l0)  -- assign reg 5
      Popping a1(r91,l0)  -- assign reg 0
      Popping a2(r95,l0)  -- assign reg 0
      Popping a4(r93,l0)  -- assign reg 6
Disposition:
    3:r88  l0     5    1:r91  l0     0    4:r93  l0     6    0:r94  l0     3
    2:r95  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const leveldb_snapshot_t* leveldb_create_snapshot(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r91={1d,1u} r93={1d,1u} r94={1d,2u,1e} r95={1d,1u} 
;;    total ref usage 195{171d,23u,1e} in 12{10 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 91 93 94 95
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:228 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:228 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) db/c.cc:228 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(insn 10 8 11 2 (set (reg/f:DI 88 [ D.37136 ])
        (mem/f:DI (reg/v/f:DI 93 [ db ]) [3 db_4(D)->rep+0 S8 A64])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ db ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 95 [ _5->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37136 ]) [3 _5->_vptr.DB+0 S8 A64])) db/c.cc:229 89 {*movdi_internal}
     (nil))
(note 12 11 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37136 ])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37136 ])
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 95 [ _5->_vptr.DB ])
                        (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_7;(struct DB)_5->7) S1 A8])
            (const_int 0 [0]))) db/c.cc:229 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _5->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 91 [ D.37139 ])
        (reg:DI 0 ax)) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 94) [3 result_3->rep+0 S8 A64])
            (nil))))
(insn 16 15 21 2 (set (mem/f:DI (reg/f:DI 94) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 91 [ D.37139 ])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37139 ])
        (nil)))
(insn 21 16 22 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 94)) db/c.cc:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 22 21 0 2 (use (reg/i:DI 0 ax)) db/c.cc:231 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_release_snapshot(leveldb_t*, const leveldb_snapshot_t*) (leveldb_release_snapshot, funcdef_no=1439, decl_uid=2192, cgraph_uid=546, symbol_order=549)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91: local to bb 2 def dominates all uses has unique first use
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 87 uninteresting
Reg 93: local to bb 2 def dominates all uses has unique first use
Found def insn 2 for 91 to be not moveable
Found def insn 3 for 92 to be not moveable
Found def insn 8 for 93 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best SIREG, allocno SIREG
    a3 (r91,l0) best DIREG, allocno DIREG
    a2 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a3(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a3(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r92): [3..14]
 a1(r93): [5..10]
 a2(r87): [7..12]
 a3(r91): [13..16]
Compressing live ranges: from 19 to 4 - 21%
Ranges after the compression:
 a0(r92): [0..3]
 a1(r93): [0..1]
 a2(r87): [0..1]
 a3(r91): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r92,l0) conflicts: a1(r93,l0) a2(r87,l0) a3(r91,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a1(r93,l0) conflicts: a2(r87,l0) a0(r92,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a2(r87,l0) conflicts: a1(r93,l0) a0(r92,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a3(r91,l0) conflicts: a0(r92,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  pref0:a0(r92)<-hr4@1500
  pref1:a3(r91)<-hr5@1500
  pref2:a2(r87)<-hr5@1500
  pref3:a0(r92)<-hr5@1000
  regions=1, blocks=3, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r92 1r93 2r87 3r91
    modified regnos: 87 91 92 93
    border:
    Pressure: GENERAL_REGS=4
 Removing pref3:hr5@1000
 Removing pref0:hr4@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-3 5 6 37-44)@50000
          2:( 0-3 6 37-44)@38000
      Allocno a0r92 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a3r91 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Pushing a3(r91,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Popping a0(r92,l0)  -- assign reg 3
      Popping a2(r87,l0)  -- assign reg 5
      Popping a1(r93,l0)  -- assign reg 0
      Popping a3(r91,l0)  -- assign reg 5
Disposition:
    2:r87  l0     5    3:r91  l0     5    0:r92  l0     3    1:r93  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_release_snapshot(leveldb_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r91={1d,1u} r92={1d,2u} r93={1d,1u} 
;;    total ref usage 190{170d,20u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 91 92 93
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:235 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ snapshot ])
        (reg:DI 4 si [ snapshot ])) db/c.cc:235 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ snapshot ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37142 ])
        (mem/f:DI (reg/v/f:DI 91 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ db ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 93 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37142 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (nil))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 92 [ snapshot ]) [3 snapshot_6(D)->rep+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37142 ])) db/c.cc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37142 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 93 [ _3->_vptr.DB ])
                    (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->8) S1 A8])
        (const_int 0 [0])) db/c.cc:236 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _3->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ snapshot ])) db/c.cc:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ snapshot ])
        (nil)))
(call_insn/j 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:237 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 15 14 0)

;; Function char* leveldb_property_value(leveldb_t*, const char*) (leveldb_property_value, funcdef_no=1440, decl_uid=2195, cgraph_uid=547, symbol_order=550)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 17 count 15 (    1)
rescanning insn with uid = 37.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 17 count 15 (    1)
Reg 98: local to bb 2 def dominates all uses has unique first use
Reg 99: local to bb 2 def dominates all uses has unique first use
Ignoring reg 103, has equiv memory
Reg 91: local to bb 2 def dominates all uses has unique first use
Ignoring reg 105, has equiv memory
Reg 92: local to bb 3 def dominates all uses has unique first use
Reg 95: def dominates all uses has unique first use
Reg 116: def dominates all uses has unique first use
Reg 94: def dominates all uses has unique first use
Found def insn 17 for 91 to be not moveable
Found def insn 31 for 92 to be not moveable
Reg 94 not local to one basic block
Reg 95 not local to one basic block
Found def insn 2 for 98 to be not moveable
Found def insn 3 for 99 to be not moveable
Reg 116 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 9 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 14 8 }
;; 8 succs { 13 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { }
;; 13 succs { }
;; 14 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 102: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 103: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 105: (insn_list:REG_DEP_TRUE 24 (nil))
Reg 108 had equivalence, but can't be eliminated
Reg 118 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a3 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r116,l0) best AREG, allocno AREG
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r108,l0) best SIREG, allocno SIREG
    a11 (r105,l0) best AREG, allocno AREG
    a13 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r99,l0) best SIREG, allocno SIREG
    a14 (r98,l0) best DIREG, allocno DIREG
    a5 (r95,l0) best DIREG, allocno DIREG
    a1 (r94,l0) best DIREG, allocno DIREG
    a7 (r92,l0) best AREG, allocno AREG
    a8 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r89,l0) best DIREG, allocno DIREG
    a4 (r87,l0) best AREG, allocno AREG

  a0(r116,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a2(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r118,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37008,37008 NO_REX_SSE_REGS:37008,37008 SSE_REGS:37008,37008 MMX_REGS:52013,52013 INT_SSE_REGS:40009,40009 ALL_REGS:832208,832208 MEM:14003,14003
  a4(r87,l0) costs: AREG:-1786,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22288,22288 NO_REX_SSE_REGS:22288,22288 SSE_REGS:22288,22288 MMX_REGS:27288,27288 INT_SSE_REGS:23288,23288 ALL_REGS:386600,386600 MEM:4786,4786
  a5(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:9349,9349
  a6(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a7(r92,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000
  a8(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a9(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a10(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a11(r105,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a12(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a13(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a14(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a15(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r116,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a2(r115,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r118,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37008,37008 NO_REX_SSE_REGS:37008,37008 SSE_REGS:37008,37008 MMX_REGS:52013,52013 INT_SSE_REGS:40009,40009 ALL_REGS:832208,832208 MEM:14003,14003
  a4(r87,l0) costs: AREG:0,-1786 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29432,29432 NO_REX_SSE_REGS:29432,29432 SSE_REGS:29432,29432 MMX_REGS:34432,34432 INT_SSE_REGS:30432,30432 ALL_REGS:393744,393744 MEM:10144,10144
  a5(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:9349,9349
  a6(r112,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a7(r92,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000
  a8(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a9(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a10(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a11(r105,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a12(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a13(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a14(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a15(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000

   Insn 80(l0): point = 0
   Insn 77(l0): point = 3
   Insn 70(l0): point = 6
   Insn 69(l0): point = 8
   Insn 65(l0): point = 11
   Insn 64(l0): point = 13
   Insn 62(l0): point = 16
   Insn 61(l0): point = 18
   Insn 60(l0): point = 20
   Insn 58(l0): point = 22
   Insn 90(l0): point = 25
   Insn 99(l0): point = 28
   Insn 76(l0): point = 31
   Insn 75(l0): point = 33
   Insn 73(l0): point = 35
   Insn 50(l0): point = 38
   Insn 49(l0): point = 40
   Insn 47(l0): point = 43
   Insn 46(l0): point = 45
   Insn 45(l0): point = 47
   Insn 43(l0): point = 49
   Insn 39(l0): point = 52
   Insn 38(l0): point = 54
   Insn 37(l0): point = 56
   Insn 34(l0): point = 59
   Insn 33(l0): point = 61
   Insn 7(l0): point = 63
   Insn 31(l0): point = 65
   Insn 30(l0): point = 68
   Insn 29(l0): point = 70
   Insn 28(l0): point = 72
   Insn 27(l0): point = 74
   Insn 26(l0): point = 76
   Insn 24(l0): point = 78
   Insn 21(l0): point = 80
   Insn 20(l0): point = 82
   Insn 19(l0): point = 84
   Insn 18(l0): point = 86
   Insn 17(l0): point = 88
   Insn 16(l0): point = 90
   Insn 15(l0): point = 92
   Insn 14(l0): point = 94
   Insn 13(l0): point = 96
   Insn 12(l0): point = 98
   Insn 11(l0): point = 100
   Insn 10(l0): point = 102
   Insn 6(l0): point = 104
   Insn 3(l0): point = 106
   Insn 2(l0): point = 108
 a0(r116): [9..25]
 a1(r94): [14..22]
 a2(r115): [19..20]
 a3(r118): [48..102] [21..27]
 a4(r87): [59..63] [36..52]
 a5(r95): [41..49]
 a6(r112): [46..47]
 a7(r92): [62..65]
 a8(r91): [69..88]
 a9(r89): [71..92]
 a10(r108): [73..76]
 a11(r105): [79..80]
 a12(r99): [85..106]
 a13(r103): [89..90]
 a14(r98): [93..108]
 a15(r102): [99..100]
Compressing live ranges: from 111 to 20 - 18%
Ranges after the compression:
 a0(r116): [0..3]
 a1(r94): [0..3]
 a2(r115): [0..1]
 a3(r118): [6..19] [2..3]
 a4(r87): [4..9]
 a5(r95): [4..7]
 a6(r112): [4..5]
 a7(r92): [8..9]
 a8(r91): [10..15]
 a9(r89): [10..17]
 a10(r108): [10..11]
 a11(r105): [12..13]
 a12(r99): [14..19]
 a13(r103): [16..17]
 a14(r98): [18..19]
 a15(r102): [18..19]
+++Allocating 128 bytes for conflict table (uncompressed size 128)
;; a0(r116,l0) conflicts: a2(r115,l0) a1(r94,l0) a3(r118,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r94,l0) conflicts: a2(r115,l0) a0(r116,l0) a3(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r115,l0) conflicts: a0(r116,l0) a1(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r118,l0) conflicts: a0(r116,l0) a1(r94,l0) a5(r95,l0) a4(r87,l0) a7(r92,l0) a10(r108,l0) a8(r91,l0) a9(r89,l0) a11(r105,l0) a12(r99,l0) a13(r103,l0) a14(r98,l0) a15(r102,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r87,l0) conflicts: a3(r118,l0) a6(r112,l0) a5(r95,l0) a7(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r95,l0) conflicts: a3(r118,l0) a6(r112,l0) a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r112,l0) conflicts: a5(r95,l0) a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r92,l0) conflicts: a3(r118,l0) a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r91,l0) conflicts: a3(r118,l0) a10(r108,l0) a9(r89,l0) a11(r105,l0) a12(r99,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a9(r89,l0) conflicts: a3(r118,l0) a10(r108,l0) a8(r91,l0) a11(r105,l0) a12(r99,l0) a13(r103,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a10(r108,l0) conflicts: a3(r118,l0) a8(r91,l0) a9(r89,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a11(r105,l0) conflicts: a3(r118,l0) a8(r91,l0) a9(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r99,l0) conflicts: a3(r118,l0) a8(r91,l0) a9(r89,l0) a13(r103,l0) a14(r98,l0) a15(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r103,l0) conflicts: a3(r118,l0) a9(r89,l0) a12(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r98,l0) conflicts: a3(r118,l0) a12(r99,l0) a15(r102,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a15(r102,l0) conflicts: a3(r118,l0) a12(r99,l0) a14(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r115)<->a3(r118)@1:shuffle
  cp1:a3(r118)<->a6(r112)@125:shuffle
  pref0:a10(r108)<-hr4@1500
  pref1:a11(r105)<-hr0@1500
  pref2:a12(r99)<-hr4@1500
  pref3:a14(r98)<-hr5@1500
  pref4:a5(r95)<-hr5@1174
  pref5:a7(r92)<-hr0@1500
  pref6:a9(r89)<-hr5@1500
  pref7:a4(r87)<-hr0@2679
  pref8:a0(r116)<-hr5@1
  pref9:a1(r94)<-hr5@1
  pref10:a0(r116)<-hr0@1
  pref11:a12(r99)<-hr5@1000
  pref12:a3(r118)<-hr1@1000
  regions=1, blocks=15, points=20
    allocnos=16 (big 0), copies=2, conflicts=0, ranges=17

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r116 1r94 2r115 3r118 4r87 5r95 6r112 7r92 8r91 9r89 10r108 11r105 12r99 13r103 14r98 15r102
    modified regnos: 87 89 91 92 94 95 98 99 102 103 105 108 112 115 116 118
    border:
    Pressure: GENERAL_REGS=5
 Removing pref8:hr5@1
 Removing pref12:hr1@1000
 Removing pref6:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@123434
          2:( 0-3 5 6 37-44)@22000
            3:( 0 2 3 6 37-44)@30000
              4:( 2 3 6 37-44)@46000
                5:( 3 6 41-44)@28013
      Allocno a0r116 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0 2 3 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r118 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r87 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r91 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a9r89 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a10r108 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a11r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r98 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a15r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a2r115-a3r118 (freq=1):
        Result (freq=4003): a2r115(2) a3r118(4001)
      Pushing a0(r116,l0)(cost 0)
      Pushing a1(r94,l0)(cost 0)
      Pushing a15(r102,l0)(cost 0)
      Pushing a14(r98,l0)(cost 0)
      Pushing a13(r103,l0)(cost 0)
      Pushing a11(r105,l0)(cost 0)
      Pushing a10(r108,l0)(cost 0)
      Pushing a8(r91,l0)(cost 0)
      Forming thread by copy 1:a3r118-a6r112 (freq=125):
        Result (freq=6003): a2r115(2) a6r112(2000) a3r118(4001)
        Making a3(r118,l0) colorable
      Pushing a7(r92,l0)(cost 0)
      Pushing a6(r112,l0)(cost 0)
      Pushing a5(r95,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Pushing a12(r99,l0)(cost 0)
      Pushing a9(r89,l0)(cost 0)
      Pushing a2(r115,l0)(cost 0)
      Pushing a3(r118,l0)(cost 14003)
      Popping a3(r118,l0)  -- assign reg 3
      Popping a2(r115,l0)  -- assign reg 3
      Popping a9(r89,l0)  -- assign reg 6
      Popping a12(r99,l0)  -- assign reg 4
      Popping a4(r87,l0)  -- assign reg 6
      Popping a5(r95,l0)  -- assign reg 5
      Popping a6(r112,l0)  -- assign reg 3
      Popping a7(r92,l0)  -- assign reg 0
      Popping a8(r91,l0)  -- assign reg 41
      Popping a10(r108,l0)  -- assign reg 4
      Popping a11(r105,l0)  -- assign reg 0
      Popping a13(r103,l0)  -- assign reg 0
      Popping a14(r98,l0)  -- assign reg 5
      Popping a15(r102,l0)  -- assign reg 0
      Popping a1(r94,l0)  -- assign reg 5
      Popping a0(r116,l0)  -- assign reg 6
Disposition:
    4:r87  l0     6    9:r89  l0     6    8:r91  l0    41    7:r92  l0     0
    1:r94  l0     5    5:r95  l0     5   14:r98  l0     5   12:r99  l0     4
   15:r102 l0     0   13:r103 l0     0   11:r105 l0     0   10:r108 l0     4
    6:r112 l0     3    2:r115 l0     3    0:r116 l0     6    3:r118 l0     3
New iteration of spill/restore move
+++Costs: overall -17352, reg -17352, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


char* leveldb_property_value(leveldb_t*, const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,6u} r1={10d,1u} r2={8d} r4={9d,2u} r5={14d,7u} r6={1d,14u} r7={1d,21u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,13u} r17={17d,4u} r18={7d} r19={7d} r20={1d,26u,6e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={2d,1u} r89={1d,2u,1e} r91={1d,1u} r92={1d,1u} r94={1d,2u} r95={1d,2u} r98={1d,1u} r99={1d,2u} r102={1d,1u} r103={1d,1u} r105={1d,1u} r108={1d,1u} r112={1d,1u} r115={1d,1u} r116={1d,1u} r118={1d,4u} 
;;    total ref usage 685{561d,117u,7e} in 49{42 regular + 7 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 91 98 99 102 103 105 108 118
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ propname ])
        (reg:DI 4 si [ propname ])) db/c.cc:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ propname ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37157+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:242 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 6 11 2 (parallel [
            (set (reg/f:DI 118)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
            (nil))))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
        (reg/f:DI 102)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&tmp + 8B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&tmp + 16]+0 S1 A128])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 89 [ D.37152 ])
        (mem/f:DI (reg/v/f:DI 98 [ db ]) [3 db_5(D)->rep+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ db ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 103 [ _6->_vptr.DB ])
        (mem/f:DI (reg/f:DI 89 [ D.37152 ]) [3 _6->_vptr.DB+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 89 [ D.37152 ]) [3 _6->_vptr.DB+0 S8 A64])
        (nil)))
(insn 17 16 18 2 (set (reg/f:DI 91 [ D.37154 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ _6->_vptr.DB ])
                (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_7 + 72B]+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _6->_vptr.DB ])
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31457.data_+0 S8 A128])
        (reg/v/f:DI 99 [ propname ])) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ propname ])) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ propname ])
        (nil)))
(call_insn/i 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./include/leveldb/slice.h:37 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5948 strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 24 2 (set (reg:DI 105)
        (reg:DI 0 ax)) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [9 D.31457.size_+0 S8 A64])
            (nil))))
(insn 24 21 26 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 D.31457.size_+0 S8 A64])
        (reg:DI 105)) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 26 24 27 2 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:244 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (reg/f:DI 118)) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg/f:DI 108)) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37152 ])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37152 ])
        (nil)))
(call_insn 30 29 86 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 91 [ D.37154 ]) [0 *OBJ_TYPE_REF(_8;(struct DB)_6->9) S1 A8])
            (const_int 0 [0]))) db/c.cc:244 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37154 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
(note 86 30 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 86 7 3 (set (reg:QI 92 [ D.37155 ])
        (reg:QI 0 ax)) db/c.cc:244 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 7 31 33 3 (set (reg/f:DI 87 [ D.37151 ])
        (const_int 0 [0])) db/c.cc:248 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 33 7 34 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.37155 ])
            (const_int 0 [0]))) db/c.cc:244 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ D.37155 ])
        (nil)))
(jump_insn 34 33 35 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) db/c.cc:244 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 41)
;;  succ:       4 [78.6%]  (FALLTHRU)
;;              5 [21.4%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118

;; basic block 4, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [78.6%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 35 34 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 35 38 4 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) db/c.cc:246 89 {*movdi_internal}
     (nil))
(call_insn 38 37 39 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:246 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 41 4 (set (reg/f:DI 87 [ D.37151 ])
        (reg:DI 0 ax)) db/c.cc:246 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 110)
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.4%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 95 112
(code_label 41 39 42 5 198 "" [1 uses])
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 5 (set (reg/f:DI 95 [ D.37151 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 45 43 46 5 (parallel [
            (set (reg/f:DI 112)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.37151 ])
            (reg/f:DI 112))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 51)
;;  succ:       6 [78.3%]  (FALLTHRU)
;;              7 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95

;; basic block 6, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [78.3%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.37151 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.37151 ])
        (nil)))
(call_insn 50 49 51 6 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [21.6%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
(code_label 51 50 52 7 199 "" [1 uses])
(note 52 51 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 73 52 75 7 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37151 ])) db/c.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37151 ])
        (nil)))
(insn 75 73 76 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37157+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:250 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 76 75 97 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) db/c.cc:250 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 79)
;;  succ:       14 [100.0%] 
;;              8 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 4
;;  prev block 7, next block 9, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [0.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 97 76 99 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 99 97 100 8 (set (pc)
        (label_ref 98)) 654 {jump}
     (nil)
 -> 98)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 100 99 89)
;; basic block 9, loop depth 0, count 0, freq 0
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 9 artificial_defs: { d4(0){ }d14(1){ }}
;; bb 9 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 116
(code_label/s 89 100 91 9 204 "" [1 uses])
(note 91 89 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 91 56 9 (set (reg:DI 116)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118

;; basic block 10, loop depth 0, count 0, freq 0
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 94 115
(code_label 56 90 57 10 200 "" [0 uses])
(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 60 10 (set (reg/f:DI 94 [ D.37151 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 60 58 61 10 (parallel [
            (set (reg/f:DI 115)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.37151 ])
            (reg/f:DI 115))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(jump_insn 62 61 63 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 66)
;;  succ:       11 [69.8%]  (FALLTHRU)
;;              12 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116

;; basic block 11, loop depth 0, count 0, freq 0
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [69.8%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37151 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37151 ])
        (nil)))
(call_insn 65 64 66 11 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 12, loop depth 0, count 0, freq 0
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [30.2%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 66 65 67 12 201 "" [1 uses])
(note 67 66 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 67 70 12 (set (reg:DI 5 di)
        (reg:DI 116)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 70 69 71 12 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 98)
;; basic block 13, loop depth 0, count 0, freq 4
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 98 71 87 13 206 "" [1 uses])
(note 87 98 77 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 77 87 78 13 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:250 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 78 77 79)
;; basic block 14, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 13, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 79 78 88 14 202 "" [1 uses])
(note 88 79 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 88 0 14 (use (reg/i:DI 0 ax)) db/c.cc:250 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_approximate_sizes(leveldb_t*, int, const char* const*, const size_t*, const char* const*, const size_t*, uint64_t*) (leveldb_approximate_sizes, funcdef_no=1441, decl_uid=2203, cgraph_uid=548, symbol_order=551)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 15 (  1.2)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 104: def dominates all uses has unique first use
Reg 105 uninteresting (no unique first use)
Reg 110: def dominates all uses has unique first use
Reg 111 uninteresting
Reg 91 uninteresting (no unique first use)
Reg 99 uninteresting
Reg 114: local to bb 7 def dominates all uses has unique first use
Ignoring reg 94, has equiv memory
Ignoring reg 118, has equiv memory
Ignoring reg 96, has equiv memory
Ignoring reg 119, has equiv memory
Reg 104 not local to one basic block
Reg 110 not local to one basic block
Found def insn 39 for 114 to be not moveable
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 1
;;  header 9, latch 9
;;  depth 1, outer 0
;;  nodes: 9
;; 2 succs { 3 5 }
;; 3 succs { 4 8 }
;; 4 succs { 6 }
;; 5 succs { }
;; 6 succs { 7 11 }
;; 7 succs { 1 }
;; 8 succs { 9 }
;; 9 succs { 10 9 }
;; 10 succs { 6 }
;; 11 succs { 12 11 }
;; 12 succs { 7 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 94: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 96: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 118: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 119: (insn_list:REG_DEP_TRUE 78 (nil))

Pass 0 for finding pseudo/allocno costs

    a28 (r119,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r118,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r112,l0) best DIREG, allocno DIREG
    a16 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r110,l1) best CREG, allocno CREG
    a26 (r110,l2) best CREG, allocno CREG
    a3 (r110,l0) best CREG, allocno CREG
    a40 (r109,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r109,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r108,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r108,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r107,l1) best CREG, allocno CREG
    a23 (r107,l2) best CREG, allocno CREG
    a5 (r107,l0) best CREG, allocno CREG
    a37 (r106,l1) best DREG, allocno DREG
    a22 (r106,l2) best DREG, allocno DREG
    a4 (r106,l0) best DREG, allocno DREG
    a36 (r105,l1) best DREG, allocno DREG
    a21 (r105,l2) best DREG, allocno DREG
    a2 (r105,l0) best DREG, allocno DREG
    a35 (r104,l1) best DIREG, allocno DIREG
    a20 (r104,l2) best DIREG, allocno DIREG
    a1 (r104,l0) best DIREG, allocno DIREG
    a19 (r102,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r99,l0) best DIREG, allocno DIREG
    a27 (r96,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r94,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r93,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r92,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r91,l1) best AREG, allocno AREG
    a18 (r91,l2) best AREG, allocno AREG
    a0 (r91,l0) best AREG, allocno AREG
    a31 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r88,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3528,3528 NO_REX_SSE_REGS:3528,3528 SSE_REGS:3528,3528 MMX_REGS:5283,5283 INT_SSE_REGS:3879,3879 ALL_REGS:82008,82008 MEM:1143,1143
  a1(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1440,1440 NO_REX_SSE_REGS:1440,1440 SSE_REGS:1440,1440 MMX_REGS:1890,1890 INT_SSE_REGS:1530,1530 ALL_REGS:27720,27720 MEM:450,450
  a2(r105,l0) costs: AREG:0,0 DREG:-90,-90 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2880,10160 NO_REX_SSE_REGS:2880,10160 SSE_REGS:2880,10160 MMX_REGS:4230,16060 INT_SSE_REGS:3150,11340 ALL_REGS:65160,254440 MEM:990,3720
  a3(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:630,630
  a4(r106,l0) costs: AREG:0,0 DREG:-90,-90 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,15280 NO_REX_SSE_REGS:720,15280 SSE_REGS:720,15280 MMX_REGS:720,24380 INT_SSE_REGS:720,17100 ALL_REGS:9000,387560 MEM:90,7370
  a5(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:-90,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,15280 NO_REX_SSE_REGS:720,15280 SSE_REGS:720,15280 MMX_REGS:720,24380 INT_SSE_REGS:720,17100 ALL_REGS:9000,387560 MEM:90,7370
  a6(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,15280 NO_REX_SSE_REGS:720,15280 SSE_REGS:720,15280 MMX_REGS:720,24380 INT_SSE_REGS:720,17100 ALL_REGS:9000,387560 MEM:90,7370
  a7(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,15280 NO_REX_SSE_REGS:720,15280 SSE_REGS:720,15280 MMX_REGS:720,24380 INT_SSE_REGS:720,17100 ALL_REGS:9000,387560 MEM:90,7370
  a8(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,27038 NO_REX_SSE_REGS:648,27038 SSE_REGS:648,27038 MMX_REGS:648,36138 INT_SSE_REGS:648,28858 ALL_REGS:8100,575940 MEM:81,8271
  a9(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:648,48878 NO_REX_SSE_REGS:648,48878 SSE_REGS:648,48878 MMX_REGS:648,71628 INT_SSE_REGS:648,53428 ALL_REGS:8100,1143780 MEM:81,20101
  a10(r89,l0) costs: AREG:180,180 DREG:180,180 CREG:180,180 BREG:180,180 SIREG:180,180 DIREG:180,180 AD_REGS:180,180 Q_REGS:180,180 NON_Q_REGS:180,180 GENERAL_REGS:180,180 SSE_FIRST_REG:3510,10790 NO_REX_SSE_REGS:3510,10790 SSE_REGS:3510,10790 MMX_REGS:4860,16690 INT_SSE_REGS:3780,11970 ALL_REGS:75060,264340 MEM:1440,4170
  a11(r114,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:720,720
  a12(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2520,2520 NO_REX_SSE_REGS:2520,2520 SSE_REGS:2520,2520 MMX_REGS:3420,3420 INT_SSE_REGS:2700,2700 ALL_REGS:46800,46800 MEM:990,990
  a13(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,85350 NO_REX_SSE_REGS:720,85350 SSE_REGS:720,85350 MMX_REGS:720,130850 INT_SSE_REGS:720,94450 ALL_REGS:9000,2091080 MEM:90,37400
  a14(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,48950 NO_REX_SSE_REGS:720,48950 SSE_REGS:720,48950 MMX_REGS:720,71700 INT_SSE_REGS:720,53500 ALL_REGS:9000,1144680 MEM:90,20110
  a15(r112,l0) costs: AREG:180,180 DREG:180,180 CREG:180,180 BREG:180,180 SIREG:180,180 DIREG:90,90 AD_REGS:180,180 Q_REGS:180,180 NON_Q_REGS:180,180 GENERAL_REGS:180,180 SSE_FIRST_REG:2070,2070 NO_REX_SSE_REGS:2070,2070 SSE_REGS:2070,2070 MMX_REGS:2520,2520 INT_SSE_REGS:2160,2160 ALL_REGS:37620,37620 MEM:720,720
  a16(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:630,630
  a17(r88,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:20020,20020
  a18(r91,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a19(r102,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84630,84630 NO_REX_SSE_REGS:84630,84630 SSE_REGS:84630,84630 MMX_REGS:130130,130130 INT_SSE_REGS:93730,93730 ALL_REGS:2082080,2082080 MEM:37310,37310
  a20(r104,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a21(r105,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a22(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a23(r107,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a24(r108,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a25(r109,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a26(r110,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r96,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18200,18200 NO_REX_SSE_REGS:18200,18200 SSE_REGS:18200,18200 MMX_REGS:22750,22750 INT_SSE_REGS:19110,19110 ALL_REGS:283920,283920 MEM:0,0
  a28(r119,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18200,18200 NO_REX_SSE_REGS:18200,18200 SSE_REGS:18200,18200 MMX_REGS:22750,22750 INT_SSE_REGS:19110,19110 ALL_REGS:283920,283920 MEM:0,0
  a29(r94,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18200,18200 NO_REX_SSE_REGS:18200,18200 SSE_REGS:18200,18200 MMX_REGS:22750,22750 INT_SSE_REGS:19110,19110 ALL_REGS:283920,283920 MEM:0,0
  a30(r118,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18200,18200 NO_REX_SSE_REGS:18200,18200 SSE_REGS:18200,18200 MMX_REGS:22750,22750 INT_SSE_REGS:19110,19110 ALL_REGS:283920,283920 MEM:0,0
  a31(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a32(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r92,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26390,26390 NO_REX_SSE_REGS:26390,26390 SSE_REGS:26390,26390 MMX_REGS:35490,35490 INT_SSE_REGS:28210,28210 ALL_REGS:567840,567840 MEM:8190,8190
  a34(r93,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:20020,20020
  a35(r104,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a36(r105,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r106,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a38(r107,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r108,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a40(r109,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a41(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a41 (r110,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r110,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a38 (r107,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r107,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a37 (r106,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r106,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a36 (r105,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r105,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a35 (r104,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r104,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r91,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r91,l2) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3888,3888 NO_REX_SSE_REGS:3888,3888 SSE_REGS:3888,3888 MMX_REGS:5643,5643 INT_SSE_REGS:4239,4239 ALL_REGS:82368,82368 MEM:1413,1413
  a1(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1800,1800 NO_REX_SSE_REGS:1800,1800 SSE_REGS:1800,1800 MMX_REGS:2250,2250 INT_SSE_REGS:1890,1890 ALL_REGS:28080,28080 MEM:720,720
  a2(r105,l0) costs: AREG:0,0 DREG:0,-90 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3240,10520 NO_REX_SSE_REGS:3240,10520 SSE_REGS:3240,10520 MMX_REGS:4590,16420 INT_SSE_REGS:3510,11700 ALL_REGS:65520,254800 MEM:1260,3990
  a3(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:28440,28440 MEM:630,630
  a4(r106,l0) costs: AREG:0,0 DREG:0,-90 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1080,15640 NO_REX_SSE_REGS:1080,15640 SSE_REGS:1080,15640 MMX_REGS:1080,24740 INT_SSE_REGS:1080,17460 ALL_REGS:9360,387920 MEM:360,7640
  a5(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-90 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1080,15640 NO_REX_SSE_REGS:1080,15640 SSE_REGS:1080,15640 MMX_REGS:1080,24740 INT_SSE_REGS:1080,17460 ALL_REGS:9360,387920 MEM:360,7640
  a6(r108,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1080,15640 NO_REX_SSE_REGS:1080,15640 SSE_REGS:1080,15640 MMX_REGS:1080,24740 INT_SSE_REGS:1080,17460 ALL_REGS:9360,387920 MEM:360,7640
  a7(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1080,15640 NO_REX_SSE_REGS:1080,15640 SSE_REGS:1080,15640 MMX_REGS:1080,24740 INT_SSE_REGS:1080,17460 ALL_REGS:9360,387920 MEM:360,7640
  a8(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,27362 NO_REX_SSE_REGS:972,27362 SSE_REGS:972,27362 MMX_REGS:972,36462 INT_SSE_REGS:972,29182 ALL_REGS:8424,576264 MEM:324,8514
  a9(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:972,49202 NO_REX_SSE_REGS:972,49202 SSE_REGS:972,49202 MMX_REGS:972,71952 INT_SSE_REGS:972,53752 ALL_REGS:8424,1144104 MEM:324,20344
  a10(r89,l0) costs: GENERAL_REGS:180,180 SSE_FIRST_REG:3510,10790 NO_REX_SSE_REGS:3510,10790 SSE_REGS:3510,10790 MMX_REGS:4860,16690 INT_SSE_REGS:3780,11970 ALL_REGS:75060,264340 MEM:1440,4170
  a11(r114,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:28440,28440 MEM:720,720
  a12(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2610,2610 NO_REX_SSE_REGS:2610,2610 SSE_REGS:2610,2610 MMX_REGS:3510,3510 INT_SSE_REGS:2790,2790 ALL_REGS:47160,47160 MEM:990,990
  a13(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1080,85710 NO_REX_SSE_REGS:1080,85710 SSE_REGS:1080,85710 MMX_REGS:1080,131210 INT_SSE_REGS:1080,94810 ALL_REGS:9360,2091440 MEM:360,37670
  a14(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1080,49310 NO_REX_SSE_REGS:1080,49310 SSE_REGS:1080,49310 MMX_REGS:1080,72060 INT_SSE_REGS:1080,53860 ALL_REGS:9360,1145040 MEM:360,20380
  a15(r112,l0) costs: AREG:180,180 DREG:180,180 CREG:180,180 BREG:180,180 SIREG:180,180 DIREG:180,90 AD_REGS:180,180 Q_REGS:180,180 NON_Q_REGS:180,180 GENERAL_REGS:180,180 SSE_FIRST_REG:2070,2070 NO_REX_SSE_REGS:2070,2070 SSE_REGS:2070,2070 MMX_REGS:2520,2520 INT_SSE_REGS:2160,2160 ALL_REGS:37620,37620 MEM:720,720
  a16(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:28440,28440 MEM:630,630
  a17(r88,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:20020,20020
  a18(r91,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a19(r102,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:84630,84630 NO_REX_SSE_REGS:84630,84630 SSE_REGS:84630,84630 MMX_REGS:130130,130130 INT_SSE_REGS:93730,93730 ALL_REGS:2082080,2082080 MEM:37310,37310
  a20(r104,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a21(r105,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a22(r106,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a23(r107,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a24(r108,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a25(r109,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a26(r110,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a27(r96,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:287560,287560 MEM:0,0
  a28(r119,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:287560,287560 MEM:0,0
  a29(r94,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:287560,287560 MEM:0,0
  a30(r118,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:287560,287560 MEM:0,0
  a31(r89,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a32(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a33(r92,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26390,26390 NO_REX_SSE_REGS:26390,26390 SSE_REGS:26390,26390 MMX_REGS:35490,35490 INT_SSE_REGS:28210,28210 ALL_REGS:567840,567840 MEM:8190,8190
  a34(r93,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:20020,20020
  a35(r104,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a36(r105,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a37(r106,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a38(r107,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a39(r108,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a40(r109,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a41(r110,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0

   Insn 10(l0): point = 0
   Insn 51(l0): point = 2
   Insn 47(l0): point = 5
   Insn 46(l0): point = 7
   Insn 45(l0): point = 9
   Insn 44(l0): point = 11
   Insn 43(l0): point = 13
   Insn 42(l0): point = 15
   Insn 41(l0): point = 17
   Insn 39(l0): point = 19
   Insn 38(l0): point = 21
   Insn 108(l0): point = 24
   Insn 36(l0): point = 27
   Insn 35(l0): point = 29
   Insn 11(l0): point = 31
   Insn 70(l0): point = 33
   Insn 105(l0): point = 36
   Insn 31(l0): point = 39
   Insn 102(l0): point = 42
   Insn 25(l0): point = 45
   Insn 24(l0): point = 47
   Insn 22(l0): point = 49
   Insn 21(l0): point = 51
   Insn 20(l0): point = 53
   Insn 19(l0): point = 55
   Insn 17(l0): point = 58
   Insn 16(l0): point = 60
   Insn 15(l0): point = 62
   Insn 14(l0): point = 64
   Insn 8(l0): point = 66
   Insn 7(l0): point = 68
   Insn 6(l0): point = 70
   Insn 5(l0): point = 72
   Insn 4(l0): point = 74
   Insn 3(l0): point = 76
   Insn 2(l0): point = 78
   Insn 85(l2): point = 81
   Insn 84(l2): point = 83
   Insn 82(l2): point = 85
   Insn 81(l2): point = 87
   Insn 80(l2): point = 89
   Insn 79(l2): point = 91
   Insn 78(l2): point = 93
   Insn 77(l2): point = 95
   Insn 76(l2): point = 97
   Insn 75(l2): point = 99
   Insn 74(l2): point = 101
   Insn 72(l2): point = 103
   Insn 63(l1): point = 106
   Insn 62(l1): point = 108
   Insn 61(l1): point = 110
   Insn 60(l1): point = 112
   Insn 59(l1): point = 114
   Insn 58(l1): point = 116
   Insn 56(l1): point = 118
   Insn 55(l1): point = 120
 a0(r91): [42..49] [8..38] [0..4]
 a1(r104): [42..78] [22..38] [0..4]
 a2(r105): [42..76] [16..38] [0..4]
 a3(r110): [42..66] [18..38] [0..4]
 a4(r106): [42..74] [27..38] [0..4]
 a5(r107): [42..72] [27..38] [0..4]
 a6(r108): [42..70] [27..38] [0..4]
 a7(r109): [42..68] [27..38] [0..4]
 a8(r92): [0..0]
 a9(r93): [0..2]
 a10(r89): [45..64] [0..4]
 a11(r114): [10..19]
 a12(r99): [12..21]
 a13(r102): [27..31]
 a14(r88): [27..33]
 a15(r112): [54..55]
 a16(r111): [61..62]
 a17(r88): [81..105]
 a18(r91): [81..105]
 a19(r102): [81..105]
 a20(r104): [81..105]
 a21(r105): [81..105]
 a22(r106): [81..105]
 a23(r107): [81..105]
 a24(r108): [81..105]
 a25(r109): [81..105]
 a26(r110): [81..105]
 a27(r96): [90..95]
 a28(r119): [92..93]
 a29(r94): [98..103]
 a30(r118): [100..101]
 a31(r89): [106..122]
 a32(r91): [106..122]
 a33(r92): [106..122]
 a34(r93): [106..122]
 a35(r104): [106..122]
 a36(r105): [106..122]
 a37(r106): [106..122]
 a38(r107): [106..122]
 a39(r108): [106..122]
 a40(r109): [106..122]
 a41(r110): [106..122]
 Rebuilding regno allocno list for 119
 Rebuilding regno allocno list for 118
      Moving ranges of a41r110 to a3r110:  [106..122]
      Moving ranges of a26r110 to a3r110:  [81..105]
      Moving ranges of a40r109 to a7r109:  [106..122]
      Moving ranges of a25r109 to a7r109:  [81..105]
      Moving ranges of a39r108 to a6r108:  [106..122]
      Moving ranges of a24r108 to a6r108:  [81..105]
      Moving ranges of a38r107 to a5r107:  [106..122]
      Moving ranges of a23r107 to a5r107:  [81..105]
      Moving ranges of a37r106 to a4r106:  [106..122]
      Moving ranges of a22r106 to a4r106:  [81..105]
      Moving ranges of a36r105 to a2r105:  [106..122]
      Moving ranges of a21r105 to a2r105:  [81..105]
      Moving ranges of a35r104 to a1r104:  [106..122]
      Moving ranges of a20r104 to a1r104:  [81..105]
      Moving ranges of a19r102 to a13r102:  [81..105]
 Rebuilding regno allocno list for 96
 Rebuilding regno allocno list for 94
      Moving ranges of a34r93 to a9r93:  [106..122]
      Moving ranges of a33r92 to a8r92:  [106..122]
      Moving ranges of a32r91 to a0r91:  [106..122]
      Moving ranges of a18r91 to a0r91:  [81..105]
      Moving ranges of a31r89 to a10r89:  [106..122]
      Moving ranges of a17r88 to a14r88:  [81..105]
Compressing live ranges: from 123 to 18 - 14%
Ranges after the compression:
 a0(r91): [12..17] [0..7]
 a1(r104): [4..17] [0..1]
 a2(r105): [0..17]
 a3(r110): [0..17]
 a4(r106): [4..17] [0..1]
 a5(r107): [4..17] [0..1]
 a6(r108): [4..17] [0..1]
 a7(r109): [4..17] [0..1]
 a8(r92): [16..17] [0..0]
 a9(r93): [16..17] [0..1]
 a10(r89): [16..17] [6..11] [0..1]
 a11(r114): [2..3]
 a12(r99): [2..3]
 a13(r102): [12..15] [4..5]
 a14(r88): [12..15] [4..5]
 a15(r112): [8..9]
 a16(r111): [10..11]
 a27(r96): [12..13]
 a28(r119): [12..13]
 a29(r94): [14..15]
 a30(r118): [14..15]
+++Allocating 168 bytes for conflict table (uncompressed size 336)
;; a0(r91,l0) conflicts: a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a11(r114,l0) a12(r99,l0) a13(r102,l0) a14(r88,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a1(r104,l0) conflicts: a0(r91,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0-2 4 5 37 38
;;     conflict hard regs: 0-2 4 5 37 38

;; a2(r105,l0) conflicts: a0(r91,l0) a1(r104,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a11(r114,l0) a12(r99,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0-2 5 37 38
;;     conflict hard regs: 0-2 5 37 38

;; a3(r110,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a11(r114,l0) a12(r99,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a4(r106,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0 2 5 37 38
;;     conflict hard regs: 0 2 5 37 38

;; a5(r107,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0 5 37 38
;;     conflict hard regs: 0 5 37 38

;; a6(r108,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0 5 38
;;     conflict hard regs: 0 5 38

;; a7(r109,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a8(r92,l0) a9(r93,l0) a10(r89,l0) a13(r102,l0) a14(r88,l0) a15(r112,l0) a16(r111,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a8(r92,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a9(r93,l0) a10(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r93,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a10(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r89,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a8(r92,l0) a9(r93,l0) a15(r112,l0) a16(r111,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a11(r114,l0) conflicts: a0(r91,l0) a2(r105,l0) a3(r110,l0) a12(r99,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a12(r99,l0) conflicts: a0(r91,l0) a2(r105,l0) a3(r110,l0) a11(r114,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a13(r102,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a14(r88,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r88,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a13(r102,l0) a27(r96,l0) a28(r119,l0) a29(r94,l0) a30(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r112,l0) conflicts: a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a10(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r111,l0) conflicts: a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a10(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r96,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a13(r102,l0) a14(r88,l0) a28(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r119,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a13(r102,l0) a14(r88,l0) a27(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r94,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a13(r102,l0) a14(r88,l0) a30(r118,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r118,l0) conflicts: a0(r91,l0) a1(r104,l0) a2(r105,l0) a3(r110,l0) a4(r106,l0) a5(r107,l0) a6(r108,l0) a7(r109,l0) a13(r102,l0) a14(r88,l0) a29(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a15(r112)<-hr5@135
  pref1:a3(r110)<-hr2@135
  pref2:a5(r107)<-hr2@135
  pref3:a4(r106)<-hr1@135
  pref4:a2(r105)<-hr1@135
  pref5:a1(r104)<-hr5@135
  pref6:a12(r99)<-hr5@135
  pref7:a0(r91)<-hr0@135
  pref8:a0(r91)<-hr4@90
  pref9:a0(r91)<-hr5@90
  pref10:a2(r105)<-hr4@90
  pref11:a6(r108)<-hr37@180
  pref12:a7(r109)<-hr38@180
  regions=3, blocks=13, points=18
    allocnos=42 (big 0), copies=0, conflicts=0, ranges=33

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r91 1r104 2r105 3r110 4r106 5r107 6r108 7r109 8r92 9r93 10r89 11r114 12r99 13r102 14r88 15r112 16r111 27r96 28r119 29r94 30r118
    modified regnos: 88 89 91 92 93 94 96 99 102 104 105 106 107 108 109 110 111 112 114 118 119
    border:
    Pressure: GENERAL_REGS=12
 Removing pref9:hr5@90
 Removing pref8:hr4@90
 Removing pref5:hr5@135
 Removing pref4:hr1@135
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@176696
          2:( 1-4 6 37-44)@23260
            3:( 1-4 6 37 39-44)@15280
              4:( 1-4 6 39-44)@15280
                5:( 1 3 4 6 39-44)@15280
                  6:( 3 4 6 39-44)@7980
                    7:( 3 6 39-44)@29070
      Allocno a0r91 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, ^node:  0-6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a1r104 of GENERAL_REGS(15) has 8 avail. regs  3 6 39-44, node:  3 6 39-44 (confl regs =  0-2 4 5 7-38 45-79)
      Allocno a2r105 of GENERAL_REGS(15) has 9 avail. regs  3 4 6 39-44, node:  3 4 6 39-44 (confl regs =  0-2 5 7-38 45-79)
      Allocno a3r110 of GENERAL_REGS(15) has 7 avail. regs  2 3 6 41-44, ^node:  1-4 6 39-44 (confl regs =  0 5 7-36 45-79)
      Allocno a4r106 of GENERAL_REGS(15) has 10 avail. regs  1 3 4 6 39-44, node:  1 3 4 6 39-44 (confl regs =  0 2 5 7-38 45-79)
      Allocno a5r107 of GENERAL_REGS(15) has 11 avail. regs  1-4 6 39-44, node:  1-4 6 39-44 (confl regs =  0 5 7-38 45-79)
      Allocno a6r108 of GENERAL_REGS(15) has 12 avail. regs  1-4 6 37 39-44, node:  1-4 6 37 39-44 (confl regs =  0 5 7-36 38 45-79)
      Allocno a7r109 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a8r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r89 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a11r114 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, ^node:  0-6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a12r99 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a13r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a28r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a29r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a30r118 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a16(r111,l0)(cost 0)
      Pushing a15(r112,l0)(cost 0)
      Pushing a11(r114,l0)(cost 0)
      Pushing a12(r99,l0)(cost 0)
      Pushing a10(r89,l0)(cost 0)
      Pushing a30(r118,l0)(cost 0)
      Pushing a29(r94,l0)(cost 0)
      Pushing a28(r119,l0)(cost 0)
        Making a7(r109,l0) colorable
      Pushing a7(r109,l0)(cost 7640)
        Making a6(r108,l0) colorable
      Pushing a6(r108,l0)(cost 7640)
        Making a0(r91,l0) colorable
        Making a5(r107,l0) colorable
      Pushing a0(r91,l0)(cost 1413)
        Making a4(r106,l0) colorable
      Pushing a5(r107,l0)(cost 7640)
        Making a2(r105,l0) colorable
      Pushing a4(r106,l0)(cost 7640)
        Making a1(r104,l0) colorable
      Pushing a1(r104,l0)(cost 720)
        Making a3(r110,l0) colorable
      Pushing a3(r110,l0)(cost 630)
      Pushing a2(r105,l0)(cost 3990)
      Pushing a27(r96,l0)(cost 0)
      Pushing a8(r92,l0)(cost 0)
      Pushing a9(r93,l0)(cost 0)
      Pushing a14(r88,l0)(cost 0)
      Pushing a13(r102,l0)(cost 0)
      Popping a13(r102,l0)  -- assign reg 5
      Popping a14(r88,l0)  -- assign reg 39
      Popping a9(r93,l0)  -- assign reg 5
      Popping a8(r92,l0)  -- assign reg 39
      Popping a27(r96,l0)  -- assign reg 40
      Popping a2(r105,l0)  -- assign reg 3
      Popping a3(r110,l0)  -- assign reg 6
      Popping a1(r104,l0)  -- assign reg 41
      Popping a4(r106,l0)  -- assign reg 42
      Popping a5(r107,l0)  -- assign reg 43
      Popping a0(r91,l0)  -- assign reg 44
      Popping a6(r108,l0)  -- assign reg 37
      Popping a7(r109,l0)  -- assign reg 38
      Popping a28(r119,l0)  -- assign reg 0
      Popping a29(r94,l0)  -- assign reg 0
      Popping a30(r118,l0)  -- assign reg 1
      Popping a10(r89,l0)  -- assign reg 1
      Popping a12(r99,l0)  -- assign reg 5
      Popping a11(r114,l0)  -- assign reg 0
      Popping a15(r112,l0)  -- assign reg 5
      Popping a16(r111,l0)  -- assign reg 0
Spilling a3r110 for a10r89
Assigning 6 to a10r89
       a3(r110,l0)  -- assign hard reg 2
Disposition:
   14:r88  l0    39   10:r89  l0     6    0:r91  l0    44    8:r92  l0    39
    9:r93  l0     5   29:r94  l0     0   27:r96  l0    40   12:r99  l0     5
   13:r102 l0     5    1:r104 l0    41    2:r105 l0     3    4:r106 l0    42
    5:r107 l0    43    6:r108 l0    37    7:r109 l0    38    3:r110 l0     2
   16:r111 l0     0   15:r112 l0     5   11:r114 l0     0   30:r118 l0     1
   28:r119 l0     0
New iteration of spill/restore move
+++Costs: overall 990, reg 990, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_approximate_sizes(leveldb_t*, int, const char* const*, const size_t*, const char* const*, const size_t*, uint64_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={6d,2u} r2={6d,2u} r4={6d,2u} r5={8d,4u} r6={1d,12u} r7={1d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,12u} r17={14d,5u} r18={4d} r19={4d} r20={1d,12u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={2d,5u} r89={1d,4u,1e} r91={1d,4u} r92={2d,2u} r93={2d,5u} r94={1d,1u} r96={1d,1u} r99={1d,2u} r102={2d,6u,4e} r104={1d,1u} r105={1d,4u} r106={1d,1u,1e} r107={1d,1u,1e} r108={1d,1u,1e} r109={1d,1u,1e} r110={1d,1u} r111={1d,1u} r112={1d,1u} r114={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 472{348d,115u,9e} in 56{52 regular + 4 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 89 104 105 106 107 108 109 110 111
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 104 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 105 [ num_ranges ])
        (reg:SI 4 si [ num_ranges ])) db/c.cc:257 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ranges ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ range_start_key ])
        (reg:DI 1 dx [ range_start_key ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ range_start_key ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 107 [ range_start_key_len ])
        (reg:DI 2 cx [ range_start_key_len ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ range_start_key_len ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 108 [ range_limit_key ])
        (reg:DI 37 r8 [ range_limit_key ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ range_limit_key ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 109 [ range_limit_key_len ])
        (reg:DI 38 r9 [ range_limit_key_len ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ range_limit_key_len ])
        (nil)))
(insn 8 7 9 2 (set (reg/v/f:DI 110 [ sizes ])
        (mem/f/c:DI (reg/f:DI 16 argp) [3 sizes+0 S8 A64])) db/c.cc:257 89 {*movdi_internal}
     (nil))
(note 9 8 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 9 15 2 (set (reg:DI 89 [ D.37188 ])
        (sign_extend:DI (reg/v:SI 105 [ num_ranges ]))) db/c.cc:258 142 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 111)
        (const_int 285978576338026496 [0x3f8000000000000])) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 285978576338026496 [0x3f8000000000000])
        (nil)))
(insn 16 15 17 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 89 [ D.37188 ])
            (reg:DI 111))) db/c.cc:258 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 89 [ D.37188 ])
                (const_int 285978576338026496 [0x3f8000000000000]))
            (nil))))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 29)
;;  succ:       3 [100.0%]  (FALLTHRU)
;;              5 [0.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 112
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (parallel [
            (set (reg:DI 112 [ D.37189 ])
                (ashift:DI (reg:DI 89 [ D.37188 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:258 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 112 [ D.37189 ])) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ D.37189 ])
        (nil)))
(call_insn 21 20 22 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x7fb538d99288 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) db/c.cc:258 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x7fb538d99288 operator new []>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 24 3 (set (reg/f:DI 91 [ D.37187 ])
        (reg:DI 0 ax)) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 113)
            (nil))))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.37188 ])
            (const_int 0 [0]))) db/c.cc:258 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 101 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 100)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 100)
;;  succ:       4 [9.0%]  (FALLTHRU)
;;              8 [91.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110

;; basic block 4, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 3, next block 5, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [9.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 101 25 102 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 102 101 103 4 (set (pc)
        (label_ref 33)) 654 {jump}
     (nil)
 -> 33)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110

(barrier 103 102 29)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 29 103 30 5 211 "" [1 uses])
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 31 30 32 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_throw_bad_array_new_length") [flags 0x41]  <function_decl 0x7fb5373b6288 __cxa_throw_bad_array_new_length>) [0 __cxa_throw_bad_array_new_length S1 A8])
            (const_int 0 [0]))) db/c.cc:258 669 {*call_value}
     (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_throw_bad_array_new_length") [flags 0x41]  <function_decl 0x7fb5373b6288 __cxa_throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 33)
;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;;              10 [100.0%]  (LOOP_EXIT)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 105
;; lr  def 	 17 [flags] 88 102
(code_label 33 32 34 6 212 "" [2 uses])
(note 34 33 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 70 34 11 6 (set (reg:DI 88 [ ivtmp.396 ])
        (reg/f:DI 91 [ D.37187 ])) 89 {*movdi_internal}
     (nil))
(insn 11 70 35 6 (set (reg:DI 102 [ ivtmp.391 ])
        (const_int 0 [0])) db/c.cc:259 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 35 11 36 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 105 [ num_ranges ])
            (const_int 0 [0]))) db/c.cc:259 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 36 35 83 6 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) db/c.cc:259 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 97)
;;  succ:       7 [9.0%]  (FALLTHRU)
;;              11 [91.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110

;; basic block 7, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU)
;;              12 [100.0%]  (LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 114
(code_label 83 36 37 7 216 "" [1 uses])
(note 37 83 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg/f:DI 99 [ D.37192 ])
        (mem/f:DI (reg/v/f:DI 104 [ db ]) [3 db_40(D)->rep+0 S8 A64])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ db ])
        (nil)))
(insn 39 38 40 7 (set (reg/f:DI 114 [ _41->_vptr.DB ])
        (mem/f:DI (reg/f:DI 99 [ D.37192 ]) [3 _41->_vptr.DB+0 S8 A64])) db/c.cc:263 89 {*movdi_internal}
     (nil))
(note 40 39 41 7 NOTE_INSN_DELETED)
(insn 41 40 42 7 (set (reg:DI 2 cx)
        (reg/v/f:DI 110 [ sizes ])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 110 [ sizes ])
        (nil)))
(insn 42 41 43 7 (set (reg:SI 1 dx)
        (reg/v:SI 105 [ num_ranges ])) db/c.cc:263 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 105 [ num_ranges ])
        (nil)))
(insn 43 42 44 7 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.37187 ])) db/c.cc:263 89 {*movdi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.37192 ])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.37192 ])
        (nil)))
(call_insn 45 44 46 7 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 114 [ _41->_vptr.DB ])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_44;(struct DB)_41->10) S1 A8])
        (const_int 0 [0])) db/c.cc:263 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _41->_vptr.DB ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 46 45 47 7 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37187 ])) db/c.cc:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37187 ])
        (nil)))
(call_insn/j 47 46 48 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) db/c.cc:264 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 100)
;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [91.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 92 93
(code_label 100 48 50 8 222 "" [1 uses])
(note 50 100 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 10 8 (set (reg:DI 93 [ ivtmp.410 ])
        (reg/f:DI 91 [ D.37187 ])) 89 {*movdi_internal}
     (nil))
(insn 10 51 64 8 (set (reg:DI 92 [ ivtmp.404 ])
        (const_int 0 [0])) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110

;; basic block 9, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              9 [91.0%]  (DFS_BACK)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 92 93
;; lr  def 	 17 [flags] 92 93
(code_label 64 10 52 9 215 "" [1 uses])
(note 52 64 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 52 56 9 (set (mem/f:DI (reg:DI 93 [ ivtmp.410 ]) [3 MEM[base: _36, offset: 0B]+0 S8 A64])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 56 55 58 9 (set (mem:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 8 [0x8])) [9 MEM[base: _36, offset: 8B]+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 58 56 59 9 (set (mem/f:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 16 [0x10])) [3 MEM[base: _36, offset: 16B]+0 S8 A64])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 59 58 60 9 (set (mem:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 24 [0x18])) [9 MEM[base: _36, offset: 24B]+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 92 [ ivtmp.404 ])
                (plus:DI (reg:DI 92 [ ivtmp.404 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 93 [ ivtmp.410 ])
                (plus:DI (reg:DI 93 [ ivtmp.410 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 61 63 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.37188 ])
            (reg:DI 92 [ ivtmp.404 ]))) db/c.cc:258 8 {*cmpdi_1}
     (nil))
(jump_insn 63 62 104 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 64)
;;  succ:       10 [9.0%]  (FALLTHRU)
;;              9 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110

;; basic block 10, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 9, next block 11, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       9 [9.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 104 63 105 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 105 104 106 10 (set (pc)
        (label_ref 33)) 654 {jump}
     (nil)
 -> 33)
;;  succ:       6 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110

(barrier 106 105 97)
;; basic block 11, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [91.0%] 
;;              11 [91.0%]  (DFS_BACK)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 102 105 106 107 108 109
;; lr  def 	 17 [flags] 88 94 96 102 118 119
(code_label 97 106 96 11 220 "" [2 uses])
(note 96 97 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 96 74 11 (set (reg:DI 94 [ D.37190 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 107 [ range_start_key_len ])) [9 MEM[base: range_start_key_len_25(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 107 [ range_start_key_len ])) [9 MEM[base: range_start_key_len_25(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])
        (nil)))
(insn 74 72 75 11 (set (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 106 [ range_start_key ])) [3 MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 106 [ range_start_key ])) [3 MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])
        (nil)))
(insn 75 74 76 11 (set (mem/f:DI (reg:DI 88 [ ivtmp.396 ]) [23 MEM[base: _4, offset: 0B]+0 S8 A64])
        (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (nil)))
(insn 76 75 77 11 (set (mem:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 8 [0x8])) [23 MEM[base: _4, offset: 8B]+0 S8 A64])
        (reg:DI 94 [ D.37190 ])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.37190 ])
        (nil)))
(insn 77 76 78 11 (set (reg:DI 96 [ D.37190 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 109 [ range_limit_key_len ])) [9 MEM[base: range_limit_key_len_32(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 109 [ range_limit_key_len ])) [9 MEM[base: range_limit_key_len_32(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])
        (nil)))
(insn 78 77 79 11 (set (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 108 [ range_limit_key ])) [3 MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 108 [ range_limit_key ])) [3 MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])
        (nil)))
(insn 79 78 80 11 (set (mem/f:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 16 [0x10])) [23 MEM[base: _4, offset: 16B]+0 S8 A64])
        (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (nil)))
(insn 80 79 81 11 (set (mem:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 24 [0x18])) [23 MEM[base: _4, offset: 24B]+0 S8 A64])
        (reg:DI 96 [ D.37190 ])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.37190 ])
        (nil)))
(insn 81 80 82 11 (parallel [
            (set (reg:DI 102 [ ivtmp.391 ])
                (plus:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 84 11 (parallel [
            (set (reg:DI 88 [ ivtmp.396 ])
                (plus:DI (reg:DI 88 [ ivtmp.396 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 82 85 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 105 [ num_ranges ])
            (subreg:SI (reg:DI 102 [ ivtmp.391 ]) 0))) db/c.cc:259 7 {*cmpsi_1}
     (nil))
(jump_insn 85 84 107 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) db/c.cc:259 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 97)
;;  succ:       12 [9.0%]  (FALLTHRU)
;;              11 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110

;; basic block 12, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 11, next block 1, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [9.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 107 85 108 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(jump_insn 108 107 109 12 (set (pc)
        (label_ref 83)) 654 {jump}
     (nil)
 -> 83)
;;  succ:       7 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110

(barrier 109 108 0)

;; Function void leveldb_compact_range(leveldb_t*, const char*, size_t, const char*, size_t) (leveldb_compact_range, funcdef_no=1442, decl_uid=2209, cgraph_uid=549, symbol_order=552)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 11 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { }
;; 10 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: def dominates all uses has unique first use
Reg 94: def dominates all uses has unique first use
Reg 95: def dominates all uses has unique first use
Reg 96: def dominates all uses has unique first use
Ignoring reg 100, has equiv memory
Reg 91: def dominates all uses has unique first use
Reg 91 not local to one basic block
Found def insn 2 for 92 to be not moveable
Reg 93 not local to one basic block
Reg 94 not local to one basic block
Reg 95 not local to one basic block
Reg 96 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 100: (insn_list:REG_DEP_TRUE 23 (nil))

Pass 0 for finding pseudo/allocno costs

    a8 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best CREG, allocno CREG
    a4 (r94,l0) best DREG, allocno DREG
    a5 (r93,l0) best SIREG, allocno SIREG
    a9 (r92,l0) best DIREG, allocno DIREG
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best DIREG, allocno DIREG
    a2 (r88,l0) best SIREG, allocno SIREG
    a3 (r87,l0) best DREG, allocno DREG

  a0(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20482,20482 NO_REX_SSE_REGS:20482,20482 SSE_REGS:20482,20482 MMX_REGS:25482,25482 INT_SSE_REGS:21482,21482 ALL_REGS:404884,404884 MEM:6693,6693
  a3(r87,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20250,20250 NO_REX_SSE_REGS:20250,20250 SSE_REGS:20250,20250 MMX_REGS:25250,25250 INT_SSE_REGS:21250,21250 ALL_REGS:399800,399800 MEM:6550,6550
  a4(r94,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15184,15184 NO_REX_SSE_REGS:15184,15184 SSE_REGS:15184,15184 MMX_REGS:19674,19674 INT_SSE_REGS:16082,16082 ALL_REGS:286784,286784 MEM:4592,4592
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23184,23184 NO_REX_SSE_REGS:23184,23184 SSE_REGS:23184,23184 MMX_REGS:32674,32674 INT_SSE_REGS:25082,25082 ALL_REGS:494784,494784 MEM:8592,8592
  a6(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14800,14800 NO_REX_SSE_REGS:14800,14800 SSE_REGS:14800,14800 MMX_REGS:19050,19050 INT_SSE_REGS:15650,15650 ALL_REGS:276800,276800 MEM:4400,4400
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22800,22800 NO_REX_SSE_REGS:22800,22800 SSE_REGS:22800,22800 MMX_REGS:32050,32050 INT_SSE_REGS:24650,24650 ALL_REGS:484800,484800 MEM:8400,8400
  a8(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a9(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20886,20886 NO_REX_SSE_REGS:20886,20886 SSE_REGS:20886,20886 MMX_REGS:25886,25886 INT_SSE_REGS:21886,21886 ALL_REGS:405288,405288 MEM:6996,6996
  a3(r87,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20850,20850 NO_REX_SSE_REGS:20850,20850 SSE_REGS:20850,20850 MMX_REGS:25850,25850 INT_SSE_REGS:21850,21850 ALL_REGS:400400,400400 MEM:7000,7000
  a4(r94,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19184,19184 NO_REX_SSE_REGS:19184,19184 SSE_REGS:19184,19184 MMX_REGS:23674,23674 INT_SSE_REGS:20082,20082 ALL_REGS:290784,290784 MEM:7592,7592
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27184,27184 NO_REX_SSE_REGS:27184,27184 SSE_REGS:27184,27184 MMX_REGS:36674,36674 INT_SSE_REGS:29082,29082 ALL_REGS:498784,498784 MEM:11592,11592
  a6(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18800,18800 NO_REX_SSE_REGS:18800,18800 SSE_REGS:18800,18800 MMX_REGS:23050,23050 INT_SSE_REGS:19650,19650 ALL_REGS:280800,280800 MEM:7400,7400
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26800,26800 NO_REX_SSE_REGS:26800,26800 SSE_REGS:26800,26800 MMX_REGS:36050,36050 INT_SSE_REGS:28650,28650 ALL_REGS:488800,488800 MEM:11400,11400
  a8(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a9(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 47(l0): point = 1
   Insn 46(l0): point = 4
   Insn 45(l0): point = 6
   Insn 42(l0): point = 8
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 39(l0): point = 14
   Insn 13(l0): point = 17
   Insn 63(l0): point = 20
   Insn 12(l0): point = 22
   Insn 36(l0): point = 24
   Insn 35(l0): point = 26
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 11(l0): point = 34
   Insn 61(l0): point = 37
   Insn 10(l0): point = 39
   Insn 29(l0): point = 41
   Insn 28(l0): point = 43
   Insn 26(l0): point = 46
   Insn 25(l0): point = 48
   Insn 24(l0): point = 50
   Insn 23(l0): point = 52
   Insn 22(l0): point = 54
   Insn 21(l0): point = 56
   Insn 20(l0): point = 58
   Insn 18(l0): point = 60
   Insn 17(l0): point = 62
   Insn 9(l0): point = 64
   Insn 6(l0): point = 66
   Insn 5(l0): point = 68
   Insn 4(l0): point = 70
   Insn 3(l0): point = 72
   Insn 2(l0): point = 74
 a0(r91): [9..50]
 a1(r89): [11..54]
 a2(r88): [20..22] [13..17]
 a3(r87): [37..39] [15..34]
 a4(r94): [25..70]
 a5(r93): [27..72]
 a6(r96): [42..66]
 a7(r95): [44..68]
 a8(r100): [51..52]
 a9(r92): [55..74]
Compressing live ranges: from 77 to 14 - 18%
Ranges after the compression:
 a0(r91): [0..9]
 a1(r89): [0..11]
 a2(r88): [0..3]
 a3(r87): [0..7]
 a4(r94): [4..13]
 a5(r93): [4..13]
 a6(r96): [8..13]
 a7(r95): [8..13]
 a8(r100): [10..11]
 a9(r92): [12..13]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r91,l0) conflicts: a2(r88,l0) a3(r87,l0) a1(r89,l0) a4(r94,l0) a5(r93,l0) a6(r96,l0) a7(r95,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a1(r89,l0) conflicts: a2(r88,l0) a3(r87,l0) a0(r91,l0) a4(r94,l0) a5(r93,l0) a6(r96,l0) a7(r95,l0) a8(r100,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a2(r88,l0) conflicts: a3(r87,l0) a0(r91,l0) a1(r89,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a3(r87,l0) conflicts: a2(r88,l0) a0(r91,l0) a1(r89,l0) a4(r94,l0) a5(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r94,l0) conflicts: a3(r87,l0) a0(r91,l0) a1(r89,l0) a5(r93,l0) a6(r96,l0) a7(r95,l0) a8(r100,l0) a9(r92,l0)
;;     total conflict hard regs: 2 37
;;     conflict hard regs: 2 37

;; a5(r93,l0) conflicts: a3(r87,l0) a0(r91,l0) a1(r89,l0) a4(r94,l0) a6(r96,l0) a7(r95,l0) a8(r100,l0) a9(r92,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a6(r96,l0) conflicts: a0(r91,l0) a1(r89,l0) a4(r94,l0) a5(r93,l0) a7(r95,l0) a8(r100,l0) a9(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r95,l0) conflicts: a0(r91,l0) a1(r89,l0) a4(r94,l0) a5(r93,l0) a6(r96,l0) a8(r100,l0) a9(r92,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

;; a8(r100,l0) conflicts: a1(r89,l0) a4(r94,l0) a5(r93,l0) a6(r96,l0) a7(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r92,l0) conflicts: a4(r94,l0) a5(r93,l0) a6(r96,l0) a7(r95,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

  pref0:a7(r95)<-hr2@1500
  pref1:a4(r94)<-hr1@1500
  pref2:a5(r93)<-hr4@1500
  pref3:a9(r92)<-hr5@1500
  pref4:a1(r89)<-hr5@1500
  pref5:a2(r88)<-hr4@1500
  pref6:a3(r87)<-hr1@1500
  pref7:a6(r96)<-hr37@2000
  regions=1, blocks=11, points=14
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r91 1r89 2r88 3r87 4r94 5r93 6r96 7r95 8r100 9r92
    modified regnos: 87 88 89 91 92 93 94 95 96 100
    border:
    Pressure: GENERAL_REGS=6
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@42800
          2:( 0 2 3 5 6 37-44)@36000
            3:( 0 3 5 6 38-44)@61776
      Allocno a0r91 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2 3 5 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a2r88 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a3r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r94 of GENERAL_REGS(15) has 13 avail. regs  0 1 3-6 38-44, ^node:  0-6 37-44 (confl regs =  2 7-37 45-79)
      Allocno a5r93 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, ^node:  0-6 37-44 (confl regs =  1 2 7-37 45-79)
      Allocno a6r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, ^node:  0-6 37-44 (confl regs =  7-37 45-79)
      Allocno a8r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r92 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, node:  0 3 5 6 38-44 (confl regs =  1 2 4 7-37 45-79)
      Pushing a6(r96,l0)(cost 0)
      Pushing a4(r94,l0)(cost 0)
      Pushing a2(r88,l0)(cost 0)
      Pushing a9(r92,l0)(cost 0)
      Pushing a8(r100,l0)(cost 0)
      Pushing a3(r87,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a5(r93,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Popping a1(r89,l0)  -- assign reg 5
      Popping a5(r93,l0)  -- assign reg 4
      Popping a7(r95,l0)  -- assign reg 2
      Popping a0(r91,l0)  -- assign reg 0
      Popping a3(r87,l0)  -- assign reg 2
      Popping a8(r100,l0)  -- assign reg 0
      Popping a9(r92,l0)  -- assign reg 5
      Popping a2(r88,l0)  -- assign reg 4
      Popping a4(r94,l0)  -- assign reg 1
      Popping a6(r96,l0)  -- assign reg 37
Disposition:
    3:r87  l0     2    2:r88  l0     4    1:r89  l0     5    0:r91  l0     0
    9:r92  l0     5    5:r93  l0     4    4:r94  l0     1    7:r95  l0     2
    6:r96  l0    37    8:r100 l0     0
New iteration of spill/restore move
+++Costs: overall -22000, reg -22000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_compact_range(leveldb_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,10u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u} r17={8d,3u} r18={2d} r19={2d} r20={1d,22u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={2d,1u} r88={2d,1u} r89={1d,2u,1e} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,2u} r96={1d,1u} r100={1d,1u} 
;;    total ref usage 264{184d,77u,3e} in 34{32 regular + 2 call} insns.
(note 1 0 14 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 89 91 92 93 94 95 96 100
(note 14 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 92 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ start_key ])
        (reg:DI 4 si [ start_key ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ start_key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:DI 94 [ start_key_len ])
        (reg:DI 1 dx [ start_key_len ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ start_key_len ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 95 [ limit_key ])
        (reg:DI 2 cx [ limit_key ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ limit_key ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:DI 96 [ limit_key_len ])
        (reg:DI 37 r8 [ limit_key_len ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ limit_key_len ])
        (nil)))
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 17 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37202+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:270 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 9 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 a.data_+0 S8 A128])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 18 17 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 a.size_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 20 18 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 b.data_+0 S8 A128])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 b.size_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 89 [ D.37199 ])
        (mem/f:DI (reg/v/f:DI 92 [ db ]) [3 db_8(D)->rep+0 S8 A64])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ db ])
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 100 [ _9->_vptr.DB ])
        (mem/f:DI (reg/f:DI 89 [ D.37199 ]) [3 _9->_vptr.DB+0 S8 A64])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 89 [ D.37199 ]) [3 _9->_vptr.DB+0 S8 A64])
        (nil)))
(insn 24 23 25 2 (set (reg/f:DI 91 [ D.37201 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _9->_vptr.DB ])
                (const_int 88 [0x58])) [3 MEM[(int (*__vtbl_ptr_type) () *)_10 + 88B]+0 S8 A64])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _9->_vptr.DB ])
        (nil)))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ limit_key ])
            (const_int 0 [0]))) db/c.cc:272 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) db/c.cc:272 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 54)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              4 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96
;; lr  def 	 17 [flags] 87
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [13 MEM[(struct Slice *)&b]+0 S8 A128])
        (reg/v/f:DI 95 [ limit_key ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ limit_key ])
        (nil)))
(insn 29 28 10 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [13 MEM[(struct Slice *)&b + 8B]+0 S8 A64])
        (reg/v:DI 96 [ limit_key_len ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 96 [ limit_key_len ])
        (nil)))
(insn 10 29 61 3 (parallel [
            (set (reg/f:DI 87 [ D.37198 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:272 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(jump_insn 61 10 62 3 (set (pc)
        (label_ref 30)) 654 {jump}
     (nil)
 -> 30)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

(barrier 62 61 54)
;; basic block 4, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [15.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 54 62 53 4 228 "" [1 uses])
(note 53 54 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 53 30 4 (set (reg/f:DI 87 [ D.37198 ])
        (const_int 0 [0])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
(code_label 30 11 31 5 225 "" [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ start_key ])
            (const_int 0 [0]))) db/c.cc:272 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) db/c.cc:272 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 58)
;;  succ:       6 [89.9%]  (FALLTHRU)
;;              7 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [89.9%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  def 	 17 [flags] 88
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [13 MEM[(struct Slice *)&a]+0 S8 A128])
        (reg/v/f:DI 93 [ start_key ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ start_key ])
        (nil)))
(insn 36 35 12 6 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [13 MEM[(struct Slice *)&a + 8B]+0 S8 A64])
        (reg/v:DI 94 [ start_key_len ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 94 [ start_key_len ])
        (nil)))
(insn 12 36 63 6 (parallel [
            (set (reg/f:DI 88 [ D.37198 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:272 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(jump_insn 63 12 64 6 (set (pc)
        (label_ref 37)) 654 {jump}
     (nil)
 -> 37)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91

(barrier 64 63 58)
;; basic block 7, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [10.1%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
(code_label 58 64 57 7 229 "" [1 uses])
(note 57 58 13 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 13 57 37 7 (set (reg/f:DI 88 [ D.37198 ])
        (const_int 0 [0])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 37 13 38 8 226 "" [1 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.37198 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37198 ])
        (nil)))
(insn 40 39 41 8 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.37198 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37198 ])
        (nil)))
(insn 41 40 42 8 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37199 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37199 ])
        (nil)))
(call_insn 42 41 45 8 (call (mem:QI (reg/f:DI 91 [ D.37201 ]) [0 *OBJ_TYPE_REF(_11;(struct DB)_9->11) S1 A8])
        (const_int 0 [0])) db/c.cc:275 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37201 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 45 42 46 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37202+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:276 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 46 45 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) db/c.cc:276 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 49)
;;  succ:       10 [100.0%] 
;;              9 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 4
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [0.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 59 46 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 47 59 48 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:276 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 48 47 49)
;; basic block 10, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 9, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 49 48 60 10 227 "" [1 uses])
(note 60 49 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_destroy_db(const leveldb_options_t*, const char*, char**) (leveldb_destroy_db, funcdef_no=1443, decl_uid=2213, cgraph_uid=550, symbol_order=553)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 36 count 29 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 99: def dominates all uses has unique first use
Reg 100 uninteresting (no unique first use)
Reg 101: def dominates all uses has unique first use
Reg 108 uninteresting
Ignoring reg 112, has equiv memory
Ignoring reg 113, has equiv memory
Reg 89 uninteresting
Reg 91: def dominates all uses has unique first use
Reg 125: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 90: def dominates all uses has unique first use
Reg 90 not local to one basic block
Reg 91 not local to one basic block
Reg 99 not local to one basic block
Reg 101 not local to one basic block
Reg 125 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;; 2 succs { 3 25 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 21 12 }
;; 12 succs { 17 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 26 }
;; 16 succs { 26 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { }
;; 25 succs { }
;; 26 succs { 28 27 }
;; 27 succs { }
;; 28 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 112: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 48 (nil))
Reg 131 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a10 (r132,l0) best SIREG, allocno SIREG
    a3 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best AREG, allocno AREG
    a0 (r124,l0) best AREG, allocno AREG
    a7 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r108,l0) best AREG, allocno AREG
    a17 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r101,l0) best DREG, allocno DREG
    a15 (r100,l0) best SIREG, allocno SIREG
    a11 (r99,l0) best DIREG, allocno DIREG
    a14 (r94,l0) best DIREG, allocno DIREG
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno DIREG
    a1 (r90,l0) best DIREG, allocno DIREG
    a8 (r89,l0) best DIREG, allocno DIREG
    a5 (r88,l0) best DIREG, allocno DIREG

  a0(r124,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a2(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r125,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26244,26244 NO_REX_SSE_REGS:26244,26244 SSE_REGS:26244,26244 MMX_REGS:35154,35154 INT_SSE_REGS:28026,28026 ALL_REGS:474552,474552 MEM:9342,9342
  a7(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a8(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-698,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25564,25564 NO_REX_SSE_REGS:25564,25564 SSE_REGS:25564,25564 MMX_REGS:34049,34049 INT_SSE_REGS:27261,27261 ALL_REGS:456872,456872 MEM:10086,10086
  a9(r101,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a10(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31270,31270 NO_REX_SSE_REGS:31270,31270 SSE_REGS:31270,31270 MMX_REGS:42705,42705 INT_SSE_REGS:33557,33557 ALL_REGS:683280,683280 MEM:10853,10853
  a11(r99,l0) costs: AREG:0,0 DREG:-999,-999 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a12(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37472,37472 NO_REX_SSE_REGS:37472,37472 SSE_REGS:37472,37472 MMX_REGS:53557,53557 INT_SSE_REGS:40689,40689 ALL_REGS:801484,801484 MEM:14406,14406
  a13(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17232,17232 NO_REX_SSE_REGS:17232,17232 SSE_REGS:17232,17232 MMX_REGS:22227,22227 INT_SSE_REGS:18231,18231 ALL_REGS:308940,308940 MEM:5931,5931
  a14(r94,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-312,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7296,7296 NO_REX_SSE_REGS:7296,7296 SSE_REGS:7296,7296 MMX_REGS:10301,10301 INT_SSE_REGS:7897,7897 ALL_REGS:156108,156108 MEM:2403,2403
  a15(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1312,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29672,29672 NO_REX_SSE_REGS:29672,29672 SSE_REGS:29672,29672 MMX_REGS:43217,43217 INT_SSE_REGS:32381,32381 ALL_REGS:663472,663472 MEM:10525,10525
  a16(r108,l0) costs: AREG:-999,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34464,34464 NO_REX_SSE_REGS:34464,34464 SSE_REGS:34464,34464 MMX_REGS:51009,51009 INT_SSE_REGS:37773,37773 ALL_REGS:788172,788172 MEM:11925,11925
  a17(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a18(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a19(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5780,5780 NO_REX_SSE_REGS:5780,5780 SSE_REGS:5780,5780 MMX_REGS:7225,7225 INT_SSE_REGS:6069,6069 ALL_REGS:90168,90168 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a2(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r131,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r125,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27243,27243 NO_REX_SSE_REGS:27243,27243 SSE_REGS:27243,27243 MMX_REGS:36153,36153 INT_SSE_REGS:29025,29025 ALL_REGS:478548,478548 MEM:9342,9342
  a7(r123,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a8(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26563,26563 NO_REX_SSE_REGS:26563,26563 SSE_REGS:26563,26563 MMX_REGS:35048,35048 INT_SSE_REGS:28260,28260 ALL_REGS:460868,460868 MEM:10086,10086
  a9(r101,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a10(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31270,31270 NO_REX_SSE_REGS:31270,31270 SSE_REGS:31270,31270 MMX_REGS:42705,42705 INT_SSE_REGS:33557,33557 ALL_REGS:683280,683280 MEM:10853,10853
  a11(r99,l0) costs: AREG:0,0 DREG:-999,-999 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a12(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:41780,41780 NO_REX_SSE_REGS:41780,41780 SSE_REGS:41780,41780 MMX_REGS:57865,57865 INT_SSE_REGS:44997,44997 ALL_REGS:806728,806728 MEM:17403,17403
  a13(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20292,20292 NO_REX_SSE_REGS:20292,20292 SSE_REGS:20292,20292 MMX_REGS:25287,25287 INT_SSE_REGS:21291,21291 ALL_REGS:312936,312936 MEM:7992,7992
  a14(r94,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8540,8540 NO_REX_SSE_REGS:8540,8540 SSE_REGS:8540,8540 MMX_REGS:11545,11545 INT_SSE_REGS:9141,9141 ALL_REGS:157352,157352 MEM:3336,3336
  a15(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33672,33672 NO_REX_SSE_REGS:33672,33672 SSE_REGS:33672,33672 MMX_REGS:47217,47217 INT_SSE_REGS:36381,36381 ALL_REGS:667472,667472 MEM:13525,13525
  a16(r108,l0) costs: AREG:0,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38460,38460 NO_REX_SSE_REGS:38460,38460 SSE_REGS:38460,38460 MMX_REGS:55005,55005 INT_SSE_REGS:41769,41769 ALL_REGS:792168,792168 MEM:14922,14922
  a17(r106,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a18(r113,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a19(r112,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6069,6069 NO_REX_SSE_REGS:6069,6069 SSE_REGS:6069,6069 MMX_REGS:7514,7514 INT_SSE_REGS:6358,6358 ALL_REGS:91324,91324 MEM:0,0

   Insn 146(l0): point = 1
   Insn 145(l0): point = 4
   Insn 144(l0): point = 6
   Insn 140(l0): point = 9
   Insn 139(l0): point = 11
   Insn 135(l0): point = 14
   Insn 134(l0): point = 16
   Insn 130(l0): point = 19
   Insn 129(l0): point = 21
   Insn 127(l0): point = 24
   Insn 126(l0): point = 26
   Insn 125(l0): point = 28
   Insn 123(l0): point = 30
   Insn 155(l0): point = 33
   Insn 194(l0): point = 36
   Insn 119(l0): point = 38
   Insn 116(l0): point = 41
   Insn 115(l0): point = 43
   Insn 113(l0): point = 46
   Insn 112(l0): point = 48
   Insn 111(l0): point = 50
   Insn 161(l0): point = 53
   Insn 192(l0): point = 56
   Insn 104(l0): point = 58
   Insn 103(l0): point = 60
   Insn 101(l0): point = 63
   Insn 100(l0): point = 65
   Insn 99(l0): point = 67
   Insn 97(l0): point = 69
   Insn 94(l0): point = 72
   Insn 93(l0): point = 74
   Insn 91(l0): point = 77
   Insn 90(l0): point = 79
   Insn 89(l0): point = 81
   Insn 87(l0): point = 84
   Insn 86(l0): point = 86
   Insn 85(l0): point = 88
   Insn 82(l0): point = 91
   Insn 81(l0): point = 93
   Insn 80(l0): point = 95
   Insn 79(l0): point = 97
   Insn 76(l0): point = 99
   Insn 75(l0): point = 101
   Insn 72(l0): point = 104
   Insn 71(l0): point = 106
   Insn 68(l0): point = 108
   Insn 67(l0): point = 110
   Insn 66(l0): point = 112
   Insn 65(l0): point = 114
   Insn 175(l0): point = 117
   Insn 9(l0): point = 119
   Insn 190(l0): point = 122
   Insn 174(l0): point = 124
   Insn 57(l0): point = 126
   Insn 54(l0): point = 129
   Insn 53(l0): point = 131
   Insn 188(l0): point = 134
   Insn 173(l0): point = 136
   Insn 11(l0): point = 138
   Insn 48(l0): point = 140
   Insn 47(l0): point = 142
   Insn 45(l0): point = 145
   Insn 44(l0): point = 147
   Insn 186(l0): point = 150
   Insn 39(l0): point = 152
   Insn 38(l0): point = 154
   Insn 37(l0): point = 156
   Insn 36(l0): point = 158
   Insn 35(l0): point = 160
   Insn 34(l0): point = 162
   Insn 33(l0): point = 164
   Insn 32(l0): point = 166
   Insn 30(l0): point = 168
   Insn 28(l0): point = 171
   Insn 27(l0): point = 173
   Insn 26(l0): point = 175
   Insn 25(l0): point = 177
   Insn 23(l0): point = 179
   Insn 22(l0): point = 181
   Insn 21(l0): point = 183
   Insn 19(l0): point = 186
   Insn 18(l0): point = 188
   Insn 17(l0): point = 190
   Insn 16(l0): point = 192
   Insn 15(l0): point = 194
   Insn 7(l0): point = 196
   Insn 4(l0): point = 198
   Insn 3(l0): point = 200
   Insn 2(l0): point = 202
 a0(r124): [36..38] [17..33]
 a1(r90): [22..30]
 a2(r129): [27..28]
 a3(r131): [68..194] [29..55]
 a4(r125): [39..53]
 a5(r88): [44..50]
 a6(r91): [61..69]
 a7(r123): [66..67]
 a8(r89): [75..81]
 a9(r101): [87..198]
 a10(r132): [150..168] [134..136] [122..124] [89..117]
 a11(r99): [98..202]
 a12(r92): [171..177] [122..149] [100..106]
 a13(r93): [134..138] [122..126] [100..104]
 a14(r94): [150..158] [111..119]
 a15(r100): [143..200] [129..133] [113..121]
 a16(r108): [145..179] [129..133] [115..121]
 a17(r106): [171..192] [139..149] [127..133] [120..121]
 a18(r113): [141..142]
 a19(r112): [153..154]
Compressing live ranges: from 205 to 34 - 16%
Ranges after the compression:
 a0(r124): [0..5]
 a1(r90): [0..3]
 a2(r129): [0..1]
 a3(r131): [10..33] [2..7]
 a4(r125): [6..7]
 a5(r88): [6..7]
 a6(r91): [8..11]
 a7(r123): [8..9]
 a8(r89): [12..13]
 a9(r101): [14..33]
 a10(r132): [30..31] [24..25] [20..21] [14..17]
 a11(r99): [14..33]
 a12(r92): [32..33] [20..29] [14..15]
 a13(r93): [24..25] [20..21] [14..15]
 a14(r94): [30..31] [16..17]
 a15(r100): [28..33] [22..23] [16..19]
 a16(r108): [28..33] [22..23] [16..19]
 a17(r106): [32..33] [26..29] [22..23] [18..19]
 a18(r113): [26..27]
 a19(r112): [30..31]
+++Allocating 160 bytes for conflict table (uncompressed size 160)
;; a0(r124,l0) conflicts: a2(r129,l0) a1(r90,l0) a3(r131,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r90,l0) conflicts: a2(r129,l0) a0(r124,l0) a3(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r129,l0) conflicts: a1(r90,l0) a0(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r131,l0) conflicts: a1(r90,l0) a0(r124,l0) a4(r125,l0) a5(r88,l0) a6(r91,l0) a8(r89,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r125,l0) conflicts: a3(r131,l0) a5(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r88,l0) conflicts: a3(r131,l0) a4(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r91,l0) conflicts: a3(r131,l0) a7(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r123,l0) conflicts: a6(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r89,l0) conflicts: a3(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r101,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a10(r132,l0) conflicts: a3(r131,l0) a13(r93,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a11(r99,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r92,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r93,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r94,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a15(r100,l0) a16(r108,l0) a19(r112,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a15(r100,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a16(r108,l0) a17(r106,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a16(r108,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a17(r106,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a17(r106,l0) conflicts: a3(r131,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a15(r100,l0) a16(r108,l0) a18(r113,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a18(r113,l0) conflicts: a3(r131,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a17(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r112,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r129)<->a3(r131)@1:shuffle
  cp1:a0(r124)<->a4(r125)@1:move
  cp2:a3(r131)<->a7(r123)@124:shuffle
  cp3:a14(r94)<->a17(r106)@22:move
  cp4:a13(r93)<->a17(r106)@488:move
  cp5:a13(r93)<->a17(r106)@199:move
  pref0:a10(r132)<-hr4@1787
  pref1:a16(r108)<-hr0@1498
  pref2:a9(r101)<-hr1@1500
  pref3:a15(r100)<-hr4@1968
  pref4:a11(r99)<-hr5@1500
  pref5:a14(r94)<-hr5@468
  pref6:a6(r91)<-hr5@1174
  pref7:a8(r89)<-hr5@1047
  pref8:a0(r124)<-hr5@1
  pref9:a1(r90)<-hr5@1
  pref10:a0(r124)<-hr0@1
  pref11:a5(r88)<-hr5@1
  pref12:a4(r125)<-hr0@1
  pref13:a9(r101)<-hr5@999
  pref14:a11(r99)<-hr1@999
  pref15:a3(r131)<-hr4@999
  pref16:a10(r132)<-hr5@999
  pref17:a16(r108)<-hr1@312
  pref18:a3(r131)<-hr5@289
  pref19:a14(r94)<-hr0@289
  pref20:a15(r100)<-hr5@999
  regions=1, blocks=29, points=34
    allocnos=20 (big 0), copies=6, conflicts=0, ranges=36

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r124 1r90 2r129 3r131 4r125 5r88 6r91 7r123 8r89 9r101 10r132 11r99 12r92 13r93 14r94 15r100 16r108 17r106 18r113 19r112
    modified regnos: 88 89 90 91 92 93 94 99 100 101 106 108 112 113 123 124 125 129 131 132
    border:
    Pressure: GENERAL_REGS=9
 Removing pref8:hr5@1
 Removing pref18:hr5@289
 Removing pref15:hr4@999
 Removing pref13:hr5@999
 Removing pref2:hr1@1500
 Removing pref16:hr5@999
 Removing pref0:hr4@1787
 Removing pref14:hr1@999
 Removing pref4:hr5@1500
 Removing pref20:hr5@999
 Removing pref3:hr4@1968
 Removing pref17:hr1@312
 Removing pref1:hr0@1498
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@110586
          2:( 1-4 6 37-44)@20254
            3:( 2 3 6 37-44)@61166
              4:( 3 6 41-44)@79429
      Allocno a0r124 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r131 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r125 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r101 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a10r132 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a11r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a12r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r94 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a15r100 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a16r108 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a17r106 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a18r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 4:a13r93-a17r106 (freq=488):
        Result (freq=4707): a13r93(1998) a17r106(2709)
      Forming thread by copy 3:a14r94-a17r106 (freq=22):
        Result (freq=5619): a14r94(912) a13r93(1998) a17r106(2709)
      Forming thread by copy 0:a2r129-a3r131 (freq=1):
        Result (freq=4290): a2r129(2) a3r131(4288)
      Forming thread by copy 1:a0r124-a4r125 (freq=1):
        Result (freq=5): a0r124(3) a4r125(2)
      Pushing a5(r88,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a4(r125,l0)(cost 0)
      Pushing a0(r124,l0)(cost 0)
      Pushing a18(r113,l0)(cost 0)
      Pushing a19(r112,l0)(cost 0)
      Pushing a7(r123,l0)(cost 0)
      Pushing a8(r89,l0)(cost 0)
      Pushing a6(r91,l0)(cost 0)
      Pushing a15(r100,l0)(cost 0)
      Pushing a2(r129,l0)(cost 0)
      Pushing a16(r108,l0)(cost 0)
      Pushing a12(r92,l0)(cost 0)
        Making a10(r132,l0) colorable
      Pushing a10(r132,l0)(cost 10853)
      Forming thread by copy 2:a3r131-a7r123 (freq=124):
        Result (freq=6288): a2r129(2) a7r123(1998) a3r131(4288)
        Making a3(r131,l0) colorable
        Making a9(r101,l0) colorable
        Making a11(r99,l0) colorable
      Pushing a11(r99,l0)(cost 6997)
      Pushing a9(r101,l0)(cost 6997)
      Pushing a14(r94,l0)(cost 0)
      Pushing a13(r93,l0)(cost 0)
      Pushing a17(r106,l0)(cost 0)
      Pushing a3(r131,l0)(cost 14864)
      Popping a3(r131,l0)  -- assign reg 3
      Popping a17(r106,l0)  -- assign reg 6
      Popping a13(r93,l0)  -- assign reg 6
      Popping a14(r94,l0)  -- assign reg 5
      Popping a9(r101,l0)  -- assign reg 41
      Popping a11(r99,l0)  -- assign reg 42
      Popping a10(r132,l0)  -- assign reg 43
      Popping a12(r92,l0)  -- assign reg 0
      Popping a16(r108,l0)  -- assign reg 44
      Popping a2(r129,l0)  -- assign reg 3
      Popping a15(r100,l0)  -- assign reg 2
      Popping a6(r91,l0)  -- assign reg 5
      Popping a8(r89,l0)  -- assign reg 5
      Popping a7(r123,l0)  -- assign reg 3
      Popping a19(r112,l0)  -- assign reg 0
      Popping a18(r113,l0)  -- assign reg 1
      Popping a0(r124,l0)  -- assign reg 6
      Popping a4(r125,l0)  -- assign reg 6
      Popping a1(r90,l0)  -- assign reg 5
      Popping a5(r88,l0)  -- assign reg 5
Spilling a9r101 for a15r100
Assigning 41 to a15r100
       a9(r101,l0)  -- assign memory
Disposition:
    5:r88  l0     5    8:r89  l0     5    1:r90  l0     5    6:r91  l0     5
   12:r92  l0     0   13:r93  l0     6   14:r94  l0     5   11:r99  l0    42
   15:r100 l0    41    9:r101 l0   mem   17:r106 l0     6   16:r108 l0    44
   19:r112 l0     0   18:r113 l0     1    7:r123 l0     3    0:r124 l0     6
    4:r125 l0     6    2:r129 l0     3    3:r131 l0     3   10:r132 l0    43
New iteration of spill/restore move
+++Costs: overall 1612, reg -5385, mem 6997, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_destroy_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,12e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1180{948d,220u,12e} in 89{77 regular + 12 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 99 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 101 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37221+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:281 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31531]._M_p+0 S8 A128])
        (reg/f:DI 106)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 137)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              25 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 25 3 (set (reg:DI 108)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 23 26 3 (set (reg:DI 92 [ D.37218 ])
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (reg:DI 108)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 42)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 4 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 32 30 33 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 132)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 131)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 4 (set (reg/f:DI 94 [ D.37217 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])
        (reg/f:DI 94 [ D.37217 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 112 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (nil)))
(insn 39 38 186 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31531 + 16B]+0 S8 A128])
        (reg:DI 112 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ __dnew ])
        (nil)))
(jump_insn 186 39 187 4 (set (pc)
        (label_ref 60)) 654 {jump}
     (nil)
 -> 60)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

(barrier 187 186 42)
;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(code_label 42 187 43 5 235 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37218 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 51)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 100 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31531 + 16]+0 S1 A128])
            (nil))))
(insn 48 47 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31531 + 16]+0 S1 A128])
        (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 48 173 6 (set (reg/f:DI 93 [ D.37217 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 173 11 188 6 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(jump_insn 188 173 189 6 (set (pc)
        (label_ref 73)) 654 {jump}
     (nil)
 -> 73)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

(barrier 189 188 51)
;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(code_label 51 189 52 7 237 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37218 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 151)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 174 8 (set (reg/f:DI 93 [ D.37217 ])
        (reg/f:DI 106)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 174 57 190 8 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(jump_insn 190 174 191 8 (set (pc)
        (label_ref 73)) 654 {jump}
     (nil)
 -> 73)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

(barrier 191 190 151)
;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
(code_label 151 191 150 9 246 "" [1 uses])
(note 150 151 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 150 175 9 (set (reg/f:DI 94 [ D.37217 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 175 9 60 9 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
(code_label 60 175 61 10 236 "" [1 uses])
(note 61 60 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 61 66 10 (set (reg:DI 1 dx)
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 66 65 67 10 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37217 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37217 ])
        (nil)))
(call_insn 68 67 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 68 72 10 (set (reg:DI 92 [ D.37218 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:DI 93 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              8 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 73 72 74 11 238 "" [2 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31531 + 8B]+0 S8 A64])
        (reg:DI 92 [ D.37218 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 76 75 79 11 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.37217 ])
                (reg:DI 92 [ D.37218 ])) [0 MEM[(char_type &)_47]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37217 ])
        (expr_list:REG_DEAD (reg:DI 92 [ D.37218 ])
            (nil))))
(insn 79 76 80 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 99 [ options ])) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ options ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 4 si)
        (reg/f:DI 131)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 81 80 82 11 (set (reg:DI 5 di)
        (reg/f:DI 132)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 82 81 83 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb9DestroyDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378210d8 DestroyDB>) [0 DestroyDB S1 A8])
        (const_int 0 [0])) db/c.cc:282 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb9DestroyDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378210d8 DestroyDB>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 83 82 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 12 (set (reg:DI 4 si)
        (reg/f:DI 132)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ errptr ])) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ errptr ])
        (nil)))
(call_insn 87 86 88 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:282 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg/f:DI 89 [ D.37216 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31532.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.37216 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 95)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37216 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37216 ])
        (nil)))
(call_insn 94 93 95 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
(code_label 95 94 96 15 239 "" [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 15 (set (reg/f:DI 91 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 99 97 100 15 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37217 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 142)
;;  succ:       16 [78.3%]  (FALLTHRU)
;;              26 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 16, loop depth 0, count 0, freq 7832, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [78.3%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37217 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37217 ])
        (nil)))
(call_insn 104 103 192 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 192 104 193 16 (set (pc)
        (label_ref 142)) db/c.cc:283 654 {jump}
     (nil)
 -> 142)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 193 192 160)
;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
(code_label/s 160 193 163 17 248 "" [1 uses])
(note 163 160 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 161 163 109 17 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(code_label 109 161 110 18 241 "" [0 uses])
(note 110 109 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 18 (set (reg/f:DI 88 [ D.37216 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31532.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37216 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37216 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37216 ])
        (nil)))
(call_insn 116 115 117 19 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
(code_label 117 116 118 20 242 "" [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 194 20 (set (reg:DI 124)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(jump_insn 194 119 195 20 (set (pc)
        (label_ref 121)) 654 {jump}
     (nil)
 -> 121)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

(barrier 195 194 154)
;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
(code_label/s 154 195 159 21 247 "" [1 uses])
(note 159 154 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 159 121 21 (set (reg:DI 124)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
(code_label 121 155 122 22 243 "" [1 uses])
(note 122 121 123 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 125 22 (set (reg/f:DI 90 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 125 123 126 22 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37217 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 127 126 128 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 131)
;;  succ:       23 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [69.8%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 128 127 129 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 23 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37217 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37217 ])
        (nil)))
(call_insn 130 129 131 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [30.2%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 131 130 132 24 244 "" [1 uses])
(note 132 131 134 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 134 132 135 24 (set (reg:DI 5 di)
        (reg:DI 124)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 135 134 136 24 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 136 135 137)
;; basic block 25, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 137 136 138 25 234 "" [1 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 140 139 141 25 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 141 140 142)
;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [21.6%] 
;;              16 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 142 141 149 26 233 "" [2 uses])
(note 149 142 144 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 144 149 145 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37221+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:283 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 145 144 152 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) db/c.cc:283 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 148)
;;  succ:       28 [100.0%] 
;;              27 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 4
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [0.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 152 145 146 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 152 147 27 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:283 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 147 146 148)
;; basic block 28, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 27, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 148 147 153 28 245 "" [1 uses])
(note 153 148 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_repair_db(const leveldb_options_t*, const char*, char**) (leveldb_repair_db, funcdef_no=1444, decl_uid=2217, cgraph_uid=551, symbol_order=554)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 36 count 29 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 99: def dominates all uses has unique first use
Reg 100 uninteresting (no unique first use)
Reg 101: def dominates all uses has unique first use
Reg 108 uninteresting
Ignoring reg 112, has equiv memory
Ignoring reg 113, has equiv memory
Reg 89 uninteresting
Reg 91: def dominates all uses has unique first use
Reg 125: def dominates all uses has unique first use
Reg 88 uninteresting
Reg 90: def dominates all uses has unique first use
Reg 90 not local to one basic block
Reg 91 not local to one basic block
Reg 99 not local to one basic block
Reg 101 not local to one basic block
Reg 125 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;; 2 succs { 3 25 }
;; 3 succs { 4 5 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 11 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 21 12 }
;; 12 succs { 17 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 26 }
;; 16 succs { 26 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { }
;; 25 succs { }
;; 26 succs { 28 27 }
;; 27 succs { }
;; 28 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 112: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 48 (nil))
Reg 131 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a10 (r132,l0) best SIREG, allocno SIREG
    a3 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best AREG, allocno AREG
    a0 (r124,l0) best AREG, allocno AREG
    a7 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r108,l0) best AREG, allocno AREG
    a17 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r101,l0) best DREG, allocno DREG
    a15 (r100,l0) best SIREG, allocno SIREG
    a11 (r99,l0) best DIREG, allocno DIREG
    a14 (r94,l0) best DIREG, allocno DIREG
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best DIREG, allocno DIREG
    a1 (r90,l0) best DIREG, allocno DIREG
    a8 (r89,l0) best DIREG, allocno DIREG
    a5 (r88,l0) best DIREG, allocno DIREG

  a0(r124,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a2(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r131,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r125,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26244,26244 NO_REX_SSE_REGS:26244,26244 SSE_REGS:26244,26244 MMX_REGS:35154,35154 INT_SSE_REGS:28026,28026 ALL_REGS:474552,474552 MEM:9342,9342
  a7(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a8(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-698,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25564,25564 NO_REX_SSE_REGS:25564,25564 SSE_REGS:25564,25564 MMX_REGS:34049,34049 INT_SSE_REGS:27261,27261 ALL_REGS:456872,456872 MEM:10086,10086
  a9(r101,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a10(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31270,31270 NO_REX_SSE_REGS:31270,31270 SSE_REGS:31270,31270 MMX_REGS:42705,42705 INT_SSE_REGS:33557,33557 ALL_REGS:683280,683280 MEM:10853,10853
  a11(r99,l0) costs: AREG:0,0 DREG:-999,-999 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a12(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37472,37472 NO_REX_SSE_REGS:37472,37472 SSE_REGS:37472,37472 MMX_REGS:53557,53557 INT_SSE_REGS:40689,40689 ALL_REGS:801484,801484 MEM:14406,14406
  a13(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17232,17232 NO_REX_SSE_REGS:17232,17232 SSE_REGS:17232,17232 MMX_REGS:22227,22227 INT_SSE_REGS:18231,18231 ALL_REGS:308940,308940 MEM:5931,5931
  a14(r94,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-312,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7296,7296 NO_REX_SSE_REGS:7296,7296 SSE_REGS:7296,7296 MMX_REGS:10301,10301 INT_SSE_REGS:7897,7897 ALL_REGS:156108,156108 MEM:2403,2403
  a15(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1312,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29672,29672 NO_REX_SSE_REGS:29672,29672 SSE_REGS:29672,29672 MMX_REGS:43217,43217 INT_SSE_REGS:32381,32381 ALL_REGS:663472,663472 MEM:10525,10525
  a16(r108,l0) costs: AREG:-999,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34464,34464 NO_REX_SSE_REGS:34464,34464 SSE_REGS:34464,34464 MMX_REGS:51009,51009 INT_SSE_REGS:37773,37773 ALL_REGS:788172,788172 MEM:11925,11925
  a17(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a18(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a19(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5780,5780 NO_REX_SSE_REGS:5780,5780 SSE_REGS:5780,5780 MMX_REGS:7225,7225 INT_SSE_REGS:6069,6069 ALL_REGS:90168,90168 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r132: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a2(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a3(r131,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:39304,39304 NO_REX_SSE_REGS:39304,39304 SSE_REGS:39304,39304 MMX_REGS:55744,55744 INT_SSE_REGS:42592,42592 ALL_REGS:891904,891904 MEM:14864,14864
  a4(r125,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27243,27243 NO_REX_SSE_REGS:27243,27243 SSE_REGS:27243,27243 MMX_REGS:36153,36153 INT_SSE_REGS:29025,29025 ALL_REGS:478548,478548 MEM:9342,9342
  a7(r123,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a8(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-698 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26563,26563 NO_REX_SSE_REGS:26563,26563 SSE_REGS:26563,26563 MMX_REGS:35048,35048 INT_SSE_REGS:28260,28260 ALL_REGS:460868,460868 MEM:10086,10086
  a9(r101,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a10(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-999 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31270,31270 NO_REX_SSE_REGS:31270,31270 SSE_REGS:31270,31270 MMX_REGS:42705,42705 INT_SSE_REGS:33557,33557 ALL_REGS:683280,683280 MEM:10853,10853
  a11(r99,l0) costs: AREG:0,0 DREG:-999,-999 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a12(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:41780,41780 NO_REX_SSE_REGS:41780,41780 SSE_REGS:41780,41780 MMX_REGS:57865,57865 INT_SSE_REGS:44997,44997 ALL_REGS:806728,806728 MEM:17403,17403
  a13(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20292,20292 NO_REX_SSE_REGS:20292,20292 SSE_REGS:20292,20292 MMX_REGS:25287,25287 INT_SSE_REGS:21291,21291 ALL_REGS:312936,312936 MEM:7992,7992
  a14(r94,l0) costs: AREG:-289,-289 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-312 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8540,8540 NO_REX_SSE_REGS:8540,8540 SSE_REGS:8540,8540 MMX_REGS:11545,11545 INT_SSE_REGS:9141,9141 ALL_REGS:157352,157352 MEM:3336,3336
  a15(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1312 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33672,33672 NO_REX_SSE_REGS:33672,33672 SSE_REGS:33672,33672 MMX_REGS:47217,47217 INT_SSE_REGS:36381,36381 ALL_REGS:667472,667472 MEM:13525,13525
  a16(r108,l0) costs: AREG:0,-999 DREG:-312,-312 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38460,38460 NO_REX_SSE_REGS:38460,38460 SSE_REGS:38460,38460 MMX_REGS:55005,55005 INT_SSE_REGS:41769,41769 ALL_REGS:792168,792168 MEM:14922,14922
  a17(r106,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26672,26672 NO_REX_SSE_REGS:26672,26672 SSE_REGS:26672,26672 MMX_REGS:35217,35217 INT_SSE_REGS:28381,28381 ALL_REGS:563472,563472 MEM:10127,10127
  a18(r113,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a19(r112,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6069,6069 NO_REX_SSE_REGS:6069,6069 SSE_REGS:6069,6069 MMX_REGS:7514,7514 INT_SSE_REGS:6358,6358 ALL_REGS:91324,91324 MEM:0,0

   Insn 146(l0): point = 1
   Insn 145(l0): point = 4
   Insn 144(l0): point = 6
   Insn 140(l0): point = 9
   Insn 139(l0): point = 11
   Insn 135(l0): point = 14
   Insn 134(l0): point = 16
   Insn 130(l0): point = 19
   Insn 129(l0): point = 21
   Insn 127(l0): point = 24
   Insn 126(l0): point = 26
   Insn 125(l0): point = 28
   Insn 123(l0): point = 30
   Insn 155(l0): point = 33
   Insn 194(l0): point = 36
   Insn 119(l0): point = 38
   Insn 116(l0): point = 41
   Insn 115(l0): point = 43
   Insn 113(l0): point = 46
   Insn 112(l0): point = 48
   Insn 111(l0): point = 50
   Insn 161(l0): point = 53
   Insn 192(l0): point = 56
   Insn 104(l0): point = 58
   Insn 103(l0): point = 60
   Insn 101(l0): point = 63
   Insn 100(l0): point = 65
   Insn 99(l0): point = 67
   Insn 97(l0): point = 69
   Insn 94(l0): point = 72
   Insn 93(l0): point = 74
   Insn 91(l0): point = 77
   Insn 90(l0): point = 79
   Insn 89(l0): point = 81
   Insn 87(l0): point = 84
   Insn 86(l0): point = 86
   Insn 85(l0): point = 88
   Insn 82(l0): point = 91
   Insn 81(l0): point = 93
   Insn 80(l0): point = 95
   Insn 79(l0): point = 97
   Insn 76(l0): point = 99
   Insn 75(l0): point = 101
   Insn 72(l0): point = 104
   Insn 71(l0): point = 106
   Insn 68(l0): point = 108
   Insn 67(l0): point = 110
   Insn 66(l0): point = 112
   Insn 65(l0): point = 114
   Insn 175(l0): point = 117
   Insn 9(l0): point = 119
   Insn 190(l0): point = 122
   Insn 174(l0): point = 124
   Insn 57(l0): point = 126
   Insn 54(l0): point = 129
   Insn 53(l0): point = 131
   Insn 188(l0): point = 134
   Insn 173(l0): point = 136
   Insn 11(l0): point = 138
   Insn 48(l0): point = 140
   Insn 47(l0): point = 142
   Insn 45(l0): point = 145
   Insn 44(l0): point = 147
   Insn 186(l0): point = 150
   Insn 39(l0): point = 152
   Insn 38(l0): point = 154
   Insn 37(l0): point = 156
   Insn 36(l0): point = 158
   Insn 35(l0): point = 160
   Insn 34(l0): point = 162
   Insn 33(l0): point = 164
   Insn 32(l0): point = 166
   Insn 30(l0): point = 168
   Insn 28(l0): point = 171
   Insn 27(l0): point = 173
   Insn 26(l0): point = 175
   Insn 25(l0): point = 177
   Insn 23(l0): point = 179
   Insn 22(l0): point = 181
   Insn 21(l0): point = 183
   Insn 19(l0): point = 186
   Insn 18(l0): point = 188
   Insn 17(l0): point = 190
   Insn 16(l0): point = 192
   Insn 15(l0): point = 194
   Insn 7(l0): point = 196
   Insn 4(l0): point = 198
   Insn 3(l0): point = 200
   Insn 2(l0): point = 202
 a0(r124): [36..38] [17..33]
 a1(r90): [22..30]
 a2(r129): [27..28]
 a3(r131): [68..194] [29..55]
 a4(r125): [39..53]
 a5(r88): [44..50]
 a6(r91): [61..69]
 a7(r123): [66..67]
 a8(r89): [75..81]
 a9(r101): [87..198]
 a10(r132): [150..168] [134..136] [122..124] [89..117]
 a11(r99): [98..202]
 a12(r92): [171..177] [122..149] [100..106]
 a13(r93): [134..138] [122..126] [100..104]
 a14(r94): [150..158] [111..119]
 a15(r100): [143..200] [129..133] [113..121]
 a16(r108): [145..179] [129..133] [115..121]
 a17(r106): [171..192] [139..149] [127..133] [120..121]
 a18(r113): [141..142]
 a19(r112): [153..154]
Compressing live ranges: from 205 to 34 - 16%
Ranges after the compression:
 a0(r124): [0..5]
 a1(r90): [0..3]
 a2(r129): [0..1]
 a3(r131): [10..33] [2..7]
 a4(r125): [6..7]
 a5(r88): [6..7]
 a6(r91): [8..11]
 a7(r123): [8..9]
 a8(r89): [12..13]
 a9(r101): [14..33]
 a10(r132): [30..31] [24..25] [20..21] [14..17]
 a11(r99): [14..33]
 a12(r92): [32..33] [20..29] [14..15]
 a13(r93): [24..25] [20..21] [14..15]
 a14(r94): [30..31] [16..17]
 a15(r100): [28..33] [22..23] [16..19]
 a16(r108): [28..33] [22..23] [16..19]
 a17(r106): [32..33] [26..29] [22..23] [18..19]
 a18(r113): [26..27]
 a19(r112): [30..31]
+++Allocating 160 bytes for conflict table (uncompressed size 160)
;; a0(r124,l0) conflicts: a2(r129,l0) a1(r90,l0) a3(r131,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r90,l0) conflicts: a2(r129,l0) a0(r124,l0) a3(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r129,l0) conflicts: a1(r90,l0) a0(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r131,l0) conflicts: a1(r90,l0) a0(r124,l0) a4(r125,l0) a5(r88,l0) a6(r91,l0) a8(r89,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r125,l0) conflicts: a3(r131,l0) a5(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a5(r88,l0) conflicts: a3(r131,l0) a4(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r91,l0) conflicts: a3(r131,l0) a7(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r123,l0) conflicts: a6(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r89,l0) conflicts: a3(r131,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r101,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a10(r132,l0) conflicts: a3(r131,l0) a13(r93,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a19(r112,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a11(r99,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a12(r92,l0) conflicts: a3(r131,l0) a13(r93,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a15(r100,l0) a16(r108,l0) a17(r106,l0) a18(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r93,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r94,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a15(r100,l0) a16(r108,l0) a19(r112,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a15(r100,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a16(r108,l0) a17(r106,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a16(r108,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a14(r94,l0) a15(r100,l0) a17(r106,l0) a19(r112,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a17(r106,l0) conflicts: a3(r131,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a15(r100,l0) a16(r108,l0) a18(r113,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a18(r113,l0) conflicts: a3(r131,l0) a9(r101,l0) a11(r99,l0) a12(r92,l0) a17(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r112,l0) conflicts: a3(r131,l0) a10(r132,l0) a9(r101,l0) a11(r99,l0) a14(r94,l0) a15(r100,l0) a16(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r129)<->a3(r131)@1:shuffle
  cp1:a0(r124)<->a4(r125)@1:move
  cp2:a3(r131)<->a7(r123)@124:shuffle
  cp3:a14(r94)<->a17(r106)@22:move
  cp4:a13(r93)<->a17(r106)@488:move
  cp5:a13(r93)<->a17(r106)@199:move
  pref0:a10(r132)<-hr4@1787
  pref1:a16(r108)<-hr0@1498
  pref2:a9(r101)<-hr1@1500
  pref3:a15(r100)<-hr4@1968
  pref4:a11(r99)<-hr5@1500
  pref5:a14(r94)<-hr5@468
  pref6:a6(r91)<-hr5@1174
  pref7:a8(r89)<-hr5@1047
  pref8:a0(r124)<-hr5@1
  pref9:a1(r90)<-hr5@1
  pref10:a0(r124)<-hr0@1
  pref11:a5(r88)<-hr5@1
  pref12:a4(r125)<-hr0@1
  pref13:a9(r101)<-hr5@999
  pref14:a11(r99)<-hr1@999
  pref15:a3(r131)<-hr4@999
  pref16:a10(r132)<-hr5@999
  pref17:a16(r108)<-hr1@312
  pref18:a3(r131)<-hr5@289
  pref19:a14(r94)<-hr0@289
  pref20:a15(r100)<-hr5@999
  regions=1, blocks=29, points=34
    allocnos=20 (big 0), copies=6, conflicts=0, ranges=36

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r124 1r90 2r129 3r131 4r125 5r88 6r91 7r123 8r89 9r101 10r132 11r99 12r92 13r93 14r94 15r100 16r108 17r106 18r113 19r112
    modified regnos: 88 89 90 91 92 93 94 99 100 101 106 108 112 113 123 124 125 129 131 132
    border:
    Pressure: GENERAL_REGS=9
 Removing pref8:hr5@1
 Removing pref18:hr5@289
 Removing pref15:hr4@999
 Removing pref13:hr5@999
 Removing pref2:hr1@1500
 Removing pref16:hr5@999
 Removing pref0:hr4@1787
 Removing pref14:hr1@999
 Removing pref4:hr5@1500
 Removing pref20:hr5@999
 Removing pref3:hr4@1968
 Removing pref17:hr1@312
 Removing pref1:hr0@1498
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@110586
          2:( 1-4 6 37-44)@20254
            3:( 2 3 6 37-44)@61166
              4:( 3 6 41-44)@79429
      Allocno a0r124 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r131 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r125 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a5r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r101 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a10r132 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a11r99 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a12r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r94 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a15r100 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a16r108 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 37-44, node:  2 3 6 37-44 (confl regs =  0 1 4 5 7-36 45-79)
      Allocno a17r106 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a18r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 4:a13r93-a17r106 (freq=488):
        Result (freq=4707): a13r93(1998) a17r106(2709)
      Forming thread by copy 3:a14r94-a17r106 (freq=22):
        Result (freq=5619): a14r94(912) a13r93(1998) a17r106(2709)
      Forming thread by copy 0:a2r129-a3r131 (freq=1):
        Result (freq=4290): a2r129(2) a3r131(4288)
      Forming thread by copy 1:a0r124-a4r125 (freq=1):
        Result (freq=5): a0r124(3) a4r125(2)
      Pushing a5(r88,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a4(r125,l0)(cost 0)
      Pushing a0(r124,l0)(cost 0)
      Pushing a18(r113,l0)(cost 0)
      Pushing a19(r112,l0)(cost 0)
      Pushing a7(r123,l0)(cost 0)
      Pushing a8(r89,l0)(cost 0)
      Pushing a6(r91,l0)(cost 0)
      Pushing a15(r100,l0)(cost 0)
      Pushing a2(r129,l0)(cost 0)
      Pushing a16(r108,l0)(cost 0)
      Pushing a12(r92,l0)(cost 0)
        Making a10(r132,l0) colorable
      Pushing a10(r132,l0)(cost 10853)
      Forming thread by copy 2:a3r131-a7r123 (freq=124):
        Result (freq=6288): a2r129(2) a7r123(1998) a3r131(4288)
        Making a3(r131,l0) colorable
        Making a9(r101,l0) colorable
        Making a11(r99,l0) colorable
      Pushing a11(r99,l0)(cost 6997)
      Pushing a9(r101,l0)(cost 6997)
      Pushing a14(r94,l0)(cost 0)
      Pushing a13(r93,l0)(cost 0)
      Pushing a17(r106,l0)(cost 0)
      Pushing a3(r131,l0)(cost 14864)
      Popping a3(r131,l0)  -- assign reg 3
      Popping a17(r106,l0)  -- assign reg 6
      Popping a13(r93,l0)  -- assign reg 6
      Popping a14(r94,l0)  -- assign reg 5
      Popping a9(r101,l0)  -- assign reg 41
      Popping a11(r99,l0)  -- assign reg 42
      Popping a10(r132,l0)  -- assign reg 43
      Popping a12(r92,l0)  -- assign reg 0
      Popping a16(r108,l0)  -- assign reg 44
      Popping a2(r129,l0)  -- assign reg 3
      Popping a15(r100,l0)  -- assign reg 2
      Popping a6(r91,l0)  -- assign reg 5
      Popping a8(r89,l0)  -- assign reg 5
      Popping a7(r123,l0)  -- assign reg 3
      Popping a19(r112,l0)  -- assign reg 0
      Popping a18(r113,l0)  -- assign reg 1
      Popping a0(r124,l0)  -- assign reg 6
      Popping a4(r125,l0)  -- assign reg 6
      Popping a1(r90,l0)  -- assign reg 5
      Popping a5(r88,l0)  -- assign reg 5
Spilling a9r101 for a15r100
Assigning 41 to a15r100
       a9(r101,l0)  -- assign memory
Disposition:
    5:r88  l0     5    8:r89  l0     5    1:r90  l0     5    6:r91  l0     5
   12:r92  l0     0   13:r93  l0     6   14:r94  l0     5   11:r99  l0    42
   15:r100 l0    41    9:r101 l0   mem   17:r106 l0     6   16:r108 l0    44
   19:r112 l0     0   18:r113 l0     1    7:r123 l0     3    0:r124 l0     6
    4:r125 l0     6    2:r129 l0     3    3:r131 l0     3   10:r132 l0    43
New iteration of spill/restore move
+++Costs: overall 1612, reg -5385, mem 6997, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_repair_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,12e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1180{948d,220u,12e} in 89{77 regular + 12 call} insns.
(note 1 0 12 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
(note 12 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 99 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 101 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37244+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:288 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31540]._M_p+0 S8 A128])
        (reg/f:DI 106)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 137)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              25 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 25 3 (set (reg:DI 108)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 23 26 3 (set (reg:DI 92 [ D.37241 ])
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (reg:DI 108)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 42)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 4 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 32 30 33 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 132)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 131)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 4 (set (reg/f:DI 94 [ D.37240 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])
        (reg/f:DI 94 [ D.37240 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 112 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (nil)))
(insn 39 38 186 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31540 + 16B]+0 S8 A128])
        (reg:DI 112 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ __dnew ])
        (nil)))
(jump_insn 186 39 187 4 (set (pc)
        (label_ref 60)) 654 {jump}
     (nil)
 -> 60)
;;  succ:       10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

(barrier 187 186 42)
;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(code_label 42 187 43 5 261 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37241 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 51)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 100 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (expr_list:REG_EQUIV (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31540 + 16]+0 S1 A128])
            (nil))))
(insn 48 47 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31540 + 16]+0 S1 A128])
        (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 48 173 6 (set (reg/f:DI 93 [ D.37240 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 173 11 188 6 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(jump_insn 188 173 189 6 (set (pc)
        (label_ref 73)) 654 {jump}
     (nil)
 -> 73)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

(barrier 189 188 51)
;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(code_label 51 189 52 7 263 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37241 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 151)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 174 8 (set (reg/f:DI 93 [ D.37240 ])
        (reg/f:DI 106)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 174 57 190 8 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(jump_insn 190 174 191 8 (set (pc)
        (label_ref 73)) 654 {jump}
     (nil)
 -> 73)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

(barrier 191 190 151)
;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
(code_label 151 191 150 9 272 "" [1 uses])
(note 150 151 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 150 175 9 (set (reg/f:DI 94 [ D.37240 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 175 9 60 9 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
(code_label 60 175 61 10 262 "" [1 uses])
(note 61 60 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 61 66 10 (set (reg:DI 1 dx)
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 66 65 67 10 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37240 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37240 ])
        (nil)))
(call_insn 68 67 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 68 72 10 (set (reg:DI 92 [ D.37241 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:DI 93 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              8 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 73 72 74 11 264 "" [2 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31540 + 8B]+0 S8 A64])
        (reg:DI 92 [ D.37241 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 76 75 79 11 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.37240 ])
                (reg:DI 92 [ D.37241 ])) [0 MEM[(char_type &)_47]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37240 ])
        (expr_list:REG_DEAD (reg:DI 92 [ D.37241 ])
            (nil))))
(insn 79 76 80 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 99 [ options ])) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ options ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 4 si)
        (reg/f:DI 131)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 81 80 82 11 (set (reg:DI 5 di)
        (reg/f:DI 132)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 82 81 83 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb8RepairDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378211b0 RepairDB>) [0 RepairDB S1 A8])
        (const_int 0 [0])) db/c.cc:289 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb8RepairDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378211b0 RepairDB>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 83 82 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 12 (set (reg:DI 4 si)
        (reg/f:DI 132)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ errptr ])) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ errptr ])
        (nil)))
(call_insn 87 86 88 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:289 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg/f:DI 89 [ D.37239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31541.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.37239 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 95)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37239 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37239 ])
        (nil)))
(call_insn 94 93 95 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
(code_label 95 94 96 15 265 "" [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 15 (set (reg/f:DI 91 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 99 97 100 15 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37240 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 142)
;;  succ:       16 [78.3%]  (FALLTHRU)
;;              26 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 16, loop depth 0, count 0, freq 7832, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [78.3%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37240 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37240 ])
        (nil)))
(call_insn 104 103 192 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 192 104 193 16 (set (pc)
        (label_ref 142)) db/c.cc:290 654 {jump}
     (nil)
 -> 142)
;;  succ:       26 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 193 192 160)
;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
(code_label/s 160 193 163 17 274 "" [1 uses])
(note 163 160 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 161 163 109 17 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(code_label 109 161 110 18 267 "" [0 uses])
(note 110 109 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 18 (set (reg/f:DI 88 [ D.37239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31541.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37239 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37239 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37239 ])
        (nil)))
(call_insn 116 115 117 19 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
(code_label 117 116 118 20 268 "" [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 194 20 (set (reg:DI 124)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(jump_insn 194 119 195 20 (set (pc)
        (label_ref 121)) 654 {jump}
     (nil)
 -> 121)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

(barrier 195 194 154)
;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
(code_label/s 154 195 159 21 273 "" [1 uses])
(note 159 154 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 159 121 21 (set (reg:DI 124)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
(code_label 121 155 122 22 269 "" [1 uses])
(note 122 121 123 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 125 22 (set (reg/f:DI 90 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 125 123 126 22 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37240 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 127 126 128 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 131)
;;  succ:       23 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [69.8%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 128 127 129 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 23 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37240 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37240 ])
        (nil)))
(call_insn 130 129 131 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [30.2%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 131 130 132 24 270 "" [1 uses])
(note 132 131 134 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 134 132 135 24 (set (reg:DI 5 di)
        (reg:DI 124)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 135 134 136 24 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 136 135 137)
;; basic block 25, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 137 136 138 25 260 "" [1 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 140 139 141 25 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 141 140 142)
;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [21.6%] 
;;              16 [100.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 142 141 149 26 259 "" [2 uses])
(note 149 142 144 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 144 149 145 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37244+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:290 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 145 144 152 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) db/c.cc:290 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 148)
;;  succ:       28 [100.0%] 
;;              27 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 4
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [0.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 152 145 146 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 152 147 27 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:290 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 147 146 148)
;; basic block 28, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 27, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 148 147 153 28 271 "" [1 uses])
(note 153 148 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_destroy(leveldb_iterator_t*) (leveldb_iter_destroy, funcdef_no=1445, decl_uid=2219, cgraph_uid=552, symbol_order=555)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Reg 87 uninteresting
Reg 91: local to bb 3 def dominates all uses has unique first use
Found def insn 10 for 91 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG
    a2 (r87,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32528,32528 NO_REX_SSE_REGS:32528,32528 SSE_REGS:32528,32528 MMX_REGS:45358,45358 INT_SSE_REGS:35094,35094 ALL_REGS:637728,637728 MEM:13481,13481


Pass 1 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33528,33528 NO_REX_SSE_REGS:33528,33528 SSE_REGS:33528,33528 MMX_REGS:46358,46358 INT_SSE_REGS:36094,36094 ALL_REGS:641728,641728 MEM:13481,13481

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 10(l0): point = 9
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..18]
 a1(r91): [6..9]
 a2(r87): [8..16]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r91): [0..1]
 a2(r87): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r90,l0) conflicts: a1(r91,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r91,l0) conflicts: a0(r90,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r87,l0) conflicts: a0(r90,l0) a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@3000
  pref1:a2(r87)<-hr5@1174
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r90 1r91 2r87
    modified regnos: 87 90 91
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@31660
          2:( 0-4 6 37-44)@34528
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r91,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r91,l0)  -- assign reg 0
Disposition:
    2:r87  l0     5    0:r90  l0     3    1:r91  l0     0
New iteration of spill/restore move
+++Costs: overall -2349, reg -2349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_destroy(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} 
;;    total ref usage 196{169d,27u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:292 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37251 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_3(D)->rep+0 S8 A64])) db/c.cc:293 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37251 ])
            (const_int 0 [0]))) db/c.cc:293 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:293 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37251 ]) [3 _4->_vptr.Iterator+0 S8 A64])) db/c.cc:293 89 {*movdi_internal}
     (nil))
(note 11 10 12 3 NOTE_INSN_DELETED)
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37251 ])) db/c.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37251 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.Iterator ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_6;(struct Iterator)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:293 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 14 13 15 4 286 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ iter ])) db/c.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(call_insn/j 17 16 18 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:294 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function unsigned char leveldb_iter_valid(const leveldb_iterator_t*) (leveldb_iter_valid, funcdef_no=1446, decl_uid=2221, cgraph_uid=553, symbol_order=556)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93 uninteresting
Ignoring reg 94, has equiv memory
Reg 95: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 95 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 94: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r95,l0) best AD_REGS, allocno AD_REGS
    a2 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r95: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r95,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r95): [1..4]
 a1(r87): [3..8]
 a2(r94): [5..6]
 a3(r93): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r87): [0..3]
 a2(r94): [2..3]
 a3(r93): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r95,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r95,l0) a2(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r94,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r93,l0) conflicts:  pref0:a3(r93)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r95 1r87 2r94 3r93
    modified regnos: 87 93 94 95
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r95 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r93,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Pushing a0(r95,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r95,l0)  -- assign reg 0
      Popping a2(r94,l0)  -- assign reg 0
      Popping a3(r93,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r93  l0     5    2:r94  l0     0    0:r95  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


unsigned char leveldb_iter_valid(const leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 113{96d,16u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 95
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37256 ])
        (mem/f:DI (reg/v/f:DI 93 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37256 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37256 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.Iterator ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37256 ])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37256 ])
        (nil)))
(call_insn/j 10 9 11 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->2) S1 A8])
            (const_int 0 [0]))) db/c.cc:298 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function void leveldb_iter_seek_to_first(leveldb_iterator_t*) (leveldb_iter_seek_to_first, funcdef_no=1447, decl_uid=2223, cgraph_uid=554, symbol_order=557)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Ignoring reg 91, has equiv memory
Reg 92: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r92,l0) best AD_REGS, allocno AD_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r92): [1..4]
 a1(r87): [3..8]
 a2(r91): [5..6]
 a3(r90): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [0..3]
 a2(r91): [2..3]
 a3(r90): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r92,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts:  pref0:a3(r90)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r92 1r87 2r91 3r90
    modified regnos: 87 90 91 92
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r92,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r90  l0     5    2:r91  l0     0    0:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_seek_to_first(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 112{96d,15u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37263 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37263 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37263 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37263 ])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37263 ])
        (nil)))
(call_insn/j 10 9 11 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:302 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function void leveldb_iter_seek_to_last(leveldb_iterator_t*) (leveldb_iter_seek_to_last, funcdef_no=1448, decl_uid=2225, cgraph_uid=555, symbol_order=558)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Ignoring reg 91, has equiv memory
Reg 92: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r92,l0) best AD_REGS, allocno AD_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r92): [1..4]
 a1(r87): [3..8]
 a2(r91): [5..6]
 a3(r90): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [0..3]
 a2(r91): [2..3]
 a3(r90): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r92,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts:  pref0:a3(r90)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r92 1r87 2r91 3r90
    modified regnos: 87 90 91 92
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r92,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r90  l0     5    2:r91  l0     0    0:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_seek_to_last(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 112{96d,15u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37268 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37268 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37268 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37268 ])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37268 ])
        (nil)))
(call_insn/j 10 9 11 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->4) S1 A8])
        (const_int 0 [0])) db/c.cc:306 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function void leveldb_iter_seek(leveldb_iterator_t*, const char*, size_t) (leveldb_iter_seek, funcdef_no=1449, decl_uid=2229, cgraph_uid=556, symbol_order=559)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90: local to bb 2 def dominates all uses has unique first use
Ignoring reg 91, has equiv memory
Ignoring reg 92, has equiv memory
Ignoring reg 94, has equiv memory
Reg 89: local to bb 2 def dominates all uses has unique first use
Found def insn 12 for 89 to be not moveable
Found def insn 2 for 90 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 94: (insn_list:REG_DEP_TRUE 11 (nil))
Reg 95 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a2 (r95,l0) best SIREG, allocno SIREG
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best DREG, allocno DREG
    a4 (r91,l0) best SIREG, allocno SIREG
    a6 (r90,l0) best DIREG, allocno DIREG
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a3(r92,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a4(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a6(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a3(r92,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a5(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a6(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 23(l0): point = 1
   Insn 22(l0): point = 4
   Insn 21(l0): point = 6
   Insn 18(l0): point = 8
   Insn 17(l0): point = 10
   Insn 16(l0): point = 12
   Insn 15(l0): point = 14
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 7(l0): point = 26
   Insn 4(l0): point = 28
   Insn 3(l0): point = 30
   Insn 2(l0): point = 32
 a0(r89): [9..20]
 a1(r87): [11..24]
 a2(r95): [13..14]
 a3(r92): [17..28]
 a4(r91): [19..30]
 a5(r94): [21..22]
 a6(r90): [25..32]
Compressing live ranges: from 35 to 8 - 22%
Ranges after the compression:
 a0(r89): [0..3]
 a1(r87): [0..5]
 a2(r95): [0..1]
 a3(r92): [2..7]
 a4(r91): [2..7]
 a5(r94): [4..5]
 a6(r90): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r89,l0) conflicts: a2(r95,l0) a1(r87,l0) a3(r92,l0) a4(r91,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a1(r87,l0) conflicts: a2(r95,l0) a0(r89,l0) a3(r92,l0) a4(r91,l0) a5(r94,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a2(r95,l0) conflicts: a0(r89,l0) a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r92,l0) conflicts: a0(r89,l0) a1(r87,l0) a4(r91,l0) a5(r94,l0) a6(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r91,l0) conflicts: a0(r89,l0) a1(r87,l0) a3(r92,l0) a5(r94,l0) a6(r90,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a5(r94,l0) conflicts: a1(r87,l0) a3(r92,l0) a4(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r90,l0) conflicts: a3(r92,l0) a4(r91,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

  pref0:a2(r95)<-hr4@1500
  pref1:a3(r92)<-hr1@1500
  pref2:a4(r91)<-hr4@1500
  pref3:a6(r90)<-hr5@1500
  pref4:a1(r87)<-hr5@1500
  regions=1, blocks=5, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r89 1r87 2r95 3r92 4r91 5r94 6r90
    modified regnos: 87 89 90 91 92 94 95
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@42000
          2:( 0-3 5 6 37-44)@36000
            3:( 0 2 3 5 6 37-44)@44000
      Allocno a0r89 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-3 5 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a2r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r91 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r90 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Pushing a6(r90,l0)(cost 0)
      Pushing a5(r94,l0)(cost 0)
      Pushing a4(r91,l0)(cost 0)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r95,l0)(cost 0)
      Pushing a0(r89,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r89,l0)  -- assign reg 0
      Popping a2(r95,l0)  -- assign reg 4
      Popping a3(r92,l0)  -- assign reg 1
      Popping a4(r91,l0)  -- assign reg 4
      Popping a5(r94,l0)  -- assign reg 0
      Popping a6(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    0:r89  l0     0    6:r90  l0     5    4:r91  l0     4
    3:r92  l0     1    5:r94  l0     0    2:r95  l0     4
New iteration of spill/restore move
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_seek(leveldb_iterator_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u,1e} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 216{175d,36u,5e} in 16{14 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 90 91 92 94 95
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ k ])
        (reg:DI 4 si [ k ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ k ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 D.31577.data_+0 S8 A128])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 92 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [9 D.31577.size_+0 S8 A64])
            (nil))))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37276+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:309 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.37273 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37273 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37273 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 89 [ D.37275 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.Iterator ])
                (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 40B]+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31577.data_+0 S8 A128])
        (reg/v/f:DI 91 [ k ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ k ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31577.size_+0 S8 A64])
        (reg/v:DI 92 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 92 [ klen ])
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:310 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 95)) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37273 ])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37273 ])
        (nil)))
(call_insn 18 17 21 2 (call (mem:QI (reg/f:DI 89 [ D.37275 ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->5) S1 A8])
        (const_int 0 [0])) db/c.cc:310 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37275 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 21 18 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37276+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:311 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 22 21 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) db/c.cc:311 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 25)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 22 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 27 24 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:311 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 24 23 25)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 25 24 28 4 295 "" [1 uses])
(note 28 25 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_next(leveldb_iterator_t*) (leveldb_iter_next, funcdef_no=1450, decl_uid=2231, cgraph_uid=557, symbol_order=560)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Ignoring reg 91, has equiv memory
Reg 92: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r92,l0) best AD_REGS, allocno AD_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r92): [1..4]
 a1(r87): [3..8]
 a2(r91): [5..6]
 a3(r90): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [0..3]
 a2(r91): [2..3]
 a3(r90): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r92,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts:  pref0:a3(r90)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r92 1r87 2r91 3r90
    modified regnos: 87 90 91 92
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r92,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r90  l0     5    2:r91  l0     0    0:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_next(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 112{96d,15u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:313 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37279 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37279 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37279 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B]+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37279 ])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37279 ])
        (nil)))
(call_insn/j 10 9 11 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->6) S1 A8])
        (const_int 0 [0])) db/c.cc:314 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function void leveldb_iter_prev(leveldb_iterator_t*) (leveldb_iter_prev, funcdef_no=1451, decl_uid=2233, cgraph_uid=558, symbol_order=561)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Ignoring reg 91, has equiv memory
Reg 92: local to bb 2 def dominates all uses has unique first use
Found def insn 8 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r92,l0) best AD_REGS, allocno AD_REGS
    a2 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r90,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r92: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: CREG:0,0 BREG:2000,2000 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15000,15000
  a2(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r92): [1..4]
 a1(r87): [3..8]
 a2(r91): [5..6]
 a3(r90): [9..10]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r92): [0..1]
 a1(r87): [0..3]
 a2(r91): [2..3]
 a3(r90): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r92,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r87,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a1(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts:  pref0:a3(r90)<-hr5@1500
  pref1:a1(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r92 1r87 2r91 3r90
    modified regnos: 87 90 91 92
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@58000
          2:( 0-4 6 37-44)@16000
      Allocno a0r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Popping a1(r87,l0)  -- assign reg 5
      Popping a0(r92,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 0
      Popping a3(r90,l0)  -- assign reg 5
Disposition:
    1:r87  l0     5    3:r90  l0     5    2:r91  l0     0    0:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_prev(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u,1e} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 112{96d,15u,1e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:317 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37284 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37284 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.37284 ]) [3 _3->_vptr.Iterator+0 S8 A64])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B]+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37284 ])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37284 ])
        (nil)))
(call_insn/j 10 9 11 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->7) S1 A8])
        (const_int 0 [0])) db/c.cc:318 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 11 10 0)

;; Function const char* leveldb_iter_key(const leveldb_iterator_t*, size_t*) (leveldb_iter_key, funcdef_no=1452, decl_uid=2236, cgraph_uid=559, symbol_order=562)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 87 uninteresting
Reg 96: local to bb 2 def dominates all uses has unique first use
Reg 99: local to bb 2 def dominates all uses has unique first use
Ignoring reg 100, has equiv memory
Found def insn 2 for 94 to be not moveable
Found def insn 8 for 96 to be not moveable
Found def insn 22 for 99 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 100: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r100,l0) best DREG, allocno DREG
    a0 (r99,l0) best AREG, allocno AREG
    a3 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best SIREG, allocno SIREG
    a5 (r94,l0) best DIREG, allocno DIREG
    a4 (r87,l0) best DIREG, allocno DIREG

  a0(r99,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r100,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a3(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r100,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 13(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r99): [3..8]
 a1(r95): [5..18]
 a2(r100): [5..6]
 a3(r96): [11..14]
 a4(r87): [13..16]
 a5(r94): [17..20]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r95): [0..5]
 a2(r100): [0..1]
 a3(r96): [2..3]
 a4(r87): [2..3]
 a5(r94): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r99,l0) conflicts: a2(r100,l0) a1(r95,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a1(r95,l0) conflicts: a0(r99,l0) a2(r100,l0) a3(r96,l0) a4(r87,l0) a5(r94,l0)
;;     total conflict hard regs: 0 1 5
;;     conflict hard regs: 0 1 5

;; a2(r100,l0) conflicts: a0(r99,l0) a1(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r96,l0) conflicts: a1(r95,l0) a4(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a4(r87,l0) conflicts: a1(r95,l0) a3(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r94,l0) conflicts: a1(r95,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  pref0:a2(r100)<-hr1@1500
  pref1:a0(r99)<-hr0@3000
  pref2:a1(r95)<-hr4@1500
  pref3:a5(r94)<-hr5@1500
  pref4:a4(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r99 1r95 2r100 3r96 4r87 5r94
    modified regnos: 87 94 95 96 99 100
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
          2:( 0 2-6 37-44)@26000
      Allocno a0r99 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a1r95 of GENERAL_REGS(15) has 12 avail. regs  2-4 6 37-44, ^node:  0 2-6 37-44 (confl regs =  0 1 5 7-36 45-79)
      Allocno a2r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r96 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a4r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Pushing a5(r94,l0)(cost 0)
      Pushing a3(r96,l0)(cost 0)
      Pushing a2(r100,l0)(cost 0)
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r99,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Popping a4(r87,l0)  -- assign reg 5
      Popping a0(r99,l0)  -- assign reg 0
      Popping a1(r95,l0)  -- assign reg 3
      Popping a2(r100,l0)  -- assign reg 1
      Popping a3(r96,l0)  -- assign reg 0
      Popping a5(r94,l0)  -- assign reg 5
Disposition:
    4:r87  l0     5    5:r94  l0     5    1:r95  l0     3    3:r96  l0     0
    0:r99  l0     0    2:r100 l0     1
New iteration of spill/restore move
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const char* leveldb_iter_key(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 123{100d,22u,1e} in 11{10 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 99 100
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ klen ])
        (reg:DI 4 si [ klen ])) db/c.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ klen ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37289 ])
        (mem/f:DI (reg/v/f:DI 94 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37289 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:322 89 {*movdi_internal}
     (nil))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37289 ])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37289 ])
        (nil)))
(call_insn 11 10 22 2 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 96 [ _3->_vptr.Iterator ])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->8) S1 A8])
            (const_int 0 [0]))) db/c.cc:322 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 11 23 2 (set (reg:DI 99 [ s ])
        (reg:DI 0 ax)) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 13 2 (set (reg:DI 100 [ s+8 ])
        (reg:DI 1 dx [+8 ])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 95 [ klen ]) [9 *klen_7(D)+0 S8 A64])
            (nil))))
(insn 13 23 19 2 (set (mem:DI (reg/v/f:DI 95 [ klen ]) [9 *klen_7(D)+0 S8 A64])
        (reg:DI 100 [ s+8 ])) db/c.cc:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ s+8 ])
        (expr_list:REG_DEAD (reg/v/f:DI 95 [ klen ])
            (nil))))
(insn 19 13 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ s ])) db/c.cc:325 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ s ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) db/c.cc:325 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const char* leveldb_iter_value(const leveldb_iterator_t*, size_t*) (leveldb_iter_value, funcdef_no=1453, decl_uid=2239, cgraph_uid=560, symbol_order=563)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 87 uninteresting
Reg 96: local to bb 2 def dominates all uses has unique first use
Reg 99: local to bb 2 def dominates all uses has unique first use
Ignoring reg 100, has equiv memory
Found def insn 2 for 94 to be not moveable
Found def insn 8 for 96 to be not moveable
Found def insn 22 for 99 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 100: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r100,l0) best DREG, allocno DREG
    a0 (r99,l0) best AREG, allocno AREG
    a3 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best SIREG, allocno SIREG
    a5 (r94,l0) best DIREG, allocno DIREG
    a4 (r87,l0) best DIREG, allocno DIREG

  a0(r99,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r100,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a3(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r100: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r100,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 13(l0): point = 4
   Insn 23(l0): point = 6
   Insn 22(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
 a0(r99): [3..8]
 a1(r95): [5..18]
 a2(r100): [5..6]
 a3(r96): [11..14]
 a4(r87): [13..16]
 a5(r94): [17..20]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r95): [0..5]
 a2(r100): [0..1]
 a3(r96): [2..3]
 a4(r87): [2..3]
 a5(r94): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r99,l0) conflicts: a2(r100,l0) a1(r95,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a1(r95,l0) conflicts: a0(r99,l0) a2(r100,l0) a3(r96,l0) a4(r87,l0) a5(r94,l0)
;;     total conflict hard regs: 0 1 5
;;     conflict hard regs: 0 1 5

;; a2(r100,l0) conflicts: a0(r99,l0) a1(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r96,l0) conflicts: a1(r95,l0) a4(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a4(r87,l0) conflicts: a1(r95,l0) a3(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r94,l0) conflicts: a1(r95,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  pref0:a2(r100)<-hr1@1500
  pref1:a0(r99)<-hr0@3000
  pref2:a1(r95)<-hr4@1500
  pref3:a5(r94)<-hr5@1500
  pref4:a4(r87)<-hr5@1500
  regions=1, blocks=3, points=6
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r99 1r95 2r100 3r96 4r87 5r94
    modified regnos: 87 94 95 96 99 100
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
          2:( 0 2-6 37-44)@26000
      Allocno a0r99 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a1r95 of GENERAL_REGS(15) has 12 avail. regs  2-4 6 37-44, ^node:  0 2-6 37-44 (confl regs =  0 1 5 7-36 45-79)
      Allocno a2r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r96 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a4r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Pushing a5(r94,l0)(cost 0)
      Pushing a3(r96,l0)(cost 0)
      Pushing a2(r100,l0)(cost 0)
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r99,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Popping a4(r87,l0)  -- assign reg 5
      Popping a0(r99,l0)  -- assign reg 0
      Popping a1(r95,l0)  -- assign reg 3
      Popping a2(r100,l0)  -- assign reg 1
      Popping a3(r96,l0)  -- assign reg 0
      Popping a5(r94,l0)  -- assign reg 5
Disposition:
    4:r87  l0     5    5:r94  l0     5    1:r95  l0     3    3:r96  l0     0
    0:r99  l0     0    2:r100 l0     1
New iteration of spill/restore move
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


const char* leveldb_iter_value(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 123{100d,22u,1e} in 11{10 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 99 100
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ vlen ])
        (reg:DI 4 si [ vlen ])) db/c.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ vlen ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37296 ])
        (mem/f:DI (reg/v/f:DI 94 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37296 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:328 89 {*movdi_internal}
     (nil))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37296 ])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37296 ])
        (nil)))
(call_insn 11 10 22 2 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 96 [ _3->_vptr.Iterator ])
                        (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->9) S1 A8])
            (const_int 0 [0]))) db/c.cc:328 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 11 23 2 (set (reg:DI 99 [ s ])
        (reg:DI 0 ax)) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 13 2 (set (reg:DI 100 [ s+8 ])
        (reg:DI 1 dx [+8 ])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 95 [ vlen ]) [9 *vlen_7(D)+0 S8 A64])
            (nil))))
(insn 13 23 19 2 (set (mem:DI (reg/v/f:DI 95 [ vlen ]) [9 *vlen_7(D)+0 S8 A64])
        (reg:DI 100 [ s+8 ])) db/c.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ s+8 ])
        (expr_list:REG_DEAD (reg/v/f:DI 95 [ vlen ])
            (nil))))
(insn 19 13 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ s ])) db/c.cc:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ s ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) db/c.cc:331 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_get_error(const leveldb_iterator_t*, char**) (leveldb_iter_get_error, funcdef_no=1454, decl_uid=2242, cgraph_uid=561, symbol_order=564)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93: local to bb 2 def dominates all uses has unique first use
Reg 94: local to bb 2 def dominates all uses has unique first use
Reg 87: local to bb 2 def dominates all uses has unique first use
Reg 97: local to bb 2 def dominates all uses has unique first use
Reg 91 uninteresting
Reg 100: def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 9 for 87 to be not moveable
Found def insn 2 for 93 to be not moveable
Found def insn 3 for 94 to be not moveable
Found def insn 11 for 97 to be not moveable
Reg 100 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 5 3 }
;; 3 succs { 4 9 }
;; 4 succs { 9 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 96 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a0 (r100,l0) best AREG, allocno AREG
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best SIREG, allocno SIREG
    a3 (r94,l0) best SIREG, allocno SIREG
    a7 (r93,l0) best DIREG, allocno DIREG
    a2 (r91,l0) best DIREG, allocno DIREG
    a1 (r90,l0) best DIREG, allocno DIREG
    a6 (r87,l0) best SIREG, allocno SIREG

  a0(r100,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349
  a3(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a4(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a7(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:10349,10349
  a3(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a4(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a5(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a6(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11000,11000
  a7(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 49(l0): point = 1
   Insn 48(l0): point = 4
   Insn 47(l0): point = 6
   Insn 43(l0): point = 9
   Insn 42(l0): point = 11
   Insn 38(l0): point = 14
   Insn 37(l0): point = 16
   Insn 35(l0): point = 19
   Insn 34(l0): point = 21
   Insn 33(l0): point = 23
   Insn 56(l0): point = 26
   Insn 70(l0): point = 29
   Insn 26(l0): point = 31
   Insn 25(l0): point = 33
   Insn 23(l0): point = 36
   Insn 22(l0): point = 38
   Insn 21(l0): point = 40
   Insn 19(l0): point = 43
   Insn 18(l0): point = 45
   Insn 17(l0): point = 47
   Insn 15(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 11(l0): point = 55
   Insn 10(l0): point = 57
   Insn 9(l0): point = 59
   Insn 6(l0): point = 61
   Insn 3(l0): point = 63
   Insn 2(l0): point = 65
 a0(r100): [12..26]
 a1(r90): [17..23]
 a2(r91): [34..40]
 a3(r94): [46..63]
 a4(r96): [48..57]
 a5(r97): [50..55]
 a6(r87): [54..59]
 a7(r93): [60..65]
Compressing live ranges: from 68 to 8 - 11%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r90): [0..1]
 a2(r91): [2..3]
 a3(r94): [4..7]
 a4(r96): [4..5]
 a5(r97): [4..5]
 a6(r87): [4..5]
 a7(r93): [6..7]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r100,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r90,l0) conflicts: a0(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts:;; a3(r94,l0) conflicts: a4(r96,l0) a5(r97,l0) a6(r87,l0) a7(r93,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a4(r96,l0) conflicts: a5(r97,l0) a6(r87,l0) a3(r94,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a5(r97,l0) conflicts: a4(r96,l0) a6(r87,l0) a3(r94,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a6(r87,l0) conflicts: a4(r96,l0) a5(r97,l0) a3(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r93,l0) conflicts: a3(r94,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

  pref0:a4(r96)<-hr4@1500
  pref1:a3(r94)<-hr4@1500
  pref2:a7(r93)<-hr5@1500
  pref3:a2(r91)<-hr5@1174
  pref4:a6(r87)<-hr4@1500
  pref5:a0(r100)<-hr5@1
  pref6:a1(r90)<-hr5@1
  pref7:a0(r100)<-hr0@1
  pref8:a4(r96)<-hr5@1000
  pref9:a3(r94)<-hr5@1000
  regions=1, blocks=12, points=8
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r100 1r90 2r91 3r94 4r96 5r97 6r87 7r93
    modified regnos: 87 90 91 93 94 96 97 100
    border:
    Pressure: GENERAL_REGS=5
 Removing pref5:hr5@1
 Removing pref9:hr5@1000
 Removing pref1:hr4@1500
 Removing pref8:hr5@1000
 Removing pref0:hr4@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@53424
          2:( 0-3 5 6 37-44)@22000
            3:( 0-3 6 37-44)@36000
              4:( 0 3 6 41-44)@14
                5:( 3 6 41-44)@14000
      Allocno a0r100 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r94 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  4 5 7-36 45-79)
      Allocno a4r96 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a5r97 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, node:  0-3 6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a6r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r93 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Pushing a0(r100,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a7(r93,l0)(cost 0)
      Pushing a5(r97,l0)(cost 0)
      Pushing a3(r94,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a6(r87,l0)(cost 0)
      Pushing a4(r96,l0)(cost 0)
      Popping a4(r96,l0)  -- assign reg 3
      Popping a6(r87,l0)  -- assign reg 4
      Popping a2(r91,l0)  -- assign reg 5
      Popping a3(r94,l0)  -- assign reg 6
      Popping a5(r97,l0)  -- assign reg 0
      Popping a7(r93,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 5
      Popping a0(r100,l0)  -- assign reg 3
Disposition:
    6:r87  l0     4    1:r90  l0     5    2:r91  l0     5    7:r93  l0     5
    3:r94  l0     6    4:r96  l0     3    5:r97  l0     0    0:r100 l0     3
New iteration of spill/restore move
+++Costs: overall -8352, reg -8352, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_iter_get_error(const leveldb_iterator_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={8d} r2={7d} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r90={1d,2u} r91={1d,2u} r93={1d,1u} r94={1d,1u} r96={1d,2u} r97={1d,1u} r100={1d,1u} 
;;    total ref usage 555{473d,79u,3e} in 29{23 regular + 6 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 96 97
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 93 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ errptr ])
        (reg:DI 4 si [ errptr ])) db/c.cc:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ errptr ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37308+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:333 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg/f:DI 87 [ D.37304 ])
        (mem/f:DI (reg/v/f:DI 93 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ iter ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:334 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 97 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37304 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:334 89 {*movdi_internal}
     (nil))
(note 12 11 13 2 NOTE_INSN_DELETED)
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37304 ])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37304 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 96)) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(call_insn 15 14 17 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 97 [ _3->_vptr.Iterator ])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->10) S1 A8])
        (const_int 0 [0])) db/c.cc:334 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _3->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 15 18 2 (set (reg:DI 4 si)
        (reg/f:DI 96)) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ errptr ])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ errptr ])
        (nil)))
(call_insn 19 18 20 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:334 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/f:DI 91 [ D.37307 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31600.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37307 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 45)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(6){ }u32(7){ }u33(16){ }u34(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37307 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37307 ])
        (nil)))
(call_insn 26 25 70 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 70 26 71 4 (set (pc)
        (label_ref 45)) db/c.cc:335 654 {jump}
     (nil)
 -> 45)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 71 70 55)
;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 100
(code_label/s 55 71 57 5 309 "" [1 uses])
(note 57 55 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 57 31 5 (set (reg:DI 100)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
(code_label 31 56 32 6 306 "" [0 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 90 [ D.37307 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31600.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37307 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 39)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37307 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37307 ])
        (nil)))
(call_insn 38 37 39 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 39 38 40 8 307 "" [1 uses])
(note 40 39 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 8 (set (reg:DI 5 di)
        (reg:DI 100)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 43 42 44 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 44 43 45)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 45 44 52 9 304 "" [2 uses])
(note 52 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 52 48 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37308+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:335 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 48 47 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) db/c.cc:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 51)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 53 48 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 49 53 50 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:335 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 50 49 51)
;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 51 50 54 11 308 "" [1 uses])
(note 54 51 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writebatch_t* leveldb_writebatch_create() (leveldb_writebatch_create, funcdef_no=1455, decl_uid=2243, cgraph_uid=565, symbol_order=568)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting (no unique first use)
Reg 93: def dominates all uses has unique first use
Reg 93 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 }
;; 5 succs { }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best AREG, allocno AREG
    a0 (r87,l0) best AREG, allocno AREG

  a0(r87,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24008,24008 NO_REX_SSE_REGS:24008,24008 SSE_REGS:24008,24008 MMX_REGS:34013,34013 INT_SSE_REGS:26009,26009 ALL_REGS:516208,516208 MEM:7003,7003
  a1(r93,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4


Pass 1 for finding pseudo/allocno costs

    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28008,28008 NO_REX_SSE_REGS:28008,28008 SSE_REGS:28008,28008 MMX_REGS:38013,38013 INT_SSE_REGS:30009,30009 ALL_REGS:520208,520208 MEM:10003,10003
  a1(r93,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 21(l0): point = 5
   Insn 20(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 28(l0): point = 14
   Insn 32(l0): point = 17
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 7(l0): point = 24
   Insn 6(l0): point = 26
   Insn 5(l0): point = 28
 a0(r87): [12..24] [3..4]
 a1(r93): [8..14]
Compressing live ranges: from 31 to 4 - 12%
Ranges after the compression:
 a0(r87): [0..3]
 a1(r93): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r93,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a1(r93,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

  pref0:a0(r87)<-hr0@3000
  pref1:a0(r87)<-hr5@1001
  pref2:a1(r93)<-hr5@1
  pref3:a1(r93)<-hr0@1
  regions=1, blocks=7, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r87 1r93
    modified regnos: 87 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref1:hr5@1001
 Removing pref0:hr0@3000
 Removing pref2:hr5@1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0 3 6 41-44)@14
          2:( 3 6 41-44)@20006
      Allocno a0r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 0
Assigning 6 to a1r93
Disposition:
    0:r87  l0     3    1:r93  l0     6
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_writebatch_t* leveldb_writebatch_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={4d} r18={4d} r19={4d} r20={1d,6u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 355{316d,39u,0e} in 13{9 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) db/c.cc:338 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:338 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 87 [ D.37315 ])
        (reg:DI 0 ax)) db/c.cc:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 9 7 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:48 89 {*movdi_internal}
     (nil))
(call_insn 10 9 30 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatchC1Ev") [flags 0x41]  <function_decl 0x7fb537669438 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/c.cc:48 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatchC1Ev") [flags 0x41]  <function_decl 0x7fb537669438 __comp_ctor >)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [100.0%]  (FALLTHRU)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 30 10 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 32 30 33 3 (set (pc)
        (label_ref 31)) 654 {jump}
     (nil)
 -> 31)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 33 32 27)
;; basic block 4, loop depth 0, count 0, freq 0
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 4 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
(code_label/s 27 33 29 4 320 "" [1 uses])
(note 29 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 29 15 4 (set (reg:DI 93)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 15 28 16 5 319 "" [0 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37315 ])
        (nil)))
(call_insn 18 17 20 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:338 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 18 21 5 (set (reg:DI 5 di)
        (reg:DI 93)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 21 20 22 5 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 31)
;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
(code_label 31 22 26 6 321 "" [1 uses])
(note 26 31 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 26 25 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:339 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37315 ])
        (nil)))
(insn 25 24 0 6 (use (reg/i:DI 0 ax)) db/c.cc:339 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_destroy(leveldb_writebatch_t*) (leveldb_writebatch_destroy, funcdef_no=1459, decl_uid=2245, cgraph_uid=569, symbol_order=572)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Will split live ranges of parameters at BB 3
      Creating newreg=89 from oldreg=88
scanning new insn with uid = 18.
Split live-range of register (reg/v/f:DI 88 [ b ])
rescanning insn with uid = 11.
rescanning insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
Reg 89 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r89,l0) best DIREG, allocno DIREG
    a1 (r88,l0) best DIREG, allocno DIREG

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18792,18792 NO_REX_SSE_REGS:18792,18792 SSE_REGS:18792,18792 MMX_REGS:26622,26622 INT_SSE_REGS:20358,20358 ALL_REGS:404028,404028 MEM:5481,5481
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22264,22264 NO_REX_SSE_REGS:22264,22264 SSE_REGS:22264,22264 MMX_REGS:31179,31179 INT_SSE_REGS:24047,24047 ALL_REGS:470864,470864 MEM:7349,7349


Pass 1 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21924,21924 NO_REX_SSE_REGS:21924,21924 SSE_REGS:21924,21924 MMX_REGS:29754,29754 INT_SSE_REGS:23490,23490 ALL_REGS:407160,407160 MEM:7830,7830
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349

   Insn 12(l0): point = 1
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 18(l0): point = 9
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 2(l0): point = 16
 a0(r89): [4..9]
 a1(r88): [10..16]
Compressing live ranges: from 19 to 4 - 21%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r88): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r89,l0) conflicts:;; a1(r88,l0) conflicts:  cp0:a0(r89)<->a1(r88)@783:move
  pref0:a0(r89)<-hr5@1957
  pref1:a1(r88)<-hr5@1500
  regions=1, blocks=5, points=4
    allocnos=2 (big 0), copies=1, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r89 1r88
    modified regnos: 88 89
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@1957
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26698
          2:( 0-4 6 37-44)@15660
      Allocno a0r89 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r89-a1r88 (freq=783):
        Result (freq=5132): a0r89(2349) a1r88(2783)
      Pushing a0(r89,l0)(cost 0)
      Pushing a1(r88,l0)(cost 0)
      Popping a1(r88,l0)  -- assign reg 5
      Popping a0(r89,l0)  -- assign reg 3
Disposition:
    1:r88  l0     5    0:r89  l0     3
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writebatch_destroy(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r89={1d,2u} 
;;    total ref usage 193{168d,25u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ b ])
            (const_int 0 [0]))) db/c.cc:342 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 16)
            (pc))) db/c.cc:342 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 16)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 8 7 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 8 9 3 (set (reg/v/f:DI 89 [orig:88 b ] [88])
        (reg/v/f:DI 88 [ b ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(insn 9 18 10 3 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [orig:88 b ] [88])) db/c.cc:48 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 3 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatchD1Ev") [flags 0x41]  <function_decl 0x7fb5376695e8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:48 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatchD1Ev") [flags 0x41]  <function_decl 0x7fb5376695e8 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [orig:88 b ] [88])) db/c.cc:342 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [orig:88 b ] [88])
        (nil)))
(call_insn/j 12 11 13 3 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:342 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 13 12 16)
;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 16 13 17 4 324 "" [1 uses])
(note 17 16 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_clear(leveldb_writebatch_t*) (leveldb_writebatch_clear, funcdef_no=1463, decl_uid=2247, cgraph_uid=570, symbol_order=573)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r88): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r88): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r88,l0) conflicts:  pref0:a0(r88)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88
    modified regnos: 88
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
Disposition:
    0:r88  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writebatch_clear(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:346 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch5ClearEv") [flags 0x41]  <function_decl 0x7fb537663870 Clear>) [0 Clear S1 A8])
        (const_int 0 [0])) db/c.cc:346 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch5ClearEv") [flags 0x41]  <function_decl 0x7fb537663870 Clear>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function void leveldb_writebatch_put(leveldb_writebatch_t*, const char*, size_t, const char*, size_t) (leveldb_writebatch_put, funcdef_no=1464, decl_uid=2253, cgraph_uid=571, symbol_order=574)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Ignoring reg 89, has equiv memory
Ignoring reg 90, has equiv memory
Ignoring reg 91, has equiv memory
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 89: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 90: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 91: (insn_list:REG_DEP_TRUE 12 (nil))
Reg 94 had equivalence, but can't be eliminated
Reg 95 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r95,l0) best SIREG, allocno SIREG
    a2 (r94,l0) best DREG, allocno DREG
    a5 (r91,l0) best CREG, allocno CREG
    a3 (r90,l0) best DREG, allocno DREG
    a4 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a2(r94,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a3(r90,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a5(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a2(r94,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a3(r90,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a5(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 26(l0): point = 1
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 9(l0): point = 28
   Insn 5(l0): point = 30
   Insn 4(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r88): [11..36]
 a1(r95): [13..16]
 a2(r94): [15..18]
 a3(r90): [21..32]
 a4(r89): [23..34]
 a5(r91): [27..30]
Compressing live ranges: from 39 to 4 - 10%
Ranges after the compression:
 a0(r88): [0..3]
 a1(r95): [0..1]
 a2(r94): [0..1]
 a3(r90): [2..3]
 a4(r89): [2..3]
 a5(r91): [2..3]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r88,l0) conflicts: a1(r95,l0) a2(r94,l0) a3(r90,l0) a4(r89,l0) a5(r91,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

;; a1(r95,l0) conflicts: a2(r94,l0) a0(r88,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a2(r94,l0) conflicts: a1(r95,l0) a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts: a0(r88,l0) a4(r89,l0) a5(r91,l0)
;;     total conflict hard regs: 2 37
;;     conflict hard regs: 2 37

;; a4(r89,l0) conflicts: a0(r88,l0) a3(r90,l0) a5(r91,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a5(r91,l0) conflicts: a0(r88,l0) a3(r90,l0) a4(r89,l0)
;;     total conflict hard regs: 37
;;     conflict hard regs: 37

  pref0:a1(r95)<-hr4@1500
  pref1:a2(r94)<-hr1@1500
  pref2:a5(r91)<-hr2@1500
  pref3:a3(r90)<-hr1@1500
  pref4:a4(r89)<-hr4@1500
  pref5:a0(r88)<-hr5@3000
  regions=1, blocks=5, points=4
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r88 1r95 2r94 3r90 4r89 5r91
    modified regnos: 88 89 90 91 94 95
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@20000
          2:( 0-6 38-44)@22000
            3:( 0 1 3-6 38-44)@22000
              4:( 0 3-6 38-44)@42000
                5:( 0 3 5 6 38-44)@26000
      Allocno a0r88 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, node:  0 3 5 6 38-44 (confl regs =  1 2 4 7-37 45-79)
      Allocno a1r95 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, ^node:  0-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a2r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 13 avail. regs  0 1 3-6 38-44, node:  0 1 3-6 38-44 (confl regs =  2 7-37 45-79)
      Allocno a4r89 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, node:  0 3-6 38-44 (confl regs =  1 2 7-37 45-79)
      Allocno a5r91 of GENERAL_REGS(15) has 14 avail. regs  0-6 38-44, node:  0-6 38-44 (confl regs =  7-37 45-79)
      Pushing a5(r91,l0)(cost 0)
      Pushing a4(r89,l0)(cost 0)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r95,l0)  -- assign reg 4
      Popping a2(r94,l0)  -- assign reg 1
      Popping a3(r90,l0)  -- assign reg 1
      Popping a4(r89,l0)  -- assign reg 4
      Popping a5(r91,l0)  -- assign reg 2
Disposition:
    0:r88  l0     5    4:r89  l0     4    3:r90  l0     1    5:r91  l0     2
    2:r94  l0     1    1:r95  l0     4
New iteration of spill/restore move
+++Costs: overall -21000, reg -21000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writebatch_put(leveldb_writebatch_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u,7e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 223{176d,40u,7e} in 18{16 regular + 2 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 94 95
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [3 D.31654.data_+0 S8 A128])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 90 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [9 D.31654.size_+0 S8 A64])
            (nil))))
(insn 5 4 6 2 (set (reg/v/f:DI 91 [ val ])
        (reg:DI 2 cx [ val ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ val ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 D.31655.data_+0 S8 A128])
            (nil))))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37326+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:352 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 9 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31655.data_+0 S8 A128])
        (reg/v/f:DI 91 [ val ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ val ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31655.size_+0 S8 A64])
        (reg:DI 37 r8 [ vlen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ vlen ])
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31654.data_+0 S8 A128])
        (reg/v/f:DI 89 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ key ])
        (nil)))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 D.31654.size_+0 S8 A64])
        (reg/v:DI 90 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ klen ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:353 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:353 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg/f:DI 94)) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 95)) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn 21 20 24 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7fb5376636c0 Put>) [0 Put S1 A8])
        (const_int 0 [0])) db/c.cc:353 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7fb5376636c0 Put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 21 25 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37326+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:354 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 25 24 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) db/c.cc:354 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 28)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(6){ }u32(7){ }u33(16){ }u34(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 30 27 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:354 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 28 27 31 4 330 "" [1 uses])
(note 31 28 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_delete(leveldb_writebatch_t*, const char*, size_t) (leveldb_writebatch_delete, funcdef_no=1465, decl_uid=2257, cgraph_uid=572, symbol_order=575)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Ignoring reg 89, has equiv memory
Ignoring reg 90, has equiv memory
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 89: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 90: (insn_list:REG_DEP_TRUE 11 (nil))
Reg 92 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r92,l0) best SIREG, allocno SIREG
    a2 (r90,l0) best DREG, allocno DREG
    a3 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a2(r90,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a3(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r92: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a2(r90,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 20(l0): point = 1
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 15(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 11(l0): point = 16
   Insn 10(l0): point = 18
   Insn 7(l0): point = 20
   Insn 4(l0): point = 22
   Insn 3(l0): point = 24
   Insn 2(l0): point = 26
 a0(r88): [11..26]
 a1(r92): [13..14]
 a2(r90): [17..22]
 a3(r89): [19..24]
Compressing live ranges: from 29 to 4 - 13%
Ranges after the compression:
 a0(r88): [0..3]
 a1(r92): [0..1]
 a2(r90): [2..3]
 a3(r89): [2..3]
+++Allocating 32 bytes for conflict table (uncompressed size 32)
;; a0(r88,l0) conflicts: a1(r92,l0) a2(r90,l0) a3(r89,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a1(r92,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a0(r88,l0) a3(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r89,l0) conflicts: a0(r88,l0) a2(r90,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  pref0:a1(r92)<-hr4@1500
  pref1:a2(r90)<-hr1@1500
  pref2:a3(r89)<-hr4@1500
  pref3:a0(r88)<-hr5@3000
  regions=1, blocks=5, points=4
    allocnos=4 (big 0), copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r88 1r92 2r90 3r89
    modified regnos: 88 89 90 92
    border:
    Pressure: GENERAL_REGS=3
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@42000
          2:( 0 2-6 37-44)@22000
            3:( 0 2 3 5 6 37-44)@26000
      Allocno a0r88 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, node:  0 2 3 5 6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r89 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Pushing a3(r89,l0)(cost 0)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 4
      Popping a2(r90,l0)  -- assign reg 1
      Popping a3(r89,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    3:r89  l0     4    2:r90  l0     1    1:r92  l0     4
New iteration of spill/restore move
+++Costs: overall -15000, reg -15000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writebatch_delete(leveldb_writebatch_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,4e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r92={1d,1u} 
;;    total ref usage 208{172d,32u,4e} in 13{11 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 92
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 D.31661.data_+0 S8 A128])
            (nil))))
(insn 4 3 5 2 (set (reg/v:DI 90 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (expr_list:REG_EQUIV (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [9 D.31661.size_+0 S8 A64])
            (nil))))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37330+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:358 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31661.data_+0 S8 A128])
        (reg/v/f:DI 89 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ key ])
        (nil)))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31661.size_+0 S8 A64])
        (reg/v:DI 90 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ klen ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:359 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 92)) db/c.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn 15 14 18 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE") [flags 0x41]  <function_decl 0x7fb537663798 Delete>) [0 Delete S1 A8])
        (const_int 0 [0])) db/c.cc:359 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE") [flags 0x41]  <function_decl 0x7fb537663798 Delete>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 15 19 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37330+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:360 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 19 18 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) db/c.cc:360 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 22)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 24 19 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 20 24 21 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:360 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 21 20 22)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 22 21 25 4 334 "" [1 uses])
(note 25 22 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t)) (leveldb_writebatch_iterate, funcdef_no=1466, decl_uid=2270, cgraph_uid=581, symbol_order=584)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 11 count 11 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90: local to bb 2 def dominates all uses has unique first use
Ignoring reg 91, has equiv memory
Ignoring reg 92, has equiv memory
Ignoring reg 93, has equiv memory
Ignoring reg 107, has equiv memory
Reg 95 uninteresting
Reg 88 uninteresting
Reg 99 uninteresting
Reg 105: def dominates all uses has unique first use
Reg 102 uninteresting
Found def insn 2 for 90 to be not moveable
Reg 105 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 7 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 10 6 }
;; 6 succs { 9 }
;; 7 succs { 8 }
;; 8 succs { }
;; 9 succs { }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 92: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 11 (nil))
Reg 97 had equivalence, but can't be eliminated
Reg 108 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a1 (r108,l0) best DIREG, allocno DIREG
    a3 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best AREG, allocno AREG
    a2 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r97,l0) best DIREG, allocno DIREG
    a11 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r93,l0) best CREG, allocno CREG
    a9 (r92,l0) best DREG, allocno DREG
    a10 (r91,l0) best SIREG, allocno SIREG
    a7 (r90,l0) best SIREG, allocno SIREG
    a5 (r88,l0) best DIREG, allocno DIREG

  a0(r105,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a1(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1001,-1001 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29008,29008 NO_REX_SSE_REGS:29008,29008 SSE_REGS:29008,29008 MMX_REGS:39013,39013 INT_SSE_REGS:31009,31009 ALL_REGS:624208,624208 MEM:10003,10003
  a2(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a3(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28008,28008 NO_REX_SSE_REGS:28008,28008 SSE_REGS:28008,28008 MMX_REGS:38013,38013 INT_SSE_REGS:30009,30009 ALL_REGS:520208,520208 MEM:4004,4004
  a4(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349
  a6(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a7(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a8(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a9(r92,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a10(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a11(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a1(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1001 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29008,29008 NO_REX_SSE_REGS:29008,29008 SSE_REGS:29008,29008 MMX_REGS:39013,39013 INT_SSE_REGS:31009,31009 ALL_REGS:624208,624208 MEM:10003,10003
  a2(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a3(r107,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29008,29008 NO_REX_SSE_REGS:29008,29008 SSE_REGS:29008,29008 MMX_REGS:39013,39013 INT_SSE_REGS:31009,31009 ALL_REGS:524208,524208 MEM:4004,4004
  a4(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a5(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27264,27264 NO_REX_SSE_REGS:27264,27264 SSE_REGS:27264,27264 MMX_REGS:36179,36179 INT_SSE_REGS:29047,29047 ALL_REGS:478864,478864 MEM:10349,10349
  a6(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a7(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a8(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a9(r92,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a10(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a11(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000

   Insn 56(l0): point = 1
   Insn 50(l0): point = 4
   Insn 49(l0): point = 6
   Insn 47(l0): point = 8
   Insn 46(l0): point = 10
   Insn 44(l0): point = 12
   Insn 43(l0): point = 14
   Insn 63(l0): point = 17
   Insn 79(l0): point = 20
   Insn 55(l0): point = 23
   Insn 54(l0): point = 25
   Insn 37(l0): point = 27
   Insn 36(l0): point = 29
   Insn 34(l0): point = 31
   Insn 33(l0): point = 33
   Insn 29(l0): point = 36
   Insn 28(l0): point = 38
   Insn 26(l0): point = 41
   Insn 25(l0): point = 43
   Insn 24(l0): point = 45
   Insn 22(l0): point = 48
   Insn 21(l0): point = 50
   Insn 20(l0): point = 52
   Insn 19(l0): point = 54
   Insn 18(l0): point = 56
   Insn 17(l0): point = 58
   Insn 16(l0): point = 60
   Insn 15(l0): point = 62
   Insn 14(l0): point = 64
   Insn 13(l0): point = 66
   Insn 12(l0): point = 68
   Insn 11(l0): point = 70
   Insn 8(l0): point = 72
   Insn 5(l0): point = 74
   Insn 4(l0): point = 76
   Insn 3(l0): point = 78
   Insn 2(l0): point = 80
 a0(r105): [7..17]
 a1(r108): [30..56] [11..19]
 a2(r102): [13..14]
 a3(r107): [34..70] [15..19]
 a4(r99): [32..33]
 a5(r88): [39..45]
 a6(r97): [51..58]
 a7(r90): [53..80]
 a8(r93): [61..74]
 a9(r92): [63..76]
 a10(r91): [65..78]
 a11(r95): [67..68]
Compressing live ranges: from 83 to 12 - 14%
Ranges after the compression:
 a0(r105): [0..3]
 a1(r108): [0..9]
 a2(r102): [0..1]
 a3(r107): [6..11] [2..3]
 a4(r99): [4..5]
 a5(r88): [6..7]
 a6(r97): [8..9]
 a7(r90): [8..11]
 a8(r93): [10..11]
 a9(r92): [10..11]
 a10(r91): [10..11]
 a11(r95): [10..11]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r105,l0) conflicts: a2(r102,l0) a1(r108,l0) a3(r107,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r108,l0) conflicts: a2(r102,l0) a0(r105,l0) a3(r107,l0) a4(r99,l0) a5(r88,l0) a6(r97,l0) a7(r90,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a2(r102,l0) conflicts: a0(r105,l0) a1(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r107,l0) conflicts: a0(r105,l0) a1(r108,l0) a5(r88,l0) a6(r97,l0) a7(r90,l0) a8(r93,l0) a9(r92,l0) a10(r91,l0) a11(r95,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r99,l0) conflicts: a1(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r88,l0) conflicts: a1(r108,l0) a3(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r97,l0) conflicts: a1(r108,l0) a3(r107,l0) a7(r90,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a7(r90,l0) conflicts: a1(r108,l0) a3(r107,l0) a6(r97,l0) a8(r93,l0) a9(r92,l0) a10(r91,l0) a11(r95,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a8(r93,l0) conflicts: a3(r107,l0) a7(r90,l0) a9(r92,l0) a10(r91,l0) a11(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r92,l0) conflicts: a3(r107,l0) a7(r90,l0) a8(r93,l0) a10(r91,l0) a11(r95,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a10(r91,l0) conflicts: a3(r107,l0) a7(r90,l0) a8(r93,l0) a9(r92,l0) a11(r95,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a11(r95,l0) conflicts: a3(r107,l0) a7(r90,l0) a8(r93,l0) a9(r92,l0) a10(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r108)<-hr5@1501
  pref1:a6(r97)<-hr5@1500
  pref2:a8(r93)<-hr2@1500
  pref3:a9(r92)<-hr1@1500
  pref4:a10(r91)<-hr4@1500
  pref5:a7(r90)<-hr4@1500
  pref6:a5(r88)<-hr5@1174
  pref7:a0(r105)<-hr5@1
  pref8:a0(r105)<-hr0@1
  pref9:a7(r90)<-hr5@1000
  pref10:a1(r108)<-hr1@1000
  regions=1, blocks=11, points=12
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r105 1r108 2r102 3r107 4r99 5r88 6r97 7r90 8r93 9r92 10r91 11r95
    modified regnos: 88 90 91 92 93 95 97 99 102 105 107 108
    border:
    Pressure: GENERAL_REGS=6
 Removing pref7:hr5@1
 Removing pref10:hr1@1000
 Removing pref0:hr5@1501
 Removing pref5:hr4@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@79412
          2:( 0 1 3-6 37-44)@22000
            3:( 0 3-6 37-44)@22000
              4:( 0 3 5 6 37-44)@40000
                5:( 0 3 6 41-44)@14
                  6:( 3 6 41-44)@28014
      Allocno a0r105 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a1r108 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a2r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r107 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r97 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a7r90 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a8r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r92 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 37-44, node:  0 1 3-6 37-44 (confl regs =  2 7-36 45-79)
      Allocno a10r91 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a11r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a2(r102,l0)(cost 0)
      Pushing a0(r105,l0)(cost 0)
        Making a1(r108,l0) colorable
      Pushing a11(r95,l0)(cost 0)
      Pushing a10(r91,l0)(cost 0)
      Pushing a9(r92,l0)(cost 0)
        Making a3(r107,l0) colorable
      Pushing a8(r93,l0)(cost 0)
      Pushing a7(r90,l0)(cost 0)
      Pushing a6(r97,l0)(cost 0)
      Pushing a4(r99,l0)(cost 0)
      Pushing a5(r88,l0)(cost 0)
      Pushing a3(r107,l0)(cost 4004)
      Pushing a1(r108,l0)(cost 10003)
      Popping a1(r108,l0)  -- assign reg 3
      Popping a3(r107,l0)  -- assign reg 6
      Popping a5(r88,l0)  -- assign reg 5
      Popping a4(r99,l0)  -- assign reg 0
      Popping a6(r97,l0)  -- assign reg 5
      Popping a7(r90,l0)  -- assign reg 0
      Popping a8(r93,l0)  -- assign reg 2
      Popping a9(r92,l0)  -- assign reg 1
      Popping a10(r91,l0)  -- assign reg 4
      Popping a11(r95,l0)  -- assign reg 5
      Popping a0(r105,l0)  -- assign reg 0
      Popping a2(r102,l0)  -- assign reg 1
Assigning 41 to a0r105
Disposition:
    5:r88  l0     5    7:r90  l0     0   10:r91  l0     4    9:r92  l0     1
    8:r93  l0     2   11:r95  l0     5    6:r97  l0     5    4:r99  l0     0
    2:r102 l0     1    0:r105 l0    41    3:r107 l0     6    1:r108 l0     3
New iteration of spill/restore move
+++Costs: overall -14349, reg -14349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={7d,1u} r4={8d,2u} r5={12d,6u} r6={1d,10u} r7={1d,16u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,9u} r17={11d,2u} r18={6d} r19={6d} r20={1d,21u,9e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r95={1d,1u} r97={1d,1u} r99={1d,1u} r102={1d,1u} r105={1d,1u} r107={1d,3u} r108={1d,3u} 
;;    total ref usage 573{477d,87u,9e} in 37{31 regular + 6 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 95 97 107 108
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 90 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ state ])
        (reg:DI 4 si [ state ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ state ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [3 handler.state_+0 S8 A64])
            (nil))))
(insn 4 3 5 2 (set (reg/v/f:DI 92 [ put ])
        (reg:DI 1 dx [ put ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ put ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [3 handler.put_+0 S8 A128])
            (nil))))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ deleted ])
        (reg:DI 2 cx [ deleted ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ deleted ])
        (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [3 handler.deleted_+0 S8 A64])
            (nil))))
(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37336+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:366 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 95)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                (const_int 16 [0x10])))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 95)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 handler.state_+0 S8 A64])
        (reg/v/f:DI 91 [ state ])) db/c.cc:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ state ])
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 handler.put_+0 S8 A128])
        (reg/v/f:DI 92 [ put ])) db/c.cc:381 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ put ])
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 handler.deleted_+0 S8 A64])
        (reg/v/f:DI 93 [ deleted ])) db/c.cc:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ deleted ])
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:383 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:383 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg/f:DI 108)) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ b ])) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ b ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg/f:DI 97)) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE") [flags 0x41]  <function_decl 0x7fb537669360 Iterate>) [0 Iterate S1 A8])
        (const_int 0 [0])) db/c.cc:383 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE") [flags 0x41]  <function_decl 0x7fb537669360 Iterate>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 88 [ D.37335 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31757.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37335 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 30)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              5 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37335 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37335 ])
        (nil)))
(call_insn 29 28 30 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99
(code_label 30 29 31 5 338 "" [1 uses])
(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 5 (set (reg/f:DI 99)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 34 33 36 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 99)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 36 34 37 5 (set (reg:DI 5 di)
        (reg/f:DI 108)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(call_insn 37 36 54 5 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 37 55 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37336+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:384 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 55 54 77 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) db/c.cc:384 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 58)
;;  succ:       10 [100.0%] 
;;              6 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 4
;;  prev block 5, next block 7, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [0.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 77 55 79 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 77 80 6 (set (pc)
        (label_ref 78)) 654 {jump}
     (nil)
 -> 78)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 62)
;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 7 artificial_defs: { d3(0){ }d12(1){ }}
;; bb 7 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 105
(code_label/s 62 80 64 7 341 "" [1 uses])
(note 64 62 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 64 40 7 (set (reg:DI 105)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102
(code_label 40 63 41 8 339 "" [0 uses])
(note 41 40 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 44 8 (set (reg/f:DI 102)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 44 43 46 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 102)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 46 44 47 8 (set (reg:DI 5 di)
        (reg/f:DI 108)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(call_insn 47 46 49 8 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 47 50 8 (set (reg:DI 5 di)
        (reg:DI 105)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 50 49 51 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 51 50 78)
;; basic block 9, loop depth 0, count 0, freq 4
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 78 51 60 9 345 "" [1 uses])
(note 60 78 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 56 60 57 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:384 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 57 56 58)
;; basic block 10, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 9, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 58 57 61 10 340 "" [1 uses])
(note 61 58 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_options_t* leveldb_options_create() (leveldb_options_create, funcdef_no=1475, decl_uid=2271, cgraph_uid=585, symbol_order=588)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting (no unique first use)
Reg 93: def dominates all uses has unique first use
Reg 93 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 }
;; 5 succs { }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r93,l0) best AREG, allocno AREG
    a0 (r87,l0) best AREG, allocno AREG

  a0(r87,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24008,24008 NO_REX_SSE_REGS:24008,24008 SSE_REGS:24008,24008 MMX_REGS:34013,34013 INT_SSE_REGS:26009,26009 ALL_REGS:516208,516208 MEM:7003,7003
  a1(r93,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4


Pass 1 for finding pseudo/allocno costs

    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28008,28008 NO_REX_SSE_REGS:28008,28008 SSE_REGS:28008,28008 MMX_REGS:38013,38013 INT_SSE_REGS:30009,30009 ALL_REGS:520208,520208 MEM:10003,10003
  a1(r93,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 21(l0): point = 5
   Insn 20(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 28(l0): point = 14
   Insn 32(l0): point = 17
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 7(l0): point = 24
   Insn 6(l0): point = 26
   Insn 5(l0): point = 28
 a0(r87): [12..24] [3..4]
 a1(r93): [8..14]
Compressing live ranges: from 31 to 4 - 12%
Ranges after the compression:
 a0(r87): [0..3]
 a1(r93): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r93,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a1(r93,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

  pref0:a0(r87)<-hr0@3000
  pref1:a0(r87)<-hr5@1001
  pref2:a1(r93)<-hr5@1
  pref3:a1(r93)<-hr0@1
  regions=1, blocks=7, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r87 1r93
    modified regnos: 87 93
    border:
    Pressure: GENERAL_REGS=2
 Removing pref1:hr5@1001
 Removing pref0:hr0@3000
 Removing pref2:hr5@1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0 3 6 41-44)@14
          2:( 3 6 41-44)@20006
      Allocno a0r87 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 0
Assigning 6 to a1r93
Disposition:
    0:r87  l0     3    1:r93  l0     6
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_options_t* leveldb_options_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={4d} r18={4d} r19={4d} r20={1d,6u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 355{316d,39u,0e} in 13{9 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 80 [0x50])) db/c.cc:387 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:387 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 87 [ D.37343 ])
        (reg:DI 0 ax)) db/c.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 9 7 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:52 89 {*movdi_internal}
     (nil))
(call_insn 10 9 30 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb7OptionsC1Ev") [flags 0x41]  <function_decl 0x7fb537807360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/c.cc:52 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb7OptionsC1Ev") [flags 0x41]  <function_decl 0x7fb537807360 __comp_ctor >)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       3 [100.0%]  (FALLTHRU)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 30 10 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(jump_insn 32 30 33 3 (set (pc)
        (label_ref 31)) 654 {jump}
     (nil)
 -> 31)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 33 32 27)
;; basic block 4, loop depth 0, count 0, freq 0
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 4 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
(code_label/s 27 33 29 4 351 "" [1 uses])
(note 29 27 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 29 15 4 (set (reg:DI 93)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 15 28 16 5 350 "" [0 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 5 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37343 ])
        (nil)))
(call_insn 18 17 20 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:387 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 18 21 5 (set (reg:DI 5 di)
        (reg:DI 93)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 21 20 22 5 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 22 21 31)
;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
(code_label 31 22 26 6 352 "" [1 uses])
(note 26 31 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 26 25 6 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:388 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37343 ])
        (nil)))
(insn 25 24 0 6 (use (reg/i:DI 0 ax)) db/c.cc:388 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_destroy(leveldb_options_t*) (leveldb_options_destroy, funcdef_no=1899, decl_uid=2273, cgraph_uid=586, symbol_order=589)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_destroy(leveldb_options_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ options ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ options ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function void leveldb_options_set_comparator(leveldb_options_t*, leveldb_comparator_t*) (leveldb_options_set_comparator, funcdef_no=1480, decl_uid=2276, cgraph_uid=587, symbol_order=590)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_comparator(leveldb_options_t*, leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:396 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 88 [ cmp ])
        (reg:DI 4 si [ cmp ])) db/c.cc:396 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ cmp ])
        (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 87 [ opt ]) [3 opt_2(D)->rep.comparator+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem/f:DI (reg/v/f:DI 87 [ opt ]) [3 opt_2(D)->rep.comparator+0 S8 A64])
        (reg/v/f:DI 88 [ cmp ])) db/c.cc:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ cmp ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_filter_policy(leveldb_options_t*, leveldb_filterpolicy_t*) (leveldb_options_set_filter_policy, funcdef_no=1481, decl_uid=2279, cgraph_uid=588, symbol_order=591)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_filter_policy(leveldb_options_t*, leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 88 [ policy ])
        (reg:DI 4 si [ policy ])) db/c.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ policy ])
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                    (const_int 72 [0x48])) [3 opt_2(D)->rep.filter_policy+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 72 [0x48])) [3 opt_2(D)->rep.filter_policy+0 S8 A64])
        (reg/v/f:DI 88 [ policy ])) db/c.cc:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ policy ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_create_if_missing(leveldb_options_t*, unsigned char) (leveldb_options_set_create_if_missing, funcdef_no=1482, decl_uid=2282, cgraph_uid=589, symbol_order=592)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_create_if_missing(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:407 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:408 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 8 [0x8])) [17 opt_4(D)->rep.create_if_missing+0 S1 A64])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:408 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_error_if_exists(leveldb_options_t*, unsigned char) (leveldb_options_set_error_if_exists, funcdef_no=1483, decl_uid=2285, cgraph_uid=590, symbol_order=593)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_error_if_exists(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:412 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:413 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 9 [0x9])) [17 opt_4(D)->rep.error_if_exists+0 S1 A8])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:413 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_paranoid_checks(leveldb_options_t*, unsigned char) (leveldb_options_set_paranoid_checks, funcdef_no=1484, decl_uid=2288, cgraph_uid=591, symbol_order=594)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_paranoid_checks(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:417 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:418 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 10 [0xa])) [17 opt_4(D)->rep.paranoid_checks+0 S1 A16])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:418 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*) (leveldb_options_set_env, funcdef_no=1485, decl_uid=2291, cgraph_uid=592, symbol_order=595)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 88 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19584,19584 NO_REX_SSE_REGS:19584,19584 SSE_REGS:19584,19584 MMX_REGS:24584,24584 INT_SSE_REGS:20584,20584 ALL_REGS:311492,311492 MEM:7693,7693
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23184,23184 NO_REX_SSE_REGS:23184,23184 SSE_REGS:23184,23184 MMX_REGS:32674,32674 INT_SSE_REGS:25082,25082 ALL_REGS:494784,494784 MEM:8592,8592


Pass 1 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20886,20886 NO_REX_SSE_REGS:20886,20886 SSE_REGS:20886,20886 MMX_REGS:25886,25886 INT_SSE_REGS:21886,21886 ALL_REGS:315488,315488 MEM:7996,7996
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27184,27184 NO_REX_SSE_REGS:27184,27184 SSE_REGS:27184,27184 MMX_REGS:36674,36674 INT_SSE_REGS:29082,29082 ALL_REGS:498784,498784 MEM:11592,11592

   Insn 14(l0): point = 0
   Insn 5(l0): point = 3
   Insn 21(l0): point = 6
   Insn 11(l0): point = 8
   Insn 9(l0): point = 11
   Insn 8(l0): point = 13
   Insn 3(l0): point = 15
   Insn 2(l0): point = 17
 a0(r88): [1..17]
 a1(r87): [6..8] [1..3]
 a2(r89): [9..15]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r88): [0..5]
 a1(r87): [0..3]
 a2(r89): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r87,l0) a2(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r87,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a2(r89)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=6, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r88 1r87 2r89
    modified regnos: 87 88 89
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@45176
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r87,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Pushing a2(r89,l0)(cost 0)
      Popping a2(r89,l0)  -- assign reg 4
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r87,l0)  -- assign reg 0
Disposition:
    1:r87  l0     0    0:r88  l0     5    2:r89  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:421 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ env ])
        (reg:DI 4 si [ env ])) db/c.cc:421 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ env ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ env ])
            (const_int 0 [0]))) db/c.cc:422 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:422 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 21 3 (set (reg/f:DI 87 [ D.37366 ])
        (mem/f:DI (reg/v/f:DI 89 [ env ]) [3 env_2(D)->rep+0 S8 A64])) db/c.cc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ env ])
        (nil)))
(jump_insn 21 11 22 3 (set (pc)
        (label_ref 12)) 654 {jump}
     (nil)
 -> 12)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

(barrier 22 21 20)
;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 20 22 19 4 363 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37366 ])
        (const_int 0 [0])) db/c.cc:422 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
(code_label 12 5 13 5 362 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 16 [0x10])) [3 opt_5(D)->rep.env+0 S8 A64])
        (reg/f:DI 87 [ D.37366 ])) db/c.cc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37366 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*) (leveldb_options_set_info_log, funcdef_no=1486, decl_uid=2294, cgraph_uid=593, symbol_order=596)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 88 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19584,19584 NO_REX_SSE_REGS:19584,19584 SSE_REGS:19584,19584 MMX_REGS:24584,24584 INT_SSE_REGS:20584,20584 ALL_REGS:311492,311492 MEM:7693,7693
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23184,23184 NO_REX_SSE_REGS:23184,23184 SSE_REGS:23184,23184 MMX_REGS:32674,32674 INT_SSE_REGS:25082,25082 ALL_REGS:494784,494784 MEM:8592,8592


Pass 1 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20886,20886 NO_REX_SSE_REGS:20886,20886 SSE_REGS:20886,20886 MMX_REGS:25886,25886 INT_SSE_REGS:21886,21886 ALL_REGS:315488,315488 MEM:7996,7996
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27184,27184 NO_REX_SSE_REGS:27184,27184 SSE_REGS:27184,27184 MMX_REGS:36674,36674 INT_SSE_REGS:29082,29082 ALL_REGS:498784,498784 MEM:11592,11592

   Insn 14(l0): point = 0
   Insn 5(l0): point = 3
   Insn 21(l0): point = 6
   Insn 11(l0): point = 8
   Insn 9(l0): point = 11
   Insn 8(l0): point = 13
   Insn 3(l0): point = 15
   Insn 2(l0): point = 17
 a0(r88): [1..17]
 a1(r87): [6..8] [1..3]
 a2(r89): [9..15]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r88): [0..5]
 a1(r87): [0..3]
 a2(r89): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r87,l0) a2(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r87,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a2(r89)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=6, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r88 1r87 2r89
    modified regnos: 87 88 89
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@45176
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r87,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Pushing a2(r89,l0)(cost 0)
      Popping a2(r89,l0)  -- assign reg 4
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r87,l0)  -- assign reg 0
Disposition:
    1:r87  l0     0    0:r88  l0     5    2:r89  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ l ])
        (reg:DI 4 si [ l ])) db/c.cc:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ l ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ l ])
            (const_int 0 [0]))) db/c.cc:426 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 21 3 (set (reg/f:DI 87 [ D.37369 ])
        (mem/f:DI (reg/v/f:DI 89 [ l ]) [3 l_2(D)->rep+0 S8 A64])) db/c.cc:426 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ l ])
        (nil)))
(jump_insn 21 11 22 3 (set (pc)
        (label_ref 12)) 654 {jump}
     (nil)
 -> 12)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

(barrier 22 21 20)
;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 20 22 19 4 366 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37369 ])
        (const_int 0 [0])) db/c.cc:426 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
(code_label 12 5 13 5 365 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 24 [0x18])) [3 opt_5(D)->rep.info_log+0 S8 A64])
        (reg/f:DI 87 [ D.37369 ])) db/c.cc:426 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37369 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t) (leveldb_options_set_write_buffer_size, funcdef_no=1487, decl_uid=2297, cgraph_uid=594, symbol_order=597)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 88 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                    (const_int 32 [0x20])) [9 opt_2(D)->rep.write_buffer_size+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 32 [0x20])) [9 opt_2(D)->rep.write_buffer_size+0 S8 A64])
        (reg/v:DI 88 [ s ])) db/c.cc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 88 [ s ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_max_open_files(leveldb_options_t*, int) (leveldb_options_set_max_open_files, funcdef_no=1488, decl_uid=2300, cgraph_uid=595, symbol_order=598)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_max_open_files(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 4 si [ n ])) db/c.cc:433 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                    (const_int 40 [0x28])) [27 opt_2(D)->rep.max_open_files+0 S4 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 40 [0x28])) [27 opt_2(D)->rep.max_open_files+0 S4 A64])
        (reg/v:SI 88 [ n ])) db/c.cc:434 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 88 [ n ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*) (leveldb_options_set_cache, funcdef_no=1489, decl_uid=2303, cgraph_uid=596, symbol_order=599)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89 uninteresting
Ignoring reg 90, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 90: (insn_list:REG_DEP_TRUE 8 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000


Pass 1 for finding pseudo/allocno costs

    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000

   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [1..2]
 a2(r89): [3..4]
Compressing live ranges: from 9 to 4 - 44%
Ranges after the compression:
 a0(r88): [0..3]
 a1(r90): [0..1]
 a2(r89): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r90,l0) a2(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a2(r89)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90 2r89
    modified regnos: 88 89 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@30000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a2(r89,l0)(cost 0)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 0
      Popping a2(r89,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    2:r89  l0     4    1:r90  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u,1e} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 35{22d,12u,1e} in 4{4 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ c ])
        (reg:DI 4 si [ c ])) db/c.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ c ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 90 [ c_2(D)->rep ])
        (mem/f:DI (reg/v/f:DI 89 [ c ]) [3 c_2(D)->rep+0 S8 A64])) db/c.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ c ])
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                    (const_int 48 [0x30])) [3 opt_4(D)->rep.block_cache+0 S8 A64])
            (nil))))
(insn 8 7 0 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 48 [0x30])) [3 opt_4(D)->rep.block_cache+0 S8 A64])
        (reg/f:DI 90 [ c_2(D)->rep ])) db/c.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ c_2(D)->rep ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_block_size(leveldb_options_t*, size_t) (leveldb_options_set_block_size, funcdef_no=1490, decl_uid=2306, cgraph_uid=597, symbol_order=600)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_block_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 88 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                    (const_int 56 [0x38])) [9 opt_2(D)->rep.block_size+0 S8 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 56 [0x38])) [9 opt_2(D)->rep.block_size+0 S8 A64])
        (reg/v:DI 88 [ s ])) db/c.cc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 88 [ s ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_block_restart_interval(leveldb_options_t*, int) (leveldb_options_set_block_restart_interval, funcdef_no=1491, decl_uid=2309, cgraph_uid=598, symbol_order=601)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r88,l0) best SIREG, allocno SIREG
    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r88: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [1..4]
 a1(r88): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r87,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r88,l0) conflicts: a0(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r88)<-hr4@1500
  pref1:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87 1r88
    modified regnos: 87 88
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
      Popping a1(r88,l0)  -- assign reg 4
Disposition:
    0:r87  l0     5    1:r88  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_block_restart_interval(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u,1e} r88={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 4 si [ n ])) db/c.cc:445 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                    (const_int 64 [0x40])) [27 opt_2(D)->rep.block_restart_interval+0 S4 A64])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 64 [0x40])) [27 opt_2(D)->rep.block_restart_interval+0 S4 A64])
        (reg/v:SI 88 [ n ])) db/c.cc:446 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 88 [ n ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_compression(leveldb_options_t*, int) (leveldb_options_set_compression, funcdef_no=1492, decl_uid=2315, cgraph_uid=599, symbol_order=602)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 89, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 89: (insn_list:REG_DEP_TRUE 7 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 7(l0): point = 0
   Insn 3(l0): point = 2
   Insn 2(l0): point = 4
 a0(r88): [1..4]
 a1(r89): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r89): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r89)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r89
    modified regnos: 88 89
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r89,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r89,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r89  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_options_set_compression(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u,1e} r89={1d,1u} 
;;    total ref usage 33{21d,11u,1e} in 3{3 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 89 [ t ])
        (reg:SI 4 si [ t ])) db/c.cc:449 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ t ])
        (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 88 [ opt ])
                    (const_int 68 [0x44])) [28 opt_4(D)->rep.compression+0 S4 A32])
            (nil))))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 68 [0x44])) [28 opt_4(D)->rep.compression+0 S4 A32])
        (reg/v:SI 89 [ t ])) db/c.cc:450 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 89 [ t ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_comparator_t* leveldb_comparator_create(void*, void (*)(void*), int (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*)) (leveldb_comparator_create, funcdef_no=1493, decl_uid=2327, cgraph_uid=606, symbol_order=609)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 91: local to bb 2 def dominates all uses has unique first use
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Ignoring reg 95, has equiv memory
Reg 94 uninteresting
Found def insn 2 for 89 to be not moveable
Found def insn 3 for 90 to be not moveable
Found def insn 4 for 91 to be not moveable
Found def insn 5 for 92 to be not moveable
Found def insn 11 for 93 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 95: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno AREG
    a1 (r92,l0) best CREG, allocno CREG
    a2 (r91,l0) best DREG, allocno DREG
    a3 (r90,l0) best SIREG, allocno SIREG
    a4 (r89,l0) best DIREG, allocno DIREG

  a0(r93,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56000,56000 NO_REX_SSE_REGS:56000,56000 SSE_REGS:56000,56000 MMX_REGS:86000,86000 INT_SSE_REGS:62000,62000 ALL_REGS:1348000,1348000 MEM:24000,24000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r91,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a5(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a6(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60000,60000 NO_REX_SSE_REGS:60000,60000 SSE_REGS:60000,60000 MMX_REGS:90000,90000 INT_SSE_REGS:66000,66000 ALL_REGS:1352000,1352000 MEM:27000,27000
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r91,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a5(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a6(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 9(l0): point = 22
   Insn 5(l0): point = 24
   Insn 4(l0): point = 26
   Insn 3(l0): point = 28
   Insn 2(l0): point = 30
 a0(r93): [3..18]
 a1(r92): [5..24]
 a2(r91): [7..26]
 a3(r90): [9..28]
 a4(r89): [11..30]
 a5(r94): [13..14]
 a6(r95): [15..16]
Compressing live ranges: from 33 to 4 - 12%
Ranges after the compression:
 a0(r93): [0..3]
 a1(r92): [0..3]
 a2(r91): [0..3]
 a3(r90): [0..3]
 a4(r89): [0..3]
 a5(r94): [0..1]
 a6(r95): [2..3]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r93,l0) conflicts: a5(r94,l0) a1(r92,l0) a2(r91,l0) a3(r90,l0) a4(r89,l0) a6(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r92,l0) conflicts: a5(r94,l0) a0(r93,l0) a2(r91,l0) a3(r90,l0) a4(r89,l0) a6(r95,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a2(r91,l0) conflicts: a5(r94,l0) a0(r93,l0) a1(r92,l0) a3(r90,l0) a4(r89,l0) a6(r95,l0)
;;     total conflict hard regs: 0 2 5
;;     conflict hard regs: 0 2 5

;; a3(r90,l0) conflicts: a5(r94,l0) a0(r93,l0) a1(r92,l0) a2(r91,l0) a4(r89,l0) a6(r95,l0)
;;     total conflict hard regs: 0-2 5
;;     conflict hard regs: 0-2 5

;; a4(r89,l0) conflicts: a5(r94,l0) a0(r93,l0) a1(r92,l0) a2(r91,l0) a3(r90,l0) a6(r95,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a5(r94,l0) conflicts: a0(r93,l0) a1(r92,l0) a2(r91,l0) a3(r90,l0) a4(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r95,l0) conflicts: a0(r93,l0) a1(r92,l0) a2(r91,l0) a3(r90,l0) a4(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r93)<-hr0@3000
  pref1:a1(r92)<-hr2@1500
  pref2:a2(r91)<-hr1@1500
  pref3:a3(r90)<-hr4@1500
  pref4:a4(r89)<-hr5@1500
  regions=1, blocks=3, points=4
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r93 1r92 2r91 3r90 4r89 5r94 6r95
    modified regnos: 89 90 91 92 93 94 95
    border:
    Pressure: GENERAL_REGS=6
 Removing pref4:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@82000
          2:( 1-4 6 37-44)@16000
            3:( 1 3 4 6 37-44)@16000
              4:( 3 4 6 37-44)@16000
                5:( 3 6 37-44)@16000
      Allocno a0r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 12 avail. regs  1 3 4 6 37-44, node:  1 3 4 6 37-44 (confl regs =  0 2 5 7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 11 avail. regs  3 4 6 37-44, node:  3 4 6 37-44 (confl regs =  0-2 5 7-36 45-79)
      Allocno a4r89 of GENERAL_REGS(15) has 10 avail. regs  3 6 37-44, node:  3 6 37-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a5r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a6(r95,l0)(cost 0)
      Pushing a5(r94,l0)(cost 0)
      Pushing a4(r89,l0)(cost 0)
      Pushing a3(r90,l0)(cost 0)
      Pushing a2(r91,l0)(cost 0)
      Pushing a1(r92,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Popping a0(r93,l0)  -- assign reg 0
      Popping a1(r92,l0)  -- assign reg 3
      Popping a2(r91,l0)  -- assign reg 6
      Popping a3(r90,l0)  -- assign reg 41
      Popping a4(r89,l0)  -- assign reg 42
      Popping a5(r94,l0)  -- assign reg 1
      Popping a6(r95,l0)  -- assign reg 1
Disposition:
    4:r89  l0    42    3:r90  l0    41    2:r91  l0     6    1:r92  l0     3
    0:r93  l0     0    5:r94  l0     1    6:r95  l0     1
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_comparator_t* leveldb_comparator_create(void*, void (*)(void*), int (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,6u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 16{15 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 89 [ state ])
        (reg:DI 5 di [ state ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ state ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ destructor ])
        (reg:DI 4 si [ destructor ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ destructor ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ compare ])
        (reg:DI 1 dx [ compare ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ compare ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ name ])
        (reg:DI 2 cx [ name ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ name ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 5 di)
        (const_int 40 [0x28])) db/c.cc:461 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:461 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 13 2 (set (reg/f:DI 93)
        (reg:DI 0 ax)) db/c.cc:461 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 93)
            (nil))))
(insn 13 11 14 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:60 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 15 14 16 2 (set (mem/f:DI (reg/f:DI 93) [3 MEM[(struct leveldb_comparator_t *)_3].D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_comparator_t *)_3].state_+0 S8 A64])
        (reg/v/f:DI 89 [ state ])) db/c.cc:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ state ])
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_comparator_t *)_3].destructor_+0 S8 A64])
        (reg/v/f:DI 90 [ destructor ])) db/c.cc:463 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ destructor ])
        (nil)))
(insn 18 17 19 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 24 [0x18])) [3 MEM[(struct leveldb_comparator_t *)_3].compare_+0 S8 A64])
        (reg/v/f:DI 91 [ compare ])) db/c.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ compare ])
        (nil)))
(insn 19 18 24 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 32 [0x20])) [3 MEM[(struct leveldb_comparator_t *)_3].name_+0 S8 A64])
        (reg/v/f:DI 92 [ name ])) db/c.cc:465 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ name ])
        (nil)))
(insn 24 19 25 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 93)) db/c.cc:467 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) db/c.cc:467 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_comparator_destroy(leveldb_comparator_t*) (leveldb_comparator_destroy, funcdef_no=1500, decl_uid=2329, cgraph_uid=607, symbol_order=610)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 1 }
;; 5 succs { 1 }
;; 6 succs { 1 }
Will split live ranges of parameters at BB 4
      Creating newreg=101 from oldreg=93
scanning new insn with uid = 37.
Split live-range of register (reg/v/f:DI 93 [ cmp ])
rescanning insn with uid = 22.
rescanning insn with uid = 25.
rescanning insn with uid = 23.
rescanning insn with uid = 19.
rescanning insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 94, has equiv memory
Reg 88 uninteresting
Ignoring reg 98, has equiv memory
Reg 97 uninteresting
Ignoring reg 99, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 1 }
;; 5 succs { 1 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 94: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 98: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 99: (insn_list:REG_DEP_TRUE 19 (nil))

Pass 0 for finding pseudo/allocno costs

    a2 (r101,l0) best DIREG, allocno DIREG
    a3 (r99,l0) best DIREG, allocno DIREG
    a5 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best DIREG, allocno DIREG
    a0 (r88,l0) best AD_REGS, allocno AD_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:314,314 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:314,314 NON_Q_REGS:314,314 GENERAL_REGS:314,314 SSE_FIRST_REG:16916,16916 NO_REX_SSE_REGS:16916,16916 SSE_REGS:16916,16916 MMX_REGS:21616,21616 INT_SSE_REGS:17856,17856 ALL_REGS:276952,276952 MEM:6892,6892
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1157,-1157 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34792,34792 NO_REX_SSE_REGS:34792,34792 SSE_REGS:34792,34792 MMX_REGS:51537,51537 INT_SSE_REGS:38141,38141 ALL_REGS:796592,796592 MEM:13613,13613
  a2(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-626,-626 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:35056,35056 NO_REX_SSE_REGS:35056,35056 SSE_REGS:35056,35056 MMX_REGS:53836,53836 INT_SSE_REGS:38812,38812 ALL_REGS:843848,843848 MEM:14398,14398
  a3(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-626,-626 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12520,12520 NO_REX_SSE_REGS:12520,12520 SSE_REGS:12520,12520 MMX_REGS:15650,15650 INT_SSE_REGS:13146,13146 ALL_REGS:195312,195312 MEM:-626,-626
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13146,13146 NO_REX_SSE_REGS:13146,13146 SSE_REGS:13146,13146 MMX_REGS:16276,16276 INT_SSE_REGS:13772,13772 ALL_REGS:260416,260416 MEM:5008,5008
  a5(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12520,12520 NO_REX_SSE_REGS:12520,12520 SSE_REGS:12520,12520 MMX_REGS:15650,15650 INT_SSE_REGS:13146,13146 ALL_REGS:195312,195312 MEM:0,0
  a6(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative NO_REGS, allocno DIREG
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: CREG:0,0 BREG:314,314 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:314,314 NON_Q_REGS:314,314 GENERAL_REGS:314,314 SSE_FIRST_REG:17699,17699 NO_REX_SSE_REGS:17699,17699 SSE_REGS:17699,17699 MMX_REGS:22399,22399 INT_SSE_REGS:18639,18639 ALL_REGS:280084,280084 MEM:6892,6892
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1157 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38792,38792 NO_REX_SSE_REGS:38792,38792 SSE_REGS:38792,38792 MMX_REGS:55537,55537 INT_SSE_REGS:42141,42141 ALL_REGS:800592,800592 MEM:16613,16613
  a2(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-626 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37560,37560 NO_REX_SSE_REGS:37560,37560 SSE_REGS:37560,37560 MMX_REGS:56340,56340 INT_SSE_REGS:41316,41316 ALL_REGS:846352,846352 MEM:16276,16276
  a3(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-626,-626 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13146,13146 NO_REX_SSE_REGS:13146,13146 SSE_REGS:13146,13146 MMX_REGS:16276,16276 INT_SSE_REGS:13772,13772 ALL_REGS:197816,197816 MEM:-626,-626
  a4(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13146,13146 NO_REX_SSE_REGS:13146,13146 SSE_REGS:13146,13146 MMX_REGS:16276,16276 INT_SSE_REGS:13772,13772 ALL_REGS:260416,260416 MEM:5008,5008
  a5(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13146,13146 NO_REX_SSE_REGS:13146,13146 SSE_REGS:13146,13146 MMX_REGS:16276,16276 INT_SSE_REGS:13772,13772 ALL_REGS:197816,197816 MEM:0,0
  a6(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:0,0

   Insn 31(l0): point = 1
   Insn 30(l0): point = 3
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 24(l0): point = 10
   Insn 23(l0): point = 12
   Insn 22(l0): point = 14
   Insn 21(l0): point = 16
   Insn 19(l0): point = 18
   Insn 18(l0): point = 20
   Insn 17(l0): point = 22
   Insn 16(l0): point = 24
   Insn 37(l0): point = 26
   Insn 14(l0): point = 29
   Insn 13(l0): point = 31
   Insn 10(l0): point = 33
   Insn 9(l0): point = 35
   Insn 7(l0): point = 38
   Insn 6(l0): point = 40
   Insn 2(l0): point = 42
 a0(r88): [29..33] [2..5]
 a1(r93): [27..42] [4..5]
 a2(r101): [9..26]
 a3(r99): [17..18]
 a4(r97): [21..22]
 a5(r98): [23..24]
 a6(r94): [34..35]
Compressing live ranges: from 45 to 12 - 26%
Ranges after the compression:
 a0(r88): [8..9] [0..1]
 a1(r93): [8..11] [0..1]
 a2(r101): [2..7]
 a3(r99): [2..3]
 a4(r97): [4..5]
 a5(r98): [6..7]
 a6(r94): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r88,l0) conflicts: a1(r93,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r93,l0) conflicts: a0(r88,l0) a6(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r101,l0) conflicts: a3(r99,l0) a4(r97,l0) a5(r98,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a3(r99,l0) conflicts: a2(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r97,l0) conflicts: a2(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r98,l0) conflicts: a2(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r94,l0) conflicts: a1(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r93)<->a2(r101)@626:move
  pref0:a2(r101)<-hr5@1565
  pref1:a1(r93)<-hr5@1735
  pref2:a3(r99)<-hr5@626
  regions=1, blocks=7, points=12
    allocnos=7 (big 0), copies=1, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r88 1r93 2r101 3r99 4r97 5r98 6r94
    modified regnos: 88 93 94 97 98 99 101
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr5@1565
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50184
          2:( 0-4 6 37-44)@46336
          3:( 5)@1252
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r101 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a3r99 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a4r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a1r93-a2r101 (freq=626):
        Result (freq=7322): a1r93(3566) a2r101(3756)
      Pushing a5(r98,l0)(cost 0)
      Pushing a4(r97,l0)(cost 0)
      Pushing a3(r99,l0)(cost 0)
      Pushing a6(r94,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a2(r101,l0)(cost 0)
      Popping a2(r101,l0)  -- assign reg 3
      Popping a1(r93,l0)  -- assign reg 5
      Popping a0(r88,l0)  -- assign reg 0
      Popping a6(r94,l0)  -- assign reg 0
      Popping a3(r99,l0)  -- assign reg 5
      Popping a4(r97,l0)  -- assign reg 0
      Popping a5(r98,l0)  -- assign reg 0
Disposition:
    0:r88  l0     0    1:r93  l0     5    6:r94  l0     0    4:r97  l0     0
    5:r98  l0     0    3:r99  l0     5    2:r101 l0     3
New iteration of spill/restore move
+++Costs: overall -5349, reg -5349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_comparator_destroy(leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={6d,2u} r18={4d} r19={4d} r20={1d,6u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={1d,2u} r93={1d,4u,1e} r94={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r101={1d,5u,1e} 
;;    total ref usage 371{320d,49u,2e} in 20{16 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ cmp ])
        (reg:DI 5 di [ cmp ])) db/c.cc:469 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ cmp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ cmp ])
            (const_int 0 [0]))) db/c.cc:470 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) db/c.cc:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 35)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              6 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags] 88 94
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
        (mem/f:DI (reg/v/f:DI 93 [ cmp ]) [3 cmp_2(D)->D.28873._vptr.Comparator+0 S8 A64])) db/c.cc:470 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 93 [ cmp ]) [3 cmp_2(D)->D.28873._vptr.Comparator+0 S8 A64])
        (nil)))
(insn 10 9 11 3 (set (reg/f:DI 88 [ D.37393 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B]+0 S8 A64])) db/c.cc:470 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
        (nil)))
(note 11 10 13 3 NOTE_INSN_DELETED)
(insn 13 11 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37393 ])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN20leveldb_comparator_tD0Ev") [flags 0x1]  <function_decl 0x7fb53767c5e8 __deleting_dtor >)
                        ] UNSPEC_GOTPCREL)) [45  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2005 (nil)))
 -> 28)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              5 [20.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93

;; basic block 4, loop depth 0, count 0, freq 6264, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 101
(note 15 14 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 37 15 16 4 (set (reg/v/f:DI 101 [orig:93 cmp ] [93])
        (reg/v/f:DI 93 [ cmp ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ cmp ])
        (nil)))
(insn 16 37 17 4 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 17 16 18 4 (set (reg/f:DI 97)
        (plus:DI (reg:DI 98)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 18 17 19 4 (set (mem/f:DI (reg/v/f:DI 101 [orig:93 cmp ] [93]) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 97)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 19 18 20 4 (set (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])
        (mem/f:DI (plus:DI (reg/v/f:DI 101 [orig:93 cmp ] [93])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 101 [orig:93 cmp ] [93])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_+0 S8 A64])
        (nil)))
(note 20 19 21 4 NOTE_INSN_DELETED)
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (mem/f:DI (plus:DI (reg/v/f:DI 101 [orig:93 cmp ] [93])
                    (const_int 16 [0x10])) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_+0 S8 A64]) [0 *_9 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (nil)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [orig:93 cmp ] [93])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 24 23 25 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [orig:93 cmp ] [93])) db/c.cc:71 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [orig:93 cmp ] [93])
        (nil)))
(call_insn/j 26 25 27 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:71 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 27 26 28)
;; basic block 5, loop depth 0, count 0, freq 1571, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [20.1%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 28 27 29 5 377 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ cmp ])) db/c.cc:470 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ cmp ])
        (nil)))
(call_insn/j 31 30 32 5 (call (mem:QI (reg/f:DI 88 [ D.37393 ]) [0 *OBJ_TYPE_REF(_5;(struct leveldb_comparator_t)cmp_2(D)->1) S1 A8])
        (const_int 0 [0])) db/c.cc:470 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37393 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 32 31 35)
;; basic block 6, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 35 32 36 6 375 "" [1 uses])
(note 36 35 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_t* leveldb_filterpolicy_create(void*, void (*)(void*), char* (*)(void*, const char* const*, const size_t*, int, size_t*), unsigned char (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*)) (leveldb_filterpolicy_create, funcdef_no=1501, decl_uid=2347, cgraph_uid=614, symbol_order=617)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 90: local to bb 2 def dominates all uses has unique first use
Reg 91: local to bb 2 def dominates all uses has unique first use
Reg 92: local to bb 2 def dominates all uses has unique first use
Reg 93: local to bb 2 def dominates all uses has unique first use
Reg 94: local to bb 2 def dominates all uses has unique first use
Ignoring reg 96, has equiv memory
Reg 95 uninteresting
Found def insn 2 for 89 to be not moveable
Found def insn 3 for 90 to be not moveable
Found def insn 4 for 91 to be not moveable
Found def insn 5 for 92 to be not moveable
Found def insn 6 for 93 to be not moveable
Found def insn 12 for 94 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 96: (insn_list:REG_DEP_TRUE 14 (nil))

Pass 0 for finding pseudo/allocno costs

    a7 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r94,l0) best AREG, allocno AREG
    a1 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best CREG, allocno CREG
    a3 (r91,l0) best DREG, allocno DREG
    a4 (r90,l0) best SIREG, allocno SIREG
    a5 (r89,l0) best DIREG, allocno DIREG

  a0(r94,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:64000,64000 NO_REX_SSE_REGS:64000,64000 SSE_REGS:64000,64000 MMX_REGS:99000,99000 INT_SSE_REGS:71000,71000 ALL_REGS:1556000,1556000 MEM:28000,28000
  a1(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a3(r91,l0) costs: AREG:0,0 DREG:-1000,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a4(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a5(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a6(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:68000,68000 NO_REX_SSE_REGS:68000,68000 SSE_REGS:68000,68000 MMX_REGS:103000,103000 INT_SSE_REGS:75000,75000 ALL_REGS:1560000,1560000 MEM:31000,31000
  a1(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a3(r91,l0) costs: AREG:0,0 DREG:0,-1000 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a4(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a5(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a6(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a7(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 21(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 10(l0): point = 24
   Insn 6(l0): point = 26
   Insn 5(l0): point = 28
   Insn 4(l0): point = 30
   Insn 3(l0): point = 32
   Insn 2(l0): point = 34
 a0(r94): [3..20]
 a1(r93): [5..26]
 a2(r92): [7..28]
 a3(r91): [9..30]
 a4(r90): [11..32]
 a5(r89): [13..34]
 a6(r95): [15..16]
 a7(r96): [17..18]
Compressing live ranges: from 37 to 4 - 10%
Ranges after the compression:
 a0(r94): [0..3]
 a1(r93): [0..3]
 a2(r92): [0..3]
 a3(r91): [0..3]
 a4(r90): [0..3]
 a5(r89): [0..3]
 a6(r95): [0..1]
 a7(r96): [2..3]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r94,l0) conflicts: a6(r95,l0) a1(r93,l0) a2(r92,l0) a3(r91,l0) a4(r90,l0) a5(r89,l0) a7(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r93,l0) conflicts: a6(r95,l0) a0(r94,l0) a2(r92,l0) a3(r91,l0) a4(r90,l0) a5(r89,l0) a7(r96,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a2(r92,l0) conflicts: a6(r95,l0) a0(r94,l0) a1(r93,l0) a3(r91,l0) a4(r90,l0) a5(r89,l0) a7(r96,l0)
;;     total conflict hard regs: 0 5 37
;;     conflict hard regs: 0 5 37

;; a3(r91,l0) conflicts: a6(r95,l0) a0(r94,l0) a1(r93,l0) a2(r92,l0) a4(r90,l0) a5(r89,l0) a7(r96,l0)
;;     total conflict hard regs: 0 2 5 37
;;     conflict hard regs: 0 2 5 37

;; a4(r90,l0) conflicts: a6(r95,l0) a0(r94,l0) a1(r93,l0) a2(r92,l0) a3(r91,l0) a5(r89,l0) a7(r96,l0)
;;     total conflict hard regs: 0-2 5 37
;;     conflict hard regs: 0-2 5 37

;; a5(r89,l0) conflicts: a6(r95,l0) a0(r94,l0) a1(r93,l0) a2(r92,l0) a3(r91,l0) a4(r90,l0) a7(r96,l0)
;;     total conflict hard regs: 0-2 4 5 37
;;     conflict hard regs: 0-2 4 5 37

;; a6(r95,l0) conflicts: a0(r94,l0) a1(r93,l0) a2(r92,l0) a3(r91,l0) a4(r90,l0) a5(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r96,l0) conflicts: a0(r94,l0) a1(r93,l0) a2(r92,l0) a3(r91,l0) a4(r90,l0) a5(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r94)<-hr0@3000
  pref1:a2(r92)<-hr2@1500
  pref2:a3(r91)<-hr1@1500
  pref3:a4(r90)<-hr4@1500
  pref4:a5(r89)<-hr5@1500
  pref5:a1(r93)<-hr37@2000
  regions=1, blocks=3, points=4
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r94 1r93 2r92 3r91 4r90 5r89 6r95 7r96
    modified regnos: 89 90 91 92 93 94 95 96
    border:
    Pressure: GENERAL_REGS=7
 Removing pref4:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@90000
          2:( 1-4 6 37-44)@16000
            3:( 1-4 6 38-44)@16000
              4:( 1 3 4 6 38-44)@16000
                5:( 3 4 6 38-44)@16000
                  6:( 3 6 38-44)@16000
      Allocno a0r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r93 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a2r92 of GENERAL_REGS(15) has 12 avail. regs  1-4 6 38-44, node:  1-4 6 38-44 (confl regs =  0 5 7-37 45-79)
      Allocno a3r91 of GENERAL_REGS(15) has 11 avail. regs  1 3 4 6 38-44, node:  1 3 4 6 38-44 (confl regs =  0 2 5 7-37 45-79)
      Allocno a4r90 of GENERAL_REGS(15) has 10 avail. regs  3 4 6 38-44, node:  3 4 6 38-44 (confl regs =  0-2 5 7-37 45-79)
      Allocno a5r89 of GENERAL_REGS(15) has 9 avail. regs  3 6 38-44, node:  3 6 38-44 (confl regs =  0-2 4 5 7-37 45-79)
      Allocno a6r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a7(r96,l0)(cost 0)
      Pushing a6(r95,l0)(cost 0)
      Pushing a5(r89,l0)(cost 0)
      Pushing a4(r90,l0)(cost 0)
      Pushing a3(r91,l0)(cost 0)
      Pushing a2(r92,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a0(r94,l0)(cost 0)
      Popping a0(r94,l0)  -- assign reg 0
      Popping a1(r93,l0)  -- assign reg 3
      Popping a2(r92,l0)  -- assign reg 6
      Popping a3(r91,l0)  -- assign reg 41
      Popping a4(r90,l0)  -- assign reg 42
      Popping a5(r89,l0)  -- assign reg 43
      Popping a6(r95,l0)  -- assign reg 1
      Popping a7(r96,l0)  -- assign reg 1
Disposition:
    5:r89  l0    43    4:r90  l0    42    3:r91  l0    41    2:r92  l0     6
    1:r93  l0     3    0:r94  l0     0    6:r95  l0     1    7:r96  l0     1
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_filterpolicy_t* leveldb_filterpolicy_create(void*, void (*)(void*), char* (*)(void*, const char* const*, const size_t*, int, size_t*), unsigned char (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,7u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 132{101d,31u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 89 [ state ])
        (reg:DI 5 di [ state ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ state ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ destructor ])
        (reg:DI 4 si [ destructor ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ destructor ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ create_filter ])
        (reg:DI 1 dx [ create_filter ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ create_filter ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ key_may_match ])
        (reg:DI 2 cx [ key_may_match ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ key_may_match ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ name ])
        (reg:DI 37 r8 [ name ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ name ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 5 di)
        (const_int 48 [0x30])) db/c.cc:486 89 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:486 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 14 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) db/c.cc:486 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(insn 14 12 15 2 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:86 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 95)
        (plus:DI (reg:DI 96)
            (const_int 16 [0x10]))) db/c.cc:86 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 16 15 17 2 (set (mem/f:DI (reg/f:DI 94) [3 MEM[(struct leveldb_filterpolicy_t *)_3].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 95)) db/c.cc:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].state_+0 S8 A64])
        (reg/v/f:DI 89 [ state ])) db/c.cc:487 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ state ])
        (nil)))
(insn 18 17 19 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].destructor_+0 S8 A64])
        (reg/v/f:DI 90 [ destructor ])) db/c.cc:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ destructor ])
        (nil)))
(insn 19 18 20 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 32 [0x20])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].create_+0 S8 A64])
        (reg/v/f:DI 91 [ create_filter ])) db/c.cc:489 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ create_filter ])
        (nil)))
(insn 20 19 21 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 40 [0x28])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].key_match_+0 S8 A64])
        (reg/v/f:DI 92 [ key_may_match ])) db/c.cc:490 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ key_may_match ])
        (nil)))
(insn 21 20 26 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 24 [0x18])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].name_+0 S8 A64])
        (reg/v/f:DI 93 [ name ])) db/c.cc:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ name ])
        (nil)))
(insn 26 21 27 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 94)) db/c.cc:493 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 27 26 0 2 (use (reg/i:DI 0 ax)) db/c.cc:493 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*) (leveldb_filterpolicy_destroy, funcdef_no=1508, decl_uid=2349, cgraph_uid=615, symbol_order=618)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 90, has equiv memory
Reg 91: local to bb 3 def dominates all uses has unique first use
Found def insn 10 for 91 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 90: (insn_list:REG_DEP_TRUE 9 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r91,l0) best AD_REGS, allocno AD_REGS
    a2 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best DIREG, allocno DIREG

  a0(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:1566,1566 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:1566,1566 NON_Q_REGS:1566,1566 GENERAL_REGS:1566,1566 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1783,-1783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34792,34792 NO_REX_SSE_REGS:34792,34792 SSE_REGS:34792,34792 MMX_REGS:51537,51537 INT_SSE_REGS:38141,38141 ALL_REGS:796592,796592 MEM:13613,13613
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r91: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: CREG:0,0 BREG:1566,1566 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:1566,1566 NON_Q_REGS:1566,1566 GENERAL_REGS:1566,1566 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38792,38792 NO_REX_SSE_REGS:38792,38792 SSE_REGS:38792,38792 MMX_REGS:55537,55537 INT_SSE_REGS:42141,42141 ALL_REGS:800592,800592 MEM:16613,16613
  a2(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:0,0

   Insn 12(l0): point = 1
   Insn 11(l0): point = 3
   Insn 10(l0): point = 5
   Insn 9(l0): point = 7
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
 a0(r91): [2..5]
 a1(r89): [4..14]
 a2(r90): [6..7]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r89): [0..3]
 a2(r90): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r91,l0) conflicts: a1(r89,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r89,l0) conflicts: a0(r91,l0) a2(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a1(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r89)<-hr5@2674
  regions=1, blocks=5, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r91 1r89 2r90
    modified regnos: 89 90 91
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@43924
          2:( 0-4 6 37-44)@12528
      Allocno a0r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a2(r90,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Popping a1(r89,l0)  -- assign reg 5
      Popping a0(r91,l0)  -- assign reg 0
      Popping a2(r90,l0)  -- assign reg 0
Disposition:
    1:r89  l0     5    2:r90  l0     0    0:r91  l0     0
New iteration of spill/restore move
+++Costs: overall -5349, reg -5349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,3u,1e} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 121{96d,24u,1e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 89 [ filter ])
        (reg:DI 5 di [ filter ])) db/c.cc:495 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ filter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ filter ])
            (const_int 0 [0]))) db/c.cc:496 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 16)
            (pc))) db/c.cc:496 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 16)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
        (mem/f:DI (reg/v/f:DI 89 [ filter ]) [3 filter_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])) db/c.cc:496 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 89 [ filter ]) [3 filter_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])
        (nil)))
(insn 10 9 11 3 (set (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B]+0 S8 A64])) db/c.cc:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ filter ])) db/c.cc:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ filter ])
        (nil)))
(call_insn/j 12 11 13 3 (call (mem:QI (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ]) [0 *OBJ_TYPE_REF(_5;(struct leveldb_filterpolicy_t)filter_2(D)->1) S1 A8])
        (const_int 0 [0])) db/c.cc:496 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 13 12 16)
;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 16 13 17 4 382 "" [1 uses])
(note 17 16 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int) (leveldb_filterpolicy_create_bloom, funcdef_no=1509, decl_uid=2351, cgraph_uid=627, symbol_order=630)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90: local to bb 2 def dominates all uses has unique first use
Ignoring reg 93, has equiv memory
Reg 92 uninteresting
Ignoring reg 88, has equiv memory
Found def insn 2 for 90 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 10 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best AREG, allocno AREG
    a2 (r90,l0) best DIREG, allocno DIREG
    a1 (r88,l0) best AREG, allocno AREG

  a0(r91,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48000,48000 NO_REX_SSE_REGS:48000,48000 SSE_REGS:48000,48000 MMX_REGS:73000,73000 INT_SSE_REGS:53000,53000 ALL_REGS:1140000,1140000 MEM:20000,20000
  a1(r88,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a3(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52000,52000 NO_REX_SSE_REGS:52000,52000 SSE_REGS:52000,52000 MMX_REGS:77000,77000 INT_SSE_REGS:57000,57000 ALL_REGS:1144000,1144000 MEM:23000,23000
  a1(r88,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a3(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a4(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0

   Insn 25(l0): point = 0
   Insn 24(l0): point = 2
   Insn 19(l0): point = 4
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 12(l0): point = 16
   Insn 11(l0): point = 18
   Insn 10(l0): point = 20
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 6(l0): point = 26
   Insn 2(l0): point = 28
 a0(r91): [3..22]
 a1(r88): [9..10]
 a2(r90): [15..28]
 a3(r92): [17..18]
 a4(r93): [19..20]
Compressing live ranges: from 31 to 6 - 19%
Ranges after the compression:
 a0(r91): [0..5]
 a1(r88): [0..1]
 a2(r90): [2..5]
 a3(r92): [2..3]
 a4(r93): [4..5]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r91,l0) conflicts: a1(r88,l0) a3(r92,l0) a2(r90,l0) a4(r93,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a1(r88,l0) conflicts: a0(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a0(r91,l0) a3(r92,l0) a4(r93,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a3(r92,l0) conflicts: a0(r91,l0) a2(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r93,l0) conflicts: a0(r91,l0) a2(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r91)<-hr0@3000
  pref1:a2(r90)<-hr5@3000
  pref2:a1(r88)<-hr0@1500
  regions=1, blocks=3, points=6
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r91 1r88 2r90 3r92 4r93
    modified regnos: 88 90 91 92 93
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr0@3000
 Removing pref1:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@38000
          2:( 1-4 6 37-44)@46000
            3:( 3 6 41-44)@14000
      Allocno a0r91 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 5 7-36 45-79)
      Allocno a3r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a4(r93,l0)(cost 0)
      Pushing a3(r92,l0)(cost 0)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Popping a0(r91,l0)  -- assign reg 3
      Popping a1(r88,l0)  -- assign reg 0
      Popping a2(r90,l0)  -- assign reg 6
      Popping a3(r92,l0)  -- assign reg 0
      Popping a4(r93,l0)  -- assign reg 0
Disposition:
    1:r88  l0     0    2:r90  l0     6    0:r91  l0     3    3:r92  l0     0
    4:r93  l0     0
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,5u,1e} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 197{171d,25u,1e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91 92 93
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 90 [ bits_per_key ])
        (reg:SI 5 di [ bits_per_key ])) db/c.cc:499 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ bits_per_key ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 56 [0x38])) db/c.cc:515 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:515 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 91)
        (reg:DI 0 ax)) db/c.cc:515 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 10 8 11 2 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:503 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 92)
        (plus:DI (reg:DI 93)
            (const_int 16 [0x10]))) db/c.cc:503 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUIV (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 12 11 13 2 (set (mem/f:DI (reg/f:DI 91) [3 MEM[(struct Wrapper *)_3].D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 92)) db/c.cc:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (reg/v:SI 90 [ bits_per_key ])) db/c.cc:516 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 90 [ bits_per_key ])
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb20NewBloomFilterPolicyEi") [flags 0x41]  <function_decl 0x7fb537663438 NewBloomFilterPolicy>) [0 NewBloomFilterPolicy S1 A8])
            (const_int 0 [0]))) db/c.cc:516 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb20NewBloomFilterPolicyEi") [flags 0x41]  <function_decl 0x7fb537663438 NewBloomFilterPolicy>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ D.37411 ])
        (reg:DI 0 ax)) db/c.cc:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 91)
                    (const_int 48 [0x30])) [3 MEM[(struct Wrapper *)_3].rep_+0 S8 A64])
            (nil))))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 48 [0x30])) [3 MEM[(struct Wrapper *)_3].rep_+0 S8 A64])
        (reg/f:DI 88 [ D.37411 ])) db/c.cc:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37411 ])
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [3 MEM[(struct Wrapper *)_3].D.31955.state_+0 S8 A64])
        (const_int 0 [0])) db/c.cc:517 89 {*movdi_internal}
     (nil))
(note 18 17 19 2 NOTE_INSN_DELETED)
(insn 19 18 24 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [3 MEM[(struct Wrapper *)_3].D.31955.destructor_+0 S8 A64])
        (symbol_ref:DI ("_ZZ33leveldb_filterpolicy_create_bloomEN7Wrapper9DoNothingEPv") [flags 0x3]  <function_decl 0x7fb537401a20 DoNothing>)) db/c.cc:518 89 {*movdi_internal}
     (nil))
(insn 24 19 25 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91)) db/c.cc:520 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) db/c.cc:520 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_readoptions_t* leveldb_readoptions_create() (leveldb_readoptions_create, funcdef_no=1521, decl_uid=2352, cgraph_uid=631, symbol_order=634)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r89,l0) best AREG, allocno AREG

  a0(r89,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40000,40000 NO_REX_SSE_REGS:40000,40000 SSE_REGS:40000,40000 MMX_REGS:60000,60000 INT_SSE_REGS:44000,44000 ALL_REGS:932000,932000 MEM:16000,16000


Pass 1 for finding pseudo/allocno costs

    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44000,44000 NO_REX_SSE_REGS:44000,44000 SSE_REGS:44000,44000 MMX_REGS:64000,64000 INT_SSE_REGS:48000,48000 ALL_REGS:936000,936000 MEM:19000,19000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 11(l0): point = 4
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 7(l0): point = 10
   Insn 6(l0): point = 12
   Insn 5(l0): point = 14
 a0(r89): [3..10]
Compressing live ranges: from 17 to 2 - 11%
Ranges after the compression:
 a0(r89): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r89,l0) conflicts:  pref0:a0(r89)<-hr0@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r89
    modified regnos: 89
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@50000
      Allocno a0r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r89,l0)(cost 0)
      Popping a0(r89,l0)  -- assign reg 0
Disposition:
    0:r89  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_readoptions_t* leveldb_readoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,4u} 
;;    total ref usage 110{94d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 16 [0x10])) db/c.cc:523 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:523 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 89)
        (reg:DI 0 ax)) db/c.cc:523 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 89)
            (nil))))
(insn 9 7 10 2 (set (mem:QI (reg/f:DI 89) [17 MEM[(struct ReadOptions *)_3].verify_checksums+0 S1 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 10 9 11 2 (set (mem:QI (plus:DI (reg/f:DI 89)
                (const_int 1 [0x1])) [17 MEM[(struct ReadOptions *)_3].fill_cache+0 S1 A8])
        (const_int 1 [0x1])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 11 10 16 2 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [3 MEM[(struct ReadOptions *)_3].snapshot+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 89 {*movdi_internal}
     (nil))
(insn 16 11 17 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89)) db/c.cc:524 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) db/c.cc:524 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_destroy(leveldb_readoptions_t*) (leveldb_readoptions_destroy, funcdef_no=1897, decl_uid=2354, cgraph_uid=632, symbol_order=635)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_readoptions_destroy(leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:526 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ opt ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function void leveldb_readoptions_set_verify_checksums(leveldb_readoptions_t*, unsigned char) (leveldb_readoptions_set_verify_checksums, funcdef_no=1526, decl_uid=2357, cgraph_uid=633, symbol_order=636)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_readoptions_set_verify_checksums(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:532 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:532 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:533 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (reg/v/f:DI 88 [ opt ]) [17 opt_4(D)->rep.verify_checksums+0 S1 A64])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:533 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_set_fill_cache(leveldb_readoptions_t*, unsigned char) (leveldb_readoptions_set_fill_cache, funcdef_no=1527, decl_uid=2360, cgraph_uid=634, symbol_order=637)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_readoptions_set_fill_cache(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:537 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:537 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:538 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 1 [0x1])) [17 opt_4(D)->rep.fill_cache+0 S1 A8])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:538 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_set_snapshot(leveldb_readoptions_t*, const leveldb_snapshot_t*) (leveldb_readoptions_set_snapshot, funcdef_no=1528, decl_uid=2363, cgraph_uid=635, symbol_order=638)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 88 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r89,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19584,19584 NO_REX_SSE_REGS:19584,19584 SSE_REGS:19584,19584 MMX_REGS:24584,24584 INT_SSE_REGS:20584,20584 ALL_REGS:311492,311492 MEM:7693,7693
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23184,23184 NO_REX_SSE_REGS:23184,23184 SSE_REGS:23184,23184 MMX_REGS:32674,32674 INT_SSE_REGS:25082,25082 ALL_REGS:494784,494784 MEM:8592,8592


Pass 1 for finding pseudo/allocno costs

    r89: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20886,20886 NO_REX_SSE_REGS:20886,20886 SSE_REGS:20886,20886 MMX_REGS:25886,25886 INT_SSE_REGS:21886,21886 ALL_REGS:315488,315488 MEM:7996,7996
  a2(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27184,27184 NO_REX_SSE_REGS:27184,27184 SSE_REGS:27184,27184 MMX_REGS:36674,36674 INT_SSE_REGS:29082,29082 ALL_REGS:498784,498784 MEM:11592,11592

   Insn 14(l0): point = 0
   Insn 5(l0): point = 3
   Insn 21(l0): point = 6
   Insn 11(l0): point = 8
   Insn 9(l0): point = 11
   Insn 8(l0): point = 13
   Insn 3(l0): point = 15
   Insn 2(l0): point = 17
 a0(r88): [1..17]
 a1(r87): [6..8] [1..3]
 a2(r89): [9..15]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r88): [0..5]
 a1(r87): [0..3]
 a2(r89): [4..5]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r88,l0) conflicts: a1(r87,l0) a2(r89,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r87,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r89,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a2(r89)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=6, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r88 1r87 2r89
    modified regnos: 87 88 89
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@45176
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r87,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Pushing a2(r89,l0)(cost 0)
      Popping a2(r89,l0)  -- assign reg 4
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r87,l0)  -- assign reg 0
Disposition:
    1:r87  l0     0    0:r88  l0     5    2:r89  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_readoptions_set_snapshot(leveldb_readoptions_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:543 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ snap ])
        (reg:DI 4 si [ snap ])) db/c.cc:543 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ snap ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ snap ])
            (const_int 0 [0]))) db/c.cc:544 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:544 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 21 3 (set (reg/f:DI 87 [ D.37430 ])
        (mem/f:DI (reg/v/f:DI 89 [ snap ]) [3 snap_2(D)->rep+0 S8 A64])) db/c.cc:544 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ snap ])
        (nil)))
(jump_insn 21 11 22 3 (set (pc)
        (label_ref 12)) 654 {jump}
     (nil)
 -> 12)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

(barrier 22 21 20)
;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 20 22 19 4 393 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37430 ])
        (const_int 0 [0])) db/c.cc:544 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
(code_label 12 5 13 5 392 "" [1 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 8 [0x8])) [3 opt_5(D)->rep.snapshot+0 S8 A64])
        (reg/f:DI 87 [ D.37430 ])) db/c.cc:544 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37430 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writeoptions_t* leveldb_writeoptions_create() (leveldb_writeoptions_create, funcdef_no=1529, decl_uid=2364, cgraph_uid=639, symbol_order=642)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r89,l0) best AREG, allocno AREG

  a0(r89,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000


Pass 1 for finding pseudo/allocno costs

    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 9(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 5(l0): point = 10
 a0(r89): [3..6]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r89): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r89,l0) conflicts:  pref0:a0(r89)<-hr0@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r89
    modified regnos: 89
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@34000
      Allocno a0r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r89,l0)(cost 0)
      Popping a0(r89,l0)  -- assign reg 0
Disposition:
    0:r89  l0     0
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_writeoptions_t* leveldb_writeoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,2u} 
;;    total ref usage 108{94d,14u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) db/c.cc:548 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:548 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 89)
        (reg:DI 0 ax)) db/c.cc:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 89)
            (nil))))
(insn 9 7 14 2 (set (mem:QI (reg/f:DI 89) [17 MEM[(struct WriteOptions *)_3].sync+0 S1 A8])
        (const_int 0 [0])) ./include/leveldb/options.h:189 93 {*movqi_internal}
     (nil))
(insn 14 9 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89)) db/c.cc:549 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) db/c.cc:549 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writeoptions_destroy(leveldb_writeoptions_t*) (leveldb_writeoptions_destroy, funcdef_no=1533, decl_uid=2366, cgraph_uid=640, symbol_order=643)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writeoptions_destroy(leveldb_writeoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ opt ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function void leveldb_writeoptions_set_sync(leveldb_writeoptions_t*, unsigned char) (leveldb_writeoptions_set_sync, funcdef_no=1534, decl_uid=2369, cgraph_uid=641, symbol_order=644)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 88 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r88,l0) best DIREG, allocno DIREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000

   Insn 10(l0): point = 0
   Insn 8(l0): point = 2
   Insn 3(l0): point = 4
   Insn 2(l0): point = 6
 a0(r88): [1..6]
 a1(r90): [3..4]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r88,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@1500
  pref1:a0(r88)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88 1r90
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 0-3 5 6 37-44)@22000
      Allocno a0r88 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r88  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_writeoptions_set_sync(leveldb_writeoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:556 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:556 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:557 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(note 9 8 10 2 NOTE_INSN_DELETED)
(insn 10 9 0 2 (set (mem:QI (reg/v/f:DI 88 [ opt ]) [17 opt_4(D)->rep.sync+0 S1 A8])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:557 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg:CCZ 17 flags)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_cache_t* leveldb_cache_create_lru(size_t) (leveldb_cache_create_lru, funcdef_no=1535, decl_uid=2371, cgraph_uid=642, symbol_order=645)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90: local to bb 2 def dominates all uses has unique first use
Ignoring reg 88, has equiv memory
Found def insn 2 for 90 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 13 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r91,l0) best AREG, allocno AREG
    a2 (r90,l0) best DIREG, allocno DIREG
    a1 (r88,l0) best AREG, allocno AREG

  a0(r91,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r88,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r88,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r91): [3..12]
 a1(r88): [5..6]
 a2(r90): [11..18]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r91): [0..3]
 a1(r88): [0..1]
 a2(r90): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r91,l0) conflicts: a1(r88,l0) a2(r90,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a1(r88,l0) conflicts: a0(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r90,l0) conflicts: a0(r91,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

  pref0:a0(r91)<-hr0@3000
  pref1:a2(r90)<-hr5@3000
  pref2:a1(r88)<-hr0@1500
  regions=1, blocks=3, points=4
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r91 1r88 2r90
    modified regnos: 88 90 91
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr0@3000
 Removing pref1:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 1-4 6 37-44)@22000
            3:( 3 6 41-44)@14000
      Allocno a0r91 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r90 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 5 7-36 45-79)
      Pushing a2(r90,l0)(cost 0)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Popping a0(r91,l0)  -- assign reg 3
      Popping a1(r88,l0)  -- assign reg 0
      Popping a2(r90,l0)  -- assign reg 6
Disposition:
    1:r88  l0     0    2:r90  l0     6    0:r91  l0     3
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_cache_t* leveldb_cache_create_lru(size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,2u,1e} 
;;    total ref usage 190{169d,20u,1e} in 10{8 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:DI 90 [ capacity ])
        (reg:DI 5 di [ capacity ])) db/c.cc:560 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ capacity ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:561 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:561 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 91)
        (reg:DI 0 ax)) db/c.cc:561 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 10 8 11 2 (set (reg:DI 5 di)
        (reg/v:DI 90 [ capacity ])) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ capacity ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb11NewLRUCacheEm") [flags 0x41]  <function_decl 0x7fb5377c2a20 NewLRUCache>) [0 NewLRUCache S1 A8])
            (const_int 0 [0]))) db/c.cc:562 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb11NewLRUCacheEm") [flags 0x41]  <function_decl 0x7fb5377c2a20 NewLRUCache>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 88 [ D.37446 ])
        (reg:DI 0 ax)) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 91) [3 c_3->rep+0 S8 A64])
            (nil))))
(insn 13 12 18 2 (set (mem/f:DI (reg/f:DI 91) [3 c_3->rep+0 S8 A64])
        (reg/f:DI 88 [ D.37446 ])) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37446 ])
        (nil)))
(insn 18 13 19 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91)) db/c.cc:564 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) db/c.cc:564 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_cache_destroy(leveldb_cache_t*) (leveldb_cache_destroy, funcdef_no=1536, decl_uid=2373, cgraph_uid=643, symbol_order=646)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Reg 87 uninteresting
Reg 91: local to bb 3 def dominates all uses has unique first use
Found def insn 10 for 91 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best DIREG, allocno DIREG
    a2 (r87,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:8000,8000
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32528,32528 NO_REX_SSE_REGS:32528,32528 SSE_REGS:32528,32528 MMX_REGS:45358,45358 INT_SSE_REGS:35094,35094 ALL_REGS:637728,637728 MEM:13481,13481


Pass 1 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11000,11000
  a1(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:6264,6264
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33528,33528 NO_REX_SSE_REGS:33528,33528 SSE_REGS:33528,33528 MMX_REGS:46358,46358 INT_SSE_REGS:36094,36094 ALL_REGS:641728,641728 MEM:13481,13481

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 13(l0): point = 5
   Insn 12(l0): point = 7
   Insn 10(l0): point = 9
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r90): [3..18]
 a1(r91): [6..9]
 a2(r87): [8..16]
Compressing live ranges: from 21 to 2 - 9%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r91): [0..1]
 a2(r87): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r90,l0) conflicts: a1(r91,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r91,l0) conflicts: a0(r90,l0) a2(r87,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r87,l0) conflicts: a0(r90,l0) a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr5@3000
  pref1:a2(r87)<-hr5@1174
  regions=1, blocks=5, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 4 3 2
    all: 0r90 1r91 2r87
    modified regnos: 87 90 91
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@31660
          2:( 0-4 6 37-44)@34528
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r91,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Pushing a2(r87,l0)(cost 0)
      Popping a2(r87,l0)  -- assign reg 5
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r91,l0)  -- assign reg 0
Disposition:
    2:r87  l0     5    0:r90  l0     3    1:r91  l0     0
New iteration of spill/restore move
+++Costs: overall -2349, reg -2349, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_cache_destroy(leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} 
;;    total ref usage 196{169d,27u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ cache ])
        (reg:DI 5 di [ cache ])) db/c.cc:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ cache ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37449 ])
        (mem/f:DI (reg/v/f:DI 90 [ cache ]) [3 cache_3(D)->rep+0 S8 A64])) db/c.cc:567 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37449 ])
            (const_int 0 [0]))) db/c.cc:567 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:567 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.Cache ])
        (mem/f:DI (reg/f:DI 87 [ D.37449 ]) [3 _4->_vptr.Cache+0 S8 A64])) db/c.cc:567 89 {*movdi_internal}
     (nil))
(note 11 10 12 3 NOTE_INSN_DELETED)
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37449 ])) db/c.cc:567 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37449 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.Cache ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_6;(struct Cache)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:567 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.Cache ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 14 13 15 4 401 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ cache ])) db/c.cc:568 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ cache ])
        (nil)))
(call_insn/j 17 16 18 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:568 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function leveldb_env_t* leveldb_create_default_env() (leveldb_create_default_env, funcdef_no=1537, decl_uid=2374, cgraph_uid=644, symbol_order=647)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 88, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 88: (insn_list:REG_DEP_TRUE 11 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r90,l0) best AREG, allocno AREG
    a1 (r88,l0) best AREG, allocno AREG

  a0(r90,l0) costs: AREG:-2000,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32000,32000 NO_REX_SSE_REGS:32000,32000 SSE_REGS:32000,32000 MMX_REGS:47000,47000 INT_SSE_REGS:35000,35000 ALL_REGS:724000,724000 MEM:12000,12000
  a1(r88,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,-2000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15000,15000
  a1(r88,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 5(l0): point = 16
 a0(r90): [3..12]
 a1(r88): [7..8]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r88): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r90,l0) conflicts: a1(r88,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

;; a1(r88,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r90)<-hr0@3000
  pref1:a1(r88)<-hr0@1500
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r88
    modified regnos: 88 90
    border:
    Pressure: GENERAL_REGS=2
 Removing pref0:hr0@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
          2:( 1-6 37-44)@30000
      Allocno a0r90 of GENERAL_REGS(15) has 14 avail. regs  1-6 37-44, node:  1-6 37-44 (confl regs =  0 7-36 45-79)
      Allocno a1r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r88,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r88,l0)  -- assign reg 0
Disposition:
    1:r88  l0     0    0:r90  l0     3
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb_env_t* leveldb_create_default_env()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={4d,1u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,3u,1e} 
;;    total ref usage 186{167d,18u,1e} in 9{7 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 16 [0x10])) db/c.cc:572 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:572 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 90)
        (reg:DI 0 ax)) db/c.cc:572 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 90)
            (nil))))
(call_insn 9 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb3Env7DefaultEv") [flags 0x41]  <function_decl 0x7fb5375c2e58 Default>) [0 Default S1 A8])
            (const_int 0 [0]))) db/c.cc:573 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb3Env7DefaultEv") [flags 0x41]  <function_decl 0x7fb5375c2e58 Default>)
        (nil))
    (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.37456 ])
        (reg:DI 0 ax)) db/c.cc:573 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 90) [3 result_3->rep+0 S8 A64])
            (nil))))
(insn 11 10 12 2 (set (mem/f:DI (reg/f:DI 90) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 88 [ D.37456 ])) db/c.cc:573 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37456 ])
        (nil)))
(insn 12 11 17 2 (set (mem:QI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [17 result_3->is_default+0 S1 A64])
        (const_int 1 [0x1])) db/c.cc:574 93 {*movqi_internal}
     (nil))
(insn 17 12 18 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 90)) db/c.cc:576 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) db/c.cc:576 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_env_destroy(leveldb_env_t*) (leveldb_env_destroy, funcdef_no=1538, decl_uid=2376, cgraph_uid=645, symbol_order=648)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting (no unique first use)
Reg 88 uninteresting
Reg 92: local to bb 4 def dominates all uses has unique first use
Found def insn 13 for 92 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best DIREG, allocno DIREG
    a2 (r88,l0) best DIREG, allocno DIREG

  a0(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28880,28880 NO_REX_SSE_REGS:28880,28880 SSE_REGS:28880,28880 MMX_REGS:41930,41930 INT_SSE_REGS:31490,31490 ALL_REGS:642880,642880 MEM:10440,10440
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9540,9540 NO_REX_SSE_REGS:9540,9540 SSE_REGS:9540,9540 MMX_REGS:11925,11925 INT_SSE_REGS:10017,10017 ALL_REGS:148824,148824 MEM:3816,3816
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-477,-477 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19832,19832 NO_REX_SSE_REGS:19832,19832 SSE_REGS:19832,19832 MMX_REGS:27652,27652 INT_SSE_REGS:21396,21396 ALL_REGS:388752,388752 MEM:8219,8219


Pass 1 for finding pseudo/allocno costs

    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32880,32880 NO_REX_SSE_REGS:32880,32880 SSE_REGS:32880,32880 MMX_REGS:45930,45930 INT_SSE_REGS:35490,35490 ALL_REGS:646880,646880 MEM:13440,13440
  a1(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10017,10017 NO_REX_SSE_REGS:10017,10017 SSE_REGS:10017,10017 MMX_REGS:12402,12402 INT_SSE_REGS:10494,10494 ALL_REGS:150732,150732 MEM:3816,3816
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-477 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20442,20442 NO_REX_SSE_REGS:20442,20442 SSE_REGS:20442,20442 MMX_REGS:28262,28262 INT_SSE_REGS:22006,22006 ALL_REGS:391192,391192 MEM:8219,8219

   Insn 20(l0): point = 0
   Insn 19(l0): point = 2
   Insn 16(l0): point = 5
   Insn 15(l0): point = 7
   Insn 13(l0): point = 9
   Insn 11(l0): point = 12
   Insn 10(l0): point = 14
   Insn 9(l0): point = 16
   Insn 7(l0): point = 19
   Insn 6(l0): point = 21
   Insn 2(l0): point = 23
 a0(r91): [3..23]
 a1(r92): [6..9]
 a2(r88): [8..16]
Compressing live ranges: from 26 to 2 - 7%
Ranges after the compression:
 a0(r91): [0..1]
 a1(r92): [0..1]
 a2(r88): [0..1]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r91,l0) conflicts: a1(r92,l0) a2(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r92,l0) conflicts: a0(r91,l0) a2(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r88,l0) conflicts: a0(r91,l0) a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a0(r91)<-hr5@3000
  pref1:a2(r88)<-hr5@715
  regions=1, blocks=6, points=2
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r91 1r92 2r88
    modified regnos: 88 91 92
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@3000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@19300
          2:( 0-4 6 37-44)@34512
      Allocno a0r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r92,l0)(cost 0)
      Pushing a2(r88,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Popping a0(r91,l0)  -- assign reg 3
      Popping a2(r88,l0)  -- assign reg 5
      Popping a1(r92,l0)  -- assign reg 0
Disposition:
    2:r88  l0     5    0:r91  l0     3    1:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -1431, reg -1431, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_env_destroy(leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={4d,2u} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r91={1d,3u} r92={1d,1u} 
;;    total ref usage 203{170d,33u,0e} in 11{9 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 91 [ env ])
        (reg:DI 5 di [ env ])) db/c.cc:578 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ env ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 91 [ env ])
                    (const_int 8 [0x8])) [17 env_3(D)->is_default+0 S1 A64])
            (const_int 0 [0]))) db/c.cc:579 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) db/c.cc:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 17)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              5 [39.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags] 88
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 88 [ D.37460 ])
        (mem/f:DI (reg/v/f:DI 91 [ env ]) [3 env_3(D)->rep+0 S8 A64])) db/c.cc:579 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37460 ])
            (const_int 0 [0]))) db/c.cc:579 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              5 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91

;; basic block 4, loop depth 0, count 0, freq 4779, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92 [ _5->_vptr.Env ])
        (mem/f:DI (reg/f:DI 88 [ D.37460 ]) [3 _5->_vptr.Env+0 S8 A64])) db/c.cc:579 89 {*movdi_internal}
     (nil))
(note 14 13 15 4 NOTE_INSN_DELETED)
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37460 ])) db/c.cc:579 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37460 ])
        (nil)))
(call_insn 16 15 17 4 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 92 [ _5->_vptr.Env ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_7;(struct Env)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:579 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _5->_vptr.Env ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [21.6%] 
;;              4 [100.0%]  (FALLTHRU)
;;              2 [39.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 17 16 18 5 409 "" [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ env ])) db/c.cc:580 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ env ])
        (nil)))
(call_insn/j 20 19 21 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:580 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 21 20 0)

;; Function void leveldb_free(void*) (leveldb_free, funcdef_no=1539, decl_uid=2378, cgraph_uid=646, symbol_order=649)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void leveldb_free(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ ptr ])
        (reg:DI 5 di [ ptr ])) db/c.cc:583 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ptr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ ptr ])) db/c.cc:584 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ ptr ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:584 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function int leveldb_major_version() (leveldb_major_version, funcdef_no=1540, decl_uid=2379, cgraph_uid=647, symbol_order=650)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int leveldb_major_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 1 [0x1])) db/c.cc:589 90 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) db/c.cc:589 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int leveldb_minor_version() (leveldb_minor_version, funcdef_no=1541, decl_uid=2380, cgraph_uid=648, symbol_order=651)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int leveldb_minor_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 18 [0x12])) db/c.cc:593 90 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) db/c.cc:593 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

