
;; Function virtual int leveldb_comparator_t::Compare(const leveldb::Slice&, const leveldb::Slice&) const (_ZNK20leveldb_comparator_t7CompareERKN7leveldb5SliceES3_, funcdef_no=1418, decl_uid=28838, cgraph_uid=525, symbol_order=528)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual int leveldb_comparator_t::Compare(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r95={1d,2u} r96={1d,2u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 130{103d,27u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,57] 39[58,58] 40[59,59] 45[60,60] 46[61,61] 47[62,62] 48[63,63] 49[64,64] 50[65,65] 51[66,66] 52[67,67] 53[68,68] 54[69,69] 55[70,70] 56[71,71] 57[72,72] 58[73,73] 59[74,74] 60[75,75] 61[76,76] 62[77,77] 63[78,78] 64[79,79] 65[80,80] 66[81,81] 67[82,82] 68[83,83] 69[84,84] 70[85,85] 71[86,86] 72[87,87] 73[88,88] 74[89,89] 75[90,90] 76[91,91] 77[92,92] 78[93,93] 79[94,94] 80[95,95] 95[96,96] 96[97,97] 97[98,98] 98[99,99] 99[100,100] 100[101,101] 101[102,102] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d57(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[57]
;; rd  kill	(39) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[4],4[10],5[13],6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 97 98 99 100 101
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 95 96 97 98 99 100 101
;; live  kill	
;; rd  in  	(7) 1[4],4[10],5[13],6[14],7[15],16[24],20[28]
;; rd  gen 	(8) 0[0],95[96],96[97],97[98],98[99],99[100],100[101],101[102]
;; rd  kill	(9) 0[0,1],95[96],96[97],97[98],98[99],99[100],100[101],101[102]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 2 insn 17) }u24(6){ d14(bb 0 insn -1) }u25(7){ d15(bb 0 insn -1) }u26(20){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 1 dx) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 2 cx) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 4 si) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 37 r8) in insn 17:
  Adding insn 12 to worklist
Processing use of (reg 101 [ this_2(D)->compare_ ]) in insn 17:
  Adding insn 11 to worklist
Processing use of (reg 95 [ this ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 98 [ MEM[(long unsigned int *)b_4(D) + 8B] ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 97 [ b ]) in insn 8:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 100 [ this_2(D)->state_ ]) in insn 16:
  Adding insn 10 to worklist
Processing use of (reg 95 [ this ]) in insn 10:
Processing use of (reg 96 [ a ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 97 [ b ]) in insn 13:
Processing use of (reg 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ]) in insn 14:
  Adding insn 9 to worklist
Processing use of (reg 96 [ a ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


virtual int leveldb_comparator_t::Compare(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r95={1d,2u} r96={1d,2u} r97={1d,2u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 130{103d,27u,0e} in 13{12 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 96 97 98 99 100 101
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 95 96 97 98 99 100 101
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 95 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ a ])
        (reg:DI 4 si [ a ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ a ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ b ])
        (reg:DI 1 dx [ b ])) db/c.cc:73 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ b ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 98 [ MEM[(long unsigned int *)b_4(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 97 [ b ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)b_4(D) + 8B]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 96 [ a ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)a_5(D) + 8B]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 100 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 101 [ this_2(D)->compare_ ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->compare_+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (reg:DI 98 [ MEM[(long unsigned int *)b_4(D) + 8B] ])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98 [ MEM[(long unsigned int *)b_4(D) + 8B] ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 97 [ b ]) [3 MEM[(const char * *)b_4(D)]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ b ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ MEM[(long unsigned int *)a_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 96 [ a ]) [3 MEM[(const char * *)a_5(D)]+0 S8 A64])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ a ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 100 [ this_2(D)->state_ ])) db/c.cc:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 17 16 0 2 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:DI 101 [ this_2(D)->compare_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:74 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 101 [ this_2(D)->compare_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual const char* leveldb_comparator_t::Name() const (_ZNK20leveldb_comparator_t4NameEv, funcdef_no=1419, decl_uid=28840, cgraph_uid=526, symbol_order=529)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual const char* leveldb_comparator_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 91[92,92] 92[93,93] 93[94,94] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 91 92 93
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 0[0],91[92],92[93],93[94]
;; rd  kill	(5) 0[0,1],91[92],92[93],93[94]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(0){ d0(bb 2 insn 9) }u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 9) }
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 9:
Processing use of (reg 5 di) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 93 [ this_2(D)->name_ ]) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 91 [ this ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 92 [ this_2(D)->state_ ]) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 91 [ this ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


virtual const char* leveldb_comparator_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 91 92 93
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:78 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 93 [ this_2(D)->name_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 32 [0x20])) [3 this_2(D)->name_+0 S8 A64])) db/c.cc:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ this_2(D)->state_ ])) db/c.cc:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 9 8 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 93 [ this_2(D)->name_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:78 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->name_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_comparator_t::FindShortestSeparator(std::__cxx11::string*, const leveldb::Slice&) const (_ZNK20leveldb_comparator_t21FindShortestSeparatorEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKN7leveldb5SliceE, funcdef_no=1420, decl_uid=28844, cgraph_uid=527, symbol_order=530)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void leveldb_comparator_t::FindShortestSeparator(std::__cxx11::string*, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(6){ d5(bb 0 insn -1) }u5(7){ d6(bb 0 insn -1) }u6(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_comparator_t::FindShortestSeparator(std::__cxx11::string*, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_comparator_t::FindShortSuccessor(std::__cxx11::string*) const (_ZNK20leveldb_comparator_t18FindShortSuccessorEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1421, decl_uid=28847, cgraph_uid=528, symbol_order=531)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void leveldb_comparator_t::FindShortSuccessor(std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(6){ d5(bb 0 insn -1) }u5(7){ d6(bb 0 insn -1) }u6(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_comparator_t::FindShortSuccessor(std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual const char* leveldb_filterpolicy_t::Name() const (_ZNK22leveldb_filterpolicy_t4NameEv, funcdef_no=1426, decl_uid=28915, cgraph_uid=533, symbol_order=536)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual const char* leveldb_filterpolicy_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 91[92,92] 92[93,93] 93[94,94] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 91 92 93
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 0[0],91[92],92[93],93[94]
;; rd  kill	(5) 0[0,1],91[92],92[93],93[94]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(0){ d0(bb 2 insn 9) }u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 9) }
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 9:
Processing use of (reg 5 di) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 93 [ this_2(D)->name_ ]) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 91 [ this ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 92 [ this_2(D)->state_ ]) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 91 [ this ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


virtual const char* leveldb_filterpolicy_t::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 91 92 93
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 92 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:105 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 93 [ this_2(D)->name_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->name_+0 S8 A64])) db/c.cc:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ this_2(D)->state_ ])) db/c.cc:105 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 9 8 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 93 [ this_2(D)->name_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:105 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->name_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual bool leveldb_filterpolicy_t::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const (_ZNK22leveldb_filterpolicy_t11KeyMayMatchERKN7leveldb5SliceES3_, funcdef_no=1428, decl_uid=28924, cgraph_uid=535, symbol_order=538)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual bool leveldb_filterpolicy_t::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d,1u} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r96={1d,2u} r97={1d,2u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 139{107d,32u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,14] 6[15,15] 7[16,16] 8[17,17] 9[18,18] 10[19,19] 11[20,20] 12[21,21] 13[22,22] 14[23,23] 15[24,24] 16[25,25] 17[26,27] 18[28,28] 19[29,29] 20[30,30] 21[31,32] 22[33,34] 23[35,36] 24[37,38] 25[39,40] 26[41,42] 27[43,44] 28[45,46] 29[47,47] 30[48,48] 31[49,49] 32[50,50] 33[51,51] 34[52,52] 35[53,53] 36[54,54] 37[55,57] 38[58,59] 39[60,60] 40[61,61] 45[62,62] 46[63,63] 47[64,64] 48[65,65] 49[66,66] 50[67,67] 51[68,68] 52[69,69] 53[70,70] 54[71,71] 55[72,72] 56[73,73] 57[74,74] 58[75,75] 59[76,76] 60[77,77] 61[78,78] 62[79,79] 63[80,80] 64[81,81] 65[82,82] 66[83,83] 67[84,84] 68[85,85] 69[86,86] 70[87,87] 71[88,88] 72[89,89] 73[90,90] 74[91,91] 75[92,92] 76[93,93] 77[94,94] 78[95,95] 79[96,96] 80[97,97] 89[98,98] 96[99,99] 97[100,100] 98[101,101] 99[102,102] 100[103,103] 101[104,104] 102[105,105] 104[106,106] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d14(5){ }d15(6){ }d16(7){ }d25(16){ }d30(20){ }d32(21){ }d34(22){ }d36(23){ }d38(24){ }d40(25){ }d42(26){ }d44(27){ }d46(28){ }d57(37){ }d59(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[14],6[15],7[16],16[25],20[30],21[32],22[34],23[36],24[38],25[40],26[42],27[44],28[46],37[57],38[59]
;; rd  kill	(40) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14],6[15],7[16],16[25],20[30],21[31,32],22[33,34],23[35,36],24[37,38],25[39,40],26[41,42],27[43,44],28[45,46],37[55,56,57],38[58,59]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[5],4[11],5[14],6[15],7[16],16[25],20[30]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d15(bb 0 insn -1) }u1(7){ d16(bb 0 insn -1) }u2(16){ d25(bb 0 insn -1) }u3(20){ d30(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 96 97 98 99 100 101 102 104
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 89 96 97 98 99 100 101 102 104
;; live  kill	
;; rd  in  	(7) 1[5],4[11],5[14],6[15],7[16],16[25],20[30]
;; rd  gen 	(11) 0[0],17[26],89[98],96[99],97[100],98[101],99[102],100[103],101[104],102[105],104[106]
;; rd  kill	(14) 0[0,1,2],17[26,27],89[98],96[99],97[100],98[101],99[102],100[103],101[104],102[105],104[106]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[15],7[16],16[25],20[30]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 16 { d25(bb 0 insn -1) }
;;   reg 20 { d30(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(0){ d0(bb 2 insn 25) }u29(6){ d15(bb 0 insn -1) }u30(7){ d16(bb 0 insn -1) }u31(20){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[15],7[16],16[25],20[30]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 25) }
;;   reg 6 { d15(bb 0 insn -1) }
;;   reg 7 { d16(bb 0 insn -1) }
;;   reg 20 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 17 to worklist
Finished finding needed instructions:
  Adding insn 25 to worklist
Processing use of (reg 104 [ D.36857 ]) in insn 25:
  Adding insn 20 to worklist
Processing use of (reg 17 flags) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 89 [ D.36856 ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 0 ax) in insn 18:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 1 dx) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 2 cx) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 4 si) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 37 r8) in insn 17:
  Adding insn 12 to worklist
Processing use of (reg 102 [ this_2(D)->key_match_ ]) in insn 17:
  Adding insn 11 to worklist
Processing use of (reg 96 [ this ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 99 [ MEM[(long unsigned int *)filter_4(D) + 8B] ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 98 [ filter ]) in insn 8:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 101 [ this_2(D)->state_ ]) in insn 16:
  Adding insn 10 to worklist
Processing use of (reg 96 [ this ]) in insn 10:
Processing use of (reg 97 [ key ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 98 [ filter ]) in insn 13:
Processing use of (reg 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ]) in insn 14:
  Adding insn 9 to worklist
Processing use of (reg 97 [ key ]) in insn 9:
Processing use of (reg 0 ax) in insn 26:
starting the processing of deferred insns
ending the processing of deferred insns


virtual bool leveldb_filterpolicy_t::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={2d,1u} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r96={1d,2u} r97={1d,2u} r98={1d,2u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 139{107d,32u,0e} in 18{17 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 96 97 98 99 100 101 102 104
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 37 [r8] 89 96 97 98 99 100 101 102 104
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 96 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 97 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 98 [ filter ])
        (reg:DI 1 dx [ filter ])) db/c.cc:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ filter ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 99 [ MEM[(long unsigned int *)filter_4(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 98 [ filter ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)filter_4(D) + 8B]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 97 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 101 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 102 [ this_2(D)->key_match_ ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ this ])
                (const_int 40 [0x28])) [3 this_2(D)->key_match_+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (reg:DI 99 [ MEM[(long unsigned int *)filter_4(D) + 8B] ])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ MEM[(long unsigned int *)filter_4(D) + 8B] ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 98 [ filter ]) [3 MEM[(const char * *)filter_4(D)]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ filter ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 97 [ key ]) [3 MEM[(const char * *)key_5(D)]+0 S8 A64])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ key ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 101 [ this_2(D)->state_ ])) db/c.cc:122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ this_2(D)->state_ ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 102 [ this_2(D)->key_match_ ]) [0 *_3 S1 A8])
            (const_int 0 [0]))) db/c.cc:122 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 102 [ this_2(D)->key_match_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 18 17 19 2 (set (reg:QI 89 [ D.36856 ])
        (reg:QI 0 ax)) db/c.cc:122 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.36856 ])
            (const_int 0 [0]))) db/c.cc:123 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.36856 ])
        (nil)))
(insn 20 19 25 2 (set (reg:QI 104 [ D.36857 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:123 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 25 20 26 2 (set (reg/i:QI 0 ax)
        (reg:QI 104 [ D.36857 ])) db/c.cc:124 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 104 [ D.36857 ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:QI 0 ax)) db/c.cc:124 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Put(const leveldb::Slice&, const leveldb::Slice&) (_ZZ26leveldb_writebatch_iterateEN1H3PutERKN7leveldb5SliceES3_, funcdef_no=1467, decl_uid=31691, cgraph_uid=573, symbol_order=576)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Put(const leveldb::Slice&, const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r93={1d,2u} r94={1d,2u} r95={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 129{103d,26u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,55] 38[56,57] 39[58,58] 40[59,59] 45[60,60] 46[61,61] 47[62,62] 48[63,63] 49[64,64] 50[65,65] 51[66,66] 52[67,67] 53[68,68] 54[69,69] 55[70,70] 56[71,71] 57[72,72] 58[73,73] 59[74,74] 60[75,75] 61[76,76] 62[77,77] 63[78,78] 64[79,79] 65[80,80] 66[81,81] 67[82,82] 68[83,83] 69[84,84] 70[85,85] 71[86,86] 72[87,87] 73[88,88] 74[89,89] 75[90,90] 76[91,91] 77[92,92] 78[93,93] 79[94,94] 80[95,95] 93[96,96] 94[97,97] 95[98,98] 96[99,99] 97[100,100] 98[101,101] 99[102,102] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d55(37){ }d57(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[55],38[57]
;; rd  kill	(39) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54,55],38[56,57]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[4],4[10],5[13],6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 98 99
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 93 94 95 96 97 98 99
;; live  kill	
;; rd  in  	(7) 1[4],4[10],5[13],6[14],7[15],16[24],20[28]
;; rd  gen 	(7) 93[96],94[97],95[98],96[99],97[100],98[101],99[102]
;; rd  kill	(7) 93[96],94[97],95[98],96[99],97[100],98[101],99[102]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(6){ d14(bb 0 insn -1) }u24(7){ d15(bb 0 insn -1) }u25(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 1 dx) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 2 cx) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 4 si) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 37 r8) in insn 17:
  Adding insn 12 to worklist
Processing use of (reg 99 [ this_2(D)->put_ ]) in insn 17:
  Adding insn 11 to worklist
Processing use of (reg 93 [ this ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 96 [ MEM[(long unsigned int *)value_4(D) + 8B] ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 95 [ value ]) in insn 8:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 98 [ this_2(D)->state_ ]) in insn 16:
  Adding insn 10 to worklist
Processing use of (reg 93 [ this ]) in insn 10:
Processing use of (reg 94 [ key ]) in insn 15:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 95 [ value ]) in insn 13:
Processing use of (reg 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ]) in insn 14:
  Adding insn 9 to worklist
Processing use of (reg 94 [ key ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Put(const leveldb::Slice&, const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,1u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r93={1d,2u} r94={1d,2u} r95={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} 
;;    total ref usage 129{103d,26u,0e} in 13{12 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93 94 95 96 97 98 99
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 93 94 95 96 97 98 99
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 95 [ value ])
        (reg:DI 1 dx [ value ])) db/c.cc:372 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ value ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:DI 96 [ MEM[(long unsigned int *)value_4(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 95 [ value ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)value_4(D) + 8B]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 94 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_5(D) + 8B]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 98 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 99 [ this_2(D)->put_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->put_+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 37 r8)
        (reg:DI 96 [ MEM[(long unsigned int *)value_4(D) + 8B] ])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ MEM[(long unsigned int *)value_4(D) + 8B] ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 2 cx)
        (mem/f:DI (reg/v/f:DI 95 [ value ]) [3 MEM[(const char * *)value_4(D)]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ value ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 1 dx)
        (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97 [ MEM[(long unsigned int *)key_5(D) + 8B] ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 94 [ key ]) [3 MEM[(const char * *)key_5(D)]+0 S8 A64])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ key ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 98 [ this_2(D)->state_ ])) db/c.cc:373 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 17 16 0 2 (call (mem:QI (reg/f:DI 99 [ this_2(D)->put_ ]) [0 *_3 S1 A8])
        (const_int 0 [0])) db/c.cc:373 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 99 [ this_2(D)->put_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Delete(const leveldb::Slice&) (_ZZ26leveldb_writebatch_iterateEN1H6DeleteERKN7leveldb5SliceE, funcdef_no=1468, decl_uid=31694, cgraph_uid=574, symbol_order=577)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Delete(const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 119{99d,20u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,6] 4[7,9] 5[10,12] 6[13,13] 7[14,14] 8[15,15] 9[16,16] 10[17,17] 11[18,18] 12[19,19] 13[20,20] 14[21,21] 15[22,22] 16[23,23] 17[24,24] 18[25,25] 19[26,26] 20[27,27] 21[28,29] 22[30,31] 23[32,33] 24[34,35] 25[36,37] 26[38,39] 27[40,41] 28[42,43] 29[44,44] 30[45,45] 31[46,46] 32[47,47] 33[48,48] 34[49,49] 35[50,50] 36[51,51] 37[52,53] 38[54,55] 39[56,56] 40[57,57] 45[58,58] 46[59,59] 47[60,60] 48[61,61] 49[62,62] 50[63,63] 51[64,64] 52[65,65] 53[66,66] 54[67,67] 55[68,68] 56[69,69] 57[70,70] 58[71,71] 59[72,72] 60[73,73] 61[74,74] 62[75,75] 63[76,76] 64[77,77] 65[78,78] 66[79,79] 67[80,80] 68[81,81] 69[82,82] 70[83,83] 71[84,84] 72[85,85] 73[86,86] 74[87,87] 75[88,88] 76[89,89] 77[90,90] 78[91,91] 79[92,92] 80[93,93] 91[94,94] 92[95,95] 93[96,96] 94[97,97] 95[98,98] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d6(2){ }d9(4){ }d12(5){ }d13(6){ }d14(7){ }d23(16){ }d27(20){ }d29(21){ }d31(22){ }d33(23){ }d35(24){ }d37(25){ }d39(26){ }d41(27){ }d43(28){ }d53(37){ }d55(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[6],4[9],5[12],6[13],7[14],16[23],20[27],21[29],22[31],23[33],24[35],25[37],26[39],27[41],28[43],37[53],38[55]
;; rd  kill	(37) 0[0,1],1[2,3,4],2[5,6],4[7,8,9],5[10,11,12],6[13],7[14],16[23],20[27],21[28,29],22[30,31],23[32,33],24[34,35],25[36,37],26[38,39],27[40,41],28[42,43],37[52,53],38[54,55]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d13(bb 0 insn -1) }u1(7){ d14(bb 0 insn -1) }u2(16){ d23(bb 0 insn -1) }u3(20){ d27(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 91 92 93 94 95
;; live  kill	
;; rd  in  	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;; rd  gen 	(5) 91[94],92[95],93[96],94[97],95[98]
;; rd  kill	(5) 91[94],92[95],93[96],94[97],95[98]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(6){ d13(bb 0 insn -1) }u18(7){ d14(bb 0 insn -1) }u19(20){ d27(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[13],7[14],16[23],20[27]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 1 dx) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 4 si) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 95 [ this_2(D)->deleted_ ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 91 [ this ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 94 [ this_2(D)->state_ ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 91 [ this ]) in insn 8:
Processing use of (reg 92 [ key ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ]) in insn 10:
  Adding insn 7 to worklist
Processing use of (reg 92 [ key ]) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::Delete(const leveldb::Slice&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,1u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r91={1d,2u} r92={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 119{99d,20u,0e} in 9{8 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 91 92 93 94 95
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 91 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:375 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:375 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])
        (mem:DI (plus:DI (reg/v/f:DI 92 [ key ])
                (const_int 8 [0x8])) [9 MEM[(long unsigned int *)key_4(D) + 8B]+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 94 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 95 [ this_2(D)->deleted_ ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ this ])
                (const_int 24 [0x18])) [3 this_2(D)->deleted_+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ this ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 1 dx)
        (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93 [ MEM[(long unsigned int *)key_4(D) + 8B] ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 92 [ key ]) [3 MEM[(const char * *)key_4(D)]+0 S8 A64])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ key ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ this_2(D)->state_ ])) db/c.cc:376 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->state_ ])
        (nil)))
(call_insn/j 13 12 0 2 (call (mem:QI (reg/f:DI 95 [ this_2(D)->deleted_ ]) [0 *_3 S1 A8])
        (const_int 0 [0])) db/c.cc:376 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 95 [ this_2(D)->deleted_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual const char* leveldb_filterpolicy_create_bloom(int)::Wrapper::Name() const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper4NameEv, funcdef_no=1514, decl_uid=31927, cgraph_uid=620, symbol_order=623)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual const char* leveldb_filterpolicy_create_bloom(int)::Wrapper::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 112{96d,16u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 92[93,93] 93[94,94] 94[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 92 93 94
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(5) 0[0],87[92],92[93],93[94],94[95]
;; rd  kill	(6) 0[0,1],87[92],92[93],93[94],94[95]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(0){ d0(bb 2 insn 10) }u13(6){ d11(bb 0 insn -1) }u14(7){ d12(bb 0 insn -1) }u15(20){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 10) }
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 93 [ _3->_vptr.FilterPolicy ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.36874 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 92 [ this ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.36874 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


virtual const char* leveldb_filterpolicy_create_bloom(int)::Wrapper::Name() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 112{96d,16u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.36874 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36874 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36874 ])) db/c.cc:506 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36874 ])
        (nil)))
(call_insn/j 10 9 0 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->2) S1 A8])
            (const_int 0 [0]))) db/c.cc:506 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_filterpolicy_create_bloom(int)::Wrapper::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper12CreateFilterEPKN7leveldb5SliceEiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1515, decl_uid=31932, cgraph_uid=621, symbol_order=624)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void leveldb_filterpolicy_create_bloom(int)::Wrapper::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 126{102d,24u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,7] 4[8,10] 5[11,13] 6[14,14] 7[15,15] 8[16,16] 9[17,17] 10[18,18] 11[19,19] 12[20,20] 13[21,21] 14[22,22] 15[23,23] 16[24,24] 17[25,25] 18[26,26] 19[27,27] 20[28,28] 21[29,30] 22[31,32] 23[33,34] 24[35,36] 25[37,38] 26[39,40] 27[41,42] 28[43,44] 29[45,45] 30[46,46] 31[47,47] 32[48,48] 33[49,49] 34[50,50] 35[51,51] 36[52,52] 37[53,54] 38[55,56] 39[57,57] 40[58,58] 45[59,59] 46[60,60] 47[61,61] 48[62,62] 49[63,63] 50[64,64] 51[65,65] 52[66,66] 53[67,67] 54[68,68] 55[69,69] 56[70,70] 57[71,71] 58[72,72] 59[73,73] 60[74,74] 61[75,75] 62[76,76] 63[77,77] 64[78,78] 65[79,79] 66[80,80] 67[81,81] 68[82,82] 69[83,83] 70[84,84] 71[85,85] 72[86,86] 73[87,87] 74[88,88] 75[89,89] 76[90,90] 77[91,91] 78[92,92] 79[93,93] 80[94,94] 87[95,95] 90[96,96] 91[97,97] 92[98,98] 93[99,99] 94[100,100] 95[101,101] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(4){ }d13(5){ }d14(6){ }d15(7){ }d24(16){ }d28(20){ }d30(21){ }d32(22){ }d34(23){ }d36(24){ }d38(25){ }d40(26){ }d42(27){ }d44(28){ }d54(37){ }d56(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28],21[30],22[32],23[34],24[36],25[38],26[40],27[42],28[44],37[54],38[56]
;; rd  kill	(38) 0[0,1],1[2,3,4],2[5,6,7],4[8,9,10],5[11,12,13],6[14],7[15],16[24],20[28],21[29,30],22[31,32],23[33,34],24[35,36],25[37,38],26[39,40],27[41,42],28[43,44],37[53,54],38[55,56]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d14(bb 0 insn -1) }u1(7){ d15(bb 0 insn -1) }u2(16){ d24(bb 0 insn -1) }u3(20){ d28(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92 93 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 87 90 91 92 93 94 95
;; live  kill	
;; rd  in  	(8) 1[4],2[7],4[10],5[13],6[14],7[15],16[24],20[28]
;; rd  gen 	(7) 87[95],90[96],91[97],92[98],93[99],94[100],95[101]
;; rd  kill	(7) 87[95],90[96],91[97],92[98],93[99],94[100],95[101]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[14],7[15],16[24],20[28]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 16 { d24(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(6){ d14(bb 0 insn -1) }u22(7){ d15(bb 0 insn -1) }u23(20){ d28(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[14],7[15],16[24],20[28]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d14(bb 0 insn -1) }
;;   reg 7 { d15(bb 0 insn -1) }
;;   reg 20 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 1 dx) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 2 cx) in insn 16:
  Adding insn 12 to worklist
Processing use of (reg 4 si) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) in insn 16:
  Adding insn 11 to worklist
Processing use of (reg 94 [ _3->_vptr.FilterPolicy ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.36880 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 90 [ this ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.36880 ]) in insn 15:
Processing use of (reg 91 [ keys ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 93 [ dst ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 92 [ n ]) in insn 13:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_filterpolicy_create_bloom(int)::Wrapper::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={3d,2u} r2={3d,2u} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 126{102d,24u,0e} in 12{11 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92 93 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 87 90 91 92 93 94 95
;; live  kill	
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ keys ])
        (reg:DI 4 si [ keys ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ keys ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:SI 92 [ n ])
        (reg:SI 1 dx [ n ])) db/c.cc:507 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ dst ])
        (reg:DI 2 cx [ dst ])) db/c.cc:507 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ dst ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 87 [ D.36880 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36880 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 93 [ dst ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ dst ])
        (nil)))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (reg/v:SI 92 [ n ])) db/c.cc:508 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 92 [ n ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 91 [ keys ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ keys ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36880 ])) db/c.cc:508 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36880 ])
        (nil)))
(call_insn/j 16 15 0 2 (call (mem:QI (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:508 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual bool leveldb_filterpolicy_create_bloom(int)::Wrapper::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const (_ZZ33leveldb_filterpolicy_create_bloomENK7Wrapper11KeyMayMatchERKN7leveldb5SliceES3_, funcdef_no=1516, decl_uid=31936, cgraph_uid=622, symbol_order=625)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual bool leveldb_filterpolicy_create_bloom(int)::Wrapper::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 122{100d,22u,0e} in 10{9 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93
;;  reg->defs[] map:	0[0,1] 1[2,4] 2[5,6] 4[7,9] 5[10,12] 6[13,13] 7[14,14] 8[15,15] 9[16,16] 10[17,17] 11[18,18] 12[19,19] 13[20,20] 14[21,21] 15[22,22] 16[23,23] 17[24,24] 18[25,25] 19[26,26] 20[27,27] 21[28,29] 22[30,31] 23[32,33] 24[34,35] 25[36,37] 26[38,39] 27[40,41] 28[42,43] 29[44,44] 30[45,45] 31[46,46] 32[47,47] 33[48,48] 34[49,49] 35[50,50] 36[51,51] 37[52,53] 38[54,55] 39[56,56] 40[57,57] 45[58,58] 46[59,59] 47[60,60] 48[61,61] 49[62,62] 50[63,63] 51[64,64] 52[65,65] 53[66,66] 54[67,67] 55[68,68] 56[69,69] 57[70,70] 58[71,71] 59[72,72] 60[73,73] 61[74,74] 62[75,75] 63[76,76] 64[77,77] 65[78,78] 66[79,79] 67[80,80] 68[81,81] 69[82,82] 70[83,83] 71[84,84] 72[85,85] 73[86,86] 74[87,87] 75[88,88] 76[89,89] 77[90,90] 78[91,91] 79[92,92] 80[93,93] 87[94,94] 92[95,95] 93[96,96] 94[97,97] 95[98,98] 96[99,99] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d6(2){ }d9(4){ }d12(5){ }d13(6){ }d14(7){ }d23(16){ }d27(20){ }d29(21){ }d31(22){ }d33(23){ }d35(24){ }d37(25){ }d39(26){ }d41(27){ }d43(28){ }d53(37){ }d55(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[4],2[6],4[9],5[12],6[13],7[14],16[23],20[27],21[29],22[31],23[33],24[35],25[37],26[39],27[41],28[43],37[53],38[55]
;; rd  kill	(37) 0[0,1],1[2,3,4],2[5,6],4[7,8,9],5[10,11,12],6[13],7[14],16[23],20[27],21[28,29],22[30,31],23[32,33],24[34,35],25[36,37],26[38,39],27[40,41],28[42,43],37[52,53],38[54,55]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[4],4[9],5[12],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d13(bb 0 insn -1) }u1(7){ d14(bb 0 insn -1) }u2(16){ d23(bb 0 insn -1) }u3(20){ d27(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94 95 96
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 87 92 93 94 95 96
;; live  kill	
;; rd  in  	(7) 1[4],4[9],5[12],6[13],7[14],16[23],20[27]
;; rd  gen 	(7) 0[0],87[94],92[95],93[96],94[97],95[98],96[99]
;; rd  kill	(8) 0[0,1],87[94],92[95],93[96],94[97],95[98],96[99]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(0){ d0(bb 2 insn 14) }u19(6){ d13(bb 0 insn -1) }u20(7){ d14(bb 0 insn -1) }u21(20){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[13],7[14],16[23],20[27]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 14) }
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 1 dx) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 4 si) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 95 [ _3->_vptr.FilterPolicy ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 87 [ D.36885 ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 92 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.36885 ]) in insn 13:
Processing use of (reg 93 [ key ]) in insn 12:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 94 [ filter ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
starting the processing of deferred insns
ending the processing of deferred insns


virtual bool leveldb_filterpolicy_create_bloom(int)::Wrapper::KeyMayMatch(const leveldb::Slice&, const leveldb::Slice&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 122{100d,22u,0e} in 10{9 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 92 93 94 95 96
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 87 92 93 94 95 96
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/f:DI 92 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 94 [ filter ])
        (reg:DI 1 dx [ filter ])) db/c.cc:510 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ filter ])
        (nil)))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg/f:DI 87 [ D.36885 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ this ])
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36885 ]) [3 _3->_vptr.FilterPolicy+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _3->_vptr.FilterPolicy ])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 94 [ filter ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ filter ])
        (nil)))
(insn 12 11 13 2 (set (reg:DI 4 si)
        (reg/v/f:DI 93 [ key ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ key ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36885 ])) db/c.cc:511 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36885 ])
        (nil)))
(call_insn/j 14 13 0 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) [0 *OBJ_TYPE_REF(_5;(const struct FilterPolicy)_3->4) S1 A8])
            (const_int 0 [0]))) db/c.cc:511 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function static void leveldb_filterpolicy_create_bloom(int)::Wrapper::DoNothing(void*) (_ZZ33leveldb_filterpolicy_create_bloomEN7Wrapper9DoNothingEPv, funcdef_no=1517, decl_uid=31939, cgraph_uid=623, symbol_order=626)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


static void leveldb_filterpolicy_create_bloom(int)::Wrapper::DoNothing(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(6){ d5(bb 0 insn -1) }u5(7){ d6(bb 0 insn -1) }u6(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:
starting the processing of deferred insns
ending the processing of deferred insns


static void leveldb_filterpolicy_create_bloom(int)::Wrapper::DoNothing(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 26{19d,7u,0e} in 0{0 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H() (_ZZ26leveldb_writebatch_iterateEN1HD2Ev, funcdef_no=1839, decl_uid=31720, cgraph_uid=946, symbol_order=951)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,2u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 109{95d,14u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 88[92,92] 89[93,93] 90[94,94] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88 89 90
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(3) 88[92],89[93],90[94]
;; rd  kill	(3) 88[92],89[93],90[94]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(6){ d11(bb 0 insn -1) }u12(7){ d12(bb 0 insn -1) }u13(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 89) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 90) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 88 [ this ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,2u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 109{95d,14u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88 89 90
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 88 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (plus:DI (reg:DI 90)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 88 [ this ]) [3 this_2(D)->D.31723._vptr.Handler+0 S8 A64])
        (reg/f:DI 89)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ this ])
        (nil)))
(call_insn/j 10 9 0 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H() (_ZZ26leveldb_writebatch_iterateEN1HD0Ev, funcdef_no=1841, decl_uid=31714, cgraph_uid=948, symbol_order=953)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 185{168d,17u,0e} in 8{6 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,37] 18[38,39] 19[40,41] 20[42,42] 21[43,45] 22[46,48] 23[49,51] 24[52,54] 25[55,57] 26[58,60] 27[61,63] 28[64,66] 29[67,68] 30[69,70] 31[71,72] 32[73,74] 33[75,76] 34[77,78] 35[79,80] 36[81,82] 37[83,85] 38[86,88] 39[89,90] 40[91,92] 45[93,94] 46[95,96] 47[97,98] 48[99,100] 49[101,102] 50[103,104] 51[105,106] 52[107,108] 53[109,110] 54[111,112] 55[113,114] 56[115,116] 57[117,118] 58[119,120] 59[121,122] 60[123,124] 61[125,126] 62[127,128] 63[129,130] 64[131,132] 65[133,134] 66[135,136] 67[137,138] 68[139,140] 69[141,142] 70[143,144] 71[145,146] 72[147,148] 73[149,150] 74[151,152] 75[153,154] 76[155,156] 77[157,158] 78[159,160] 79[161,162] 80[163,164] 88[165,165] 89[166,166] 90[167,167] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d42(20){ }d45(21){ }d48(22){ }d51(23){ }d54(24){ }d57(25){ }d60(26){ }d63(27){ }d66(28){ }d85(37){ }d88(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[42],21[45],22[48],23[51],24[54],25[57],26[60],27[63],28[66],37[85],38[88]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[42],21[43,44,45],22[46,47,48],23[49,50,51],24[52,53,54],25[55,56,57],26[58,59,60],27[61,62,63],28[64,65,66],37[83,84,85],38[86,87,88]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d42(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88 89 90
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[42]
;; rd  gen 	(3) 88[165],89[166],90[167]
;; rd  kill	(3) 88[165],89[166],90[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(6){ d17(bb 0 insn -1) }u15(7){ d18(bb 0 insn -1) }u16(20){ d42(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 89) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 90) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 88 [ this ]) in insn 9:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 88 [ this ]) in insn 11:
starting the processing of deferred insns
ending the processing of deferred insns


virtual leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))::H::~H()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 185{168d,17u,0e} in 8{6 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88 89 90
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 88 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 90)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 89)
        (plus:DI (reg:DI 90)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 90)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 88 [ this ]) [3 this_2(D)->D.31723._vptr.Handler+0 S8 A64])
        (reg/f:DI 89)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ this ])) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ this ])
        (nil)))
(call_insn/j 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:367 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_comparator_t::~leveldb_comparator_t() (_ZN20leveldb_comparator_tD2Ev, funcdef_no=1415, decl_uid=28870, cgraph_uid=522, symbol_order=525)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 190{170d,20u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,37] 18[38,39] 19[40,41] 20[42,42] 21[43,45] 22[46,48] 23[49,51] 24[52,54] 25[55,57] 26[58,60] 27[61,63] 28[64,66] 29[67,68] 30[69,70] 31[71,72] 32[73,74] 33[75,76] 34[77,78] 35[79,80] 36[81,82] 37[83,85] 38[86,88] 39[89,90] 40[91,92] 45[93,94] 46[95,96] 47[97,98] 48[99,100] 49[101,102] 50[103,104] 51[105,106] 52[107,108] 53[109,110] 54[111,112] 55[113,114] 56[115,116] 57[117,118] 58[119,120] 59[121,122] 60[123,124] 61[125,126] 62[127,128] 63[129,130] 64[131,132] 65[133,134] 66[135,136] 67[137,138] 68[139,140] 69[141,142] 70[143,144] 71[145,146] 72[147,148] 73[149,150] 74[151,152] 75[153,154] 76[155,156] 77[157,158] 78[159,160] 79[161,162] 80[163,164] 90[165,165] 91[166,166] 92[167,167] 93[168,168] 94[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d42(20){ }d45(21){ }d48(22){ }d51(23){ }d54(24){ }d57(25){ }d60(26){ }d63(27){ }d66(28){ }d85(37){ }d88(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[42],21[45],22[48],23[51],24[54],25[57],26[60],27[63],28[66],37[85],38[88]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[42],21[43,44,45],22[46,47,48],23[49,50,51],24[52,53,54],25[55,56,57],26[58,59,60],27[61,62,63],28[64,65,66],37[83,84,85],38[86,87,88]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d42(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[42]
;; rd  gen 	(5) 90[165],91[166],92[167],93[168],94[169]
;; rd  kill	(5) 90[165],91[166],92[167],93[168],94[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(6){ d17(bb 0 insn -1) }u18(7){ d18(bb 0 insn -1) }u19(20){ d42(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 90 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 91) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 92) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ this_2(D)->destructor_ ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 90 [ this ]) in insn 10:
Processing use of (reg 93 [ this_2(D)->state_ ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 90 [ this ]) in insn 9:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ this ]) in insn 13:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 190{170d,20u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (reg/f:DI 94 [ this_2(D)->destructor_ ]) [0 *_4 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb_comparator_t::~leveldb_comparator_t() (_ZN20leveldb_comparator_tD0Ev, funcdef_no=1417, decl_uid=28864, cgraph_uid=524, symbol_order=527)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 266{243d,23u,0e} in 12{9 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,11] 4[12,15] 5[16,22] 6[23,23] 7[24,24] 8[25,27] 9[28,30] 10[31,33] 11[34,36] 12[37,39] 13[40,42] 14[43,45] 15[46,48] 16[49,49] 17[50,52] 18[53,55] 19[56,58] 20[59,59] 21[60,63] 22[64,67] 23[68,71] 24[72,75] 25[76,79] 26[80,83] 27[84,87] 28[88,91] 29[92,94] 30[95,97] 31[98,100] 32[101,103] 33[104,106] 34[107,109] 35[110,112] 36[113,115] 37[116,119] 38[120,123] 39[124,126] 40[127,129] 45[130,132] 46[133,135] 47[136,138] 48[139,141] 49[142,144] 50[145,147] 51[148,150] 52[151,153] 53[154,156] 54[157,159] 55[160,162] 56[163,165] 57[166,168] 58[169,171] 59[172,174] 60[175,177] 61[178,180] 62[181,183] 63[184,186] 64[187,189] 65[190,192] 66[193,195] 67[196,198] 68[199,201] 69[202,204] 70[205,207] 71[208,210] 72[211,213] 73[214,216] 74[217,219] 75[220,222] 76[223,225] 77[226,228] 78[229,231] 79[232,234] 80[235,237] 90[238,238] 91[239,239] 92[240,240] 93[241,241] 94[242,242] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d15(4){ }d22(5){ }d23(6){ }d24(7){ }d49(16){ }d59(20){ }d63(21){ }d67(22){ }d71(23){ }d75(24){ }d79(25){ }d83(26){ }d87(27){ }d91(28){ }d119(37){ }d123(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[7],2[11],4[15],5[22],6[23],7[24],16[49],20[59],21[63],22[67],23[71],24[75],25[79],26[83],27[87],28[91],37[119],38[123]
;; rd  kill	(67) 0[0,1,2,3],1[4,5,6,7],2[8,9,10,11],4[12,13,14,15],5[16,17,18,19,20,21,22],6[23],7[24],16[49],20[59],21[60,61,62,63],22[64,65,66,67],23[68,69,70,71],24[72,73,74,75],25[76,77,78,79],26[80,81,82,83],27[84,85,86,87],28[88,89,90,91],37[116,117,118,119],38[120,121,122,123]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[22],6[23],7[24],16[49],20[59]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d23(bb 0 insn -1) }u1(7){ d24(bb 0 insn -1) }u2(16){ d49(bb 0 insn -1) }u3(20){ d59(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
;; rd  in  	(5) 5[22],6[23],7[24],16[49],20[59]
;; rd  gen 	(5) 90[238],91[239],92[240],93[241],94[242]
;; rd  kill	(5) 90[238],91[239],92[240],93[241],94[242]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[23],7[24],16[49],20[59]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 16 { d49(bb 0 insn -1) }
;;   reg 20 { d59(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(6){ d23(bb 0 insn -1) }u21(7){ d24(bb 0 insn -1) }u22(20){ d59(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[23],7[24],16[49],20[59]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 20 { d59(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 90 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 91) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 92) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ this_2(D)->destructor_ ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 90 [ this ]) in insn 10:
Processing use of (reg 93 [ this_2(D)->state_ ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 90 [ this ]) in insn 9:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ this ]) in insn 13:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 90 [ this ]) in insn 15:
starting the processing of deferred insns
ending the processing of deferred insns


virtual leveldb_comparator_t::~leveldb_comparator_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 266{243d,23u,0e} in 12{9 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (reg/f:DI 94 [ this_2(D)->destructor_ ]) [0 *_5 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:71 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 16 15 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:71 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_t::~leveldb_filterpolicy_t() (_ZN22leveldb_filterpolicy_tD2Ev, funcdef_no=1423, decl_uid=28947, cgraph_uid=530, symbol_order=533)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 190{170d,20u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,37] 18[38,39] 19[40,41] 20[42,42] 21[43,45] 22[46,48] 23[49,51] 24[52,54] 25[55,57] 26[58,60] 27[61,63] 28[64,66] 29[67,68] 30[69,70] 31[71,72] 32[73,74] 33[75,76] 34[77,78] 35[79,80] 36[81,82] 37[83,85] 38[86,88] 39[89,90] 40[91,92] 45[93,94] 46[95,96] 47[97,98] 48[99,100] 49[101,102] 50[103,104] 51[105,106] 52[107,108] 53[109,110] 54[111,112] 55[113,114] 56[115,116] 57[117,118] 58[119,120] 59[121,122] 60[123,124] 61[125,126] 62[127,128] 63[129,130] 64[131,132] 65[133,134] 66[135,136] 67[137,138] 68[139,140] 69[141,142] 70[143,144] 71[145,146] 72[147,148] 73[149,150] 74[151,152] 75[153,154] 76[155,156] 77[157,158] 78[159,160] 79[161,162] 80[163,164] 90[165,165] 91[166,166] 92[167,167] 93[168,168] 94[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d42(20){ }d45(21){ }d48(22){ }d51(23){ }d54(24){ }d57(25){ }d60(26){ }d63(27){ }d66(28){ }d85(37){ }d88(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[42],21[45],22[48],23[51],24[54],25[57],26[60],27[63],28[66],37[85],38[88]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[42],21[43,44,45],22[46,47,48],23[49,50,51],24[52,53,54],25[55,56,57],26[58,59,60],27[61,62,63],28[64,65,66],37[83,84,85],38[86,87,88]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d42(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[42]
;; rd  gen 	(5) 90[165],91[166],92[167],93[168],94[169]
;; rd  kill	(5) 90[165],91[166],92[167],93[168],94[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(6){ d17(bb 0 insn -1) }u18(7){ d18(bb 0 insn -1) }u19(20){ d42(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 90 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 91) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 92) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ this_2(D)->destructor_ ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 90 [ this ]) in insn 10:
Processing use of (reg 93 [ this_2(D)->state_ ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 90 [ this ]) in insn 9:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ this ]) in insn 13:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,4u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 190{170d,20u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (reg/f:DI 94 [ this_2(D)->destructor_ ]) [0 *_4 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb_filterpolicy_t::~leveldb_filterpolicy_t() (_ZN22leveldb_filterpolicy_tD0Ev, funcdef_no=1425, decl_uid=28941, cgraph_uid=532, symbol_order=535)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 266{243d,23u,0e} in 12{9 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,11] 4[12,15] 5[16,22] 6[23,23] 7[24,24] 8[25,27] 9[28,30] 10[31,33] 11[34,36] 12[37,39] 13[40,42] 14[43,45] 15[46,48] 16[49,49] 17[50,52] 18[53,55] 19[56,58] 20[59,59] 21[60,63] 22[64,67] 23[68,71] 24[72,75] 25[76,79] 26[80,83] 27[84,87] 28[88,91] 29[92,94] 30[95,97] 31[98,100] 32[101,103] 33[104,106] 34[107,109] 35[110,112] 36[113,115] 37[116,119] 38[120,123] 39[124,126] 40[127,129] 45[130,132] 46[133,135] 47[136,138] 48[139,141] 49[142,144] 50[145,147] 51[148,150] 52[151,153] 53[154,156] 54[157,159] 55[160,162] 56[163,165] 57[166,168] 58[169,171] 59[172,174] 60[175,177] 61[178,180] 62[181,183] 63[184,186] 64[187,189] 65[190,192] 66[193,195] 67[196,198] 68[199,201] 69[202,204] 70[205,207] 71[208,210] 72[211,213] 73[214,216] 74[217,219] 75[220,222] 76[223,225] 77[226,228] 78[229,231] 79[232,234] 80[235,237] 90[238,238] 91[239,239] 92[240,240] 93[241,241] 94[242,242] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d15(4){ }d22(5){ }d23(6){ }d24(7){ }d49(16){ }d59(20){ }d63(21){ }d67(22){ }d71(23){ }d75(24){ }d79(25){ }d83(26){ }d87(27){ }d91(28){ }d119(37){ }d123(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[7],2[11],4[15],5[22],6[23],7[24],16[49],20[59],21[63],22[67],23[71],24[75],25[79],26[83],27[87],28[91],37[119],38[123]
;; rd  kill	(67) 0[0,1,2,3],1[4,5,6,7],2[8,9,10,11],4[12,13,14,15],5[16,17,18,19,20,21,22],6[23],7[24],16[49],20[59],21[60,61,62,63],22[64,65,66,67],23[68,69,70,71],24[72,73,74,75],25[76,77,78,79],26[80,81,82,83],27[84,85,86,87],28[88,89,90,91],37[116,117,118,119],38[120,121,122,123]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[22],6[23],7[24],16[49],20[59]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d23(bb 0 insn -1) }u1(7){ d24(bb 0 insn -1) }u2(16){ d49(bb 0 insn -1) }u3(20){ d59(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
;; rd  in  	(5) 5[22],6[23],7[24],16[49],20[59]
;; rd  gen 	(5) 90[238],91[239],92[240],93[241],94[242]
;; rd  kill	(5) 90[238],91[239],92[240],93[241],94[242]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[23],7[24],16[49],20[59]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 16 { d49(bb 0 insn -1) }
;;   reg 20 { d59(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(6){ d23(bb 0 insn -1) }u21(7){ d24(bb 0 insn -1) }u22(20){ d59(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[23],7[24],16[49],20[59]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 20 { d59(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 90 [ this ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 91) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 92) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ this_2(D)->destructor_ ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 90 [ this ]) in insn 10:
Processing use of (reg 93 [ this_2(D)->state_ ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 90 [ this ]) in insn 9:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ this ]) in insn 13:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 90 [ this ]) in insn 15:
starting the processing of deferred insns
ending the processing of deferred insns


virtual leveldb_filterpolicy_t::~leveldb_filterpolicy_t()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={3d} r18={3d} r19={3d} r20={1d,2u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r90={1d,5u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 266{243d,23u,0e} in 12{9 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 90 91 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 90 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 92)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 91)
        (plus:DI (reg:DI 92)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 92)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 90 [ this ]) [3 this_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 91)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 93 [ this_2(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ this ])
                (const_int 16 [0x10])) [3 this_2(D)->destructor_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this_2(D)->state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this_2(D)->state_ ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (reg/f:DI 94 [ this_2(D)->destructor_ ]) [0 *_5 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ this_2(D)->destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ this ])) db/c.cc:102 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ this ])
        (nil)))
(call_insn/j 16 15 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:102 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper() (_ZZ33leveldb_filterpolicy_create_bloomEN7WrapperD2Ev, funcdef_no=1511, decl_uid=31952, cgraph_uid=617, symbol_order=620)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={3d} r20={1d,4u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,3u} r93={1d,6u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 289{249d,40u,0e} in 20{17 regular + 3 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238
;;  reg->defs[] map:	0[0,3] 1[4,7] 2[8,11] 4[12,15] 5[16,22] 6[23,23] 7[24,24] 8[25,27] 9[28,30] 10[31,33] 11[34,36] 12[37,39] 13[40,42] 14[43,45] 15[46,48] 16[49,49] 17[50,53] 18[54,56] 19[57,59] 20[60,60] 21[61,64] 22[65,68] 23[69,72] 24[73,76] 25[77,80] 26[81,84] 27[85,88] 28[89,92] 29[93,95] 30[96,98] 31[99,101] 32[102,104] 33[105,107] 34[108,110] 35[111,113] 36[114,116] 37[117,120] 38[121,124] 39[125,127] 40[128,130] 45[131,133] 46[134,136] 47[137,139] 48[140,142] 49[143,145] 50[146,148] 51[149,151] 52[152,154] 53[155,157] 54[158,160] 55[161,163] 56[164,166] 57[167,169] 58[170,172] 59[173,175] 60[176,178] 61[179,181] 62[182,184] 63[185,187] 64[188,190] 65[191,193] 66[194,196] 67[197,199] 68[200,202] 69[203,205] 70[206,208] 71[209,211] 72[212,214] 73[215,217] 74[218,220] 75[221,223] 76[224,226] 77[227,229] 78[230,232] 79[233,235] 80[236,238] 87[239,239] 93[240,240] 94[241,241] 95[242,242] 96[243,243] 97[244,244] 98[245,245] 99[246,246] 100[247,247] 101[248,248] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d15(4){ }d22(5){ }d23(6){ }d24(7){ }d49(16){ }d60(20){ }d64(21){ }d68(22){ }d72(23){ }d76(24){ }d80(25){ }d84(26){ }d88(27){ }d92(28){ }d120(37){ }d124(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[7],2[11],4[15],5[22],6[23],7[24],16[49],20[60],21[64],22[68],23[72],24[76],25[80],26[84],27[88],28[92],37[120],38[124]
;; rd  kill	(67) 0[0,1,2,3],1[4,5,6,7],2[8,9,10,11],4[12,13,14,15],5[16,17,18,19,20,21,22],6[23],7[24],16[49],20[60],21[61,62,63,64],22[65,66,67,68],23[69,70,71,72],24[73,74,75,76],25[77,78,79,80],26[81,82,83,84],27[85,86,87,88],28[89,90,91,92],37[117,118,119,120],38[121,122,123,124]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[22],6[23],7[24],16[49],20[60]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d23(bb 0 insn -1) }u1(7){ d24(bb 0 insn -1) }u2(16){ d49(bb 0 insn -1) }u3(20){ d60(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 93 94 95
;; live  kill	
;; rd  in  	(5) 5[22],6[23],7[24],16[49],20[60]
;; rd  gen 	(5) 17[53],87[239],93[240],94[241],95[242]
;; rd  kill	(8) 17[50,51,52,53],87[239],93[240],94[241],95[242]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; rd  out 	(6) 6[23],7[24],16[49],20[60],87[239],93[240]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 16 { d49(bb 0 insn -1) }
;;   reg 20 { d60(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ d23(bb 0 insn -1) }u12(7){ d24(bb 0 insn -1) }u13(16){ d49(bb 0 insn -1) }u14(20){ d60(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di] 96 97
;; live  kill	
;; rd  in  	(6) 6[23],7[24],16[49],20[60],87[239],93[240]
;; rd  gen 	(2) 96[243],97[244]
;; rd  kill	(2) 96[243],97[244]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; rd  out 	(5) 6[23],7[24],16[49],20[60],93[240]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 16 { d49(bb 0 insn -1) }
;;   reg 20 { d60(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ d23(bb 0 insn -1) }u22(7){ d24(bb 0 insn -1) }u23(16){ d49(bb 0 insn -1) }u24(20){ d60(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 98 99 100 101
;; live  kill	
;; rd  in  	(6) 6[23],7[24],16[49],20[60],87[239],93[240]
;; rd  gen 	(4) 98[245],99[246],100[247],101[248]
;; rd  kill	(4) 98[245],99[246],100[247],101[248]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[23],7[24],16[49],20[60]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 16 { d49(bb 0 insn -1) }
;;   reg 20 { d60(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u37(6){ d23(bb 0 insn -1) }u38(7){ d24(bb 0 insn -1) }u39(20){ d60(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[23],7[24],16[49],20[60]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d23(bb 0 insn -1) }
;;   reg 7 { d24(bb 0 insn -1) }
;;   reg 20 { d60(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 93 [ this ]) in insn 21:
  Adding insn 2 to worklist
Processing use of (reg 98) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 99) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 5 di) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 101 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_ ]) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 93 [ this ]) in insn 23:
Processing use of (reg 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 93 [ this ]) in insn 22:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 5 di) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 93 [ this ]) in insn 26:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 87 [ D.36927 ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 93 [ this ]) in insn 9:
Processing use of (reg 87 [ D.36927 ]) in insn 15:
Processing use of (reg 93 [ this ]) in insn 8:
Processing use of (reg 94) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 95) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 17 flags) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.36927 ]) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r4={4d} r5={7d,4u} r6={1d,4u} r7={1d,7u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,3u} r17={4d,1u} r18={3d} r19={3d} r20={1d,4u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,3u} r93={1d,6u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 289{249d,40u,0e} in 20{17 regular + 3 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 93 94 95
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:505 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 this_3(D)->D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.36927 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 48 [0x30])) [3 this_3(D)->rep_+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.36927 ])
            (const_int 0 [0]))) db/c.cc:505 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:505 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di] 96 97
;; live  kill	
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.36927 ]) [3 MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (nil)))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.36927 ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.36927 ])
        (nil)))
(call_insn 16 15 17 3 (call (mem:QI (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) [0 *OBJ_TYPE_REF(_7;(struct FilterPolicy)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:505 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 98 99 100 101
;; live  kill	
(code_label 17 16 18 4 26 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 98)
        (plus:DI (reg:DI 99)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 21 20 22 4 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 98)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].state_ ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_ ]) [0 *_11 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_3(D)].destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -2 [0xfffffffffffffffe])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(call_insn/j 27 26 0 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function bool SaveError(char**, const leveldb::Status&) (SaveError, funcdef_no=1429, decl_uid=31234, cgraph_uid=536, symbol_order=539)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 17 count 14 (    1)


bool SaveError(char**, const leveldb::Status&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,4u} r1={9d} r2={9d} r4={11d,3u} r5={16d,8u} r6={1d,13u} r7={1d,21u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,12u} r17={18d,5u} r18={8d} r19={8d} r20={1d,21u,2e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={3d,1u} r88={1d,2u} r92={1d,2u} r95={1d,2u} r97={1d,3u} r98={1d,3u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r107={1d,1u} r109={1d,1u} 
;;    total ref usage 743{631d,110u,2e} in 48{40 regular + 8 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;;  reg->defs[] map:	0[0,9] 1[10,18] 2[19,27] 4[28,38] 5[39,54] 6[55,55] 7[56,56] 8[57,64] 9[65,72] 10[73,80] 11[81,88] 12[89,96] 13[97,104] 14[105,112] 15[113,120] 16[121,121] 17[122,139] 18[140,147] 19[148,155] 20[156,156] 21[157,165] 22[166,174] 23[175,183] 24[184,192] 25[193,201] 26[202,210] 27[211,219] 28[220,228] 29[229,236] 30[237,244] 31[245,252] 32[253,260] 33[261,268] 34[269,276] 35[277,284] 36[285,292] 37[293,301] 38[302,310] 39[311,318] 40[319,326] 45[327,334] 46[335,342] 47[343,350] 48[351,358] 49[359,366] 50[367,374] 51[375,382] 52[383,390] 53[391,398] 54[399,406] 55[407,414] 56[415,422] 57[423,430] 58[431,438] 59[439,446] 60[447,454] 61[455,462] 62[463,470] 63[471,478] 64[479,486] 65[487,494] 66[495,502] 67[503,510] 68[511,518] 69[519,526] 70[527,534] 71[535,542] 72[543,550] 73[551,558] 74[559,566] 75[567,574] 76[575,582] 77[583,590] 78[591,598] 79[599,606] 80[607,614] 87[615,617] 88[618,618] 92[619,619] 95[620,620] 97[621,621] 98[622,622] 100[623,623] 101[624,624] 102[625,625] 104[626,626] 105[627,627] 106[628,628] 107[629,629] 109[630,630] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d27(2){ }d38(4){ }d54(5){ }d55(6){ }d56(7){ }d121(16){ }d156(20){ }d165(21){ }d174(22){ }d183(23){ }d192(24){ }d201(25){ }d210(26){ }d219(27){ }d228(28){ }d301(37){ }d310(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[9],1[18],2[27],4[38],5[54],6[55],7[56],16[121],20[156],21[165],22[174],23[183],24[192],25[201],26[210],27[219],28[228],37[301],38[310]
;; rd  kill	(149) 0[0,1,2,3,4,5,6,7,8,9],1[10,11,12,13,14,15,16,17,18],2[19,20,21,22,23,24,25,26,27],4[28,29,30,31,32,33,34,35,36,37,38],5[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],6[55],7[56],16[121],20[156],21[157,158,159,160,161,162,163,164,165],22[166,167,168,169,170,171,172,173,174],23[175,176,177,178,179,180,181,182,183],24[184,185,186,187,188,189,190,191,192],25[193,194,195,196,197,198,199,200,201],26[202,203,204,205,206,207,208,209,210],27[211,212,213,214,215,216,217,218,219],28[220,221,222,223,224,225,226,227,228],37[293,294,295,296,297,298,299,300,301],38[302,303,304,305,306,307,308,309,310]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[38],5[54],6[55],7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 10 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d55(bb 0 insn -1) }u1(7){ d56(bb 0 insn -1) }u2(16){ d121(bb 0 insn -1) }u3(20){ d156(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 97 98
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[38],5[54],6[55],7[56],16[121],20[156]
;; rd  gen 	(3) 17[138],97[621],98[622]
;; rd  kill	(20) 17[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],97[621],98[622]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; rd  out 	(6) 6[55],7[56],16[121],20[156],97[621],98[622]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ d55(bb 0 insn -1) }u10(7){ d56(bb 0 insn -1) }u11(16){ d121(bb 0 insn -1) }u12(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(6) 6[55],7[56],16[121],20[156],97[621],98[622]
;; rd  gen 	(2) 17[137],88[618]
;; rd  kill	(19) 17[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],88[618]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; rd  out 	(7) 6[55],7[56],16[121],20[156],88[618],97[621],98[622]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ d55(bb 0 insn -1) }u17(7){ d56(bb 0 insn -1) }u18(16){ d121(bb 0 insn -1) }u19(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 100 101 102 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 100 101 102 104
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[55],7[56],16[121],20[156],88[618],97[621],98[622]
;; rd  gen 	(7) 0[7],17[133],95[620],100[623],101[624],102[625],104[626]
;; rd  kill	(33) 0[0,1,2,3,4,5,6,7,8,9],17[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],95[620],100[623],101[624],102[625],104[626]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; rd  out 	(5) 6[55],7[56],16[121],20[156],95[620]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(6){ d55(bb 0 insn -1) }u40(7){ d56(bb 0 insn -1) }u41(16){ d121(bb 0 insn -1) }u42(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[55],7[56],16[121],20[156],95[620]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[55],7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 4 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(6){ d55(bb 0 insn -1) }u47(7){ d56(bb 0 insn -1) }u48(16){ d121(bb 0 insn -1) }u49(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
;; rd  in  	(5) 6[55],7[56],16[121],20[156],95[620]
;; rd  gen 	(1) 87[617]
;; rd  kill	(3) 87[615,616,617]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[55],7[56],16[121],20[156],87[617]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 3 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ d55(bb 0 insn -1) }u51(7){ d56(bb 0 insn -1) }u52(16){ d121(bb 0 insn -1) }u53(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 105 106 107 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 92 105 106 107 109
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[55],7[56],16[121],20[156],88[618],97[621],98[622]
;; rd  gen 	(7) 0[3],17[127],92[619],105[627],106[628],107[629],109[630]
;; rd  kill	(33) 0[0,1,2,3,4,5,6,7,8,9],17[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],92[619],105[627],106[628],107[629],109[630]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; rd  out 	(5) 6[55],7[56],16[121],20[156],92[619]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u76(6){ d55(bb 0 insn -1) }u77(7){ d56(bb 0 insn -1) }u78(16){ d121(bb 0 insn -1) }u79(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[55],7[56],16[121],20[156],92[619]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[55],7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 7 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u83(6){ d55(bb 0 insn -1) }u84(7){ d56(bb 0 insn -1) }u85(16){ d121(bb 0 insn -1) }u86(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
;; rd  in  	(5) 6[55],7[56],16[121],20[156],92[619]
;; rd  gen 	(1) 87[616]
;; rd  kill	(3) 87[615,616,617]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[55],7[56],16[121],20[156],87[616]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 2 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(6){ d55(bb 0 insn -1) }u88(7){ d56(bb 0 insn -1) }u89(16){ d121(bb 0 insn -1) }u90(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[55],7[56],16[121],20[156],97[621],98[622]
;; rd  gen 	(1) 87[615]
;; rd  kill	(3) 87[615,616,617]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[55],7[56],16[121],20[156],87[615]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 10 6 9 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(6){ d55(bb 0 insn -1) }u92(7){ d56(bb 0 insn -1) }u93(16){ d121(bb 0 insn -1) }u94(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; rd  in  	(7) 6[55],7[56],16[121],20[156],87[615,616,617]
;; rd  gen 	(2) 0[0],17[125]
;; rd  kill	(28) 0[0,1,2,3,4,5,6,7,8,9],17[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[55],7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 11 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(6){ d55(bb 0 insn -1) }u99(7){ d56(bb 0 insn -1) }u100(16){ d121(bb 0 insn -1) }u101(20){ d156(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[55],7[56],16[121],20[156]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(6){ d55(bb 0 insn -1) }u104(7){ d56(bb 0 insn -1) }u105(16){ d121(bb 0 insn -1) }u106(20){ d156(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[55],7[56],16[121],20[156]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[55],7[56],16[121],20[156]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 16 { d121(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u108(0){ d0(bb 11 insn 71) }u109(6){ d55(bb 0 insn -1) }u110(7){ d56(bb 0 insn -1) }u111(20){ d156(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[55],7[56],16[121],20[156]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 11 insn 71) }
;;   reg 6 { d55(bb 0 insn -1) }
;;   reg 7 { d56(bb 0 insn -1) }
;;   reg 20 { d156(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 6 to worklist
  Adding insn 17 to worklist
  Adding insn 33 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 36 to worklist
  Adding insn 59 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 44 to worklist
  Adding insn 62 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 75 to worklist
  Adding insn 78 to worklist
Finished finding needed instructions:
  Adding insn 71 to worklist
Processing use of (reg 87 [ D.36947 ]) in insn 71:
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 78:
Processing use of (reg 7 sp) in insn 75:
Processing use of (reg 20 frame) in insn 73:
Processing use of (reg 17 flags) in insn 74:
Processing use of (reg 7 sp) in insn 62:
Processing use of (reg 5 di) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 92 [ D.36948 ]) in insn 61:
  Adding insn 55 to worklist
Processing use of (reg 20 frame) in insn 55:
Processing use of (reg 7 sp) in insn 44:
Processing use of (reg 5 di) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 88 [ D.36948 ]) in insn 43:
  Adding insn 15 to worklist
Processing use of (reg 97 [ errptr ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 48:
Processing use of (reg 4 si) in insn 48:
  Adding insn 46 to worklist
Processing use of (reg 5 di) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 105) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 20 frame) in insn 45:
Processing use of (reg 98 [ s ]) in insn 46:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 7 sp) in insn 51:
Processing use of (reg 5 di) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 106 [ MEM[(char * *)&D.31237] ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 20 frame) in insn 49:
Processing use of (reg 97 [ errptr ]) in insn 54:
Processing use of (reg 107) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 0 ax) in insn 52:
Processing use of (reg 17 flags) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 92 [ D.36948 ]) in insn 58:
Processing use of (reg 109) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 105) in insn 57:
Processing use of (reg 7 sp) in insn 36:
Processing use of (reg 5 di) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 95 [ D.36948 ]) in insn 35:
  Adding insn 29 to worklist
Processing use of (reg 20 frame) in insn 29:
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 4 si) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 100) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 20 frame) in insn 19:
Processing use of (reg 98 [ s ]) in insn 20:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 5 di) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 101 [ MEM[(char * *)&D.36936] ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 20 frame) in insn 23:
Processing use of (reg 97 [ errptr ]) in insn 28:
Processing use of (reg 102) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 0 ax) in insn 26:
Processing use of (reg 17 flags) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 95 [ D.36948 ]) in insn 32:
Processing use of (reg 104) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 100) in insn 31:
Processing use of (reg 17 flags) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 88 [ D.36948 ]) in insn 16:
Processing use of (reg 20 frame) in insn 6:
Processing use of (reg 17 flags) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 98 [ s ]) in insn 12:
starting the processing of deferred insns
ending the processing of deferred insns


bool SaveError(char**, const leveldb::Status&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,4u} r1={9d} r2={9d} r4={11d,3u} r5={16d,8u} r6={1d,13u} r7={1d,21u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,12u} r17={18d,5u} r18={8d} r19={8d} r20={1d,21u,2e} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r87={3d,1u} r88={1d,2u} r92={1d,2u} r95={1d,2u} r97={1d,3u} r98={1d,3u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r107={1d,1u} r109={1d,1u} 
;;    total ref usage 743{631d,110u,2e} in 48{40 regular + 8 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 97 98
;; live  kill	 17 [flags]
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 97 [ errptr ])
        (reg:DI 5 di [ errptr ])) db/c.cc:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ errptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 98 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:132 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.36951+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:132 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 6 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/v/f:DI 98 [ s ]) [3 s_4(D)->state_+0 S8 A128])
            (const_int 0 [0]))) db/c.cc:134 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 83)
            (pc))) db/c.cc:134 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 83)
;;  succ:       10 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(6){ }u10(7){ }u11(16){ }u12(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  gen 	 17 [flags] 88
;; live  kill	
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg/f:DI 88 [ D.36948 ])
        (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])) db/c.cc:136 89 {*movdi_internal}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.36948 ])
            (const_int 0 [0]))) db/c.cc:136 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) db/c.cc:136 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 41)
;;  succ:       4 [15.0%]  (FALLTHRU)
;;              7 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98

;; basic block 4, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [15.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 95 100 101 102 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 95 100 101 102 104
;; live  kill	 17 [flags]
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:137 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 4 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ s ])) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ s ])
        (nil)))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 100)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) db/c.cc:137 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 23 22 24 4 (set (reg/f:DI 101 [ MEM[(char * *)&D.36936] ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.36936]+0 S8 A128])) db/c.cc:137 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 101 [ MEM[(char * *)&D.36936] ])) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ MEM[(char * *)&D.36936] ])
        (nil)))
(call_insn 25 24 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:137 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 28 4 (set (reg/f:DI 102)
        (reg:DI 0 ax)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 102)
            (nil))))
(insn 28 26 29 4 (set (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
        (reg/f:DI 102)) db/c.cc:137 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_DEAD (reg/v/f:DI 97 [ errptr ])
            (nil))))
(insn 29 28 31 4 (set (reg/f:DI 95 [ D.36948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.36936]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 31 29 32 4 (parallel [
            (set (reg/f:DI 104)
                (plus:DI (reg/f:DI 100)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.36948 ])
            (reg/f:DI 104))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 37)
;;  succ:       5 [78.3%]  (FALLTHRU)
;;              6 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95

;; basic block 5, loop depth 0, count 0, freq 1056, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [78.3%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; live  gen 	 5 [di]
;; live  kill	
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.36948 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.36948 ])
        (nil)))
(call_insn 36 35 37 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [21.6%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
(code_label 37 36 38 6 35 "" [1 uses])
(note 38 37 9 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 9 38 41 6 (set (reg:QI 87 [ D.36947 ])
        (const_int 1 [0x1])) db/c.cc:137 93 {*movqi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [85.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 105 106 107 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags] 92 105 106 107 109
;; live  kill	 17 [flags]
(code_label 41 9 42 7 34 "" [1 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 7 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.36948 ])) db/c.cc:140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.36948 ])
        (nil)))
(call_insn 44 43 45 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:140 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 45 44 46 7 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:141 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 46 45 47 7 (set (reg:DI 4 si)
        (reg/v/f:DI 98 [ s ])) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ s ])
        (nil)))
(insn 47 46 48 7 (set (reg:DI 5 di)
        (reg/f:DI 105)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 48 47 49 7 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>) [0 ToString S1 A8])
        (const_int 0 [0])) db/c.cc:141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb6Status8ToStringB5cxx11Ev") [flags 0x41]  <function_decl 0x7fb5377e65e8 ToString>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 49 48 50 7 (set (reg/f:DI 106 [ MEM[(char * *)&D.31237] ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31237]+0 S8 A128])) db/c.cc:141 89 {*movdi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg/f:DI 106 [ MEM[(char * *)&D.31237] ])) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106 [ MEM[(char * *)&D.31237] ])
        (nil)))
(call_insn 51 50 52 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:141 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 52 51 54 7 (set (reg/f:DI 107)
        (reg:DI 0 ax)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 107)
            (nil))))
(insn 54 52 55 7 (set (mem/f:DI (reg/v/f:DI 97 [ errptr ]) [3 *errptr_5(D)+0 S8 A64])
        (reg/f:DI 107)) db/c.cc:141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107)
        (expr_list:REG_DEAD (reg/v/f:DI 97 [ errptr ])
            (nil))))
(insn 55 54 57 7 (set (reg/f:DI 92 [ D.36948 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31237]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 57 55 58 7 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 105)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 58 57 59 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.36948 ])
            (reg/f:DI 109))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(jump_insn 59 58 60 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 63)
;;  succ:       8 [69.8%]  (FALLTHRU)
;;              9 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 8, loop depth 0, count 0, freq 5334, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [69.8%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; live  gen 	 5 [di]
;; live  kill	
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 8 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.36948 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.36948 ])
        (nil)))
(call_insn 62 61 63 8 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [30.2%] 
;;              8 [100.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
(code_label 63 62 64 9 36 "" [1 uses])
(note 64 63 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 64 83 9 (set (reg:QI 87 [ D.36947 ])
        (const_int 1 [0x1])) db/c.cc:143 93 {*movqi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 10, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87
;; live  kill	
(code_label 83 8 82 10 38 "" [1 uses])
(note 82 83 7 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 7 82 65 10 (set (reg:QI 87 [ D.36947 ])
        (const_int 0 [0])) db/c.cc:135 93 {*movqi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              6 [100.0%]  (FALLTHRU)
;;              9 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 65 7 66 11 33 "" [0 uses])
(note 66 65 71 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 71 66 73 11 (set (reg/i:QI 0 ax)
        (reg:QI 87 [ D.36947 ])) db/c.cc:144 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 87 [ D.36947 ])
        (nil)))
(insn 73 71 74 11 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.36951+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:144 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 74 73 84 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) db/c.cc:144 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 77)
;;  succ:       13 [100.0%] 
;;              12 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 4
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [0.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 84 74 75 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 75 84 77 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:144 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 77 75 85 13 37 "" [1 uses])
(note 85 77 78 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 78 85 0 13 (use (reg/i:QI 0 ax)) db/c.cc:144 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual void leveldb_filterpolicy_t::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const (_ZNK22leveldb_filterpolicy_t12CreateFilterEPKN7leveldb5SliceEiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=1427, decl_uid=28920, cgraph_uid=534, symbol_order=537)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 43 count 35 (  1.1)


virtual void leveldb_filterpolicy_t::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={16d,5u} r1={18d,3u} r2={15d,2u} r4={16d,3u} r5={25d,12u} r6={1d,31u} r7={1d,44u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,30u} r17={33d,12u} r18={13d} r19={13d} r20={1d,35u,1e} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={15d,1u} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r109={1d,5u,1e} r110={1d,2u} r111={2d,3u} r114={1d,2u} r115={1d,2u} r120={2d,3u} r121={2d,4u} r123={2d,7u} r124={2d,7u} r127={2d,3u} r128={1d,2u} r129={1d,1u} r130={1d,4u} r131={1d,2u,1e} r133={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,1u} r144={1d,1u} 
;;    total ref usage 1265{1027d,235u,3e} in 90{77 regular + 13 call} insns.
;; Reaching defs:
;;  sparse invalidated 	17
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995
;;  reg->defs[] map:	0[0,15] 1[16,33] 2[34,48] 4[49,64] 5[65,89] 6[90,90] 7[91,91] 8[92,104] 9[105,117] 10[118,130] 11[131,143] 12[144,156] 13[157,169] 14[170,182] 15[183,195] 16[196,196] 17[197,229] 18[230,242] 19[243,255] 20[256,256] 21[257,270] 22[271,284] 23[285,298] 24[299,312] 25[313,326] 26[327,340] 27[341,354] 28[355,368] 29[369,381] 30[382,394] 31[395,407] 32[408,420] 33[421,433] 34[434,446] 35[447,459] 36[460,472] 37[473,487] 38[488,501] 39[502,514] 40[515,527] 45[528,540] 46[541,553] 47[554,566] 48[567,579] 49[580,592] 50[593,605] 51[606,618] 52[619,631] 53[632,644] 54[645,657] 55[658,670] 56[671,683] 57[684,696] 58[697,709] 59[710,722] 60[723,735] 61[736,748] 62[749,761] 63[762,774] 64[775,787] 65[788,800] 66[801,813] 67[814,826] 68[827,839] 69[840,852] 70[853,865] 71[866,878] 72[879,891] 73[892,904] 74[905,917] 75[918,930] 76[931,943] 77[944,956] 78[957,969] 79[970,982] 80[983,995] 109[996,996] 110[997,997] 111[998,999] 114[1000,1000] 115[1001,1001] 120[1002,1003] 121[1004,1005] 123[1006,1007] 124[1008,1009] 127[1010,1011] 128[1012,1012] 129[1013,1013] 130[1014,1014] 131[1015,1015] 133[1016,1016] 136[1017,1017] 137[1018,1018] 138[1019,1019] 139[1020,1020] 140[1021,1021] 141[1022,1022] 142[1023,1023] 143[1024,1025] 144[1026,1026] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d33(1){ }d48(2){ }d64(4){ }d89(5){ }d90(6){ }d91(7){ }d196(16){ }d256(20){ }d270(21){ }d284(22){ }d298(23){ }d312(24){ }d326(25){ }d340(26){ }d354(27){ }d368(28){ }d487(37){ }d501(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[15],1[33],2[48],4[64],5[89],6[90],7[91],16[196],20[256],21[270],22[284],23[298],24[312],25[326],26[340],27[354],28[368],37[487],38[501]
;; rd  kill	(235) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],1[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],2[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],4[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],5[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],6[90],7[91],16[196],20[256],21[257,258,259,260,261,262,263,264,265,266,267,268,269,270],22[271,272,273,274,275,276,277,278,279,280,281,282,283,284],23[285,286,287,288,289,290,291,292,293,294,295,296,297,298],24[299,300,301,302,303,304,305,306,307,308,309,310,311,312],25[313,314,315,316,317,318,319,320,321,322,323,324,325,326],26[327,328,329,330,331,332,333,334,335,336,337,338,339,340],27[341,342,343,344,345,346,347,348,349,350,351,352,353,354],28[355,356,357,358,359,360,361,362,363,364,365,366,367,368],37[473,474,475,476,477,478,479,480,481,482,483,484,485,486,487],38[488,489,490,491,492,493,494,495,496,497,498,499,500,501]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[33],2[48],4[64],5[89],6[90],7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 9 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d90(bb 0 insn -1) }u1(7){ d91(bb 0 insn -1) }u2(16){ d196(bb 0 insn -1) }u3(20){ d256(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 128 129 130 131
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 109 128 129 130 131
;; live  kill	 17 [flags]
;; rd  in  	(8) 1[33],2[48],4[64],5[89],6[90],7[91],16[196],20[256]
;; rd  gen 	(6) 17[228],109[996],128[1012],129[1013],130[1014],131[1015]
;; rd  kill	(5) 109[996],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; rd  out 	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(6){ d90(bb 0 insn -1) }u13(7){ d91(bb 0 insn -1) }u14(16){ d196(bb 0 insn -1) }u15(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 17 [flags] 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  gen 	 17 [flags] 133
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 17[227],133[1016]
;; rd  kill	(1) 133[1016]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; rd  out 	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 3 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ d90(bb 0 insn -1) }u21(7){ d91(bb 0 insn -1) }u22(16){ d196(bb 0 insn -1) }u23(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ d90(bb 0 insn -1) }u26(7){ d91(bb 0 insn -1) }u27(16){ d196(bb 0 insn -1) }u28(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 123 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  gen 	 0 [ax] 5 [di] 110 123 127
;; live  kill	 17 [flags]
;; rd  in  	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(4) 0[13],110[997],123[1006],127[1011]
;; rd  kill	(21) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],110[997],123[1006,1007],127[1010,1011]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; rd  out 	(12) 6[90],7[91],16[196],20[256],109[996],110[997],123[1006],127[1011],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 5 6 )->[6]->( 7 6 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(6){ d90(bb 0 insn -1) }u35(7){ d91(bb 0 insn -1) }u36(16){ d196(bb 0 insn -1) }u37(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 127
;; lr  def 	 17 [flags] 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  gen 	 17 [flags] 127
;; live  kill	 17 [flags]
;; rd  in  	(14) 6[90],7[91],16[196],17[222],20[256],109[996],110[997],123[1006],127[1010,1011],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 17[222],127[1010]
;; rd  kill	(2) 127[1010,1011]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; rd  out 	(12) 6[90],7[91],16[196],20[256],109[996],110[997],123[1006],127[1010],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 6 )->[7]->( 26(EH) 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ d90(bb 0 insn -1) }u45(7){ d91(bb 0 insn -1) }u46(16){ d196(bb 0 insn -1) }u47(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 128 129 130 131
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; rd  in  	(12) 6[90],7[91],16[196],20[256],109[996],110[997],123[1006],127[1010],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(1) 0[12]
;; rd  kill	(16) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; rd  out 	(11) 0[12],6[90],7[91],16[196],20[256],109[996],123[1006],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 7 )->[8]->( 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ d90(bb 0 insn -1) }u52(7){ d91(bb 0 insn -1) }u53(16){ d196(bb 0 insn -1) }u54(20){ d256(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 111 124
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; live  gen 	 111 124
;; live  kill	
;; rd  in  	(11) 0[12],6[90],7[91],16[196],20[256],109[996],123[1006],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 111[999],124[1008]
;; rd  kill	(4) 111[998,999],124[1008,1009]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; rd  out 	(12) 6[90],7[91],16[196],20[256],109[996],111[999],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 2 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u56(6){ d90(bb 0 insn -1) }u57(7){ d91(bb 0 insn -1) }u58(16){ d196(bb 0 insn -1) }u59(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 130 131
;; live  gen 	 123 124
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],109[996],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 123[1007],124[1009]
;; rd  kill	(4) 123[1006,1007],124[1008,1009]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; rd  out 	(9) 6[90],7[91],16[196],20[256],123[1007],124[1009],128[1012],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 13 15 9 )->[10]->( 22(EH) 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(6){ d90(bb 0 insn -1) }u61(7){ d91(bb 0 insn -1) }u62(16){ d196(bb 0 insn -1) }u63(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 137 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 136 137 138
;; live  kill	 17 [flags]
;; rd  in  	(14) 6[90],7[91],16[196],20[256],120[1002],121[1004],123[1006,1007],124[1008,1009],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(4) 0[11],136[1017],137[1018],138[1019]
;; rd  kill	(19) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],136[1017],137[1018],138[1019]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; rd  out 	(10) 0[11],6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 10 )->[11]->( 16 17 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(6){ d90(bb 0 insn -1) }u81(7){ d91(bb 0 insn -1) }u82(16){ d196(bb 0 insn -1) }u83(20){ d256(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 114 115 141 142
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; live  gen 	 17 [flags] 114 115 141 142
;; live  kill	 17 [flags]
;; rd  in  	(10) 0[11],6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],131[1015]
;; rd  gen 	(5) 17[217],114[1000],115[1001],141[1022],142[1023]
;; rd  kill	(4) 114[1000],115[1001],141[1022],142[1023]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; rd  out 	(11) 6[90],7[91],16[196],20[256],114[1000],115[1001],123[1006,1007],124[1008,1009],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 8 12 )->[12]->( 13 12 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ d90(bb 0 insn -1) }u93(7){ d91(bb 0 insn -1) }u94(16){ d196(bb 0 insn -1) }u95(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 124
;; lr  def 	 17 [flags] 111
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  gen 	 17 [flags] 111
;; live  kill	 17 [flags]
;; rd  in  	(14) 6[90],7[91],16[196],17[215],20[256],109[996],111[998,999],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 17[215],111[998]
;; rd  kill	(2) 111[998,999]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; rd  out 	(12) 6[90],7[91],16[196],20[256],109[996],111[998],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 12 )->[13]->( 10 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(6){ d90(bb 0 insn -1) }u103(7){ d91(bb 0 insn -1) }u104(16){ d196(bb 0 insn -1) }u105(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(12) 6[90],7[91],16[196],20[256],109[996],111[998],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(1) 17[214]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; rd  out 	(10) 6[90],7[91],16[196],20[256],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(6){ d90(bb 0 insn -1) }u109(7){ d91(bb 0 insn -1) }u110(16){ d196(bb 0 insn -1) }u111(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  def 	 120 121
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  gen 	 120 121
;; live  kill	
;; rd  in  	(10) 6[90],7[91],16[196],20[256],123[1006],124[1008],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(2) 120[1003],121[1005]
;; rd  kill	(4) 120[1002,1003],121[1004,1005]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; rd  out 	(11) 6[90],7[91],16[196],20[256],120[1003],121[1005],123[1006],124[1008],128[1012],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 14 15 )->[15]->( 10 15 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u113(6){ d90(bb 0 insn -1) }u114(7){ d91(bb 0 insn -1) }u115(16){ d196(bb 0 insn -1) }u116(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 130
;; lr  def 	 17 [flags] 120 121 139 140
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  gen 	 17 [flags] 120 121 139 140
;; live  kill	 17 [flags]
;; rd  in  	(16) 6[90],7[91],16[196],17[211],20[256],120[1002,1003],121[1004,1005],123[1006],124[1008],128[1012],130[1014],131[1015],139[1020],140[1021]
;; rd  gen 	(5) 17[211],120[1002],121[1004],139[1020],140[1021]
;; rd  kill	(6) 120[1002,1003],121[1004,1005],139[1020],140[1021]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; rd  out 	(11) 6[90],7[91],16[196],20[256],120[1002],121[1004],123[1006],124[1008],128[1012],130[1014],131[1015]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 11 )->[16]->( 22(EH) )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(6){ d90(bb 0 insn -1) }u131(7){ d91(bb 0 insn -1) }u132(16){ d196(bb 0 insn -1) }u133(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(11) 6[90],7[91],16[196],20[256],114[1000],115[1001],123[1006,1007],124[1008,1009],131[1015]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; rd  out 	(8) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 11 )->[17]->( 18 22(EH) )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u136(6){ d90(bb 0 insn -1) }u137(7){ d91(bb 0 insn -1) }u138(16){ d196(bb 0 insn -1) }u139(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(11) 6[90],7[91],16[196],20[256],114[1000],115[1001],123[1006,1007],124[1008,1009],131[1015]
;; rd  gen 	(1) 0[9]
;; rd  kill	(16) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; rd  out 	(9) 6[90],7[91],16[196],20[256],114[1000],123[1006,1007],124[1008,1009]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u147(6){ d90(bb 0 insn -1) }u148(7){ d91(bb 0 insn -1) }u149(16){ d196(bb 0 insn -1) }u150(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],114[1000],123[1006,1007],124[1008,1009]
;; rd  gen 	(1) 17[207]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; rd  out 	(8) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u156(6){ d90(bb 0 insn -1) }u157(7){ d91(bb 0 insn -1) }u158(16){ d196(bb 0 insn -1) }u159(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(8) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; rd  out 	(6) 6[90],7[91],16[196],20[256],123[1006,1007]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 18 19 )->[20]->( 21 29 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u163(6){ d90(bb 0 insn -1) }u164(7){ d91(bb 0 insn -1) }u165(16){ d196(bb 0 insn -1) }u166(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(8) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009]
;; rd  gen 	(1) 17[205]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; rd  out 	(6) 6[90],7[91],16[196],20[256],123[1006,1007]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 20 )->[21]->( 29 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u169(6){ d90(bb 0 insn -1) }u170(7){ d91(bb 0 insn -1) }u171(16){ d196(bb 0 insn -1) }u172(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[90],7[91],16[196],20[256],123[1006,1007]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[90],7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 10(EH) 16(EH) 17(EH) )->[22]->( 23 )
;; bb 22 artificial_defs: { d5(0){ }d21(1){ }}
;; bb 22 artificial_uses: { u176(6){ d90(bb 0 insn -1) }u177(7){ d91(bb 0 insn -1) }u178(16){ d196(bb 0 insn -1) }u179(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 0 [ax] 1 [dx] 144
;; live  kill	
;; rd  in  	(10) 6[90],7[91],16[196],20[256],114[1000],123[1006,1007],124[1008,1009],131[1015]
;; rd  gen 	(3) 0[5],1[21],144[1026]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],1[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],144[1026]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; rd  out 	(9) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],144[1026]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u181(6){ d90(bb 0 insn -1) }u182(7){ d91(bb 0 insn -1) }u183(16){ d196(bb 0 insn -1) }u184(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],144[1026]
;; rd  gen 	(1) 17[203]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; rd  out 	(9) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],144[1026]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 23 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(6){ d90(bb 0 insn -1) }u188(7){ d91(bb 0 insn -1) }u189(16){ d196(bb 0 insn -1) }u190(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],144[1026]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; rd  out 	(7) 6[90],7[91],16[196],20[256],123[1006,1007],144[1026]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 23 24 )->[25]->( 27 28 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u194(6){ d90(bb 0 insn -1) }u195(7){ d91(bb 0 insn -1) }u196(16){ d196(bb 0 insn -1) }u197(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  def 	 17 [flags] 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; live  gen 	 17 [flags] 143
;; live  kill	
;; rd  in  	(9) 6[90],7[91],16[196],20[256],123[1006,1007],124[1008,1009],144[1026]
;; rd  gen 	(2) 17[201],143[1025]
;; rd  kill	(2) 143[1024,1025]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; rd  out 	(7) 6[90],7[91],16[196],20[256],123[1006,1007],143[1025]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 7(EH) )->[26]->( 27 )
;; bb 26 artificial_defs: { d3(0){ }d19(1){ }}
;; bb 26 artificial_uses: { u201(6){ d90(bb 0 insn -1) }u202(7){ d91(bb 0 insn -1) }u203(16){ d196(bb 0 insn -1) }u204(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 0 [ax] 1 [dx] 143
;; live  kill	
;; rd  in  	(10) 6[90],7[91],16[196],20[256],109[996],123[1006],128[1012],129[1013],130[1014],131[1015]
;; rd  gen 	(3) 0[3],1[19],143[1024]
;; rd  kill	(36) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],1[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],143[1024,1025]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; rd  out 	(6) 6[90],7[91],16[196],20[256],123[1006],143[1024]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 26 25 )->[27]->( 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u206(6){ d90(bb 0 insn -1) }u207(7){ d91(bb 0 insn -1) }u208(16){ d196(bb 0 insn -1) }u209(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(8) 6[90],7[91],16[196],20[256],123[1006,1007],143[1024,1025]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; rd  out 	(6) 6[90],7[91],16[196],20[256],143[1024,1025]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 25 27 )->[28]->( )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u213(6){ d90(bb 0 insn -1) }u214(7){ d91(bb 0 insn -1) }u215(16){ d196(bb 0 insn -1) }u216(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(8) 6[90],7[91],16[196],20[256],123[1006,1007],143[1024,1025]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 21 20 )->[29]->( 31 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u220(6){ d90(bb 0 insn -1) }u221(7){ d91(bb 0 insn -1) }u222(16){ d196(bb 0 insn -1) }u223(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(6) 6[90],7[91],16[196],20[256],123[1006,1007]
;; rd  gen 	(1) 17[198]
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[90],7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 29 )->[30]->( )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u226(6){ d90(bb 0 insn -1) }u227(7){ d91(bb 0 insn -1) }u228(16){ d196(bb 0 insn -1) }u229(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[90],7[91],16[196],20[256]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 29 )->[31]->( 1 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u231(6){ d90(bb 0 insn -1) }u232(7){ d91(bb 0 insn -1) }u233(16){ d196(bb 0 insn -1) }u234(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[90],7[91],16[196],20[256]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[90],7[91],16[196],20[256]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 16 { d196(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

( 31 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u235(6){ d90(bb 0 insn -1) }u236(7){ d91(bb 0 insn -1) }u237(20){ d256(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[90],7[91],16[196],20[256]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d90(bb 0 insn -1) }
;;   reg 7 { d91(bb 0 insn -1) }
;;   reg 20 { d256(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 30 to worklist
  Adding insn 44 to worklist
  Adding insn 46 to worklist
  Adding insn 52 to worklist
  Adding insn 60 to worklist
  Adding insn 56 to worklist
  Adding insn 63 to worklist
  Adding insn 78 to worklist
  Adding insn 113 to worklist
  Adding insn 87 to worklist
  Adding insn 84 to worklist
  Adding insn 90 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 96 to worklist
  Adding insn 116 to worklist
  Adding insn 123 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 131 to worklist
  Adding insn 135 to worklist
  Adding insn 138 to worklist
  Adding insn 146 to worklist
  Adding insn 149 to worklist
  Adding insn 155 to worklist
  Adding insn 160 to worklist
  Adding insn 165 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 171 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 171:
Processing use of (reg 20 frame) in insn 169:
Processing use of (reg 17 flags) in insn 170:
Processing use of (reg 7 sp) in insn 165:
Processing use of (reg 5 di) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 143) in insn 164:
  Adding insn 152 to worklist
  Adding insn 188 to worklist
Processing use of (reg 0 ax) in insn 188:
Processing use of (reg 144) in insn 152:
  Adding insn 184 to worklist
Processing use of (reg 0 ax) in insn 184:
Processing use of (reg 7 sp) in insn 160:
Processing use of (reg 5 di) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 159:
  Adding insn 33 to worklist
  Adding insn 53 to worklist
Processing use of (reg 0 ax) in insn 53:
Processing use of (reg 17 flags) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 154:
Processing use of (reg 7 sp) in insn 149:
Processing use of (reg 5 di) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 124 [ __first ]) in insn 148:
  Adding insn 32 to worklist
  Adding insn 64 to worklist
Processing use of (reg 0 ax) in insn 64:
Processing use of (reg 17 flags) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 124 [ __first ]) in insn 145:
Processing use of (reg 7 sp) in insn 138:
Processing use of (reg 5 di) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 137:
Processing use of (reg 17 flags) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 134:
Processing use of (reg 7 sp) in insn 131:
Processing use of (reg 5 di) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 124 [ __first ]) in insn 130:
Processing use of (reg 7 sp) in insn 126:
Processing use of (reg 5 di) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 114 [ filter ]) in insn 125:
  Adding insn 79 to worklist
Processing use of (reg 0 ax) in insn 79:
Processing use of (reg 17 flags) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 124 [ __first ]) in insn 127:
Processing use of (reg 7 sp) in insn 123:
Processing use of (reg 1 dx) in insn 123:
  Adding insn 120 to worklist
Processing use of (reg 4 si) in insn 123:
  Adding insn 121 to worklist
Processing use of (reg 5 di) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 131 [ dst ]) in insn 122:
  Adding insn 27 to worklist
Processing use of (reg 2 cx) in insn 27:
Processing use of (reg 114 [ filter ]) in insn 121:
Processing use of (reg 115 [ D.37015 ]) in insn 120:
  Adding insn 109 to worklist
Processing use of (reg 20 frame) in insn 109:
Processing use of (reg 7 sp) in insn 116:
Processing use of (reg 5 di) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 121 [ ivtmp.341 ]) in insn 96:
  Adding insn 35 to worklist
  Adding insn 99 to worklist
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 96:
Processing use of (reg 139 [ MEM[base: _50, offset: 0B] ]) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 120 [ ivtmp.343 ]) in insn 95:
  Adding insn 92 to worklist
  Adding insn 100 to worklist
Processing use of (reg 120 [ ivtmp.343 ]) in insn 100:
Processing use of (reg 129 [ keys ]) in insn 92:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 25:
Processing use of (reg 121 [ ivtmp.341 ]) in insn 99:
Processing use of (reg 121 [ ivtmp.341 ]) in insn 98:
Processing use of (reg 124 [ __first ]) in insn 98:
Processing use of (reg 140 [ MEM[base: _50, offset: 8B] ]) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 120 [ ivtmp.343 ]) in insn 97:
Processing use of (reg 17 flags) in insn 102:
  Adding insn 101 to worklist
Processing use of (subreg (reg 121 [ ivtmp.341 ]) 0) in insn 101:
Processing use of (reg 130 [ n ]) in insn 101:
  Adding insn 26 to worklist
Processing use of (reg 1 dx) in insn 26:
Processing use of (reg 17 flags) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 130 [ n ]) in insn 89:
Processing use of (reg 111 [ ivtmp.351 ]) in insn 84:
  Adding insn 34 to worklist
  Adding insn 85 to worklist
Processing use of (reg 124 [ __first ]) in insn 84:
Processing use of (reg 111 [ ivtmp.351 ]) in insn 85:
Processing use of (reg 17 flags) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 109 [ __n ]) in insn 86:
  Adding insn 38 to worklist
Processing use of (reg 111 [ ivtmp.351 ]) in insn 86:
Processing use of (reg 130 [ n ]) in insn 38:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 115 [ D.37015 ]) in insn 112:
Processing use of (reg 141 [ D.37015 ]) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 131 [ dst ]) in insn 111:
Processing use of (reg 142) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 7 sp) in insn 78:
Processing use of (reg 1 dx) in insn 78:
  Adding insn 75 to worklist
Processing use of (reg 2 cx) in insn 78:
  Adding insn 74 to worklist
Processing use of (reg 4 si) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 5 di) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 37 r8) in insn 78:
  Adding insn 73 to worklist
Processing use of (reg 138 [ this_21(D)->create_ ]) in insn 78:
  Adding insn 72 to worklist
Processing use of (reg 128 [ this ]) in insn 72:
  Adding insn 24 to worklist
Processing use of (reg 5 di) in insn 24:
Processing use of (reg 136) in insn 73:
  Adding insn 70 to worklist
Processing use of (reg 20 frame) in insn 70:
Processing use of (reg 137 [ this_21(D)->state_ ]) in insn 77:
  Adding insn 71 to worklist
Processing use of (reg 128 [ this ]) in insn 71:
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 76:
Processing use of (reg 130 [ n ]) in insn 74:
Processing use of (reg 124 [ __first ]) in insn 75:
Processing use of (reg 7 sp) in insn 63:
Processing use of (reg 5 di) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 110 [ D.37015 ]) in insn 62:
  Adding insn 50 to worklist
Processing use of (reg 109 [ __n ]) in insn 50:
Processing use of (reg 123 [ key_pointers$_M_impl$_M_start ]) in insn 56:
Processing use of (reg 127 [ ivtmp.359 ]) in insn 56:
  Adding insn 31 to worklist
  Adding insn 57 to worklist
Processing use of (reg 127 [ ivtmp.359 ]) in insn 57:
Processing use of (reg 17 flags) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 109 [ __n ]) in insn 59:
Processing use of (reg 127 [ ivtmp.359 ]) in insn 59:
Processing use of (reg 7 sp) in insn 52:
Processing use of (reg 5 di) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 110 [ D.37015 ]) in insn 51:
Processing use of (reg 7 sp) in insn 46:
Processing use of (reg 17 flags) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 109 [ __n ]) in insn 43:
Processing use of (reg 133) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 20 frame) in insn 30:
Processing use of (reg 17 flags) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 109 [ __n ]) in insn 39:
starting the processing of deferred insns
ending the processing of deferred insns


virtual void leveldb_filterpolicy_t::CreateFilter(const leveldb::Slice*, int, std::__cxx11::string*) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={16d,5u} r1={18d,3u} r2={15d,2u} r4={16d,3u} r5={25d,12u} r6={1d,31u} r7={1d,44u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,30u} r17={33d,12u} r18={13d} r19={13d} r20={1d,35u,1e} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={15d,1u} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r109={1d,5u,1e} r110={1d,2u} r111={2d,3u} r114={1d,2u} r115={1d,2u} r120={2d,3u} r121={2d,4u} r123={2d,7u} r124={2d,7u} r127={2d,3u} r128={1d,2u} r129={1d,1u} r130={1d,4u} r131={1d,2u,1e} r133={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={2d,1u} r144={1d,1u} 
;;    total ref usage 1265{1027d,235u,3e} in 90{77 regular + 13 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 109 128 129 130 131
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 109 128 129 130 131
;; live  kill	 17 [flags]
(note 36 0 24 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 24 36 25 2 (set (reg/f:DI 128 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 25 24 26 2 (set (reg/v/f:DI 129 [ keys ])
        (reg:DI 4 si [ keys ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ keys ])
        (nil)))
(insn 26 25 27 2 (set (reg/v:SI 130 [ n ])
        (reg:SI 1 dx [ n ])) db/c.cc:108 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [ n ])
        (nil)))
(insn 27 26 28 2 (set (reg/v/f:DI 131 [ dst ])
        (reg:DI 2 cx [ dst ])) db/c.cc:108 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ dst ])
        (nil)))
(note 28 27 30 2 NOTE_INSN_FUNCTION_BEG)
(insn 30 28 38 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37019+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:108 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 30 39 2 (set (reg/v:DI 109 [ __n ])
        (sign_extend:DI (reg/v:SI 130 [ n ]))) db/c.cc:109 142 {*extendsidi2_rex64}
     (nil))
(insn 39 38 40 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:170 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 40 39 41 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 176)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:170 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 176)
;;  succ:       3 [90.0%]  (FALLTHRU)
;;              9 [10.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131

;; basic block 3, loop depth 0, count 0, freq 810, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [90.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(6){ }u13(7){ }u14(16){ }u15(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 17 [flags] 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  gen 	 17 [flags] 133
;; live  kill	
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 3 (set (reg:DI 133)
        (const_int 2305843009213693951 [0x1fffffffffffffff])) /usr/include/c++/5/ext/new_allocator.h:101 89 {*movdi_internal}
     (nil))
(insn 43 42 44 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 109 [ __n ])
            (reg:DI 133))) /usr/include/c++/5/ext/new_allocator.h:101 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 133)
        (expr_list:REG_EQUAL (compare:CC (reg/v:DI 109 [ __n ])
                (const_int 2305843009213693951 [0x1fffffffffffffff]))
            (nil))))
(jump_insn 44 43 45 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 48)
            (pc))) /usr/include/c++/5/ext/new_allocator.h:101 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 48)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [0.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 46 45 48 4 (call (mem:QI (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7fb5388d8438 __throw_bad_alloc>) [0 __throw_bad_alloc S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:102 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt17__throw_bad_allocv") [flags 0x41]  <function_decl 0x7fb5388d8438 __throw_bad_alloc>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 110 123 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 128 129 130 131
;; live  gen 	 0 [ax] 5 [di] 110 123 127
;; live  kill	 17 [flags]
(code_label 48 46 49 5 46 "" [1 uses])
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (parallel [
            (set (reg:DI 110 [ D.37015 ])
                (ashift:DI (reg/v:DI 109 [ __n ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/ext/new_allocator.h:104 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:DI 5 di)
        (reg:DI 110 [ D.37015 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
(call_insn 52 51 53 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 53 52 31 5 (set (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 134)
            (nil))))
(insn 31 53 58 5 (set (reg:DI 127 [ ivtmp.359 ])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131

;; basic block 6, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              6 [91.0%]  (DFS_BACK)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 127
;; lr  def 	 17 [flags] 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  gen 	 17 [flags] 127
;; live  kill	 17 [flags]
(code_label 58 31 55 6 47 "" [1 uses])
(note 55 58 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 6 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 127 [ ivtmp.359 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) [3 MEM[base: key_pointers$_M_impl$_M_start_78, index: ivtmp.359_107, step: 8, offset: 0B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:770 89 {*movdi_internal}
     (nil))
(insn 57 56 59 6 (parallel [
            (set (reg:DI 127 [ ivtmp.359 ])
                (plus:DI (reg:DI 127 [ ivtmp.359 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 59 57 60 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (reg:DI 127 [ ivtmp.359 ]))) /usr/include/c++/5/bits/stl_algobase.h:768 8 {*cmpdi_1}
     (nil))
(jump_insn 60 59 61 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:768 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 58)
;;  succ:       7 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              6 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 127 128 129 130 131

;; basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 110 123 128 129 130 131
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg:DI 5 di)
        (reg:DI 110 [ D.37015 ])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 110 [ D.37015 ])
        (nil)))
(call_insn 63 62 179 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/ext/new_allocator.h:104 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 7 [0x7])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131

;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 111 124
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 123 128 129 130 131
;; live  gen 	 111 124
;; live  kill	
(note 179 63 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 179 34 8 (set (reg/v/f:DI 124 [ __first ])
        (reg:DI 0 ax)) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 135)
            (nil))))
(insn 34 64 176 8 (set (reg:DI 111 [ ivtmp.351 ])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:104 89 {*movdi_internal}
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131

;; basic block 9, loop depth 0, count 0, freq 90, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 123 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 128 130 131
;; live  gen 	 123 124
;; live  kill	
(code_label 176 34 175 9 59 "" [1 uses])
(note 175 176 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 32 175 33 9 (set (reg/v/f:DI 124 [ __first ])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
(insn 33 32 68 9 (set (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_vector.h:170 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131

;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13
;;              15 [9.0%]  (LOOP_EXIT)
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 137 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 130 131
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 136 137 138
;; live  kill	 17 [flags]
(code_label 68 33 69 10 45 "" [2 uses])
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 69 71 10 (parallel [
            (set (reg/f:DI 136)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:116 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 70 72 10 (set (reg/f:DI 137 [ this_21(D)->state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 128 [ this ])
                (const_int 8 [0x8])) [3 this_21(D)->state_+0 S8 A64])) db/c.cc:116 89 {*movdi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:DI 138 [ this_21(D)->create_ ])
        (mem/f:DI (plus:DI (reg/f:DI 128 [ this ])
                (const_int 32 [0x20])) [3 this_21(D)->create_+0 S8 A64])) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 128 [ this ])
        (nil)))
(insn 73 72 74 10 (set (reg:DI 37 r8)
        (reg/f:DI 136)) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 74 73 75 10 (set (reg:SI 2 cx)
        (reg/v:SI 130 [ n ])) db/c.cc:116 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 130 [ n ])
        (nil)))
(insn 75 74 76 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ __first ])) db/c.cc:116 89 {*movdi_internal}
     (nil))
(insn 76 75 77 10 (set (reg:DI 4 si)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) db/c.cc:116 89 {*movdi_internal}
     (nil))
(insn 77 76 78 10 (set (reg:DI 5 di)
        (reg/f:DI 137 [ this_21(D)->state_ ])) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ this_21(D)->state_ ])
        (nil)))
(call_insn 78 77 180 10 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 138 [ this_21(D)->create_ ]) [0 *_22 S1 A8])
            (const_int 0 [0]))) db/c.cc:116 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 138 [ this_21(D)->create_ ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:SI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 5 [0x5])
                                (expr_list:REG_CALL_DECL (nil)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       22 (ABNORMAL,ABNORMAL_CALL,EH)
;;              11 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131

;; basic block 11, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 114 115 141 142
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 131
;; live  gen 	 17 [flags] 114 115 141 142
;; live  kill	 17 [flags]
(note 180 78 79 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 79 180 109 11 (set (reg/v/f:DI 114 [ filter ])
        (reg:DI 0 ax)) db/c.cc:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 109 79 110 11 (set (reg:DI 115 [ D.37015 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [9 len+0 S8 A64])) db/c.cc:117 89 {*movdi_internal}
     (nil))
(insn 110 109 111 11 (set (reg:DI 142)
        (const_int 9223372036854775807 [0x7fffffffffffffff])) /usr/include/c++/5/bits/basic_string.h:270 89 {*movdi_internal}
     (nil))
(insn 111 110 112 11 (parallel [
            (set (reg:DI 141 [ D.37015 ])
                (minus:DI (reg:DI 142)
                    (mem:DI (plus:DI (reg/v/f:DI 131 [ dst ])
                            (const_int 8 [0x8])) [9 MEM[(long unsigned int *)dst_28(D) + 8B]+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:270 261 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (minus:DI (const_int 9223372036854775807 [0x7fffffffffffffff])
                    (mem:DI (plus:DI (reg/v/f:DI 131 [ dst ])
                            (const_int 8 [0x8])) [9 MEM[(long unsigned int *)dst_28(D) + 8B]+0 S8 A64]))
                (nil)))))
(insn 112 111 113 11 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 115 [ D.37015 ])
            (reg:DI 141 [ D.37015 ]))) /usr/include/c++/5/bits/basic_string.h:270 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 141 [ D.37015 ])
        (nil)))
(jump_insn 113 112 82 11 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) /usr/include/c++/5/bits/basic_string.h:270 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 118)
;;  succ:       16 [0.0%]  (FALLTHRU)
;;              17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131

;; basic block 12, loop depth 0, count 0, freq 9097, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              12 [91.0%]  (DFS_BACK)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 124
;; lr  def 	 17 [flags] 111
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  gen 	 17 [flags] 111
;; live  kill	 17 [flags]
(code_label 82 113 83 12 48 "" [1 uses])
(note 83 82 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 12 (set (mem:DI (plus:DI (mult:DI (reg:DI 111 [ ivtmp.351 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 124 [ __first ])) [9 MEM[base: __first_81, index: ivtmp.351_100, step: 8, offset: 0B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/stl_algobase.h:770 89 {*movdi_internal}
     (nil))
(insn 85 84 86 12 (parallel [
            (set (reg:DI 111 [ ivtmp.351 ])
                (plus:DI (reg:DI 111 [ ivtmp.351 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 86 85 87 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 109 [ __n ])
            (reg:DI 111 [ ivtmp.351 ]))) /usr/include/c++/5/bits/stl_algobase.h:768 8 {*cmpdi_1}
     (nil))
(jump_insn 87 86 88 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 82)
            (pc))) /usr/include/c++/5/bits/stl_algobase.h:768 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 82)
;;  succ:       13 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              12 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 109 111 123 124 128 129 130 131

;; basic block 13, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 130
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  gen 	 17 [flags]
;; live  kill	
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 130 [ n ])
            (const_int 0 [0]))) db/c.cc:111 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 90 89 91 13 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) db/c.cc:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 68)
;;  succ:       10
;;              14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131

;; basic block 14, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u108(6){ }u109(7){ }u110(16){ }u111(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 129
;; lr  def 	 120 121
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 128 129 130 131
;; live  gen 	 120 121
;; live  kill	
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 35 14 (set (reg:DI 120 [ ivtmp.343 ])
        (reg/v/f:DI 129 [ keys ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 129 [ keys ])
        (nil)))
(insn 35 92 103 14 (set (reg:DI 121 [ ivtmp.341 ])
        (const_int 0 [0])) db/c.cc:111 89 {*movdi_internal}
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131

;; basic block 15, loop depth 0, count 0, freq 9097, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              15 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 130
;; lr  def 	 17 [flags] 120 121 139 140
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  gen 	 17 [flags] 120 121 139 140
;; live  kill	 17 [flags]
(code_label 103 35 93 15 50 "" [0 uses])
(note 93 103 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 95 93 96 15 (set (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])
        (mem/f:DI (reg:DI 120 [ ivtmp.343 ]) [3 MEM[base: _50, offset: 0B]+0 S8 A64])) db/c.cc:112 89 {*movdi_internal}
     (nil))
(insn 96 95 97 15 (set (mem/f:DI (plus:DI (mult:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 8 [0x8]))
                (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) [3 MEM[base: key_pointers$_M_impl$_M_start_78, index: ivtmp.341_102, step: 8, offset: 0]+0 S8 A64])
        (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])) db/c.cc:112 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ MEM[base: _50, offset: 0B] ])
        (nil)))
(insn 97 96 98 15 (set (reg:DI 140 [ MEM[base: _50, offset: 8B] ])
        (mem:DI (plus:DI (reg:DI 120 [ ivtmp.343 ])
                (const_int 8 [0x8])) [9 MEM[base: _50, offset: 8B]+0 S8 A64])) db/c.cc:113 89 {*movdi_internal}
     (nil))
(insn 98 97 99 15 (set (mem:DI (plus:DI (mult:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 124 [ __first ])) [9 MEM[base: __first_81, index: ivtmp.341_102, step: 8, offset: 0]+0 S8 A64])
        (reg:DI 140 [ MEM[base: _50, offset: 8B] ])) db/c.cc:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140 [ MEM[base: _50, offset: 8B] ])
        (nil)))
(insn 99 98 100 15 (parallel [
            (set (reg:DI 121 [ ivtmp.341 ])
                (plus:DI (reg:DI 121 [ ivtmp.341 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 100 99 101 15 (parallel [
            (set (reg:DI 120 [ ivtmp.343 ])
                (plus:DI (reg:DI 120 [ ivtmp.343 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 101 100 102 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 130 [ n ])
            (subreg:SI (reg:DI 121 [ ivtmp.341 ]) 0))) db/c.cc:111 7 {*cmpsi_1}
     (nil))
(jump_insn 102 101 114 15 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) db/c.cc:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 68)
;;  succ:       10 [9.0%]  (LOOP_EXIT)
;;              15 [91.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 121 123 124 128 130 131

;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [0.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 5 [di]
;; live  kill	
(note 114 102 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7fb536e1f1b0 *.LC20>)) /usr/include/c++/5/bits/basic_string.h:271 89 {*movdi_internal}
     (nil))
(call_insn 116 115 118 16 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d8948 __throw_length_error>) [0 __throw_length_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:271 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 5 [0x5])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt20__throw_length_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d8948 __throw_length_error>)
                (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                    (expr_list:REG_NORETURN (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       22 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124

;; basic block 17, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u136(6){ }u137(7){ }u138(16){ }u139(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 115 123 124 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 118 116 119 17 51 "" [1 uses])
(note 119 118 120 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 17 (set (reg:DI 1 dx)
        (reg:DI 115 [ D.37015 ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115 [ D.37015 ])
        (nil)))
(insn 121 120 122 17 (set (reg:DI 4 si)
        (reg/v/f:DI 114 [ filter ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (nil))
(insn 122 121 123 17 (set (reg:DI 5 di)
        (reg/v/f:DI 131 [ dst ])) /usr/include/c++/5/bits/basic_string.h:1015 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 131 [ dst ])
        (nil)))
(call_insn 123 122 124 17 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb537cf7bd0 _M_append>) [0 _M_append S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1015 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 5 [0x5])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm") [flags 0x41]  <function_decl 0x7fb537cf7bd0 _M_append>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       18 [100.0%]  (FALLTHRU)
;;              22 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124

;; basic block 18, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 114 123 124
;; live  gen 	 5 [di] 17 [flags]
;; live  kill	
(note 124 123 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 18 (set (reg:DI 5 di)
        (reg/v/f:DI 114 [ filter ])) db/c.cc:118 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 114 [ filter ])
        (nil)))
(call_insn 126 125 127 18 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:118 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 127 126 128 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ __first ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 128 127 129 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 132)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 132)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124

;; basic block 19, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 5 [di]
;; live  kill	
(note 129 128 130 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 19 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ __first ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ __first ])
        (nil)))
(call_insn 131 130 132 19 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 20, loop depth 0, count 0, freq 899, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u163(6){ }u164(7){ }u165(16){ }u166(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 132 131 133 20 52 "" [1 uses])
(note 133 132 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 135 134 136 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 167)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 167)
;;  succ:       21 [78.3%]  (FALLTHRU)
;;              29 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123

;; basic block 21, loop depth 0, count 0, freq 705, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [78.3%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u169(6){ }u170(7){ }u171(16){ }u172(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 5 [di]
;; live  kill	
(note 136 135 137 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 138 21 (set (reg:DI 5 di)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (nil)))
(call_insn 138 137 183 21 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       29 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 [100.0%]  (ABNORMAL,ABNORMAL_CALL,EH)
;;              17 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 22 artificial_defs: { d5(0){ }d21(1){ }}
;; bb 22 artificial_uses: { u176(6){ }u177(7){ }u178(16){ }u179(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 144
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124
;; live  gen 	 0 [ax] 1 [dx] 144
;; live  kill	
(code_label/s 183 138 186 22 61 "" [1 uses])
(note 186 183 184 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 184 186 143 22 (set (reg:DI 144)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       23 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144

;; basic block 23, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 143 184 144 23 54 "" [0 uses])
(note 144 143 145 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 124 [ __first ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 146 145 147 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 150)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 150)
;;  succ:       24 [69.8%]  (FALLTHRU)
;;              25 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144

;; basic block 24, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [69.8%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 124 144
;; live  gen 	 5 [di]
;; live  kill	
(note 147 146 148 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 24 (set (reg:DI 5 di)
        (reg/v/f:DI 124 [ __first ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ __first ])
        (nil)))
(call_insn 149 148 150 24 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144

;; basic block 25, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [30.2%] 
;;              24 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; lr  def 	 17 [flags] 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 144
;; live  gen 	 17 [flags] 143
;; live  kill	
(code_label 150 149 151 25 55 "" [1 uses])
(note 151 150 152 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 154 25 (set (reg:DI 143)
        (reg:DI 144)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144)
        (nil)))
(insn 154 152 155 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/stl_vector.h:177 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 155 154 187 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) /usr/include/c++/5/bits/stl_vector.h:177 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 161)
;;  succ:       27 [69.8%]  (FALLTHRU)
;;              28 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143

;; basic block 26, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 26 artificial_defs: { d3(0){ }d19(1){ }}
;; bb 26 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 143
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; live  gen 	 0 [ax] 1 [dx] 143
;; live  kill	
(code_label/s 187 155 192 26 62 "" [1 uses])
(note 192 187 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 188 192 157 26 (set (reg:DI 143)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143

;; basic block 27, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%]  (FALLTHRU,PRESERVE)
;;              25 [69.8%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u206(6){ }u207(7){ }u208(16){ }u209(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123 143
;; live  gen 	 5 [di]
;; live  kill	
(code_label 157 188 158 27 57 "" [0 uses])
(note 158 157 159 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 27 (set (reg:DI 5 di)
        (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ key_pointers$_M_impl$_M_start ])
        (nil)))
(call_insn 160 159 161 27 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [30.2%] 
;;              27 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 143
;; live  gen 	 5 [di]
;; live  kill	
(code_label 161 160 162 28 56 "" [1 uses])
(note 162 161 164 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 164 162 165 28 (set (reg:DI 5 di)
        (reg:DI 143)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 143)
        (nil)))
(call_insn 165 164 167 28 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              20 [21.6%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u220(6){ }u221(7){ }u222(16){ }u223(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 167 165 174 29 44 "" [1 uses])
(note 174 167 169 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 169 174 170 29 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37019+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:119 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 170 169 181 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 173)
            (pc))) db/c.cc:119 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 173)
;;  succ:       31 [100.0%] 
;;              30 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 [0.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u226(6){ }u227(7){ }u228(16){ }u229(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 181 170 171 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(call_insn 171 181 173 30 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:119 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 30, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u231(6){ }u232(7){ }u233(16){ }u234(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 173 171 182 31 58 "" [1 uses])
(note 182 173 0 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper() (_ZZ33leveldb_filterpolicy_create_bloomEN7WrapperD0Ev, funcdef_no=1513, decl_uid=31946, cgraph_uid=619, symbol_order=622)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


virtual leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={5d,1u} r18={4d} r19={4d} r20={1d,4u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,7u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 365{322d,43u,0e} in 22{18 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311
;;  reg->defs[] map:	0[0,4] 1[5,9] 2[10,14] 4[15,19] 5[20,28] 6[29,29] 7[30,30] 8[31,34] 9[35,38] 10[39,42] 11[43,46] 12[47,50] 13[51,54] 14[55,58] 15[59,62] 16[63,63] 17[64,68] 18[69,72] 19[73,76] 20[77,77] 21[78,82] 22[83,87] 23[88,92] 24[93,97] 25[98,102] 26[103,107] 27[108,112] 28[113,117] 29[118,121] 30[122,125] 31[126,129] 32[130,133] 33[134,137] 34[138,141] 35[142,145] 36[146,149] 37[150,154] 38[155,159] 39[160,163] 40[164,167] 45[168,171] 46[172,175] 47[176,179] 48[180,183] 49[184,187] 50[188,191] 51[192,195] 52[196,199] 53[200,203] 54[204,207] 55[208,211] 56[212,215] 57[216,219] 58[220,223] 59[224,227] 60[228,231] 61[232,235] 62[236,239] 63[240,243] 64[244,247] 65[248,251] 66[252,255] 67[256,259] 68[260,263] 69[264,267] 70[268,271] 71[272,275] 72[276,279] 73[280,283] 74[284,287] 75[288,291] 76[292,295] 77[296,299] 78[300,303] 79[304,307] 80[308,311] 87[312,312] 93[313,313] 94[314,314] 95[315,315] 96[316,316] 97[317,317] 98[318,318] 99[319,319] 100[320,320] 101[321,321] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d19(4){ }d28(5){ }d29(6){ }d30(7){ }d63(16){ }d77(20){ }d82(21){ }d87(22){ }d92(23){ }d97(24){ }d102(25){ }d107(26){ }d112(27){ }d117(28){ }d154(37){ }d159(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[9],2[14],4[19],5[28],6[29],7[30],16[63],20[77],21[82],22[87],23[92],24[97],25[102],26[107],27[112],28[117],37[154],38[159]
;; rd  kill	(83) 0[0,1,2,3,4],1[5,6,7,8,9],2[10,11,12,13,14],4[15,16,17,18,19],5[20,21,22,23,24,25,26,27,28],6[29],7[30],16[63],20[77],21[78,79,80,81,82],22[83,84,85,86,87],23[88,89,90,91,92],24[93,94,95,96,97],25[98,99,100,101,102],26[103,104,105,106,107],27[108,109,110,111,112],28[113,114,115,116,117],37[150,151,152,153,154],38[155,156,157,158,159]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[28],6[29],7[30],16[63],20[77]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d29(bb 0 insn -1) }u1(7){ d30(bb 0 insn -1) }u2(16){ d63(bb 0 insn -1) }u3(20){ d77(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 93 94 95
;; live  kill	
;; rd  in  	(5) 5[28],6[29],7[30],16[63],20[77]
;; rd  gen 	(5) 17[68],87[312],93[313],94[314],95[315]
;; rd  kill	(9) 17[64,65,66,67,68],87[312],93[313],94[314],95[315]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; rd  out 	(6) 6[29],7[30],16[63],20[77],87[312],93[313]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d77(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ d29(bb 0 insn -1) }u12(7){ d30(bb 0 insn -1) }u13(16){ d63(bb 0 insn -1) }u14(20){ d77(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di] 96 97
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[63],20[77],87[312],93[313]
;; rd  gen 	(2) 96[316],97[317]
;; rd  kill	(2) 96[316],97[317]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; rd  out 	(5) 6[29],7[30],16[63],20[77],93[313]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d77(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ d29(bb 0 insn -1) }u22(7){ d30(bb 0 insn -1) }u23(16){ d63(bb 0 insn -1) }u24(20){ d77(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 98 99 100 101
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[63],20[77],87[312],93[313]
;; rd  gen 	(4) 98[318],99[319],100[320],101[321]
;; rd  kill	(4) 98[318],99[319],100[320],101[321]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[29],7[30],16[63],20[77]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d77(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(6){ d29(bb 0 insn -1) }u41(7){ d30(bb 0 insn -1) }u42(20){ d77(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[29],7[30],16[63],20[77]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 20 { d77(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 16 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 93 [ this ]) in insn 21:
  Adding insn 2 to worklist
Processing use of (reg 98) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 99) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 25:
Processing use of (reg 5 di) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 101 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_ ]) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 93 [ this ]) in insn 23:
Processing use of (reg 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 93 [ this ]) in insn 22:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 5 di) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 93 [ this ]) in insn 26:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 93 [ this ]) in insn 28:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 87 [ D.37025 ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 93 [ this ]) in insn 9:
Processing use of (reg 87 [ D.37025 ]) in insn 15:
Processing use of (reg 93 [ this ]) in insn 8:
Processing use of (reg 94) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 95) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 17 flags) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.37025 ]) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


virtual leveldb_filterpolicy_create_bloom(int)::Wrapper::~Wrapper()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,4u} r7={1d,8u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,3u} r17={5d,1u} r18={4d} r19={4d} r20={1d,4u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,7u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} 
;;    total ref usage 365{322d,43u,0e} in 22{18 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 93 94 95
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 93 [ this ])
        (reg:DI 5 di [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:505 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 8 7 9 2 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 this_2(D)->D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 87 [ D.37025 ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 48 [0x30])) [3 this_2(D)->rep_+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37025 ])
            (const_int 0 [0]))) db/c.cc:505 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:505 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di] 96 97
;; live  kill	
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (mem/f:DI (reg/f:DI 87 [ D.37025 ]) [3 MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(struct FilterPolicy *)_5]._vptr.FilterPolicy ])
        (nil)))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37025 ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37025 ])
        (nil)))
(call_insn 16 15 17 3 (call (mem:QI (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) [0 *OBJ_TYPE_REF(_7;(struct FilterPolicy)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:505 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99 100 101
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 98 99 100 101
;; live  kill	
(code_label 17 16 18 4 84 "" [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:DI 99)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 98)
        (plus:DI (reg:DI 99)
            (const_int 16 [0x10]))) db/c.cc:100 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 99)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 21 20 22 4 (set (mem/f:DI (reg/f:DI 93 [ this ]) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 98)) db/c.cc:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (nil)))
(insn 22 21 23 4 (set (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_ ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ this ])
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_+0 S8 A64])) db/c.cc:101 89 {*movdi_internal}
     (nil))
(insn 24 23 25 4 (set (reg:DI 5 di)
        (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])) db/c.cc:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].state_ ])
        (nil)))
(call_insn 25 24 26 4 (call (mem:QI (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_ ]) [0 *_8 S1 A8])
        (const_int 0 [0])) db/c.cc:101 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ MEM[(struct leveldb_filterpolicy_t *)this_2(D)].destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:100 89 {*movdi_internal}
     (nil))
(call_insn 27 26 28 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:100 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12FilterPolicyD2Ev") [flags 0x41]  <function_decl 0x7fb537663288 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ this ])) db/c.cc:505 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ this ])
        (nil)))
(call_insn/j 29 28 0 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:505 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_t* leveldb_open(const leveldb_options_t*, const char*, char**) (leveldb_open, funcdef_no=1431, decl_uid=2156, cgraph_uid=538, symbol_order=541)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 39 count 31 (    1)


leveldb_t* leveldb_open(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={17d,8u} r1={19d,4u} r2={15d,1u} r4={18d,5u} r5={26d,13u} r6={1d,30u} r7={1d,43u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,29u} r17={30d,10u} r18={13d} r19={13d} r20={1d,52u,6e} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={14d} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r87={2d,1u} r89={1d,1u} r90={1d,2u} r91={1d,2u} r94={1d,2u} r95={1d,2u} r96={2d,4u} r97={3d,1u} r98={2d,2u} r104={1d,1u} r105={1d,4u} r106={1d,1u} r111={1d,4u} r113={1d,4u} r117={1d,1u} r118={1d,1u} r129={1d,1u} r130={1d,2u} r131={1d,1u} r133={2d,1u} r134={1d,1u} r138={1d,1u} r140={1d,2u} r141={4d,2u} r142={1d,5u} 
;;    total ref usage 1281{1031d,244u,6e} in 98{85 regular + 13 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996
;;  reg->defs[] map:	0[0,16] 1[17,35] 2[36,50] 4[51,68] 5[69,94] 6[95,95] 7[96,96] 8[97,109] 9[110,122] 10[123,135] 11[136,148] 12[149,161] 13[162,174] 14[175,187] 15[188,200] 16[201,201] 17[202,231] 18[232,244] 19[245,257] 20[258,258] 21[259,272] 22[273,286] 23[287,300] 24[301,314] 25[315,328] 26[329,342] 27[343,356] 28[357,370] 29[371,383] 30[384,396] 31[397,409] 32[410,422] 33[423,435] 34[436,448] 35[449,461] 36[462,474] 37[475,488] 38[489,502] 39[503,515] 40[516,528] 45[529,541] 46[542,554] 47[555,567] 48[568,580] 49[581,593] 50[594,606] 51[607,619] 52[620,632] 53[633,645] 54[646,658] 55[659,671] 56[672,684] 57[685,697] 58[698,710] 59[711,723] 60[724,736] 61[737,749] 62[750,762] 63[763,775] 64[776,788] 65[789,801] 66[802,814] 67[815,827] 68[828,840] 69[841,853] 70[854,866] 71[867,879] 72[880,892] 73[893,905] 74[906,918] 75[919,931] 76[932,944] 77[945,957] 78[958,970] 79[971,983] 80[984,996] 87[997,998] 89[999,999] 90[1000,1000] 91[1001,1001] 94[1002,1002] 95[1003,1003] 96[1004,1005] 97[1006,1008] 98[1009,1010] 104[1011,1011] 105[1012,1012] 106[1013,1013] 111[1014,1014] 113[1015,1015] 117[1016,1016] 118[1017,1017] 129[1018,1018] 130[1019,1019] 131[1020,1020] 133[1021,1022] 134[1023,1023] 138[1024,1024] 140[1025,1025] 141[1026,1029] 142[1030,1030] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d16(0){ }d35(1){ }d50(2){ }d68(4){ }d94(5){ }d95(6){ }d96(7){ }d201(16){ }d258(20){ }d272(21){ }d286(22){ }d300(23){ }d314(24){ }d328(25){ }d342(26){ }d356(27){ }d370(28){ }d488(37){ }d502(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[16],1[35],2[50],4[68],5[94],6[95],7[96],16[201],20[258],21[272],22[286],23[300],24[314],25[328],26[342],27[356],28[370],37[488],38[502]
;; rd  kill	(239) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],1[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],2[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],4[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],5[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],6[95],7[96],16[201],20[258],21[259,260,261,262,263,264,265,266,267,268,269,270,271,272],22[273,274,275,276,277,278,279,280,281,282,283,284,285,286],23[287,288,289,290,291,292,293,294,295,296,297,298,299,300],24[301,302,303,304,305,306,307,308,309,310,311,312,313,314],25[315,316,317,318,319,320,321,322,323,324,325,326,327,328],26[329,330,331,332,333,334,335,336,337,338,339,340,341,342],27[343,344,345,346,347,348,349,350,351,352,353,354,355,356],28[357,358,359,360,361,362,363,364,365,366,367,368,369,370],37[475,476,477,478,479,480,481,482,483,484,485,486,487,488],38[489,490,491,492,493,494,495,496,497,498,499,500,501,502]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[35],4[68],5[94],6[95],7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 28 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d95(bb 0 insn -1) }u1(7){ d96(bb 0 insn -1) }u2(16){ d201(bb 0 insn -1) }u3(20){ d258(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105 106 111 142
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 104 105 106 111 142
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[35],4[68],5[94],6[95],7[96],16[201],20[258]
;; rd  gen 	(6) 17[230],104[1011],105[1012],106[1013],111[1014],142[1030]
;; rd  kill	(35) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],104[1011],105[1012],106[1013],111[1014],142[1030]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; rd  out 	(9) 6[95],7[96],16[201],20[258],104[1011],105[1012],106[1013],111[1014],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ d95(bb 0 insn -1) }u15(7){ d96(bb 0 insn -1) }u16(16){ d201(bb 0 insn -1) }u17(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 96 113
;; live  kill	
;; rd  in  	(9) 6[95],7[96],16[201],20[258],104[1011],105[1012],106[1013],111[1014],142[1030]
;; rd  gen 	(4) 0[15],17[210],96[1004],113[1015]
;; rd  kill	(50) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],96[1004,1005],113[1015]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ d95(bb 0 insn -1) }u28(7){ d96(bb 0 insn -1) }u29(16){ d201(bb 0 insn -1) }u30(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 117 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 113 142
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 98 117 141
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(4) 0[14],98[1010],117[1016],141[1029]
;; rd  kill	(24) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],98[1009,1010],117[1016],141[1026,1027,1028,1029]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],98[1010],104[1011],105[1012],106[1013],113[1015],141[1029],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ d95(bb 0 insn -1) }u47(7){ d96(bb 0 insn -1) }u48(16){ d201(bb 0 insn -1) }u49(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(1) 17[203]
;; rd  kill	(30) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ d95(bb 0 insn -1) }u53(7){ d96(bb 0 insn -1) }u54(16){ d201(bb 0 insn -1) }u55(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 111
;; lr  def 	 97 118 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 142
;; live  gen 	 97 118 141
;; live  kill	
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(3) 97[1007],118[1017],141[1028]
;; rd  kill	(8) 97[1006,1007,1008],118[1017],141[1026,1027,1028,1029]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; rd  out 	(10) 6[95],7[96],16[201],20[258],96[1004],97[1007],104[1011],106[1013],141[1028],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d95(bb 0 insn -1) }u62(7){ d96(bb 0 insn -1) }u63(16){ d201(bb 0 insn -1) }u64(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(1) 17[202]
;; rd  kill	(30) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ d95(bb 0 insn -1) }u68(7){ d96(bb 0 insn -1) }u69(16){ d201(bb 0 insn -1) }u70(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 97 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 106 111 142
;; live  gen 	 97 141
;; live  kill	
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(2) 97[1006],141[1027]
;; rd  kill	(7) 97[1006,1007,1008],141[1026,1027,1028,1029]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; rd  out 	(10) 6[95],7[96],16[201],20[258],96[1004],97[1006],104[1011],106[1013],141[1027],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ d95(bb 0 insn -1) }u74(7){ d96(bb 0 insn -1) }u75(16){ d201(bb 0 insn -1) }u76(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 98 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 113 142
;; live  gen 	 98 141
;; live  kill	
;; rd  in  	(11) 6[95],7[96],16[201],20[258],96[1004],104[1011],105[1012],106[1013],111[1014],113[1015],142[1030]
;; rd  gen 	(2) 98[1009],141[1026]
;; rd  kill	(6) 98[1009,1010],141[1026,1027,1028,1029]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],98[1009],104[1011],105[1012],106[1013],113[1015],141[1026],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 9 4 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ d95(bb 0 insn -1) }u80(7){ d96(bb 0 insn -1) }u81(16){ d201(bb 0 insn -1) }u82(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 105 113
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 96 97
;; live  kill	
;; rd  in  	(13) 6[95],7[96],16[201],20[258],98[1009,1010],104[1011],105[1012],106[1013],113[1015],141[1026,1029],142[1030]
;; rd  gen 	(3) 0[13],96[1005],97[1008]
;; rd  kill	(22) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],96[1004,1005],97[1006,1007,1008]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; rd  out 	(11) 6[95],7[96],16[201],20[258],96[1005],97[1008],104[1011],106[1013],141[1026,1029],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 6 8 10 )->[11]->( 24(EH) 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ d95(bb 0 insn -1) }u93(7){ d96(bb 0 insn -1) }u94(16){ d201(bb 0 insn -1) }u95(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 141 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 140
;; live  kill	 17 [flags]
;; rd  in  	(16) 6[95],7[96],16[201],20[258],96[1004,1005],97[1006,1007,1008],104[1011],106[1013],141[1026,1027,1028,1029],142[1030]
;; rd  gen 	(1) 140[1025]
;; rd  kill	(1) 140[1025]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; rd  out 	(7) 6[95],7[96],16[201],20[258],106[1013],140[1025],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 11 )->[12]->( 20(EH) 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u113(6){ d95(bb 0 insn -1) }u114(7){ d96(bb 0 insn -1) }u115(16){ d201(bb 0 insn -1) }u116(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],106[1013],140[1025],142[1030]
;; rd  gen 	(1) 0[11]
;; rd  kill	(17) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; rd  out 	(6) 0[11],6[95],7[96],16[201],20[258],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(6){ d95(bb 0 insn -1) }u124(7){ d96(bb 0 insn -1) }u125(16){ d201(bb 0 insn -1) }u126(20){ d258(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 91
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 17 [flags] 89 91
;; live  kill	
;; rd  in  	(6) 0[11],6[95],7[96],16[201],20[258],142[1030]
;; rd  gen 	(3) 17[224],89[999],91[1001]
;; rd  kill	(32) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],89[999],91[1001]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; rd  out 	(7) 6[95],7[96],16[201],20[258],89[999],91[1001],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(6){ d95(bb 0 insn -1) }u132(7){ d96(bb 0 insn -1) }u133(16){ d201(bb 0 insn -1) }u134(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],89[999],91[1001],142[1030]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; rd  out 	(6) 6[95],7[96],16[201],20[258],89[999],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 13 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u138(6){ d95(bb 0 insn -1) }u139(7){ d96(bb 0 insn -1) }u140(16){ d201(bb 0 insn -1) }u141(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 95 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; live  gen 	 17 [flags] 95 129
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[95],7[96],16[201],20[258],89[999],91[1001],142[1030]
;; rd  gen 	(3) 17[222],95[1003],129[1018]
;; rd  kill	(32) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],95[1003],129[1018]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; rd  out 	(6) 6[95],7[96],16[201],20[258],89[999],95[1003]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u147(6){ d95(bb 0 insn -1) }u148(7){ d96(bb 0 insn -1) }u149(16){ d201(bb 0 insn -1) }u150(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[95],7[96],16[201],20[258],89[999],95[1003]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; rd  out 	(5) 6[95],7[96],16[201],20[258],89[999]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 15 16 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ d95(bb 0 insn -1) }u155(7){ d96(bb 0 insn -1) }u156(16){ d201(bb 0 insn -1) }u157(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  gen 	 17 [flags] 87
;; live  kill	
;; rd  in  	(6) 6[95],7[96],16[201],20[258],89[999],95[1003]
;; rd  gen 	(2) 17[220],87[998]
;; rd  kill	(32) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],87[997,998]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[95],7[96],16[201],20[258],87[998]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u160(6){ d95(bb 0 insn -1) }u161(7){ d96(bb 0 insn -1) }u162(16){ d201(bb 0 insn -1) }u163(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 130 131
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 130 131
;; live  kill	
;; rd  in  	(5) 6[95],7[96],16[201],20[258],87[998]
;; rd  gen 	(4) 0[8],87[997],130[1019],131[1020]
;; rd  kill	(21) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],87[997,998],130[1019],131[1020]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[95],7[96],16[201],20[258],87[997]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 17 18 )->[19]->( 30 29 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(6){ d95(bb 0 insn -1) }u172(7){ d96(bb 0 insn -1) }u173(16){ d201(bb 0 insn -1) }u174(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; rd  in  	(6) 6[95],7[96],16[201],20[258],87[997,998]
;; rd  gen 	(2) 0[0],17[218]
;; rd  kill	(47) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[95],7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 12(EH) )->[20]->( 21 )
;; bb 20 artificial_defs: { d7(0){ }d25(1){ }}
;; bb 20 artificial_uses: { u178(6){ d95(bb 0 insn -1) }u179(7){ d96(bb 0 insn -1) }u180(16){ d201(bb 0 insn -1) }u181(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 134
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 0 [ax] 1 [dx] 134
;; live  kill	
;; rd  in  	(5) 6[95],7[96],16[201],20[258],142[1030]
;; rd  gen 	(3) 0[7],1[25],134[1023]
;; rd  kill	(37) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],1[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],134[1023]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; rd  out 	(6) 6[95],7[96],16[201],20[258],134[1023],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 20 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u183(6){ d95(bb 0 insn -1) }u184(7){ d96(bb 0 insn -1) }u185(16){ d201(bb 0 insn -1) }u186(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  gen 	 17 [flags] 90
;; live  kill	
;; rd  in  	(6) 6[95],7[96],16[201],20[258],134[1023],142[1030]
;; rd  gen 	(2) 17[217],90[1000]
;; rd  kill	(31) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],90[1000]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; rd  out 	(7) 6[95],7[96],16[201],20[258],90[1000],134[1023],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u190(6){ d95(bb 0 insn -1) }u191(7){ d96(bb 0 insn -1) }u192(16){ d201(bb 0 insn -1) }u193(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],90[1000],134[1023],142[1030]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; rd  out 	(6) 6[95],7[96],16[201],20[258],134[1023],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 21 22 )->[23]->( 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u197(6){ d95(bb 0 insn -1) }u198(7){ d96(bb 0 insn -1) }u199(16){ d201(bb 0 insn -1) }u200(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  gen 	 133
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],90[1000],134[1023],142[1030]
;; rd  gen 	(1) 133[1022]
;; rd  kill	(2) 133[1021,1022]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; rd  out 	(6) 6[95],7[96],16[201],20[258],133[1022],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 11(EH) )->[24]->( 25 )
;; bb 24 artificial_defs: { d5(0){ }d23(1){ }}
;; bb 24 artificial_uses: { u202(6){ d95(bb 0 insn -1) }u203(7){ d96(bb 0 insn -1) }u204(16){ d201(bb 0 insn -1) }u205(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 0 [ax] 1 [dx] 133
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],106[1013],140[1025],142[1030]
;; rd  gen 	(3) 0[5],1[23],133[1021]
;; rd  kill	(38) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],1[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],133[1021,1022]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; rd  out 	(6) 6[95],7[96],16[201],20[258],133[1021],142[1030]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 24 23 )->[25]->( 26 27 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u207(6){ d95(bb 0 insn -1) }u208(7){ d96(bb 0 insn -1) }u209(16){ d201(bb 0 insn -1) }u210(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 94 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  gen 	 17 [flags] 94 138
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[95],7[96],16[201],20[258],133[1021,1022],142[1030]
;; rd  gen 	(3) 17[215],94[1002],138[1024]
;; rd  kill	(32) 17[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231],94[1002],138[1024]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; rd  out 	(7) 6[95],7[96],16[201],20[258],94[1002],133[1021,1022]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u216(6){ d95(bb 0 insn -1) }u217(7){ d96(bb 0 insn -1) }u218(16){ d201(bb 0 insn -1) }u219(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],94[1002],133[1021,1022]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; rd  out 	(6) 6[95],7[96],16[201],20[258],133[1021,1022]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 25 26 )->[27]->( )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u223(6){ d95(bb 0 insn -1) }u224(7){ d96(bb 0 insn -1) }u225(16){ d201(bb 0 insn -1) }u226(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[95],7[96],16[201],20[258],94[1002],133[1021,1022]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 2 )->[28]->( )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u230(6){ d95(bb 0 insn -1) }u231(7){ d96(bb 0 insn -1) }u232(16){ d201(bb 0 insn -1) }u233(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(9) 6[95],7[96],16[201],20[258],104[1011],105[1012],106[1013],111[1014],142[1030]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 19 )->[29]->( )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u236(6){ d95(bb 0 insn -1) }u237(7){ d96(bb 0 insn -1) }u238(16){ d201(bb 0 insn -1) }u239(20){ d258(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[95],7[96],16[201],20[258]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 19 )->[30]->( 1 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u241(6){ d95(bb 0 insn -1) }u242(7){ d96(bb 0 insn -1) }u243(16){ d201(bb 0 insn -1) }u244(20){ d258(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[95],7[96],16[201],20[258]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[95],7[96],16[201],20[258]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 16 { d201(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

( 30 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u246(0){ d0(bb 19 insn 159) }u247(6){ d95(bb 0 insn -1) }u248(7){ d96(bb 0 insn -1) }u249(20){ d258(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[95],7[96],16[201],20[258]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 19 insn 159) }
;;   reg 6 { d95(bb 0 insn -1) }
;;   reg 7 { d96(bb 0 insn -1) }
;;   reg 20 { d258(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 7 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 46 to worklist
  Adding insn 49 to worklist
  Adding insn 55 to worklist
  Adding insn 69 to worklist
  Adding insn 85 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 90 to worklist
  Adding insn 95 to worklist
  Adding insn 98 to worklist
  Adding insn 105 to worklist
  Adding insn 108 to worklist
  Adding insn 112 to worklist
  Adding insn 119 to worklist
  Adding insn 115 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 129 to worklist
  Adding insn 132 to worklist
  Adding insn 143 to worklist
  Adding insn 146 to worklist
  Adding insn 151 to worklist
  Adding insn 156 to worklist
  Adding insn 163 to worklist
  Adding insn 166 to worklist
Finished finding needed instructions:
  Adding insn 159 to worklist
Processing use of (reg 87 [ D.37045 ]) in insn 159:
  Adding insn 12 to worklist
  Adding insn 13 to worklist
Processing use of (reg 130) in insn 13:
  Adding insn 116 to worklist
Processing use of (reg 0 ax) in insn 116:
Processing use of (reg 0 ax) in insn 166:
Processing use of (reg 7 sp) in insn 163:
Processing use of (reg 7 sp) in insn 156:
Processing use of (reg 5 di) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 7 sp) in insn 151:
Processing use of (reg 5 di) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 133) in insn 150:
  Adding insn 135 to worklist
  Adding insn 178 to worklist
Processing use of (reg 0 ax) in insn 178:
Processing use of (reg 134) in insn 135:
  Adding insn 184 to worklist
Processing use of (reg 0 ax) in insn 184:
Processing use of (reg 7 sp) in insn 146:
Processing use of (reg 5 di) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 94 [ D.37050 ]) in insn 145:
  Adding insn 139 to worklist
Processing use of (reg 20 frame) in insn 139:
Processing use of (reg 17 flags) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 94 [ D.37050 ]) in insn 142:
Processing use of (reg 138) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 142) in insn 141:
  Adding insn 16 to worklist
Processing use of (reg 20 frame) in insn 16:
Processing use of (reg 7 sp) in insn 132:
Processing use of (reg 5 di) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 90 [ D.37048 ]) in insn 131:
  Adding insn 127 to worklist
Processing use of (reg 20 frame) in insn 127:
Processing use of (reg 17 flags) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 90 [ D.37048 ]) in insn 128:
Processing use of (reg 20 frame) in insn 161:
Processing use of (reg 17 flags) in insn 162:
Processing use of (reg 7 sp) in insn 115:
Processing use of (reg 5 di) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 130) in insn 119:
Processing use of (reg 131 [ db ]) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 20 frame) in insn 118:
Processing use of (reg 17 flags) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 89 [ D.37047 ]) in insn 111:
  Adding insn 91 to worklist
Processing use of (reg 0 ax) in insn 91:
Processing use of (reg 7 sp) in insn 108:
Processing use of (reg 5 di) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 95 [ D.37050 ]) in insn 107:
  Adding insn 101 to worklist
Processing use of (reg 20 frame) in insn 101:
Processing use of (reg 17 flags) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 95 [ D.37050 ]) in insn 104:
Processing use of (reg 129) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 142) in insn 103:
Processing use of (reg 7 sp) in insn 98:
Processing use of (reg 5 di) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 91 [ D.37048 ]) in insn 97:
  Adding insn 93 to worklist
Processing use of (reg 20 frame) in insn 93:
Processing use of (reg 17 flags) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 91 [ D.37048 ]) in insn 94:
Processing use of (reg 7 sp) in insn 90:
Processing use of (reg 4 si) in insn 90:
  Adding insn 88 to worklist
Processing use of (reg 5 di) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 106 [ errptr ]) in insn 89:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 140) in insn 88:
  Adding insn 78 to worklist
Processing use of (reg 20 frame) in insn 78:
Processing use of (reg 20 frame) in insn 76:
Processing use of (reg 96 [ D.37051 ]) in insn 76:
  Adding insn 72 to worklist
  Adding insn 26 to worklist
Processing use of (reg 113) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 0 ax) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 105 [ name ]) in insn 22:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 72:
Processing use of (reg 96 [ D.37051 ]) in insn 77:
Processing use of (reg 97 [ D.37050 ]) in insn 77:
  Adding insn 73 to worklist
  Adding insn 11 to worklist
  Adding insn 58 to worklist
Processing use of (reg 111) in insn 58:
  Adding insn 17 to worklist
Processing use of (reg 142) in insn 17:
Processing use of (reg 111) in insn 11:
Processing use of (reg 20 frame) in insn 73:
Processing use of (reg 7 sp) in insn 85:
Processing use of (reg 1 dx) in insn 85:
  Adding insn 82 to worklist
Processing use of (reg 2 cx) in insn 85:
  Adding insn 81 to worklist
Processing use of (reg 4 si) in insn 85:
  Adding insn 83 to worklist
Processing use of (reg 5 di) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 140) in insn 84:
Processing use of (reg 104 [ options ]) in insn 83:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 141) in insn 81:
  Adding insn 31 to worklist
  Adding insn 196 to worklist
  Adding insn 197 to worklist
  Adding insn 198 to worklist
Processing use of (reg 20 frame) in insn 198:
Processing use of (reg 20 frame) in insn 197:
Processing use of (reg 20 frame) in insn 196:
Processing use of (reg 20 frame) in insn 31:
Processing use of (reg 142) in insn 82:
Processing use of (reg 7 sp) in insn 69:
Processing use of (reg 1 dx) in insn 69:
  Adding insn 66 to worklist
Processing use of (reg 4 si) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 5 di) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 98 [ D.37050 ]) in insn 68:
  Adding insn 37 to worklist
  Adding insn 9 to worklist
Processing use of (reg 111) in insn 9:
Processing use of (reg 0 ax) in insn 37:
Processing use of (reg 105 [ name ]) in insn 67:
Processing use of (reg 113) in insn 66:
Processing use of (reg 17 flags) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 96 [ D.37051 ]) in insn 54:
Processing use of (reg 20 frame) in insn 49:
Processing use of (reg 118 [ MEM[(const char_type &)name_5(D)] ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 105 [ name ]) in insn 48:
Processing use of (reg 17 flags) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 96 [ D.37051 ]) in insn 45:
Processing use of (reg 7 sp) in insn 36:
Processing use of (reg 1 dx) in insn 36:
  Adding insn 33 to worklist
Processing use of (reg 4 si) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 5 di) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 142) in insn 35:
Processing use of (reg 141) in insn 34:
Processing use of (reg 20 frame) in insn 38:
Processing use of (reg 98 [ D.37050 ]) in insn 38:
Processing use of (reg 20 frame) in insn 40:
Processing use of (reg 117 [ __dnew ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 20 frame) in insn 27:
Processing use of (reg 113) in insn 27:
Processing use of (reg 17 flags) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 113) in insn 28:
Processing use of (reg 20 frame) in insn 7:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 111) in insn 18:
Processing use of (reg 17 flags) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 105 [ name ]) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_t* leveldb_open(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={17d,8u} r1={19d,4u} r2={15d,1u} r4={18d,5u} r5={26d,13u} r6={1d,30u} r7={1d,43u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r16={1d,29u} r17={30d,10u} r18={13d} r19={13d} r20={1d,52u,6e} r21={14d} r22={14d} r23={14d} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={14d} r38={14d} r39={13d} r40={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r87={2d,1u} r89={1d,1u} r90={1d,2u} r91={1d,2u} r94={1d,2u} r95={1d,2u} r96={2d,4u} r97={3d,1u} r98={2d,2u} r104={1d,1u} r105={1d,4u} r106={1d,1u} r111={1d,4u} r113={1d,4u} r117={1d,1u} r118={1d,1u} r129={1d,1u} r130={1d,2u} r131={1d,1u} r133={2d,1u} r134={1d,1u} r138={1d,1u} r140={1d,2u} r141={4d,2u} r142={1d,5u} 
;;    total ref usage 1281{1031d,244u,6e} in 98{85 regular + 13 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105 106 111 142
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 104 105 106 111 142
;; live  kill	 17 [flags]
(note 14 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 104 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 105 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:155 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 16 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37054+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:155 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 7 17 2 (parallel [
            (set (reg/f:DI 142)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 111)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31250]._M_p+0 S8 A128])
        (reg/f:DI 111)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 105 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 153)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 153)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              28 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 113
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 142
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 96 113
;; live  kill	
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (set (reg:DI 5 di)
        (reg/v/f:DI 105 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 23 22 24 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 26 3 (set (reg:DI 113)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 26 24 27 3 (set (reg:DI 96 [ D.37051 ])
        (reg:DI 113)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])
        (reg:DI 113)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 113)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 29 28 30 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 43)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 117 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 113 142
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 98 117 141
;; live  kill	 17 [flags]
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 33 4 (parallel [
            (set (reg/f:DI 141)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 33 31 34 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/f:DI 141)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 142)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 36 35 37 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 37 36 38 4 (set (reg/f:DI 98 [ D.37050 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 38 37 39 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])
        (reg/f:DI 98 [ D.37050 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:DI 117 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (nil))
(insn 40 39 43 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31250 + 16B]+0 S8 A128])
        (reg:DI 117 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ __dnew ])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142

;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 43 40 44 5 91 "" [1 uses])
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 96 [ D.37051 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 46 45 47 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 52)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 52)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 111
;; lr  def 	 97 118 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 142
;; live  gen 	 97 118 141
;; live  kill	
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 6 (set (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 105 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ name ])
        (nil)))
(insn 49 48 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31250 + 16]+0 S1 A128])
        (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 118 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 49 196 6 (set (reg/f:DI 97 [ D.37050 ])
        (reg/f:DI 111)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 196 11 52 6 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 52 196 53 7 93 "" [1 uses])
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 96 [ D.37051 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 55 54 56 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 169)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 169)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 105 106 111 113 142

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 106 111 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 97 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 104 106 111 142
;; live  gen 	 97 141
;; live  kill	
(note 56 55 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 56 197 8 (set (reg/f:DI 97 [ D.37050 ])
        (reg/f:DI 111)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 197 58 169 8 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 113 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111
;; lr  def 	 98 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104 105 106 111 113 142
;; live  gen 	 98 141
;; live  kill	
(code_label 169 197 168 9 103 "" [1 uses])
(note 168 169 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 168 198 9 (set (reg/f:DI 98 [ D.37050 ])
        (reg/f:DI 111)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 198 9 61 9 (set (reg/f:DI 141)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -56 [0xffffffffffffffc8]))) 214 {*leadi}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 105 113
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 104 105 106 113 141 142
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 96 97
;; live  kill	
(code_label 61 198 62 10 92 "" [0 uses])
(note 62 61 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 66 62 67 10 (set (reg:DI 1 dx)
        (reg:DI 113)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113)
        (nil)))
(insn 67 66 68 10 (set (reg:DI 4 si)
        (reg/v/f:DI 105 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ name ])
        (nil)))
(insn 68 67 69 10 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.37050 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.37050 ])
        (nil)))
(call_insn 69 68 72 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 72 69 73 10 (set (reg:DI 96 [ D.37051 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 __dnew+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 73 72 74 10 (set (reg/f:DI 97 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              8 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 141 142
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 140
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 97 104 106 141 142
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 140
;; live  kill	 17 [flags]
(code_label 74 73 75 11 94 "" [0 uses])
(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31250 + 8B]+0 S8 A64])
        (reg:DI 96 [ D.37051 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 77 76 78 11 (set (mem:QI (plus:DI (reg/f:DI 97 [ D.37050 ])
                (reg:DI 96 [ D.37051 ])) [0 MEM[(char_type &)_55]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.37050 ])
        (expr_list:REG_DEAD (reg:DI 96 [ D.37051 ])
            (nil))))
(insn 78 77 81 11 (parallel [
            (set (reg/f:DI 140)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:157 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 81 78 82 11 (set (reg:DI 2 cx)
        (reg/f:DI 141)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8]))
            (nil))))
(insn 82 81 83 11 (set (reg:DI 1 dx)
        (reg/f:DI 142)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 83 82 84 11 (set (reg:DI 4 si)
        (reg/v/f:DI 104 [ options ])) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ options ])
        (nil)))
(insn 84 83 85 11 (set (reg:DI 5 di)
        (reg/f:DI 140)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 85 84 86 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb2DB4OpenERKNS_7OptionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPS0_") [flags 0x41]  <function_decl 0x7fb537815a20 Open>) [0 Open S1 A8])
        (const_int 0 [0])) db/c.cc:157 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb2DB4OpenERKNS_7OptionsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPS0_") [flags 0x41]  <function_decl 0x7fb537815a20 Open>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       24 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 140 142
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 86 85 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 86 89 12 (set (reg:DI 4 si)
        (reg/f:DI 140)) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 140)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 89 88 90 12 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ errptr ])) db/c.cc:157 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ errptr ])
        (nil)))
(call_insn 90 89 174 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:157 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 3 [0x3])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       20 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 91
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 17 [flags] 89 91
;; live  kill	
(note 174 90 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 174 93 13 (set (reg:QI 89 [ D.37047 ])
        (reg:QI 0 ax)) db/c.cc:157 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 93 91 94 13 (set (reg/f:DI 91 [ D.37048 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31251.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 94 93 95 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37048 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 95 94 96 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 99)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 99)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 142
;; live  gen 	 5 [di]
;; live  kill	
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37048 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37048 ])
        (nil)))
(call_insn 98 97 99 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u138(6){ }u139(7){ }u140(16){ }u141(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 95 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 142
;; live  gen 	 17 [flags] 95 129
;; live  kill	 17 [flags]
(code_label 99 98 100 15 95 "" [1 uses])
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 103 15 (set (reg/f:DI 95 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 103 101 104 15 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.37050 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 105 104 106 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 109)
;;  succ:       16 [69.8%]  (FALLTHRU)
;;              17 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95

;; basic block 16, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [69.8%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 95
;; live  gen 	 5 [di]
;; live  kill	
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.37050 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.37050 ])
        (nil)))
(call_insn 108 107 109 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 17, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [30.2%] 
;;              16 [100.0%]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 17 [flags] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  gen 	 17 [flags] 87
;; live  kill	
(code_label 109 108 110 17 96 "" [1 uses])
(note 110 109 12 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 12 110 111 17 (set (reg/f:DI 87 [ D.37045 ])
        (const_int 0 [0])) db/c.cc:158 89 {*movdi_internal}
     (nil))
(insn 111 12 112 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.37047 ])
            (const_int 0 [0]))) db/c.cc:157 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.37047 ])
        (nil)))
(jump_insn 112 111 113 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 120)
            (pc))) db/c.cc:157 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 120)
;;  succ:       19 [21.4%] 
;;              18 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 18, loop depth 0, count 0, freq 7858, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [78.6%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u160(6){ }u161(7){ }u162(16){ }u163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 130 131
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 130 131
;; live  kill	
(note 113 112 114 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 18 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:160 89 {*movdi_internal}
     (nil))
(call_insn 115 114 116 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:160 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 116 115 118 18 (set (reg/f:DI 130)
        (reg:DI 0 ax)) db/c.cc:160 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 130)
            (nil))))
(insn 118 116 119 18 (set (reg/f:DI 131 [ db ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 db+0 S8 A64])) db/c.cc:161 89 {*movdi_internal}
     (nil))
(insn 119 118 13 18 (set (mem/f:DI (reg/f:DI 130) [3 result_18->rep+0 S8 A64])
        (reg/f:DI 131 [ db ])) db/c.cc:161 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 131 [ db ])
        (nil)))
(insn 13 119 120 18 (set (reg/f:DI 87 [ D.37045 ])
        (reg/f:DI 130)) db/c.cc:162 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 19, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [21.4%] 
;;              18 [100.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(6){ }u172(7){ }u173(16){ }u174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 120 13 121 19 97 "" [1 uses])
(note 121 120 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 159 121 161 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37045 ])) db/c.cc:163 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37045 ])
        (nil)))
(insn 161 159 162 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37054+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:163 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 162 161 183 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 165)
            (pc))) db/c.cc:163 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 165)
;;  succ:       30 [100.0%] 
;;              29 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 20 artificial_defs: { d7(0){ }d25(1){ }}
;; bb 20 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 134
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 0 [ax] 1 [dx] 134
;; live  kill	
(code_label/s 183 162 186 20 106 "" [1 uses])
(note 186 183 184 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 184 186 125 20 (set (reg:DI 134)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142

;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  gen 	 17 [flags] 90
;; live  kill	
(code_label 125 184 126 21 98 "" [0 uses])
(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 21 (set (reg/f:DI 90 [ D.37048 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31251.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 128 127 129 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37048 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 129 128 130 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 133)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 133)
;;  succ:       22 [69.8%]  (FALLTHRU)
;;              23 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [69.8%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u190(6){ }u191(7){ }u192(16){ }u193(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 134 142
;; live  gen 	 5 [di]
;; live  kill	
(note 130 129 131 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 22 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37048 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37048 ])
        (nil)))
(call_insn 132 131 133 22 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       23 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [30.2%] 
;;              22 [100.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u197(6){ }u198(7){ }u199(16){ }u200(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 142
;; live  gen 	 133
;; live  kill	
(code_label 133 132 134 23 99 "" [1 uses])
(note 134 133 135 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 177 23 (set (reg:DI 133)
        (reg:DI 134)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 134)
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 24 artificial_defs: { d5(0){ }d23(1){ }}
;; bb 24 artificial_uses: { u202(6){ }u203(7){ }u204(16){ }u205(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 133
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; live  gen 	 0 [ax] 1 [dx] 133
;; live  kill	
(code_label/s 177 135 182 24 105 "" [1 uses])
(note 182 177 178 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 178 182 137 24 (set (reg:DI 133)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       25 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142

;; basic block 25, loop depth 0, count 0, freq 0
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [100.0%]  (FALLTHRU,PRESERVE)
;;              23 [100.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142
;; lr  def 	 17 [flags] 94 138
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133 142
;; live  gen 	 17 [flags] 94 138
;; live  kill	 17 [flags]
(code_label 137 178 138 25 100 "" [0 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 141 25 (set (reg/f:DI 94 [ D.37050 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31250]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 141 139 142 25 (parallel [
            (set (reg/f:DI 138)
                (plus:DI (reg/f:DI 142)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 142)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 142 141 143 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.37050 ])
            (reg/f:DI 138))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (nil)))
(jump_insn 143 142 144 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 147)
;;  succ:       26 [69.8%]  (FALLTHRU)
;;              27 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133

;; basic block 26, loop depth 0, count 0, freq 0
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [69.8%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u216(6){ }u217(7){ }u218(16){ }u219(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 133
;; live  gen 	 5 [di]
;; live  kill	
(note 144 143 145 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 26 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37050 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37050 ])
        (nil)))
(call_insn 146 145 147 26 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       27 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133

;; basic block 27, loop depth 0, count 0, freq 0
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [30.2%] 
;;              26 [100.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u223(6){ }u224(7){ }u225(16){ }u226(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 133
;; live  gen 	 5 [di]
;; live  kill	
(code_label 147 146 148 27 101 "" [1 uses])
(note 148 147 150 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 150 148 151 27 (set (reg:DI 5 di)
        (reg:DI 133)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 133)
        (nil)))
(call_insn 151 150 153 27 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u230(6){ }u231(7){ }u232(16){ }u233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 153 151 154 28 90 "" [1 uses])
(note 154 153 155 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 156 155 175 28 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 29, loop depth 0, count 0, freq 4
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u236(6){ }u237(7){ }u238(16){ }u239(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 175 156 163 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(call_insn 163 175 165 29 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:163 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 29, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u241(6){ }u242(7){ }u243(16){ }u244(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 165 163 176 30 102 "" [1 uses])
(note 176 165 166 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 166 176 0 30 (use (reg/i:DI 0 ax)) db/c.cc:163 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_close(leveldb_t*) (leveldb_close, funcdef_no=1432, decl_uid=2158, cgraph_uid=539, symbol_order=542)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void leveldb_close(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 87[166,166] 90[167,167] 91[168,168] 92[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[43]
;; rd  gen 	(3) 17[38],87[166],90[167]
;; rd  kill	(5) 17[36,37,38],87[166],90[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; rd  out 	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d17(bb 0 insn -1) }u9(7){ d18(bb 0 insn -1) }u10(16){ d35(bb 0 insn -1) }u11(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(2) 91[168],92[169]
;; rd  kill	(2) 91[168],92[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; rd  out 	(5) 6[17],7[18],16[35],20[43],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ d17(bb 0 insn -1) }u19(7){ d18(bb 0 insn -1) }u20(16){ d35(bb 0 insn -1) }u21(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(6){ d17(bb 0 insn -1) }u26(7){ d18(bb 0 insn -1) }u27(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 90 [ db ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 91 [ _4->_vptr.DB ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.37063 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 90 [ db ]) in insn 6:
Processing use of (reg 87 [ D.37063 ]) in insn 12:
Processing use of (reg 17 flags) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37063 ]) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_close(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:165 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37063 ])
        (mem/f:DI (reg/v/f:DI 90 [ db ]) [3 db_3(D)->rep+0 S8 A64])) db/c.cc:166 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37063 ])
            (const_int 0 [0]))) db/c.cc:166 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:166 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37063 ]) [3 _4->_vptr.DB+0 S8 A64])) db/c.cc:166 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.DB ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64])) db/c.cc:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.DB ])
        (nil)))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37063 ])) db/c.cc:166 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37063 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) [0 *OBJ_TYPE_REF(_6;(struct DB)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:166 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
(code_label 14 13 15 4 120 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ db ])) db/c.cc:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ db ])
        (nil)))
(call_insn/j 17 16 0 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:167 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_put(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, const char*, size_t, char**) (leveldb_put, funcdef_no=1433, decl_uid=2166, cgraph_uid=540, symbol_order=543)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)


void leveldb_put(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,11u} r17={13d,3u} r18={6d} r19={6d} r20={1d,22u,4e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,2u} r38={7d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u} r90={1d,1u} r91={1d,2u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r107={1d,1u} 
;;    total ref usage 591{486d,101u,4e} in 43{37 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469
;;  reg->defs[] map:	0[0,7] 1[8,16] 2[17,24] 4[25,33] 5[34,45] 6[46,46] 7[47,47] 8[48,53] 9[54,59] 10[60,65] 11[66,71] 12[72,77] 13[78,83] 14[84,89] 15[90,95] 16[96,96] 17[97,109] 18[110,115] 19[116,121] 20[122,122] 21[123,129] 22[130,136] 23[137,143] 24[144,150] 25[151,157] 26[158,164] 27[165,171] 28[172,178] 29[179,184] 30[185,190] 31[191,196] 32[197,202] 33[203,208] 34[209,214] 35[215,220] 36[221,226] 37[227,234] 38[235,241] 39[242,247] 40[248,253] 45[254,259] 46[260,265] 47[266,271] 48[272,277] 49[278,283] 50[284,289] 51[290,295] 52[296,301] 53[302,307] 54[308,313] 55[314,319] 56[320,325] 57[326,331] 58[332,337] 59[338,343] 60[344,349] 61[350,355] 62[356,361] 63[362,367] 64[368,373] 65[374,379] 66[380,385] 67[386,391] 68[392,397] 69[398,403] 70[404,409] 71[410,415] 72[416,421] 73[422,427] 74[428,433] 75[434,439] 76[440,445] 77[446,451] 78[452,457] 79[458,463] 80[464,469] 88[470,470] 90[471,471] 91[472,472] 93[473,473] 94[474,474] 95[475,475] 96[476,476] 97[477,477] 98[478,478] 99[479,479] 100[480,480] 102[481,481] 103[482,482] 104[483,483] 105[484,484] 107[485,485] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d16(1){ }d24(2){ }d33(4){ }d45(5){ }d46(6){ }d47(7){ }d96(16){ }d122(20){ }d129(21){ }d136(22){ }d143(23){ }d150(24){ }d157(25){ }d164(26){ }d171(27){ }d178(28){ }d234(37){ }d241(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[122],21[129],22[136],23[143],24[150],25[157],26[164],27[171],28[178],37[234],38[241]
;; rd  kill	(121) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],2[17,18,19,20,21,22,23,24],4[25,26,27,28,29,30,31,32,33],5[34,35,36,37,38,39,40,41,42,43,44,45],6[46],7[47],16[96],20[122],21[123,124,125,126,127,128,129],22[130,131,132,133,134,135,136],23[137,138,139,140,141,142,143],24[144,145,146,147,148,149,150],25[151,152,153,154,155,156,157],26[158,159,160,161,162,163,164],27[165,166,167,168,169,170,171],28[172,173,174,175,176,177,178],37[227,228,229,230,231,232,233,234],38[235,236,237,238,239,240,241]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[122],37[234],38[241]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d46(bb 0 insn -1) }u1(7){ d47(bb 0 insn -1) }u2(16){ d96(bb 0 insn -1) }u3(20){ d122(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 94 95 96 97 98 99 100 102 103 104 105
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 88 90 94 95 96 97 98 99 100 102 103 104 105
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[122],37[234],38[241]
;; rd  gen 	(14) 0[5],88[470],90[471],94[474],95[475],96[476],97[477],98[478],99[479],100[480],102[481],103[482],104[483],105[484]
;; rd  kill	(21) 0[0,1,2,3,4,5,6,7],88[470],90[471],94[474],95[475],96[476],97[477],98[478],99[479],100[480],102[481],103[482],104[483],105[484]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 2 )->[3]->( 4 9 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ d46(bb 0 insn -1) }u48(7){ d47(bb 0 insn -1) }u49(16){ d96(bb 0 insn -1) }u50(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[122]
;; rd  gen 	(2) 17[103],91[472]
;; rd  kill	(14) 17[97,98,99,100,101,102,103,104,105,106,107,108,109],91[472]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[46],7[47],16[96],20[122],91[472]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u54(6){ d46(bb 0 insn -1) }u55(7){ d47(bb 0 insn -1) }u56(16){ d96(bb 0 insn -1) }u57(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[122],91[472]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 2(EH) )->[5]->( 6 )
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u61(6){ d46(bb 0 insn -1) }u62(7){ d47(bb 0 insn -1) }u63(16){ d96(bb 0 insn -1) }u64(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 107
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[122]
;; rd  gen 	(3) 0[3],1[11],107[485]
;; rd  kill	(18) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],107[485]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; rd  out 	(5) 6[46],7[47],16[96],20[122],107[485]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(6){ d46(bb 0 insn -1) }u67(7){ d47(bb 0 insn -1) }u68(16){ d96(bb 0 insn -1) }u69(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 17 [flags] 93
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[122],107[485]
;; rd  gen 	(2) 17[101],93[473]
;; rd  kill	(14) 17[97,98,99,100,101,102,103,104,105,106,107,108,109],93[473]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; rd  out 	(6) 6[46],7[47],16[96],20[122],93[473],107[485]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ d46(bb 0 insn -1) }u74(7){ d47(bb 0 insn -1) }u75(16){ d96(bb 0 insn -1) }u76(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[122],93[473],107[485]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; rd  out 	(5) 6[46],7[47],16[96],20[122],107[485]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 6 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ d46(bb 0 insn -1) }u81(7){ d47(bb 0 insn -1) }u82(16){ d96(bb 0 insn -1) }u83(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[122],93[473],107[485]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 4 3 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u87(6){ d46(bb 0 insn -1) }u88(7){ d47(bb 0 insn -1) }u89(16){ d96(bb 0 insn -1) }u90(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[122],91[472]
;; rd  gen 	(1) 17[98]
;; rd  kill	(13) 17[97,98,99,100,101,102,103,104,105,106,107,108,109]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(6){ d46(bb 0 insn -1) }u94(7){ d47(bb 0 insn -1) }u95(16){ d96(bb 0 insn -1) }u96(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[122]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u98(6){ d46(bb 0 insn -1) }u99(7){ d47(bb 0 insn -1) }u100(16){ d96(bb 0 insn -1) }u101(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[122]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[122]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u102(6){ d46(bb 0 insn -1) }u103(7){ d47(bb 0 insn -1) }u104(20){ d122(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[122]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 20 { d122(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 29 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 11 to worklist
  Adding insn 37 to worklist
  Adding insn 40 to worklist
  Adding insn 49 to worklist
  Adding insn 52 to worklist
  Adding insn 57 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 63 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 63:
Processing use of (reg 20 frame) in insn 61:
Processing use of (reg 17 flags) in insn 62:
Processing use of (reg 7 sp) in insn 57:
Processing use of (reg 5 di) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 107) in insn 56:
  Adding insn 70 to worklist
Processing use of (reg 0 ax) in insn 70:
Processing use of (reg 7 sp) in insn 52:
Processing use of (reg 5 di) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 93 [ D.37074 ]) in insn 51:
  Adding insn 47 to worklist
Processing use of (reg 20 frame) in insn 47:
Processing use of (reg 17 flags) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 93 [ D.37074 ]) in insn 48:
Processing use of (reg 7 sp) in insn 40:
Processing use of (reg 5 di) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 91 [ D.37074 ]) in insn 39:
  Adding insn 35 to worklist
Processing use of (reg 20 frame) in insn 35:
Processing use of (reg 17 flags) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 91 [ D.37074 ]) in insn 36:
Processing use of (reg 20 frame) in insn 11:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 98 [ val ]) in insn 17:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 99 [ vallen ]) in insn 18:
  Adding insn 7 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 20 frame) in insn 19:
Processing use of (reg 96 [ key ]) in insn 19:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 20 frame) in insn 20:
Processing use of (reg 97 [ keylen ]) in insn 20:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 1 dx) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 2 cx) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 4 si) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 37 r8) in insn 29:
  Adding insn 24 to worklist
Processing use of (reg 90 [ D.37073 ]) in insn 29:
  Adding insn 16 to worklist
Processing use of (reg 102 [ _4->_vptr.DB ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 88 [ D.37071 ]) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 94 [ db ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 104) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 20 frame) in insn 22:
Processing use of (reg 103) in insn 28:
  Adding insn 21 to worklist
Processing use of (reg 20 frame) in insn 21:
Processing use of (reg 88 [ D.37071 ]) in insn 27:
Processing use of (reg 105) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 20 frame) in insn 23:
Processing use of (reg 95 [ options ]) in insn 26:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 7 sp) in insn 33:
Processing use of (reg 4 si) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 5 di) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 100 [ errptr ]) in insn 32:
  Adding insn 8 to worklist
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 103) in insn 31:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_put(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,11u} r17={13d,3u} r18={6d} r19={6d} r20={1d,22u,4e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,2u} r38={7d,1u} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u} r90={1d,1u} r91={1d,2u} r93={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r102={1d,1u} r103={1d,2u} r104={1d,1u} r105={1d,1u} r107={1d,1u} 
;;    total ref usage 591{486d,101u,4e} in 43{37 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 94 95 96 97 98 99 100 102 103 104 105
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 88 90 94 95 96 97 98 99 100 102 103 104 105
;; live  kill	 17 [flags]
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 96 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:DI 97 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 98 [ val ])
        (reg:DI 37 r8 [ val ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ val ])
        (nil)))
(insn 7 6 8 2 (set (reg/v:DI 99 [ vallen ])
        (reg:DI 38 r9 [ vallen ])) db/c.cc:175 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ vallen ])
        (nil)))
(insn 8 7 9 2 (set (reg/v/f:DI 100 [ errptr ])
        (mem/f/c:DI (reg/f:DI 16 argp) [3 errptr+0 S8 A64])) db/c.cc:175 89 {*movdi_internal}
     (nil))
(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 9 14 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37076+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:175 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 11 15 2 (set (reg/f:DI 88 [ D.37071 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_3(D)->rep+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 102 [ _4->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37071 ]) [3 _4->_vptr.DB+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 90 [ D.37073 ])
        (mem/f:DI (plus:DI (reg/f:DI 102 [ _4->_vptr.DB ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 16B]+0 S8 A64])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ _4->_vptr.DB ])
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31299.data_+0 S8 A128])
        (reg/v/f:DI 98 [ val ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ val ])
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31299.size_+0 S8 A64])
        (reg/v:DI 99 [ vallen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 99 [ vallen ])
        (nil)))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31298.data_+0 S8 A128])
        (reg/v/f:DI 96 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ key ])
        (nil)))
(insn 20 19 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 D.31298.size_+0 S8 A64])
        (reg/v:DI 97 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ keylen ])
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg/f:DI 103)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 2 (parallel [
            (set (reg/f:DI 104)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 2 (parallel [
            (set (reg/f:DI 105)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:177 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 37 r8)
        (reg/f:DI 104)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 25 24 26 2 (set (reg:DI 2 cx)
        (reg/f:DI 105)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 26 25 27 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ options ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.37071 ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37071 ])
        (nil)))
(insn 28 27 29 2 (set (reg:DI 5 di)
        (reg/f:DI 103)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 29 28 31 2 (call (mem:QI (reg/f:DI 90 [ D.37073 ]) [0 *OBJ_TYPE_REF(_6;(struct DB)_4->2) S1 A8])
        (const_int 0 [0])) db/c.cc:177 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37073 ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
(insn 31 29 32 2 (set (reg:DI 4 si)
        (reg/f:DI 103)) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ errptr ])) db/c.cc:177 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ errptr ])
        (nil)))
(call_insn 33 32 34 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:177 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 91 [ D.37074 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31300.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37074 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 59)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37074 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37074 ])
        (nil)))
(call_insn 40 39 69 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 107
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 107
;; live  kill	
(code_label/s 69 40 71 5 130 "" [1 uses])
(note 71 69 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 71 45 5 (set (reg:DI 107)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(6){ }u67(7){ }u68(16){ }u69(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 17 [flags] 93
;; live  kill	
(code_label 45 70 46 6 127 "" [0 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 93 [ D.37074 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31300.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37074 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 53)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 107
;; live  gen 	 5 [di]
;; live  kill	
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37074 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37074 ])
        (nil)))
(call_insn 52 51 53 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107
;; live  gen 	 5 [di]
;; live  kill	
(code_label 53 52 54 8 128 "" [1 uses])
(note 54 53 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 56 54 57 8 (set (reg:DI 5 di)
        (reg:DI 107)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (nil)))
(call_insn 57 56 59 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [21.6%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 59 57 66 9 125 "" [1 uses])
(note 66 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 66 62 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37076+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:178 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 62 61 67 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 65)
            (pc))) db/c.cc:178 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 65)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(6){ }u94(7){ }u95(16){ }u96(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 67 62 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 63 67 65 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:178 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u98(6){ }u99(7){ }u100(16){ }u101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 65 63 68 11 129 "" [1 uses])
(note 68 65 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_delete(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, char**) (leveldb_delete, funcdef_no=1434, decl_uid=2172, cgraph_uid=541, symbol_order=544)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)


void leveldb_delete(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={12d,3u} r18={6d} r19={6d} r20={1d,19u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d,1u} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r89={1d,1u} r90={1d,2u} r92={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,2u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 576{481d,92u,3e} in 37{31 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467
;;  reg->defs[] map:	0[0,7] 1[8,16] 2[17,24] 4[25,33] 5[34,45] 6[46,46] 7[47,47] 8[48,53] 9[54,59] 10[60,65] 11[66,71] 12[72,77] 13[78,83] 14[84,89] 15[90,95] 16[96,96] 17[97,108] 18[109,114] 19[115,120] 20[121,121] 21[122,128] 22[129,135] 23[136,142] 24[143,149] 25[150,156] 26[157,163] 27[164,170] 28[171,177] 29[178,183] 30[184,189] 31[190,195] 32[196,201] 33[202,207] 34[208,213] 35[214,219] 36[220,225] 37[226,232] 38[233,239] 39[240,245] 40[246,251] 45[252,257] 46[258,263] 47[264,269] 48[270,275] 49[276,281] 50[282,287] 51[288,293] 52[294,299] 53[300,305] 54[306,311] 55[312,317] 56[318,323] 57[324,329] 58[330,335] 59[336,341] 60[342,347] 61[348,353] 62[354,359] 63[360,365] 64[366,371] 65[372,377] 66[378,383] 67[384,389] 68[390,395] 69[396,401] 70[402,407] 71[408,413] 72[414,419] 73[420,425] 74[426,431] 75[432,437] 76[438,443] 77[444,449] 78[450,455] 79[456,461] 80[462,467] 87[468,468] 89[469,469] 90[470,470] 92[471,471] 94[472,472] 95[473,473] 96[474,474] 97[475,475] 98[476,476] 100[477,477] 101[478,478] 102[479,479] 104[480,480] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d16(1){ }d24(2){ }d33(4){ }d45(5){ }d46(6){ }d47(7){ }d96(16){ }d121(20){ }d128(21){ }d135(22){ }d142(23){ }d149(24){ }d156(25){ }d163(26){ }d170(27){ }d177(28){ }d232(37){ }d239(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[121],21[128],22[135],23[142],24[149],25[156],26[163],27[170],28[177],37[232],38[239]
;; rd  kill	(120) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],2[17,18,19,20,21,22,23,24],4[25,26,27,28,29,30,31,32,33],5[34,35,36,37,38,39,40,41,42,43,44,45],6[46],7[47],16[96],20[121],21[122,123,124,125,126,127,128],22[129,130,131,132,133,134,135],23[136,137,138,139,140,141,142],24[143,144,145,146,147,148,149],25[150,151,152,153,154,155,156],26[157,158,159,160,161,162,163],27[164,165,166,167,168,169,170],28[171,172,173,174,175,176,177],37[226,227,228,229,230,231,232],38[233,234,235,236,237,238,239]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[121],37[232]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d46(bb 0 insn -1) }u1(7){ d47(bb 0 insn -1) }u2(16){ d96(bb 0 insn -1) }u3(20){ d121(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 94 95 96 97 98 100 101 102
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 87 89 94 95 96 97 98 100 101 102
;; live  kill	 17 [flags]
;; rd  in  	(9) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[121],37[232]
;; rd  gen 	(11) 0[5],87[468],89[469],94[472],95[473],96[474],97[475],98[476],100[477],101[478],102[479]
;; rd  kill	(18) 0[0,1,2,3,4,5,6,7],87[468],89[469],94[472],95[473],96[474],97[475],98[476],100[477],101[478],102[479]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 2 )->[3]->( 4 9 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u37(6){ d46(bb 0 insn -1) }u38(7){ d47(bb 0 insn -1) }u39(16){ d96(bb 0 insn -1) }u40(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 90
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[121]
;; rd  gen 	(2) 17[103],90[470]
;; rd  kill	(13) 17[97,98,99,100,101,102,103,104,105,106,107,108],90[470]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; rd  out 	(5) 6[46],7[47],16[96],20[121],90[470]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ d46(bb 0 insn -1) }u45(7){ d47(bb 0 insn -1) }u46(16){ d96(bb 0 insn -1) }u47(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[121],90[470]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 2(EH) )->[5]->( 6 )
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u51(6){ d46(bb 0 insn -1) }u52(7){ d47(bb 0 insn -1) }u53(16){ d96(bb 0 insn -1) }u54(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 104
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[121]
;; rd  gen 	(3) 0[3],1[11],104[480]
;; rd  kill	(18) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],104[480]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; rd  out 	(5) 6[46],7[47],16[96],20[121],104[480]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(6){ d46(bb 0 insn -1) }u57(7){ d47(bb 0 insn -1) }u58(16){ d96(bb 0 insn -1) }u59(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 17 [flags] 92
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[121],104[480]
;; rd  gen 	(2) 17[101],92[471]
;; rd  kill	(13) 17[97,98,99,100,101,102,103,104,105,106,107,108],92[471]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; rd  out 	(6) 6[46],7[47],16[96],20[121],92[471],104[480]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(6){ d46(bb 0 insn -1) }u64(7){ d47(bb 0 insn -1) }u65(16){ d96(bb 0 insn -1) }u66(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[121],92[471],104[480]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; rd  out 	(5) 6[46],7[47],16[96],20[121],104[480]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 6 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(6){ d46(bb 0 insn -1) }u71(7){ d47(bb 0 insn -1) }u72(16){ d96(bb 0 insn -1) }u73(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[121],92[471],104[480]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 4 3 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(6){ d46(bb 0 insn -1) }u78(7){ d47(bb 0 insn -1) }u79(16){ d96(bb 0 insn -1) }u80(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[121],90[470]
;; rd  gen 	(1) 17[98]
;; rd  kill	(12) 17[97,98,99,100,101,102,103,104,105,106,107,108]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(6){ d46(bb 0 insn -1) }u84(7){ d47(bb 0 insn -1) }u85(16){ d96(bb 0 insn -1) }u86(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[121]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ d46(bb 0 insn -1) }u89(7){ d47(bb 0 insn -1) }u90(16){ d96(bb 0 insn -1) }u91(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[121]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[121]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u92(6){ d46(bb 0 insn -1) }u93(7){ d47(bb 0 insn -1) }u94(20){ d121(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[121]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 20 { d121(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 23 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 9 to worklist
  Adding insn 31 to worklist
  Adding insn 34 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 57 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 57:
Processing use of (reg 20 frame) in insn 55:
Processing use of (reg 17 flags) in insn 56:
Processing use of (reg 7 sp) in insn 51:
Processing use of (reg 5 di) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 104) in insn 50:
  Adding insn 64 to worklist
Processing use of (reg 0 ax) in insn 64:
Processing use of (reg 7 sp) in insn 46:
Processing use of (reg 5 di) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 92 [ D.37084 ]) in insn 45:
  Adding insn 41 to worklist
Processing use of (reg 20 frame) in insn 41:
Processing use of (reg 17 flags) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 92 [ D.37084 ]) in insn 42:
Processing use of (reg 7 sp) in insn 34:
Processing use of (reg 5 di) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 90 [ D.37084 ]) in insn 33:
  Adding insn 29 to worklist
Processing use of (reg 20 frame) in insn 29:
Processing use of (reg 17 flags) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 90 [ D.37084 ]) in insn 30:
Processing use of (reg 20 frame) in insn 9:
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 96 [ key ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 20 frame) in insn 16:
Processing use of (reg 97 [ keylen ]) in insn 16:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 1 dx) in insn 23:
  Adding insn 20 to worklist
Processing use of (reg 2 cx) in insn 23:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 89 [ D.37083 ]) in insn 23:
  Adding insn 14 to worklist
Processing use of (reg 100 [ _3->_vptr.DB ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 87 [ D.37081 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 94 [ db ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 101) in insn 22:
  Adding insn 17 to worklist
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 87 [ D.37081 ]) in insn 21:
Processing use of (reg 102) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 95 [ options ]) in insn 20:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 7 sp) in insn 27:
Processing use of (reg 4 si) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 5 di) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 98 [ errptr ]) in insn 26:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 101) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_delete(leveldb_t*, const leveldb_writeoptions_t*, const char*, size_t, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={12d,3u} r18={6d} r19={6d} r20={1d,19u,3e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d,1u} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r89={1d,1u} r90={1d,2u} r92={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,1u} r101={1d,2u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 576{481d,92u,3e} in 37{31 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 94 95 96 97 98 100 101 102
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 87 89 94 95 96 97 98 100 101 102
;; live  kill	 17 [flags]
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 96 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:DI 97 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 98 [ errptr ])
        (reg:DI 37 r8 [ errptr ])) db/c.cc:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ errptr ])
        (nil)))
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37086+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:184 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 9 13 2 (set (reg/f:DI 87 [ D.37081 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 100 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37081 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 89 [ D.37083 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _3->_vptr.DB ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _3->_vptr.DB ])
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31308.data_+0 S8 A128])
        (reg/v/f:DI 96 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ key ])
        (nil)))
(insn 16 15 17 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31308.size_+0 S8 A64])
        (reg/v:DI 97 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ keylen ])
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 101)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:185 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 2 cx)
        (reg/f:DI 102)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 95 [ options ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37081 ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37081 ])
        (nil)))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/f:DI 101)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 23 22 25 2 (call (mem:QI (reg/f:DI 89 [ D.37083 ]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:185 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37083 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 25 23 26 2 (set (reg:DI 4 si)
        (reg/f:DI 101)) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ errptr ])) db/c.cc:185 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ errptr ])
        (nil)))
(call_insn 27 26 28 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:185 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 90
;; live  kill	
(note 28 27 29 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 3 (set (reg/f:DI 90 [ D.37084 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31309.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37084 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 31 30 32 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 53)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
(note 32 31 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37084 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37084 ])
        (nil)))
(call_insn 34 33 63 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 104
;; live  kill	
(code_label/s 63 34 65 5 144 "" [1 uses])
(note 65 63 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 65 39 5 (set (reg:DI 104)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 17 [flags] 92
;; live  kill	
(code_label 39 64 40 6 141 "" [0 uses])
(note 40 39 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 6 (set (reg/f:DI 92 [ D.37084 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31309.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37084 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 47)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 47)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  gen 	 5 [di]
;; live  kill	
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37084 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37084 ])
        (nil)))
(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 5 [di]
;; live  kill	
(code_label 47 46 48 8 142 "" [1 uses])
(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 50 48 51 8 (set (reg:DI 5 di)
        (reg:DI 104)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 51 50 53 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [21.6%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 53 51 60 9 139 "" [1 uses])
(note 60 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 55 60 56 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37086+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:186 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 56 55 61 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 59)
            (pc))) db/c.cc:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 59)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u83(6){ }u84(7){ }u85(16){ }u86(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 61 56 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 57 61 59 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:186 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 59 57 62 11 143 "" [1 uses])
(note 62 59 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_write(leveldb_t*, const leveldb_writeoptions_t*, leveldb_writebatch_t*, char**) (leveldb_write, funcdef_no=1435, decl_uid=2177, cgraph_uid=542, symbol_order=545)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)


void leveldb_write(leveldb_t*, const leveldb_writeoptions_t*, leveldb_writebatch_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r92={1d,2u} r93={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 566{478d,86u,2e} in 33{27 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466
;;  reg->defs[] map:	0[0,7] 1[8,16] 2[17,24] 4[25,33] 5[34,45] 6[46,46] 7[47,47] 8[48,53] 9[54,59] 10[60,65] 11[66,71] 12[72,77] 13[78,83] 14[84,89] 15[90,95] 16[96,96] 17[97,107] 18[108,113] 19[114,119] 20[120,120] 21[121,127] 22[128,134] 23[135,141] 24[142,148] 25[149,155] 26[156,162] 27[163,169] 28[170,176] 29[177,182] 30[183,188] 31[189,194] 32[195,200] 33[201,206] 34[207,212] 35[213,218] 36[219,224] 37[225,231] 38[232,238] 39[239,244] 40[245,250] 45[251,256] 46[257,262] 47[263,268] 48[269,274] 49[275,280] 50[281,286] 51[287,292] 52[293,298] 53[299,304] 54[305,310] 55[311,316] 56[317,322] 57[323,328] 58[329,334] 59[335,340] 60[341,346] 61[347,352] 62[353,358] 63[359,364] 64[365,370] 65[371,376] 66[377,382] 67[383,388] 68[389,394] 69[395,400] 70[401,406] 71[407,412] 72[413,418] 73[419,424] 74[425,430] 75[431,436] 76[437,442] 77[443,448] 78[449,454] 79[455,460] 80[461,466] 87[467,467] 92[468,468] 93[469,469] 95[470,470] 96[471,471] 97[472,472] 98[473,473] 100[474,474] 101[475,475] 102[476,476] 104[477,477] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d16(1){ }d24(2){ }d33(4){ }d45(5){ }d46(6){ }d47(7){ }d96(16){ }d120(20){ }d127(21){ }d134(22){ }d141(23){ }d148(24){ }d155(25){ }d162(26){ }d169(27){ }d176(28){ }d231(37){ }d238(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[120],21[127],22[134],23[141],24[148],25[155],26[162],27[169],28[176],37[231],38[238]
;; rd  kill	(120) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],2[17,18,19,20,21,22,23,24],4[25,26,27,28,29,30,31,32,33],5[34,35,36,37,38,39,40,41,42,43,44,45],6[46],7[47],16[96],20[120],21[121,122,123,124,125,126,127],22[128,129,130,131,132,133,134],23[135,136,137,138,139,140,141],24[142,143,144,145,146,147,148],25[149,150,151,152,153,154,155],26[156,157,158,159,160,161,162],27[163,164,165,166,167,168,169],28[170,171,172,173,174,175,176],37[225,226,227,228,229,230,231],38[232,233,234,235,236,237,238]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d46(bb 0 insn -1) }u1(7){ d47(bb 0 insn -1) }u2(16){ d96(bb 0 insn -1) }u3(20){ d120(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 95 96 97 98 100 101 102
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 87 95 96 97 98 100 101 102
;; live  kill	 17 [flags]
;; rd  in  	(8) 1[16],2[24],4[33],5[45],6[46],7[47],16[96],20[120]
;; rd  gen 	(9) 0[5],87[467],95[470],96[471],97[472],98[473],100[474],101[475],102[476]
;; rd  kill	(16) 0[0,1,2,3,4,5,6,7],87[467],95[470],96[471],97[472],98[473],100[474],101[475],102[476]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 2 )->[3]->( 4 9 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(6){ d46(bb 0 insn -1) }u31(7){ d47(bb 0 insn -1) }u32(16){ d96(bb 0 insn -1) }u33(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[120]
;; rd  gen 	(2) 17[103],93[469]
;; rd  kill	(12) 17[97,98,99,100,101,102,103,104,105,106,107],93[469]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; rd  out 	(5) 6[46],7[47],16[96],20[120],93[469]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(6){ d46(bb 0 insn -1) }u38(7){ d47(bb 0 insn -1) }u39(16){ d96(bb 0 insn -1) }u40(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[120],93[469]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 2(EH) )->[5]->( 6 )
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u44(6){ d46(bb 0 insn -1) }u45(7){ d47(bb 0 insn -1) }u46(16){ d96(bb 0 insn -1) }u47(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 104
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[120]
;; rd  gen 	(3) 0[3],1[11],104[477]
;; rd  kill	(18) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],104[477]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; rd  out 	(5) 6[46],7[47],16[96],20[120],104[477]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ d46(bb 0 insn -1) }u50(7){ d47(bb 0 insn -1) }u51(16){ d96(bb 0 insn -1) }u52(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 17 [flags] 92
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[120],104[477]
;; rd  gen 	(2) 17[101],92[468]
;; rd  kill	(12) 17[97,98,99,100,101,102,103,104,105,106,107],92[468]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; rd  out 	(6) 6[46],7[47],16[96],20[120],92[468],104[477]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(6){ d46(bb 0 insn -1) }u57(7){ d47(bb 0 insn -1) }u58(16){ d96(bb 0 insn -1) }u59(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[120],92[468],104[477]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; rd  out 	(5) 6[46],7[47],16[96],20[120],104[477]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 6 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(6){ d46(bb 0 insn -1) }u64(7){ d47(bb 0 insn -1) }u65(16){ d96(bb 0 insn -1) }u66(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[46],7[47],16[96],20[120],92[468],104[477]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 4 3 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(6){ d46(bb 0 insn -1) }u71(7){ d47(bb 0 insn -1) }u72(16){ d96(bb 0 insn -1) }u73(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[46],7[47],16[96],20[120],93[469]
;; rd  gen 	(1) 17[98]
;; rd  kill	(11) 17[97,98,99,100,101,102,103,104,105,106,107]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(6){ d46(bb 0 insn -1) }u77(7){ d47(bb 0 insn -1) }u78(16){ d96(bb 0 insn -1) }u79(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[120]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(6){ d46(bb 0 insn -1) }u82(7){ d47(bb 0 insn -1) }u83(16){ d96(bb 0 insn -1) }u84(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[120]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[46],7[47],16[96],20[120]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 16 { d96(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u85(6){ d46(bb 0 insn -1) }u86(7){ d47(bb 0 insn -1) }u87(20){ d120(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[46],7[47],16[96],20[120]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d46(bb 0 insn -1) }
;;   reg 7 { d47(bb 0 insn -1) }
;;   reg 20 { d120(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 8 to worklist
  Adding insn 27 to worklist
  Adding insn 30 to worklist
  Adding insn 39 to worklist
  Adding insn 42 to worklist
  Adding insn 47 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 53 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 53:
Processing use of (reg 20 frame) in insn 51:
Processing use of (reg 17 flags) in insn 52:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 5 di) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 104) in insn 46:
  Adding insn 60 to worklist
Processing use of (reg 0 ax) in insn 60:
Processing use of (reg 7 sp) in insn 42:
Processing use of (reg 5 di) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 92 [ D.37096 ]) in insn 41:
  Adding insn 37 to worklist
Processing use of (reg 20 frame) in insn 37:
Processing use of (reg 17 flags) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 92 [ D.37096 ]) in insn 38:
Processing use of (reg 7 sp) in insn 30:
Processing use of (reg 5 di) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 93 [ D.37096 ]) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 20 frame) in insn 25:
Processing use of (reg 17 flags) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 93 [ D.37096 ]) in insn 26:
Processing use of (reg 20 frame) in insn 8:
Processing use of (reg 7 sp) in insn 19:
Processing use of (reg 1 dx) in insn 19:
  Adding insn 16 to worklist
Processing use of (reg 2 cx) in insn 19:
  Adding insn 15 to worklist
Processing use of (reg 4 si) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 5 di) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 102 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) in insn 19:
  Adding insn 14 to worklist
Processing use of (reg 101 [ _3->_vptr.DB ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 87 [ D.37091 ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 95 [ db ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 100) in insn 18:
  Adding insn 12 to worklist
Processing use of (reg 20 frame) in insn 12:
Processing use of (reg 87 [ D.37091 ]) in insn 17:
Processing use of (reg 97 [ batch ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 96 [ options ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 4 si) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 5 di) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 98 [ errptr ]) in insn 22:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 100) in insn 21:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_write(leveldb_t*, const leveldb_writeoptions_t*, leveldb_writebatch_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={8d,2u} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r92={1d,2u} r93={1d,2u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r100={1d,2u} r101={1d,1u} r102={1d,1u} r104={1d,1u} 
;;    total ref usage 566{478d,86u,2e} in 33{27 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 95 96 97 98 100 101 102
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 87 95 96 97 98 100 101 102
;; live  kill	 17 [flags]
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 95 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 96 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 97 [ batch ])
        (reg:DI 1 dx [ batch ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ batch ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 98 [ errptr ])
        (reg:DI 2 cx [ errptr ])) db/c.cc:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ errptr ])
        (nil)))
(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37097+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:193 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg/f:DI 87 [ D.37091 ])
        (mem/f:DI (reg/v/f:DI 95 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ db ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:194 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 101 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37091 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:194 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 102 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _3->_vptr.DB ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 101 [ _3->_vptr.DB ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 97 [ batch ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ batch ])
        (nil)))
(insn 16 15 17 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 96 [ options ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 96 [ options ])
        (nil)))
(insn 17 16 18 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37091 ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37091 ])
        (nil)))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/f:DI 100)) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(call_insn 19 18 21 2 (call (mem:QI (reg/f:DI 102 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->4) S1 A8])
        (const_int 0 [0])) db/c.cc:194 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 102 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 21 19 22 2 (set (reg:DI 4 si)
        (reg/f:DI 100)) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ errptr ])) db/c.cc:194 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ errptr ])
        (nil)))
(call_insn 23 22 24 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:194 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93
;; live  kill	
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (set (reg/f:DI 93 [ D.37096 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31316.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37096 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 27 26 28 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 49)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 49)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di]
;; live  kill	
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37096 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37096 ])
        (nil)))
(call_insn 30 29 59 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 104
;; live  kill	
(code_label/s 59 30 61 5 158 "" [1 uses])
(note 61 59 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 60 61 35 5 (set (reg:DI 104)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 17 [flags] 92
;; live  kill	
(code_label 35 60 36 6 155 "" [0 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 92 [ D.37096 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31316.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37096 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 43)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 43)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 104
;; live  gen 	 5 [di]
;; live  kill	
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37096 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37096 ])
        (nil)))
(call_insn 42 41 43 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(6){ }u64(7){ }u65(16){ }u66(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; live  gen 	 5 [di]
;; live  kill	
(code_label 43 42 44 8 156 "" [1 uses])
(note 44 43 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 46 44 47 8 (set (reg:DI 5 di)
        (reg:DI 104)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 104)
        (nil)))
(call_insn 47 46 49 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [21.6%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 49 47 56 9 153 "" [1 uses])
(note 56 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 56 52 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37097+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:195 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 52 51 57 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 55)
            (pc))) db/c.cc:195 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 55)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 57 52 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 53 57 55 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:195 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(6){ }u82(7){ }u83(16){ }u84(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 55 53 58 11 157 "" [1 uses])
(note 58 55 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* leveldb_get(leveldb_t*, const leveldb_readoptions_t*, const char*, size_t, size_t*, char**) (leveldb_get, funcdef_no=1436, decl_uid=2184, cgraph_uid=543, symbol_order=546)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 23 (    1)


char* leveldb_get(leveldb_t*, const leveldb_readoptions_t*, const char*, size_t, size_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={14d,5u} r1={15d,3u} r2={12d,2u} r4={14d,4u} r5={20d,10u} r6={1d,22u} r7={1d,32u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,21u} r17={24d,7u} r18={10d} r19={10d} r20={1d,40u,4e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={12d,2u} r38={11d,1u} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,2u} r89={1d,1u} r91={1d,2u} r92={1d,2u} r93={2d,4u} r94={1d,3u} r98={3d,3u} r99={3d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r109={1d,1u} r110={1d,1u} r113={1d,1u} r120={1d,1u} r123={1d,1u} r125={2d,1u} r126={1d,1u} r130={1d,1u} r132={1d,4u} r133={1d,2u} 
;;    total ref usage 997{804d,189u,4e} in 80{70 regular + 10 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773
;;  reg->defs[] map:	0[0,13] 1[14,28] 2[29,40] 4[41,54] 5[55,74] 6[75,75] 7[76,76] 8[77,86] 9[87,96] 10[97,106] 11[107,116] 12[117,126] 13[127,136] 14[137,146] 15[147,156] 16[157,157] 17[158,181] 18[182,191] 19[192,201] 20[202,202] 21[203,213] 22[214,224] 23[225,235] 24[236,246] 25[247,257] 26[258,268] 27[269,279] 28[280,290] 29[291,300] 30[301,310] 31[311,320] 32[321,330] 33[331,340] 34[341,350] 35[351,360] 36[361,370] 37[371,382] 38[383,393] 39[394,403] 40[404,413] 45[414,423] 46[424,433] 47[434,443] 48[444,453] 49[454,463] 50[464,473] 51[474,483] 52[484,493] 53[494,503] 54[504,513] 55[514,523] 56[524,533] 57[534,543] 58[544,553] 59[554,563] 60[564,573] 61[574,583] 62[584,593] 63[594,603] 64[604,613] 65[614,623] 66[624,633] 67[634,643] 68[644,653] 69[654,663] 70[664,673] 71[674,683] 72[684,693] 73[694,703] 74[704,713] 75[714,723] 76[724,733] 77[734,743] 78[744,753] 79[754,763] 80[764,773] 87[774,774] 89[775,775] 91[776,776] 92[777,777] 93[778,779] 94[780,780] 98[781,783] 99[784,786] 101[787,787] 102[788,788] 103[789,789] 104[790,790] 105[791,791] 106[792,792] 109[793,793] 110[794,794] 113[795,795] 120[796,796] 123[797,797] 125[798,799] 126[800,800] 130[801,801] 132[802,802] 133[803,803] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d28(1){ }d40(2){ }d54(4){ }d74(5){ }d75(6){ }d76(7){ }d157(16){ }d202(20){ }d213(21){ }d224(22){ }d235(23){ }d246(24){ }d257(25){ }d268(26){ }d279(27){ }d290(28){ }d382(37){ }d393(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[13],1[28],2[40],4[54],5[74],6[75],7[76],16[157],20[202],21[213],22[224],23[235],24[246],25[257],26[268],27[279],28[290],37[382],38[393]
;; rd  kill	(190) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13],1[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],2[29,30,31,32,33,34,35,36,37,38,39,40],4[41,42,43,44,45,46,47,48,49,50,51,52,53,54],5[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],6[75],7[76],16[157],20[202],21[203,204,205,206,207,208,209,210,211,212,213],22[214,215,216,217,218,219,220,221,222,223,224],23[225,226,227,228,229,230,231,232,233,234,235],24[236,237,238,239,240,241,242,243,244,245,246],25[247,248,249,250,251,252,253,254,255,256,257],26[258,259,260,261,262,263,264,265,266,267,268],27[269,270,271,272,273,274,275,276,277,278,279],28[280,281,282,283,284,285,286,287,288,289,290],37[371,372,373,374,375,376,377,378,379,380,381,382],38[383,384,385,386,387,388,389,390,391,392,393]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[28],2[40],4[54],5[74],6[75],7[76],16[157],20[202],37[382],38[393]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 17(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d75(bb 0 insn -1) }u1(7){ d76(bb 0 insn -1) }u2(16){ d157(bb 0 insn -1) }u3(20){ d202(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 101 102 103 104 105 106 109 110 113 132 133
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 87 89 101 102 103 104 105 106 109 110 113 132 133
;; live  kill	 17 [flags]
;; rd  in  	(10) 1[28],2[40],4[54],5[74],6[75],7[76],16[157],20[202],37[382],38[393]
;; rd  gen 	(13) 87[774],89[775],101[787],102[788],103[789],104[790],105[791],106[792],109[793],110[794],113[795],132[802],133[803]
;; rd  kill	(13) 87[774],89[775],101[787],102[788],103[789],104[790],105[791],106[792],109[793],110[794],113[795],132[802],133[803]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; rd  out 	(8) 6[75],7[76],16[157],20[202],105[791],106[792],132[802],133[803]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u41(6){ d75(bb 0 insn -1) }u42(7){ d76(bb 0 insn -1) }u43(16){ d157(bb 0 insn -1) }u44(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; live  gen 	 17 [flags] 93
;; live  kill	
;; rd  in  	(8) 6[75],7[76],16[157],20[202],105[791],106[792],132[802],133[803]
;; rd  gen 	(2) 17[178],93[779]
;; rd  kill	(26) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],93[778,779]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; rd  out 	(9) 6[75],7[76],16[157],20[202],93[779],105[791],106[792],132[802],133[803]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u48(6){ d75(bb 0 insn -1) }u49(7){ d76(bb 0 insn -1) }u50(16){ d157(bb 0 insn -1) }u51(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 98 99
;; live  kill	
;; rd  in  	(9) 6[75],7[76],16[157],20[202],93[779],105[791],106[792],132[802],133[803]
;; rd  gen 	(4) 0[10],94[780],98[783],99[784]
;; rd  kill	(21) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13],94[780],98[781,782,783],99[784,785,786]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; rd  out 	(7) 6[75],7[76],16[157],20[202],98[783],99[784],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 3 )->[5]->( 6 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u67(6){ d75(bb 0 insn -1) }u68(7){ d76(bb 0 insn -1) }u69(16){ d157(bb 0 insn -1) }u70(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105
;; lr  def 	 17 [flags] 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; live  gen 	 17 [flags] 120
;; live  kill	
;; rd  in  	(9) 6[75],7[76],16[157],20[202],93[779],105[791],106[792],132[802],133[803]
;; rd  gen 	(2) 17[175],120[796]
;; rd  kill	(25) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],120[796]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 106 132 133
;; rd  out 	(8) 6[75],7[76],16[157],20[202],93[779],106[792],132[802],133[803]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 5 )->[6]->( 13(EH) 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u75(6){ d75(bb 0 insn -1) }u76(7){ d76(bb 0 insn -1) }u77(16){ d157(bb 0 insn -1) }u78(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 132 133
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(8) 6[75],7[76],16[157],20[202],93[779],106[792],132[802],133[803]
;; rd  gen 	(1) 0[9]
;; rd  kill	(14) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; rd  out 	(5) 6[75],7[76],16[157],20[202],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(6){ d75(bb 0 insn -1) }u86(7){ d76(bb 0 insn -1) }u87(16){ d157(bb 0 insn -1) }u88(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 17 [flags] 93
;; live  kill	
;; rd  in  	(5) 6[75],7[76],16[157],20[202],132[802]
;; rd  gen 	(2) 17[173],93[778]
;; rd  kill	(26) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],93[778,779]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; rd  out 	(6) 6[75],7[76],16[157],20[202],93[778],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u92(6){ d75(bb 0 insn -1) }u93(7){ d76(bb 0 insn -1) }u94(16){ d157(bb 0 insn -1) }u95(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 98 99
;; live  kill	
;; rd  in  	(6) 6[75],7[76],16[157],20[202],93[778],132[802]
;; rd  gen 	(2) 98[782],99[786]
;; rd  kill	(6) 98[781,782,783],99[784,785,786]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; rd  out 	(7) 6[75],7[76],16[157],20[202],98[782],99[786],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 7 5 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(6){ d75(bb 0 insn -1) }u98(7){ d76(bb 0 insn -1) }u99(16){ d157(bb 0 insn -1) }u100(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; live  gen 	 5 [di] 98 99
;; live  kill	
;; rd  in  	(9) 6[75],7[76],16[157],20[202],93[778,779],106[792],132[802],133[803]
;; rd  gen 	(2) 98[781],99[785]
;; rd  kill	(6) 98[781,782,783],99[784,785,786]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; rd  out 	(7) 6[75],7[76],16[157],20[202],98[781],99[785],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 8 9 4 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(6){ d75(bb 0 insn -1) }u106(7){ d76(bb 0 insn -1) }u107(16){ d157(bb 0 insn -1) }u108(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 132
;; lr  def 	 17 [flags] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  gen 	 17 [flags] 123
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[75],7[76],16[157],20[202],98[781,782,783],99[784,785,786],132[802]
;; rd  gen 	(2) 17[171],123[797]
;; rd  kill	(25) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],123[797]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; rd  out 	(10) 6[75],7[76],16[157],20[202],98[781,782,783],99[784,785,786]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u113(6){ d75(bb 0 insn -1) }u114(7){ d76(bb 0 insn -1) }u115(16){ d157(bb 0 insn -1) }u116(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(10) 6[75],7[76],16[157],20[202],98[781,782,783],99[784,785,786]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; rd  out 	(7) 6[75],7[76],16[157],20[202],99[784,785,786]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 10 11 )->[12]->( 22 21 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u120(6){ d75(bb 0 insn -1) }u121(7){ d76(bb 0 insn -1) }u122(16){ d157(bb 0 insn -1) }u123(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[75],7[76],16[157],20[202],98[781,782,783],99[784,785,786]
;; rd  gen 	(2) 0[0],17[169]
;; rd  kill	(38) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13],17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[75],7[76],16[157],20[202]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 6(EH) )->[13]->( 14 )
;; bb 13 artificial_defs: { d6(0){ }d20(1){ }}
;; bb 13 artificial_uses: { u127(6){ d75(bb 0 insn -1) }u128(7){ d76(bb 0 insn -1) }u129(16){ d157(bb 0 insn -1) }u130(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 126
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 0 [ax] 1 [dx] 126
;; live  kill	
;; rd  in  	(5) 6[75],7[76],16[157],20[202],132[802]
;; rd  gen 	(3) 0[6],1[20],126[800]
;; rd  kill	(30) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13],1[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],126[800]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; rd  out 	(6) 6[75],7[76],16[157],20[202],126[800],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 13 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u132(6){ d75(bb 0 insn -1) }u133(7){ d76(bb 0 insn -1) }u134(16){ d157(bb 0 insn -1) }u135(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  gen 	 17 [flags] 92
;; live  kill	
;; rd  in  	(6) 6[75],7[76],16[157],20[202],126[800],132[802]
;; rd  gen 	(2) 17[168],92[777]
;; rd  kill	(25) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],92[777]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; rd  out 	(7) 6[75],7[76],16[157],20[202],92[777],126[800],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u139(6){ d75(bb 0 insn -1) }u140(7){ d76(bb 0 insn -1) }u141(16){ d157(bb 0 insn -1) }u142(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[75],7[76],16[157],20[202],92[777],126[800],132[802]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; rd  out 	(6) 6[75],7[76],16[157],20[202],126[800],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 14 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u146(6){ d75(bb 0 insn -1) }u147(7){ d76(bb 0 insn -1) }u148(16){ d157(bb 0 insn -1) }u149(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  gen 	 125
;; live  kill	
;; rd  in  	(7) 6[75],7[76],16[157],20[202],92[777],126[800],132[802]
;; rd  gen 	(1) 125[799]
;; rd  kill	(2) 125[798,799]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; rd  out 	(6) 6[75],7[76],16[157],20[202],125[799],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 2(EH) )->[17]->( 18 )
;; bb 17 artificial_defs: { d4(0){ }d18(1){ }}
;; bb 17 artificial_uses: { u151(6){ d75(bb 0 insn -1) }u152(7){ d76(bb 0 insn -1) }u153(16){ d157(bb 0 insn -1) }u154(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
;; rd  in  	(8) 6[75],7[76],16[157],20[202],105[791],106[792],132[802],133[803]
;; rd  gen 	(3) 0[4],1[18],125[798]
;; rd  kill	(31) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13],1[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],125[798,799]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; rd  out 	(6) 6[75],7[76],16[157],20[202],125[798],132[802]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 17 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u156(6){ d75(bb 0 insn -1) }u157(7){ d76(bb 0 insn -1) }u158(16){ d157(bb 0 insn -1) }u159(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags] 91 130
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  gen 	 17 [flags] 91 130
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[75],7[76],16[157],20[202],125[798,799],132[802]
;; rd  gen 	(3) 17[166],91[776],130[801]
;; rd  kill	(26) 17[158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],91[776],130[801]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; rd  out 	(7) 6[75],7[76],16[157],20[202],91[776],125[798,799]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(6){ d75(bb 0 insn -1) }u166(7){ d76(bb 0 insn -1) }u167(16){ d157(bb 0 insn -1) }u168(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[75],7[76],16[157],20[202],91[776],125[798,799]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; rd  out 	(6) 6[75],7[76],16[157],20[202],125[798,799]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 18 19 )->[20]->( )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u172(6){ d75(bb 0 insn -1) }u173(7){ d76(bb 0 insn -1) }u174(16){ d157(bb 0 insn -1) }u175(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[75],7[76],16[157],20[202],91[776],125[798,799]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[76],16[157],20[202]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 12 )->[21]->( )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u179(6){ d75(bb 0 insn -1) }u180(7){ d76(bb 0 insn -1) }u181(16){ d157(bb 0 insn -1) }u182(20){ d202(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[75],7[76],16[157],20[202]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[76],16[157],20[202]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 12 )->[22]->( 1 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u184(6){ d75(bb 0 insn -1) }u185(7){ d76(bb 0 insn -1) }u186(16){ d157(bb 0 insn -1) }u187(20){ d202(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[75],7[76],16[157],20[202]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[75],7[76],16[157],20[202]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 16 { d157(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

( 22 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u189(0){ d0(bb 12 insn 124) }u190(6){ d75(bb 0 insn -1) }u191(7){ d76(bb 0 insn -1) }u192(20){ d202(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[75],7[76],16[157],20[202]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 12 insn 124) }
;;   reg 6 { d75(bb 0 insn -1) }
;;   reg 7 { d76(bb 0 insn -1) }
;;   reg 20 { d202(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 33 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 10 to worklist
  Adding insn 37 to worklist
  Adding insn 52 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 67 to worklist
  Adding insn 71 to worklist
  Adding insn 79 to worklist
  Adding insn 86 to worklist
  Adding insn 89 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 99 to worklist
  Adding insn 102 to worklist
  Adding insn 113 to worklist
  Adding insn 116 to worklist
  Adding insn 121 to worklist
  Adding insn 128 to worklist
  Adding insn 131 to worklist
Finished finding needed instructions:
  Adding insn 124 to worklist
Processing use of (reg 99 [ result ]) in insn 124:
  Adding insn 11 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
Processing use of (reg 0 ax) in insn 43:
Processing use of (reg 0 ax) in insn 131:
Processing use of (reg 7 sp) in insn 128:
Processing use of (reg 7 sp) in insn 121:
Processing use of (reg 5 di) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 125) in insn 120:
  Adding insn 105 to worklist
  Adding insn 136 to worklist
Processing use of (reg 0 ax) in insn 136:
Processing use of (reg 126) in insn 105:
  Adding insn 142 to worklist
Processing use of (reg 0 ax) in insn 142:
Processing use of (reg 7 sp) in insn 116:
Processing use of (reg 5 di) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 91 [ D.37113 ]) in insn 115:
  Adding insn 109 to worklist
Processing use of (reg 20 frame) in insn 109:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 91 [ D.37113 ]) in insn 112:
Processing use of (reg 130) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 132) in insn 111:
  Adding insn 15 to worklist
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 7 sp) in insn 102:
Processing use of (reg 5 di) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 92 [ D.37114 ]) in insn 101:
  Adding insn 97 to worklist
Processing use of (reg 20 frame) in insn 97:
Processing use of (reg 17 flags) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 92 [ D.37114 ]) in insn 98:
Processing use of (reg 20 frame) in insn 126:
Processing use of (reg 17 flags) in insn 127:
Processing use of (reg 7 sp) in insn 89:
Processing use of (reg 5 di) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 98 [ D.37113 ]) in insn 88:
  Adding insn 45 to worklist
  Adding insn 73 to worklist
  Adding insn 80 to worklist
Processing use of (reg 20 frame) in insn 80:
Processing use of (reg 20 frame) in insn 73:
Processing use of (reg 20 frame) in insn 45:
Processing use of (reg 17 flags) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 98 [ D.37113 ]) in insn 85:
Processing use of (reg 123) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 132) in insn 84:
Processing use of (reg 7 sp) in insn 79:
Processing use of (reg 5 di) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 93 [ D.37114 ]) in insn 78:
  Adding insn 35 to worklist
  Adding insn 69 to worklist
Processing use of (reg 20 frame) in insn 69:
Processing use of (reg 20 frame) in insn 35:
Processing use of (reg 17 flags) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 93 [ D.37114 ]) in insn 70:
Processing use of (reg 7 sp) in insn 67:
Processing use of (reg 4 si) in insn 67:
  Adding insn 65 to worklist
Processing use of (reg 5 di) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 106 [ errptr ]) in insn 66:
  Adding insn 7 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 133) in insn 65:
  Adding insn 25 to worklist
Processing use of (reg 20 frame) in insn 25:
Processing use of (reg 105 [ vallen ]) in insn 59:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 17 flags) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 120 [ D.37117 ]) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 93 [ D.37114 ]) in insn 60:
Processing use of (reg 94 [ D.37115 ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 105 [ vallen ]) in insn 40:
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 7 sp) in insn 42:
Processing use of (reg 5 di) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 94 [ D.37115 ]) in insn 41:
Processing use of (reg 7 sp) in insn 52:
Processing use of (reg 1 dx) in insn 52:
  Adding insn 49 to worklist
Processing use of (reg 4 si) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 5 di) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 99 [ result ]) in insn 51:
Processing use of (reg 98 [ D.37113 ]) in insn 50:
Processing use of (reg 94 [ D.37115 ]) in insn 49:
Processing use of (reg 17 flags) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 93 [ D.37114 ]) in insn 36:
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 109) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 132) in insn 16:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 20 frame) in insn 19:
Processing use of (reg 20 frame) in insn 23:
Processing use of (reg 103 [ key ]) in insn 23:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 104 [ keylen ]) in insn 24:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 7 sp) in insn 33:
Processing use of (reg 1 dx) in insn 33:
  Adding insn 30 to worklist
Processing use of (reg 2 cx) in insn 33:
  Adding insn 29 to worklist
Processing use of (reg 4 si) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 5 di) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 37 r8) in insn 33:
  Adding insn 28 to worklist
Processing use of (reg 89 [ D.37111 ]) in insn 33:
  Adding insn 22 to worklist
Processing use of (reg 110 [ _7->_vptr.DB ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 87 [ D.37109 ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 101 [ db ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 132) in insn 28:
Processing use of (reg 133) in insn 32:
Processing use of (reg 87 [ D.37109 ]) in insn 31:
Processing use of (reg 113) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 20 frame) in insn 27:
Processing use of (reg 102 [ options ]) in insn 30:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
starting the processing of deferred insns
ending the processing of deferred insns


char* leveldb_get(leveldb_t*, const leveldb_readoptions_t*, const char*, size_t, size_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={14d,5u} r1={15d,3u} r2={12d,2u} r4={14d,4u} r5={20d,10u} r6={1d,22u} r7={1d,32u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,21u} r17={24d,7u} r18={10d} r19={10d} r20={1d,40u,4e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={12d,2u} r38={11d,1u} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,2u} r89={1d,1u} r91={1d,2u} r92={1d,2u} r93={2d,4u} r94={1d,3u} r98={3d,3u} r99={3d,2u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,2u} r106={1d,1u} r109={1d,1u} r110={1d,1u} r113={1d,1u} r120={1d,1u} r123={1d,1u} r125={2d,1u} r126={1d,1u} r130={1d,1u} r132={1d,4u} r133={1d,2u} 
;;    total ref usage 997{804d,189u,4e} in 80{70 regular + 10 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 101 102 103 104 105 106 109 110 113 132 133
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 37 [r8] 87 89 101 102 103 104 105 106 109 110 113 132 133
;; live  kill	 17 [flags]
(note 13 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 13 3 2 (set (reg/v/f:DI 101 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 102 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 103 [ key ])
        (reg:DI 1 dx [ key ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ key ])
        (nil)))
(insn 5 4 6 2 (set (reg/v:DI 104 [ keylen ])
        (reg:DI 2 cx [ keylen ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ keylen ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 105 [ vallen ])
        (reg:DI 37 r8 [ vallen ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ vallen ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 106 [ errptr ])
        (reg:DI 38 r9 [ errptr ])) db/c.cc:202 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ errptr ])
        (nil)))
(note 8 7 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 8 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37118+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:202 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 10 16 2 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 109)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
        (reg/f:DI 109)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&tmp + 8B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&tmp + 16]+0 S1 A128])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 87 [ D.37109 ])
        (mem/f:DI (reg/v/f:DI 101 [ db ]) [3 db_6(D)->rep+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ db ])
        (nil)))
(insn 21 20 22 2 (set (reg/f:DI 110 [ _7->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37109 ]) [3 _7->_vptr.DB+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 89 [ D.37111 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _7->_vptr.DB ])
                (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_8 + 40B]+0 S8 A64])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110 [ _7->_vptr.DB ])
        (nil)))
(insn 23 22 24 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31380.data_+0 S8 A128])
        (reg/v/f:DI 103 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 103 [ key ])
        (nil)))
(insn 24 23 25 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 D.31380.size_+0 S8 A64])
        (reg/v:DI 104 [ keylen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 104 [ keylen ])
        (nil)))
(insn 25 24 27 2 (parallel [
            (set (reg/f:DI 133)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:205 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 25 28 2 (parallel [
            (set (reg/f:DI 113)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:205 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 28 27 29 2 (set (reg:DI 37 r8)
        (reg/f:DI 132)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 29 28 30 2 (set (reg:DI 2 cx)
        (reg/f:DI 113)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 30 29 31 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 102 [ options ])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 102 [ options ])
        (nil)))
(insn 31 30 32 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37109 ])) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37109 ])
        (nil)))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (reg/f:DI 133)) db/c.cc:205 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(call_insn 33 32 34 2 (call (mem:QI (reg/f:DI 89 [ D.37111 ]) [0 *OBJ_TYPE_REF(_9;(struct DB)_7->5) S1 A8])
        (const_int 0 [0])) db/c.cc:205 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37111 ])
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (nil)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u41(6){ }u42(7){ }u43(16){ }u44(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 106 132 133
;; live  gen 	 17 [flags] 93
;; live  kill	
(note 34 33 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 3 (set (reg/f:DI 93 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:52 89 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37114 ])
            (const_int 0 [0]))) db/c.cc:206 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 37 36 38 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) db/c.cc:206 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 57)
;;  succ:       4 [6.7%]  (FALLTHRU)
;;              5 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133

;; basic block 4, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [6.7%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u48(6){ }u49(7){ }u50(16){ }u51(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 98 99
;; live  kill	
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 4 (set (reg:DI 94 [ D.37115 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(long unsigned int *)&tmp + 8B]+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 40 39 41 4 (set (mem:DI (reg/v/f:DI 105 [ vallen ]) [9 *vallen_16(D)+0 S8 A64])
        (reg:DI 94 [ D.37115 ])) db/c.cc:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ vallen ])
        (nil)))
(insn 41 40 42 4 (set (reg:DI 5 di)
        (reg:DI 94 [ D.37115 ])) db/c.cc:147 89 {*movdi_internal}
     (nil))
(call_insn 42 41 43 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb538d21798 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) db/c.cc:147 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7fb538d21798 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 43 42 45 4 (set (reg/v/f:DI 99 [ result ])
        (reg:DI 0 ax)) db/c.cc:147 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 114)
            (nil))))
(insn 45 43 49 4 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 49 45 50 4 (set (reg:DI 1 dx)
        (reg:DI 94 [ D.37115 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.37115 ])
        (nil)))
(insn 50 49 51 4 (set (reg:DI 4 si)
        (reg/f:DI 98 [ D.37113 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ result ])) /usr/include/x86_64-linux-gnu/bits/string3.h:53 89 {*movdi_internal}
     (nil))
(call_insn 52 51 57 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:53 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

;; basic block 5, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [93.3%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105
;; lr  def 	 17 [flags] 120
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 105 106 132 133
;; live  gen 	 17 [flags] 120
;; live  kill	
(code_label 57 52 58 5 168 "" [1 uses])
(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (mem:DI (reg/v/f:DI 105 [ vallen ]) [9 *vallen_16(D)+0 S8 A64])
        (const_int 0 [0])) db/c.cc:210 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 105 [ vallen ])
        (nil)))
(insn 60 59 61 5 (set (reg:SI 120 [ D.37117 ])
        (sign_extend:SI (mem:QI (plus:DI (reg/f:DI 93 [ D.37114 ])
                    (const_int 4 [0x4])) [0 MEM[(const char *)_5 + 4B]+0 S1 A8]))) db/c.cc:211 148 {extendqisi2}
     (nil))
(insn 61 60 62 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ D.37117 ])
            (const_int 1 [0x1]))) db/c.cc:211 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 120 [ D.37117 ])
        (nil)))
(jump_insn 62 61 63 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 76)
            (pc))) db/c.cc:211 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1126 (nil)))
 -> 76)
;;  succ:       6 [88.7%]  (FALLTHRU)
;;              9 [11.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 106 132 133
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 106 132 133

;; basic block 6, loop depth 0, count 0, freq 8435, maybe hot
;; Invalid sum of incoming frequencies 8278, should be 8435
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [88.7%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 132 133
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 133
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106 132 133
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 63 62 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 63 66 6 (set (reg:DI 4 si)
        (reg/f:DI 133)) db/c.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 66 65 67 6 (set (reg:DI 5 di)
        (reg/v/f:DI 106 [ errptr ])) db/c.cc:212 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ errptr ])
        (nil)))
(call_insn 67 66 68 6 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:212 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       13 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132

;; basic block 7, loop depth 0, count 0, freq 8278, maybe hot
;; Invalid sum of incoming frequencies 8435, should be 8278
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 17 [flags] 93
;; live  kill	
(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 7 (set (reg/f:DI 93 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 70 69 71 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.37114 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 71 70 72 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 76)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7167 (nil)))
 -> 76)
;;  succ:       9 [71.7%] 
;;              8 [28.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132

;; basic block 8, loop depth 0, count 0, freq 2345, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [28.3%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 98 99
;; live  kill	
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 11 8 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 11 73 76 8 (set (reg/v/f:DI 99 [ result ])
        (const_int 0 [0])) db/c.cc:203 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

;; basic block 9, loop depth 0, count 0, freq 6983, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [71.7%] 
;;              5 [11.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u97(6){ }u98(7){ }u99(16){ }u100(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 98 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 132
;; live  gen 	 5 [di] 98 99
;; live  kill	
(code_label 76 11 77 9 170 "" [2 uses])
(note 77 76 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 9 (set (reg:DI 5 di)
        (reg/f:DI 93 [ D.37114 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37114 ])
        (nil)))
(call_insn 79 78 80 9 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 80 79 12 9 (set (reg/f:DI 98 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 12 80 81 9 (set (reg/v/f:DI 99 [ result ])
        (const_int 0 [0])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132

;; basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              9 [100.0%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 132
;; lr  def 	 17 [flags] 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99 132
;; live  gen 	 17 [flags] 123
;; live  kill	 17 [flags]
(code_label 81 12 82 10 169 "" [0 uses])
(note 82 81 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 84 82 85 10 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 85 84 86 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.37113 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 86 85 87 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 90)
;;  succ:       11 [78.3%]  (FALLTHRU)
;;              12 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99

;; basic block 11, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [78.3%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 99
;; live  gen 	 5 [di]
;; live  kill	
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 11 (set (reg:DI 5 di)
        (reg/f:DI 98 [ D.37113 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.37113 ])
        (nil)))
(call_insn 89 88 90 11 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99

;; basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [21.6%] 
;;              11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 90 89 91 12 171 "" [1 uses])
(note 91 90 124 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 124 91 126 12 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 99 [ result ])) db/c.cc:216 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ result ])
        (nil)))
(insn 126 124 127 12 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37118+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:216 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 127 126 141 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) db/c.cc:216 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 130)
;;  succ:       22 [100.0%] 
;;              21 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 13 artificial_defs: { d6(0){ }d20(1){ }}
;; bb 13 artificial_uses: { u127(6){ }u128(7){ }u129(16){ }u130(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 126
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 0 [ax] 1 [dx] 126
;; live  kill	
(code_label/s 141 127 144 13 178 "" [1 uses])
(note 144 141 142 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 142 144 95 13 (set (reg:DI 126)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132

;; basic block 14, loop depth 0, count 0, freq 0
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  gen 	 17 [flags] 92
;; live  kill	
(code_label 95 142 96 14 172 "" [0 uses])
(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 14 (set (reg/f:DI 92 [ D.37114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 s.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 98 97 99 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.37114 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 99 98 100 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 103)
;;  succ:       15 [69.8%]  (FALLTHRU)
;;              16 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132

;; basic block 15, loop depth 0, count 0, freq 0
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [69.8%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u139(6){ }u140(7){ }u141(16){ }u142(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 126 132
;; live  gen 	 5 [di]
;; live  kill	
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 15 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.37114 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37114 ])
        (nil)))
(call_insn 102 101 103 15 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132

;; basic block 16, loop depth 0, count 0, freq 0
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [30.2%] 
;;              15 [100.0%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u146(6){ }u147(7){ }u148(16){ }u149(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126
;; lr  def 	 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 126 132
;; live  gen 	 125
;; live  kill	
(code_label 103 102 104 16 173 "" [1 uses])
(note 104 103 105 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 135 16 (set (reg:DI 125)
        (reg:DI 126)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 126)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132

;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d4(0){ }d18(1){ }}
;; bb 17 artificial_uses: { u151(6){ }u152(7){ }u153(16){ }u154(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
(code_label/s 135 105 140 17 177 "" [1 uses])
(note 140 135 136 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 136 140 107 17 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132

;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU,PRESERVE)
;;              16 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u156(6){ }u157(7){ }u158(16){ }u159(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags] 91 130
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 132
;; live  gen 	 17 [flags] 91 130
;; live  kill	 17 [flags]
(code_label 107 136 108 18 174 "" [0 uses])
(note 108 107 109 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 111 18 (set (reg/f:DI 91 [ D.37113 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 111 109 112 18 (parallel [
            (set (reg/f:DI 130)
                (plus:DI (reg/f:DI 132)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37113 ])
            (reg/f:DI 130))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u165(6){ }u166(7){ }u167(16){ }u168(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 125
;; live  gen 	 5 [di]
;; live  kill	
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37113 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37113 ])
        (nil)))
(call_insn 116 115 117 19 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; live  gen 	 5 [di]
;; live  kill	
(code_label 117 116 118 20 175 "" [1 uses])
(note 118 117 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 120 118 121 20 (set (reg:DI 5 di)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
(call_insn 121 120 133 20 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, count 0, freq 4
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [0.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u179(6){ }u180(7){ }u181(16){ }u182(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 133 121 128 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(call_insn 128 133 130 21 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:216 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 21, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u184(6){ }u185(7){ }u186(16){ }u187(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 130 128 134 22 176 "" [1 uses])
(note 134 130 131 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 131 134 0 22 (use (reg/i:DI 0 ax)) db/c.cc:216 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_iterator_t* leveldb_create_iterator(leveldb_t*, const leveldb_readoptions_t*) (leveldb_create_iterator, funcdef_no=1437, decl_uid=2187, cgraph_uid=544, symbol_order=547)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_iterator_t* leveldb_create_iterator(leveldb_t*, const leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r92={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 201{174d,27u,0e} in 15{13 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,13] 5[14,18] 6[19,19] 7[20,20] 8[21,22] 9[23,24] 10[25,26] 11[27,28] 12[29,30] 13[31,32] 14[33,34] 15[35,36] 16[37,37] 17[38,39] 18[40,41] 19[42,43] 20[44,44] 21[45,47] 22[48,50] 23[51,53] 24[54,56] 25[57,59] 26[60,62] 27[63,65] 28[66,68] 29[69,70] 30[71,72] 31[73,74] 32[75,76] 33[77,78] 34[79,80] 35[81,82] 36[83,84] 37[85,87] 38[88,90] 39[91,92] 40[93,94] 45[95,96] 46[97,98] 47[99,100] 48[101,102] 49[103,104] 50[105,106] 51[107,108] 52[109,110] 53[111,112] 54[113,114] 55[115,116] 56[117,118] 57[119,120] 58[121,122] 59[123,124] 60[125,126] 61[127,128] 62[129,130] 63[131,132] 64[133,134] 65[135,136] 66[137,138] 67[139,140] 68[141,142] 69[143,144] 70[145,146] 71[147,148] 72[149,150] 73[151,152] 74[153,154] 75[155,156] 76[157,158] 77[159,160] 78[161,162] 79[163,164] 80[165,166] 88[167,167] 92[168,168] 94[169,169] 95[170,170] 96[171,171] 97[172,172] 98[173,173] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d13(4){ }d18(5){ }d19(6){ }d20(7){ }d37(16){ }d44(20){ }d47(21){ }d50(22){ }d53(23){ }d56(24){ }d59(25){ }d62(26){ }d65(27){ }d68(28){ }d87(37){ }d90(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[13],5[18],6[19],7[20],16[37],20[44],21[47],22[50],23[53],24[56],25[59],26[62],27[65],28[68],37[87],38[90]
;; rd  kill	(53) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12,13],5[14,15,16,17,18],6[19],7[20],16[37],20[44],21[45,46,47],22[48,49,50],23[51,52,53],24[54,55,56],25[57,58,59],26[60,61,62],27[63,64,65],28[66,67,68],37[85,86,87],38[88,89,90]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[13],5[18],6[19],7[20],16[37],20[44]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d19(bb 0 insn -1) }u1(7){ d20(bb 0 insn -1) }u2(16){ d37(bb 0 insn -1) }u3(20){ d44(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 92 94 95 96 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 88 92 94 95 96 97 98
;; live  kill	
;; rd  in  	(6) 4[13],5[18],6[19],7[20],16[37],20[44]
;; rd  gen 	(8) 0[0],88[167],92[168],94[169],95[170],96[171],97[172],98[173]
;; rd  kill	(11) 0[0,1,2,3],88[167],92[168],94[169],95[170],96[171],97[172],98[173]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[19],7[20],16[37],20[44]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 16 { d37(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 2 insn 23) }u24(6){ d19(bb 0 insn -1) }u25(7){ d20(bb 0 insn -1) }u26(20){ d44(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[19],7[20],16[37],20[44]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 23) }
;;   reg 6 { d19(bb 0 insn -1) }
;;   reg 7 { d20(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
  Adding insn 23 to worklist
Processing use of (reg 96) in insn 23:
  Adding insn 9 to worklist
Processing use of (reg 0 ax) in insn 9:
Processing use of (reg 7 sp) in insn 8:
Processing use of (reg 5 di) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 4 si) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 98 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B] ]) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 97 [ _5->_vptr.DB ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 88 [ D.37127 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ db ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 88 [ D.37127 ]) in insn 15:
Processing use of (reg 95 [ options ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 92 [ D.37131 ]) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 96) in insn 18:
Processing use of (reg 0 ax) in insn 17:
Processing use of (reg 0 ax) in insn 24:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_iterator_t* leveldb_create_iterator(leveldb_t*, const leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r92={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,1u} 
;;    total ref usage 201{174d,27u,0e} in 15{13 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 92 94 95 96 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 88 92 94 95 96 97 98
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ options ])
        (reg:DI 4 si [ options ])) db/c.cc:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ options ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:221 89 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:221 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 9 8 11 2 (set (reg/f:DI 96)
        (reg:DI 0 ax)) db/c.cc:221 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))
(insn 11 9 12 2 (set (reg/f:DI 88 [ D.37127 ])
        (mem/f:DI (reg/v/f:DI 94 [ db ]) [3 db_4(D)->rep+0 S8 A64])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ db ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 97 [ _5->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37127 ]) [3 _5->_vptr.DB+0 S8 A64])) db/c.cc:222 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B] ])
        (mem/f:DI (plus:DI (reg/f:DI 97 [ _5->_vptr.DB ])
                (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B]+0 S8 A64])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _5->_vptr.DB ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg/v/f:DI 95 [ options ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ options ])
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37127 ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37127 ])
        (nil)))
(call_insn 16 15 17 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B] ]) [0 *OBJ_TYPE_REF(_7;(struct DB)_5->6) S1 A8])
            (const_int 0 [0]))) db/c.cc:222 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 48B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 92 [ D.37131 ])
        (reg:DI 0 ax)) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 18 17 23 2 (set (mem/f:DI (reg/f:DI 96) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 92 [ D.37131 ])) db/c.cc:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.37131 ])
        (nil)))
(insn 23 18 24 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 96)) db/c.cc:224 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(insn 24 23 0 2 (use (reg/i:DI 0 ax)) db/c.cc:224 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const leveldb_snapshot_t* leveldb_create_snapshot(leveldb_t*) (leveldb_create_snapshot, funcdef_no=1438, decl_uid=2189, cgraph_uid=545, symbol_order=548)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


const leveldb_snapshot_t* leveldb_create_snapshot(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r91={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 196{172d,24u,0e} in 13{11 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,12] 5[13,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 88[166,166] 91[167,167] 93[168,168] 94[169,169] 95[170,170] 96[171,171] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[12],5[17],6[18],7[19],16[36],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(52) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12],5[13,14,15,16,17],6[18],7[19],16[36],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[17],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 91 93 94 95 96
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 91 93 94 95 96
;; live  kill	
;; rd  in  	(5) 5[17],6[18],7[19],16[36],20[43]
;; rd  gen 	(7) 0[0],88[166],91[167],93[168],94[169],95[170],96[171]
;; rd  kill	(10) 0[0,1,2,3],88[166],91[167],93[168],94[169],95[170],96[171]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u20(0){ d0(bb 2 insn 21) }u21(6){ d18(bb 0 insn -1) }u22(7){ d19(bb 0 insn -1) }u23(20){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[18],7[19],16[36],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 21) }
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 21 to worklist
Processing use of (reg 94) in insn 21:
  Adding insn 8 to worklist
Processing use of (reg 0 ax) in insn 8:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 96 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B] ]) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 95 [ _5->_vptr.DB ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 88 [ D.37136 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 93 [ db ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 88 [ D.37136 ]) in insn 13:
Processing use of (reg 91 [ D.37139 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 94) in insn 16:
Processing use of (reg 0 ax) in insn 15:
Processing use of (reg 0 ax) in insn 22:
starting the processing of deferred insns
ending the processing of deferred insns


const leveldb_snapshot_t* leveldb_create_snapshot(leveldb_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,2u} r91={1d,1u} r93={1d,1u} r94={1d,2u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 196{172d,24u,0e} in 13{11 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 91 93 94 95 96
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 91 93 94 95 96
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:227 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:228 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:228 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) db/c.cc:228 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(insn 10 8 11 2 (set (reg/f:DI 88 [ D.37136 ])
        (mem/f:DI (reg/v/f:DI 93 [ db ]) [3 db_4(D)->rep+0 S8 A64])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ db ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 95 [ _5->_vptr.DB ])
        (mem/f:DI (reg/f:DI 88 [ D.37136 ]) [3 _5->_vptr.DB+0 S8 A64])) db/c.cc:229 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B] ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _5->_vptr.DB ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B]+0 S8 A64])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ _5->_vptr.DB ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37136 ])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37136 ])
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B] ]) [0 *OBJ_TYPE_REF(_7;(struct DB)_5->7) S1 A8])
            (const_int 0 [0]))) db/c.cc:229 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 96 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 56B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 91 [ D.37139 ])
        (reg:DI 0 ax)) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 21 2 (set (mem/f:DI (reg/f:DI 94) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 91 [ D.37139 ])) db/c.cc:229 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37139 ])
        (nil)))
(insn 21 16 22 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 94)) db/c.cc:231 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 22 21 0 2 (use (reg/i:DI 0 ax)) db/c.cc:231 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_release_snapshot(leveldb_t*, const leveldb_snapshot_t*) (leveldb_release_snapshot, funcdef_no=1439, decl_uid=2192, cgraph_uid=546, symbol_order=549)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_release_snapshot(leveldb_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r91={1d,1u} r92={1d,2u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 192{171d,21u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,12] 5[13,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 87[166,166] 91[167,167] 92[168,168] 93[169,169] 94[170,170] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[12],5[17],6[18],7[19],16[36],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(52) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11,12],5[13,14,15,16,17],6[18],7[19],16[36],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[12],5[17],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 91 92 93 94
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 87 91 92 93 94
;; live  kill	
;; rd  in  	(6) 4[12],5[17],6[18],7[19],16[36],20[43]
;; rd  gen 	(5) 87[166],91[167],92[168],93[169],94[170]
;; rd  kill	(5) 87[166],91[167],92[168],93[169],94[170]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(6){ d18(bb 0 insn -1) }u19(7){ d19(bb 0 insn -1) }u20(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 4 si) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ]) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 93 [ _3->_vptr.DB ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 87 [ D.37142 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 91 [ db ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37142 ]) in insn 11:
Processing use of (reg 92 [ snapshot ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 92 [ snapshot ]) in insn 13:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_release_snapshot(leveldb_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={4d,2u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r91={1d,1u} r92={1d,2u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 192{171d,21u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 91 92 93 94
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 87 91 92 93 94
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 91 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:235 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 92 [ snapshot ])
        (reg:DI 4 si [ snapshot ])) db/c.cc:235 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ snapshot ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37142 ])
        (mem/f:DI (reg/v/f:DI 91 [ db ]) [3 db_2(D)->rep+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ db ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 93 [ _3->_vptr.DB ])
        (mem/f:DI (reg/f:DI 87 [ D.37142 ]) [3 _3->_vptr.DB+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ])
        (mem/f:DI (plus:DI (reg/f:DI 93 [ _3->_vptr.DB ])
                (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B]+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ _3->_vptr.DB ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (mem/f:DI (reg/v/f:DI 92 [ snapshot ]) [3 snapshot_6(D)->rep+0 S8 A64])) db/c.cc:236 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37142 ])) db/c.cc:236 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37142 ])
        (nil)))
(call_insn 12 11 13 2 (call (mem:QI (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ]) [0 *OBJ_TYPE_REF(_5;(struct DB)_3->8) S1 A8])
        (const_int 0 [0])) db/c.cc:236 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 94 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/v/f:DI 92 [ snapshot ])) db/c.cc:237 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ snapshot ])
        (nil)))
(call_insn/j 14 13 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:237 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* leveldb_property_value(leveldb_t*, const char*) (leveldb_property_value, funcdef_no=1440, decl_uid=2195, cgraph_uid=547, symbol_order=550)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 16 count 14 (    1)


char* leveldb_property_value(leveldb_t*, const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,6u} r1={10d,1u} r2={8d} r4={9d,2u} r5={14d,7u} r6={1d,13u} r7={1d,20u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,12u} r17={17d,4u} r18={7d} r19={7d} r20={1d,25u,2e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={2d,1u} r89={1d,2u} r91={1d,1u} r92={1d,1u} r94={1d,2u} r95={1d,2u} r98={1d,1u} r99={1d,2u} r102={1d,1u} r103={1d,1u} r105={1d,1u} r108={1d,1u} r109={1d,1u} r112={1d,1u} r115={1d,1u} r116={1d,1u} r118={1d,4u} 
;;    total ref usage 678{562d,114u,2e} in 49{42 regular + 7 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543
;;  reg->defs[] map:	0[0,9] 1[10,19] 2[20,27] 4[28,36] 5[37,50] 6[51,51] 7[52,52] 8[53,59] 9[60,66] 10[67,73] 11[74,80] 12[81,87] 13[88,94] 14[95,101] 15[102,108] 16[109,109] 17[110,126] 18[127,133] 19[134,140] 20[141,141] 21[142,149] 22[150,157] 23[158,165] 24[166,173] 25[174,181] 26[182,189] 27[190,197] 28[198,205] 29[206,212] 30[213,219] 31[220,226] 32[227,233] 33[234,240] 34[241,247] 35[248,254] 36[255,261] 37[262,269] 38[270,277] 39[278,284] 40[285,291] 45[292,298] 46[299,305] 47[306,312] 48[313,319] 49[320,326] 50[327,333] 51[334,340] 52[341,347] 53[348,354] 54[355,361] 55[362,368] 56[369,375] 57[376,382] 58[383,389] 59[390,396] 60[397,403] 61[404,410] 62[411,417] 63[418,424] 64[425,431] 65[432,438] 66[439,445] 67[446,452] 68[453,459] 69[460,466] 70[467,473] 71[474,480] 72[481,487] 73[488,494] 74[495,501] 75[502,508] 76[509,515] 77[516,522] 78[523,529] 79[530,536] 80[537,543] 87[544,545] 89[546,546] 91[547,547] 92[548,548] 94[549,549] 95[550,550] 98[551,551] 99[552,552] 102[553,553] 103[554,554] 105[555,555] 108[556,556] 109[557,557] 112[558,558] 115[559,559] 116[560,560] 118[561,561] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d19(1){ }d27(2){ }d36(4){ }d50(5){ }d51(6){ }d52(7){ }d109(16){ }d141(20){ }d149(21){ }d157(22){ }d165(23){ }d173(24){ }d181(25){ }d189(26){ }d197(27){ }d205(28){ }d269(37){ }d277(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[9],1[19],2[27],4[36],5[50],6[51],7[52],16[109],20[141],21[149],22[157],23[165],24[173],25[181],26[189],27[197],28[205],37[269],38[277]
;; rd  kill	(135) 0[0,1,2,3,4,5,6,7,8,9],1[10,11,12,13,14,15,16,17,18,19],2[20,21,22,23,24,25,26,27],4[28,29,30,31,32,33,34,35,36],5[37,38,39,40,41,42,43,44,45,46,47,48,49,50],6[51],7[52],16[109],20[141],21[142,143,144,145,146,147,148,149],22[150,151,152,153,154,155,156,157],23[158,159,160,161,162,163,164,165],24[166,167,168,169,170,171,172,173],25[174,175,176,177,178,179,180,181],26[182,183,184,185,186,187,188,189],27[190,191,192,193,194,195,196,197],28[198,199,200,201,202,203,204,205],37[262,263,264,265,266,267,268,269],38[270,271,272,273,274,275,276,277]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[36],5[50],6[51],7[52],16[109],20[141]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 8(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d51(bb 0 insn -1) }u1(7){ d52(bb 0 insn -1) }u2(16){ d109(bb 0 insn -1) }u3(20){ d141(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 91 98 99 102 103 105 108 118
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 89 91 98 99 102 103 105 108 118
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[36],5[50],6[51],7[52],16[109],20[141]
;; rd  gen 	(10) 0[7],89[546],91[547],98[551],99[552],102[553],103[554],105[555],108[556],118[561]
;; rd  kill	(19) 0[0,1,2,3,4,5,6,7,8,9],89[546],91[547],98[551],99[552],102[553],103[554],105[555],108[556],118[561]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; rd  out 	(6) 0[7],6[51],7[52],16[109],20[141],118[561]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(6){ d51(bb 0 insn -1) }u36(7){ d52(bb 0 insn -1) }u37(16){ d109(bb 0 insn -1) }u38(20){ d141(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 17 [flags] 87 92
;; live  kill	
;; rd  in  	(6) 0[7],6[51],7[52],16[109],20[141],118[561]
;; rd  gen 	(3) 17[122],87[545],92[548]
;; rd  kill	(20) 17[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],87[544,545],92[548]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; rd  out 	(6) 6[51],7[52],16[109],20[141],87[545],118[561]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u42(6){ d51(bb 0 insn -1) }u43(7){ d52(bb 0 insn -1) }u44(16){ d109(bb 0 insn -1) }u45(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 0 [ax] 5 [di] 87 109
;; live  kill	
;; rd  in  	(6) 6[51],7[52],16[109],20[141],87[545],118[561]
;; rd  gen 	(3) 0[6],87[544],109[557]
;; rd  kill	(13) 0[0,1,2,3,4,5,6,7,8,9],87[544,545],109[557]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; rd  out 	(6) 6[51],7[52],16[109],20[141],87[544],118[561]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 3 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(6){ d51(bb 0 insn -1) }u52(7){ d52(bb 0 insn -1) }u53(16){ d109(bb 0 insn -1) }u54(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 95 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  gen 	 17 [flags] 95 112
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[51],7[52],16[109],20[141],87[544,545],118[561]
;; rd  gen 	(3) 17[120],95[550],112[558]
;; rd  kill	(19) 17[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],95[550],112[558]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; rd  out 	(7) 6[51],7[52],16[109],20[141],87[544,545],95[550]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u60(6){ d51(bb 0 insn -1) }u61(7){ d52(bb 0 insn -1) }u62(16){ d109(bb 0 insn -1) }u63(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[51],7[52],16[109],20[141],87[544,545],95[550]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(6) 6[51],7[52],16[109],20[141],87[544,545]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 5 6 )->[7]->( 13 12 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ d51(bb 0 insn -1) }u68(7){ d52(bb 0 insn -1) }u69(16){ d109(bb 0 insn -1) }u70(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; rd  in  	(7) 6[51],7[52],16[109],20[141],87[544,545],95[550]
;; rd  gen 	(2) 0[0],17[118]
;; rd  kill	(27) 0[0,1,2,3,4,5,6,7,8,9],17[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[51],7[52],16[109],20[141]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 2(EH) )->[8]->( 9 )
;; bb 8 artificial_defs: { d4(0){ }d14(1){ }}
;; bb 8 artificial_uses: { u74(6){ d51(bb 0 insn -1) }u75(7){ d52(bb 0 insn -1) }u76(16){ d109(bb 0 insn -1) }u77(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 0 [ax] 1 [dx] 116
;; live  kill	
;; rd  in  	(5) 6[51],7[52],16[109],20[141],118[561]
;; rd  gen 	(3) 0[4],1[14],116[560]
;; rd  kill	(21) 0[0,1,2,3,4,5,6,7,8,9],1[10,11,12,13,14,15,16,17,18,19],116[560]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; rd  out 	(6) 6[51],7[52],16[109],20[141],116[560],118[561]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u79(6){ d51(bb 0 insn -1) }u80(7){ d52(bb 0 insn -1) }u81(16){ d109(bb 0 insn -1) }u82(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 94 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; live  gen 	 17 [flags] 94 115
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[51],7[52],16[109],20[141],116[560],118[561]
;; rd  gen 	(3) 17[117],94[549],115[559]
;; rd  kill	(19) 17[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],94[549],115[559]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; rd  out 	(6) 6[51],7[52],16[109],20[141],94[549],116[560]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u88(6){ d51(bb 0 insn -1) }u89(7){ d52(bb 0 insn -1) }u90(16){ d109(bb 0 insn -1) }u91(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[51],7[52],16[109],20[141],94[549],116[560]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; rd  out 	(5) 6[51],7[52],16[109],20[141],116[560]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 9 10 )->[11]->( )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(6){ d51(bb 0 insn -1) }u96(7){ d52(bb 0 insn -1) }u97(16){ d109(bb 0 insn -1) }u98(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[51],7[52],16[109],20[141],94[549],116[560]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[52],16[109],20[141]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 7 )->[12]->( )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(6){ d51(bb 0 insn -1) }u103(7){ d52(bb 0 insn -1) }u104(16){ d109(bb 0 insn -1) }u105(20){ d141(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[51],7[52],16[109],20[141]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[52],16[109],20[141]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 7 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u107(6){ d51(bb 0 insn -1) }u108(7){ d52(bb 0 insn -1) }u109(16){ d109(bb 0 insn -1) }u110(20){ d141(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[51],7[52],16[109],20[141]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[51],7[52],16[109],20[141]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 16 { d109(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u112(0){ d0(bb 7 insn 73) }u113(6){ d51(bb 0 insn -1) }u114(7){ d52(bb 0 insn -1) }u115(20){ d141(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[51],7[52],16[109],20[141]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 7 insn 73) }
;;   reg 6 { d51(bb 0 insn -1) }
;;   reg 7 { d52(bb 0 insn -1) }
;;   reg 20 { d141(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 6 to worklist
  Adding insn 34 to worklist
  Adding insn 38 to worklist
  Adding insn 47 to worklist
  Adding insn 50 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 62 to worklist
  Adding insn 65 to worklist
  Adding insn 70 to worklist
  Adding insn 77 to worklist
  Adding insn 80 to worklist
Finished finding needed instructions:
  Adding insn 73 to worklist
Processing use of (reg 87 [ D.37151 ]) in insn 73:
  Adding insn 7 to worklist
  Adding insn 39 to worklist
Processing use of (reg 0 ax) in insn 39:
Processing use of (reg 0 ax) in insn 80:
Processing use of (reg 7 sp) in insn 77:
Processing use of (reg 7 sp) in insn 70:
Processing use of (reg 5 di) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 116) in insn 69:
  Adding insn 90 to worklist
Processing use of (reg 0 ax) in insn 90:
Processing use of (reg 7 sp) in insn 65:
Processing use of (reg 5 di) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 94 [ D.37151 ]) in insn 64:
  Adding insn 58 to worklist
Processing use of (reg 20 frame) in insn 58:
Processing use of (reg 17 flags) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 94 [ D.37151 ]) in insn 61:
Processing use of (reg 115) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 118) in insn 60:
  Adding insn 10 to worklist
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 20 frame) in insn 75:
Processing use of (reg 17 flags) in insn 76:
Processing use of (reg 7 sp) in insn 50:
Processing use of (reg 5 di) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 95 [ D.37151 ]) in insn 49:
  Adding insn 43 to worklist
Processing use of (reg 20 frame) in insn 43:
Processing use of (reg 17 flags) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 95 [ D.37151 ]) in insn 46:
Processing use of (reg 112) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 118) in insn 45:
Processing use of (reg 7 sp) in insn 38:
Processing use of (reg 5 di) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 109 [ MEM[(char * *)&tmp] ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 20 frame) in insn 36:
Processing use of (reg 17 flags) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 92 [ D.37155 ]) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 0 ax) in insn 31:
Processing use of (reg 20 frame) in insn 6:
Processing use of (reg 20 frame) in insn 12:
Processing use of (reg 102) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 118) in insn 11:
Processing use of (reg 20 frame) in insn 13:
Processing use of (reg 20 frame) in insn 14:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 99 [ propname ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 105) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 0 ax) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 99 [ propname ]) in insn 19:
Processing use of (reg 7 sp) in insn 30:
Processing use of (reg 1 dx) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 4 si) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 5 di) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 91 [ D.37154 ]) in insn 30:
  Adding insn 17 to worklist
Processing use of (reg 103 [ _6->_vptr.DB ]) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 89 [ D.37152 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 98 [ db ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ D.37152 ]) in insn 29:
Processing use of (reg 108) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 118) in insn 27:
starting the processing of deferred insns
ending the processing of deferred insns


char* leveldb_property_value(leveldb_t*, const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={10d,6u} r1={10d,1u} r2={8d} r4={9d,2u} r5={14d,7u} r6={1d,13u} r7={1d,20u} r8={7d} r9={7d} r10={7d} r11={7d} r12={7d} r13={7d} r14={7d} r15={7d} r16={1d,12u} r17={17d,4u} r18={7d} r19={7d} r20={1d,25u,2e} r21={8d} r22={8d} r23={8d} r24={8d} r25={8d} r26={8d} r27={8d} r28={8d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={8d} r38={8d} r39={7d} r40={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r87={2d,1u} r89={1d,2u} r91={1d,1u} r92={1d,1u} r94={1d,2u} r95={1d,2u} r98={1d,1u} r99={1d,2u} r102={1d,1u} r103={1d,1u} r105={1d,1u} r108={1d,1u} r109={1d,1u} r112={1d,1u} r115={1d,1u} r116={1d,1u} r118={1d,4u} 
;;    total ref usage 678{562d,114u,2e} in 49{42 regular + 7 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 91 98 99 102 103 105 108 118
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 89 91 98 99 102 103 105 108 118
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 98 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ propname ])
        (reg:DI 4 si [ propname ])) db/c.cc:242 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ propname ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37157+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:242 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 6 11 2 (parallel [
            (set (reg/f:DI 118)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg/f:DI 102)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 11 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&tmp]._M_p+0 S8 A128])
        (reg/f:DI 102)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&tmp + 8B]+0 S8 A64])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&tmp + 16]+0 S1 A128])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 89 [ D.37152 ])
        (mem/f:DI (reg/v/f:DI 98 [ db ]) [3 db_5(D)->rep+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ db ])
        (nil)))
(insn 16 15 17 2 (set (reg/f:DI 103 [ _6->_vptr.DB ])
        (mem/f:DI (reg/f:DI 89 [ D.37152 ]) [3 _6->_vptr.DB+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 91 [ D.37154 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ _6->_vptr.DB ])
                (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_7 + 72B]+0 S8 A64])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ _6->_vptr.DB ])
        (nil)))
(insn 18 17 19 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31457.data_+0 S8 A128])
        (reg/v/f:DI 99 [ propname ])) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ propname ])) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ propname ])
        (nil)))
(call_insn/i 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5948 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) ./include/leveldb/slice.h:37 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5948 strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 24 2 (set (reg:DI 105)
        (reg:DI 0 ax)) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 24 21 26 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [9 D.31457.size_+0 S8 A64])
        (reg:DI 105)) ./include/leveldb/slice.h:37 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 26 24 27 2 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:244 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 1 dx)
        (reg/f:DI 118)) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 28 27 29 2 (set (reg:DI 4 si)
        (reg/f:DI 108)) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 29 28 30 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37152 ])) db/c.cc:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37152 ])
        (nil)))
(call_insn 30 29 86 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 91 [ D.37154 ]) [0 *OBJ_TYPE_REF(_8;(struct DB)_6->9) S1 A8])
            (const_int 0 [0]))) db/c.cc:244 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37154 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       8 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 92
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 17 [flags] 87 92
;; live  kill	
(note 86 30 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 31 86 7 3 (set (reg:QI 92 [ D.37155 ])
        (reg:QI 0 ax)) db/c.cc:244 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 7 31 33 3 (set (reg/f:DI 87 [ D.37151 ])
        (const_int 0 [0])) db/c.cc:248 89 {*movdi_internal}
     (nil))
(insn 33 7 34 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ D.37155 ])
            (const_int 0 [0]))) db/c.cc:244 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 92 [ D.37155 ])
        (nil)))
(jump_insn 34 33 35 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 41)
            (pc))) db/c.cc:244 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 41)
;;  succ:       4 [78.6%]  (FALLTHRU)
;;              5 [21.4%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118

;; basic block 4, loop depth 0, count 0, freq 7861, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.6%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 109
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 0 [ax] 5 [di] 87 109
;; live  kill	
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg/f:DI 109 [ MEM[(char * *)&tmp] ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) db/c.cc:246 89 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg/f:DI 109 [ MEM[(char * *)&tmp] ])) db/c.cc:246 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ MEM[(char * *)&tmp] ])
        (nil)))
(call_insn 38 37 39 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>) [0 strdup S1 A8])
            (const_int 0 [0]))) db/c.cc:246 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strdup") [flags 0x41]  <function_decl 0x7fb5388ada20 strdup>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 41 4 (set (reg/f:DI 87 [ D.37151 ])
        (reg:DI 0 ax)) db/c.cc:246 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 110)
            (nil))))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.4%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 95 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 118
;; live  gen 	 17 [flags] 95 112
;; live  kill	 17 [flags]
(code_label 41 39 42 5 198 "" [1 uses])
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 45 5 (set (reg/f:DI 95 [ D.37151 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 45 43 46 5 (parallel [
            (set (reg/f:DI 112)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 46 45 47 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.37151 ])
            (reg/f:DI 112))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(jump_insn 47 46 48 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 51)
;;  succ:       6 [78.3%]  (FALLTHRU)
;;              7 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95

;; basic block 6, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [78.3%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; live  gen 	 5 [di]
;; live  kill	
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.37151 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.37151 ])
        (nil)))
(call_insn 50 49 51 6 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [21.6%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 51 50 52 7 199 "" [1 uses])
(note 52 51 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 73 52 75 7 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37151 ])) db/c.cc:250 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37151 ])
        (nil)))
(insn 75 73 76 7 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37157+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:250 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 76 75 89 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) db/c.cc:250 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 79)
;;  succ:       13 [100.0%] 
;;              12 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 8 artificial_defs: { d4(0){ }d14(1){ }}
;; bb 8 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 116
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; live  gen 	 0 [ax] 1 [dx] 116
;; live  kill	
(code_label/s 89 76 91 8 204 "" [1 uses])
(note 91 89 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 91 56 8 (set (reg:DI 116)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118

;; basic block 9, loop depth 0, count 0, freq 0
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 118
;; lr  def 	 17 [flags] 94 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 118
;; live  gen 	 17 [flags] 94 115
;; live  kill	 17 [flags]
(code_label 56 90 57 9 200 "" [0 uses])
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 60 9 (set (reg/f:DI 94 [ D.37151 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&tmp]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 60 58 61 9 (parallel [
            (set (reg/f:DI 115)
                (plus:DI (reg/f:DI 118)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 118)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 61 60 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.37151 ])
            (reg/f:DI 115))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 66)
;;  succ:       10 [69.8%]  (FALLTHRU)
;;              11 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116

;; basic block 10, loop depth 0, count 0, freq 0
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [69.8%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u88(6){ }u89(7){ }u90(16){ }u91(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 116
;; live  gen 	 5 [di]
;; live  kill	
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37151 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37151 ])
        (nil)))
(call_insn 65 64 66 10 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116

;; basic block 11, loop depth 0, count 0, freq 0
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [30.2%] 
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; live  gen 	 5 [di]
;; live  kill	
(code_label 66 65 67 11 201 "" [1 uses])
(note 67 66 69 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 69 67 70 11 (set (reg:DI 5 di)
        (reg:DI 116)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(call_insn 70 69 87 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 4
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [0.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 87 70 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 77 87 79 12 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:250 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 79 77 88 13 202 "" [1 uses])
(note 88 79 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 88 0 13 (use (reg/i:DI 0 ax)) db/c.cc:250 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_approximate_sizes(leveldb_t*, int, const char* const*, const size_t*, const char* const*, const size_t*, uint64_t*) (leveldb_approximate_sizes, funcdef_no=1441, decl_uid=2203, cgraph_uid=548, symbol_order=551)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 12 (  1.2)


void leveldb_approximate_sizes(leveldb_t*, int, const char* const*, const size_t*, const char* const*, const size_t*, uint64_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={6d,2u} r2={6d,2u} r4={6d,2u} r5={8d,4u} r6={1d,9u} r7={1d,13u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,9u} r17={14d,5u} r18={4d} r19={4d} r20={1d,9u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={2d,5u} r89={1d,4u,1e} r91={1d,4u} r92={2d,2u} r93={2d,5u} r94={1d,1u} r96={1d,1u} r99={1d,2u} r102={2d,6u} r104={1d,1u} r105={1d,4u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r114={1d,1u} r115={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 454{349d,104u,1e} in 54{50 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322
;;  reg->defs[] map:	0[0,4] 1[5,10] 2[11,16] 4[17,22] 5[23,30] 6[31,31] 7[32,32] 8[33,36] 9[37,40] 10[41,44] 11[45,48] 12[49,52] 13[53,56] 14[57,60] 15[61,64] 16[65,65] 17[66,79] 18[80,83] 19[84,87] 20[88,88] 21[89,93] 22[94,98] 23[99,103] 24[104,108] 25[109,113] 26[114,118] 27[119,123] 28[124,128] 29[129,132] 30[133,136] 31[137,140] 32[141,144] 33[145,148] 34[149,152] 35[153,156] 36[157,160] 37[161,165] 38[166,170] 39[171,174] 40[175,178] 45[179,182] 46[183,186] 47[187,190] 48[191,194] 49[195,198] 50[199,202] 51[203,206] 52[207,210] 53[211,214] 54[215,218] 55[219,222] 56[223,226] 57[227,230] 58[231,234] 59[235,238] 60[239,242] 61[243,246] 62[247,250] 63[251,254] 64[255,258] 65[259,262] 66[263,266] 67[267,270] 68[271,274] 69[275,278] 70[279,282] 71[283,286] 72[287,290] 73[291,294] 74[295,298] 75[299,302] 76[303,306] 77[307,310] 78[311,314] 79[315,318] 80[319,322] 88[323,324] 89[325,325] 91[326,326] 92[327,328] 93[329,330] 94[331,331] 96[332,332] 99[333,333] 102[334,335] 104[336,336] 105[337,337] 106[338,338] 107[339,339] 108[340,340] 109[341,341] 110[342,342] 111[343,343] 112[344,344] 114[345,345] 115[346,346] 118[347,347] 119[348,348] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d10(1){ }d16(2){ }d22(4){ }d30(5){ }d31(6){ }d32(7){ }d65(16){ }d88(20){ }d93(21){ }d98(22){ }d103(23){ }d108(24){ }d113(25){ }d118(26){ }d123(27){ }d128(28){ }d165(37){ }d170(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[10],2[16],4[22],5[30],6[31],7[32],16[65],20[88],21[93],22[98],23[103],24[108],25[113],26[118],27[123],28[128],37[165],38[170]
;; rd  kill	(85) 0[0,1,2,3,4],1[5,6,7,8,9,10],2[11,12,13,14,15,16],4[17,18,19,20,21,22],5[23,24,25,26,27,28,29,30],6[31],7[32],16[65],20[88],21[89,90,91,92,93],22[94,95,96,97,98],23[99,100,101,102,103],24[104,105,106,107,108],25[109,110,111,112,113],26[114,115,116,117,118],27[119,120,121,122,123],28[124,125,126,127,128],37[161,162,163,164,165],38[166,167,168,169,170]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; rd  out 	(10) 1[10],2[16],4[22],5[30],6[31],7[32],16[65],20[88],37[165],38[170]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d31(bb 0 insn -1) }u1(7){ d32(bb 0 insn -1) }u2(16){ d65(bb 0 insn -1) }u3(20){ d88(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 89 104 105 106 107 108 109 110 111
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 89 104 105 106 107 108 109 110 111
;; live  kill	
;; rd  in  	(10) 1[10],2[16],4[22],5[30],6[31],7[32],16[65],20[88],37[165],38[170]
;; rd  gen 	(10) 17[79],89[325],104[336],105[337],106[338],107[339],108[340],109[341],110[342],111[343]
;; rd  kill	(23) 17[66,67,68,69,70,71,72,73,74,75,76,77,78,79],89[325],104[336],105[337],106[338],107[339],108[340],109[341],110[342],111[343]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; rd  out 	(12) 6[31],7[32],16[65],20[88],89[325],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 2 )->[3]->( 5 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ d31(bb 0 insn -1) }u17(7){ d32(bb 0 insn -1) }u18(16){ d65(bb 0 insn -1) }u19(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 91 112
;; live  kill	 17 [flags]
;; rd  in  	(12) 6[31],7[32],16[65],20[88],89[325],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(4) 0[3],17[76],91[326],112[344]
;; rd  kill	(21) 0[0,1,2,3,4],17[66,67,68,69,70,71,72,73,74,75,76,77,78,79],91[326],112[344]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; rd  out 	(13) 6[31],7[32],16[65],20[88],89[325],91[326],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 2 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ d31(bb 0 insn -1) }u28(7){ d32(bb 0 insn -1) }u29(16){ d65(bb 0 insn -1) }u30(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(12) 6[31],7[32],16[65],20[88],89[325],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(1) 0[2]
;; rd  kill	(5) 0[0,1,2,3,4]
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[32],16[65],20[88]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 3 8 )->[5]->( 6 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ d31(bb 0 insn -1) }u33(7){ d32(bb 0 insn -1) }u34(16){ d65(bb 0 insn -1) }u35(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 105
;; lr  def 	 17 [flags] 88 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 88 102
;; live  kill	
;; rd  in  	(15) 6[31],7[32],16[65],20[88],89[325],91[326],92[327],93[329],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(3) 17[74],88[324],102[335]
;; rd  kill	(18) 17[66,67,68,69,70,71,72,73,74,75,76,77,78,79],88[323,324],102[334,335]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; rd  out 	(14) 6[31],7[32],16[65],20[88],88[324],91[326],102[335],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 5 9 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(6){ d31(bb 0 insn -1) }u40(7){ d32(bb 0 insn -1) }u41(16){ d65(bb 0 insn -1) }u42(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 114 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 99 114 115
;; live  kill	
;; rd  in  	(16) 6[31],7[32],16[65],20[88],88[323,324],91[326],102[334,335],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(3) 99[333],114[345],115[346]
;; rd  kill	(3) 99[333],114[345],115[346]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[31],7[32],16[65],20[88]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 3 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ d31(bb 0 insn -1) }u60(7){ d32(bb 0 insn -1) }u61(16){ d65(bb 0 insn -1) }u62(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; live  gen 	 92 93
;; live  kill	
;; rd  in  	(13) 6[31],7[32],16[65],20[88],89[325],91[326],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(2) 92[328],93[330]
;; rd  kill	(4) 92[327,328],93[329,330]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; rd  out 	(15) 6[31],7[32],16[65],20[88],89[325],91[326],92[328],93[330],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 7 8 )->[8]->( 5 8 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(6){ d31(bb 0 insn -1) }u65(7){ d32(bb 0 insn -1) }u66(16){ d65(bb 0 insn -1) }u67(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 92 93
;; lr  def 	 17 [flags] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 92 93
;; live  kill	 17 [flags]
;; rd  in  	(18) 6[31],7[32],16[65],17[69],20[88],89[325],91[326],92[327,328],93[329,330],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;; rd  gen 	(3) 17[69],92[327],93[329]
;; rd  kill	(18) 17[66,67,68,69,70,71,72,73,74,75,76,77,78,79],92[327,328],93[329,330]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; rd  out 	(15) 6[31],7[32],16[65],20[88],89[325],91[326],92[327],93[329],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 5 9 )->[9]->( 6 9 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(6){ d31(bb 0 insn -1) }u78(7){ d32(bb 0 insn -1) }u79(16){ d65(bb 0 insn -1) }u80(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 102 105 106 107 108 109
;; lr  def 	 17 [flags] 88 94 96 102 118 119
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 88 94 96 102 118 119
;; live  kill	 17 [flags]
;; rd  in  	(21) 6[31],7[32],16[65],17[66],20[88],88[323,324],91[326],94[331],96[332],102[334,335],104[336],105[337],106[338],107[339],108[340],109[341],110[342],118[347],119[348]
;; rd  gen 	(7) 17[66],88[323],94[331],96[332],102[334],118[347],119[348]
;; rd  kill	(22) 17[66,67,68,69,70,71,72,73,74,75,76,77,78,79],88[323,324],94[331],96[332],102[334,335],118[347],119[348]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; rd  out 	(14) 6[31],7[32],16[65],20[88],88[323],91[326],102[334],104[336],105[337],106[338],107[339],108[340],109[341],110[342]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 16 { d65(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u102(6){ d31(bb 0 insn -1) }u103(7){ d32(bb 0 insn -1) }u104(20){ d88(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[31],7[32],16[65],20[88]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d31(bb 0 insn -1) }
;;   reg 7 { d32(bb 0 insn -1) }
;;   reg 20 { d88(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 25 to worklist
  Adding insn 21 to worklist
  Adding insn 31 to worklist
  Adding insn 36 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 63 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 85 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ ivtmp.396 ]) in insn 75:
  Adding insn 70 to worklist
  Adding insn 82 to worklist
Processing use of (reg 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ]) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 102 [ ivtmp.391 ]) in insn 74:
  Adding insn 11 to worklist
  Adding insn 81 to worklist
Processing use of (reg 106 [ range_start_key ]) in insn 74:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 102 [ ivtmp.391 ]) in insn 81:
Processing use of (reg 88 [ ivtmp.396 ]) in insn 82:
Processing use of (reg 91 [ D.37187 ]) in insn 70:
  Adding insn 22 to worklist
Processing use of (reg 0 ax) in insn 22:
Processing use of (reg 88 [ ivtmp.396 ]) in insn 76:
Processing use of (reg 94 [ D.37190 ]) in insn 76:
  Adding insn 72 to worklist
Processing use of (reg 102 [ ivtmp.391 ]) in insn 72:
Processing use of (reg 107 [ range_start_key_len ]) in insn 72:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 88 [ ivtmp.396 ]) in insn 79:
Processing use of (reg 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ]) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 102 [ ivtmp.391 ]) in insn 78:
Processing use of (reg 108 [ range_limit_key ]) in insn 78:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 88 [ ivtmp.396 ]) in insn 80:
Processing use of (reg 96 [ D.37190 ]) in insn 80:
  Adding insn 77 to worklist
Processing use of (reg 102 [ ivtmp.391 ]) in insn 77:
Processing use of (reg 109 [ range_limit_key_len ]) in insn 77:
  Adding insn 7 to worklist
Processing use of (reg 38 r9) in insn 7:
Processing use of (reg 17 flags) in insn 85:
  Adding insn 84 to worklist
Processing use of (subreg (reg 102 [ ivtmp.391 ]) 0) in insn 84:
Processing use of (reg 105 [ num_ranges ]) in insn 84:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 93 [ ivtmp.410 ]) in insn 55:
  Adding insn 51 to worklist
  Adding insn 61 to worklist
Processing use of (reg 93 [ ivtmp.410 ]) in insn 61:
Processing use of (reg 91 [ D.37187 ]) in insn 51:
Processing use of (reg 93 [ ivtmp.410 ]) in insn 56:
Processing use of (reg 93 [ ivtmp.410 ]) in insn 58:
Processing use of (reg 93 [ ivtmp.410 ]) in insn 59:
Processing use of (reg 17 flags) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 89 [ D.37188 ]) in insn 62:
  Adding insn 14 to worklist
Processing use of (reg 92 [ ivtmp.404 ]) in insn 62:
  Adding insn 60 to worklist
Processing use of (reg 92 [ ivtmp.404 ]) in insn 60:
  Adding insn 10 to worklist
Processing use of (reg 105 [ num_ranges ]) in insn 14:
Processing use of (reg 7 sp) in insn 45:
Processing use of (reg 1 dx) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 2 cx) in insn 45:
  Adding insn 41 to worklist
Processing use of (reg 4 si) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 5 di) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 115 [ MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B] ]) in insn 45:
  Adding insn 40 to worklist
Processing use of (reg 114 [ _41->_vptr.DB ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 99 [ D.37192 ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 104 [ db ]) in insn 38:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 99 [ D.37192 ]) in insn 44:
Processing use of (reg 91 [ D.37187 ]) in insn 43:
Processing use of (reg 110 [ sizes ]) in insn 41:
  Adding insn 8 to worklist
Processing use of (reg 16 argp) in insn 8:
Processing use of (reg 105 [ num_ranges ]) in insn 42:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 5 di) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 91 [ D.37187 ]) in insn 46:
Processing use of (reg 17 flags) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 105 [ num_ranges ]) in insn 35:
Processing use of (reg 7 sp) in insn 31:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 112 [ D.37189 ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 89 [ D.37188 ]) in insn 19:
Processing use of (reg 17 flags) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 89 [ D.37188 ]) in insn 24:
Processing use of (reg 17 flags) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 89 [ D.37188 ]) in insn 16:
Processing use of (reg 111) in insn 16:
  Adding insn 15 to worklist
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_approximate_sizes(leveldb_t*, int, const char* const*, const size_t*, const char* const*, const size_t*, uint64_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={5d,1u} r1={6d,2u} r2={6d,2u} r4={6d,2u} r5={8d,4u} r6={1d,9u} r7={1d,13u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,9u} r17={14d,5u} r18={4d} r19={4d} r20={1d,9u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={2d,5u} r89={1d,4u,1e} r91={1d,4u} r92={2d,2u} r93={2d,5u} r94={1d,1u} r96={1d,1u} r99={1d,2u} r102={2d,6u} r104={1d,1u} r105={1d,4u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r114={1d,1u} r115={1d,1u} r118={1d,1u} r119={1d,1u} 
;;    total ref usage 454{349d,104u,1e} in 54{50 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 17 [flags] 89 104 105 106 107 108 109 110 111
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags] 89 104 105 106 107 108 109 110 111
;; live  kill	
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 104 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 105 [ num_ranges ])
        (reg:SI 4 si [ num_ranges ])) db/c.cc:257 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ num_ranges ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 106 [ range_start_key ])
        (reg:DI 1 dx [ range_start_key ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ range_start_key ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 107 [ range_start_key_len ])
        (reg:DI 2 cx [ range_start_key_len ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ range_start_key_len ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 108 [ range_limit_key ])
        (reg:DI 37 r8 [ range_limit_key ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ range_limit_key ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 109 [ range_limit_key_len ])
        (reg:DI 38 r9 [ range_limit_key_len ])) db/c.cc:257 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ range_limit_key_len ])
        (nil)))
(insn 8 7 9 2 (set (reg/v/f:DI 110 [ sizes ])
        (mem/f/c:DI (reg/f:DI 16 argp) [3 sizes+0 S8 A64])) db/c.cc:257 89 {*movdi_internal}
     (nil))
(note 9 8 14 2 NOTE_INSN_FUNCTION_BEG)
(insn 14 9 15 2 (set (reg:DI 89 [ D.37188 ])
        (sign_extend:DI (reg/v:SI 105 [ num_ranges ]))) db/c.cc:258 142 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 2 (set (reg:DI 111)
        (const_int 285978576338026496 [0x3f8000000000000])) db/c.cc:258 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 89 [ D.37188 ])
            (reg:DI 111))) db/c.cc:258 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 111)
        (expr_list:REG_EQUAL (compare:CC (reg:DI 89 [ D.37188 ])
                (const_int 285978576338026496 [0x3f8000000000000]))
            (nil))))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 29)
;;  succ:       3 [100.0%]  (FALLTHRU)
;;              4 [0.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 112
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 104 105 106 107 108 109 110
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 91 112
;; live  kill	 17 [flags]
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (parallel [
            (set (reg:DI 112 [ D.37189 ])
                (ashift:DI (reg:DI 89 [ D.37188 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:258 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 5 di)
        (reg:DI 112 [ D.37189 ])) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ D.37189 ])
        (nil)))
(call_insn 21 20 22 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x7fb538d99288 operator new []>) [0 operator new [] S1 A8])
            (const_int 0 [0]))) db/c.cc:258 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znam") [flags 0x41]  <function_decl 0x7fb538d99288 operator new []>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 21 24 3 (set (reg/f:DI 91 [ D.37187 ])
        (reg:DI 0 ax)) db/c.cc:258 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 113)
            (nil))))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.37188 ])
            (const_int 0 [0]))) db/c.cc:258 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 29 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 33)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 33)
;;  succ:       5 [9.0%] 
;;              7 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 29 25 30 4 211 "" [1 uses])
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 31 30 33 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_throw_bad_array_new_length") [flags 0x41]  <function_decl 0x7fb5373b6288 __cxa_throw_bad_array_new_length>) [0 __cxa_throw_bad_array_new_length S1 A8])
            (const_int 0 [0]))) db/c.cc:258 669 {*call_value}
     (expr_list:REG_UNUSED (reg:DI 0 ax)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__cxa_throw_bad_array_new_length") [flags 0x41]  <function_decl 0x7fb5373b6288 __cxa_throw_bad_array_new_length>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [9.0%] 
;;              8 [9.0%]  (LOOP_EXIT)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 105
;; lr  def 	 17 [flags] 88 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 88 102
;; live  kill	
(code_label 33 31 34 5 212 "" [2 uses])
(note 34 33 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 70 34 11 5 (set (reg:DI 88 [ ivtmp.396 ])
        (reg/f:DI 91 [ D.37187 ])) 89 {*movdi_internal}
     (nil))
(insn 11 70 35 5 (set (reg:DI 102 [ ivtmp.391 ])
        (const_int 0 [0])) db/c.cc:259 89 {*movdi_internal}
     (nil))
(insn 35 11 36 5 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg/v:SI 105 [ num_ranges ])
            (const_int 0 [0]))) db/c.cc:259 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 36 35 83 5 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 97)
            (pc))) db/c.cc:259 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 97)
;;  succ:       6 [9.0%]  (FALLTHRU)
;;              9 [91.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [9.0%]  (FALLTHRU)
;;              9 [9.0%]  (LOOP_EXIT)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 114 115
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104 105 110
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 99 114 115
;; live  kill	
(code_label 83 36 37 6 216 "" [1 uses])
(note 37 83 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg/f:DI 99 [ D.37192 ])
        (mem/f:DI (reg/v/f:DI 104 [ db ]) [3 db_40(D)->rep+0 S8 A64])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ db ])
        (nil)))
(insn 39 38 40 6 (set (reg/f:DI 114 [ _41->_vptr.DB ])
        (mem/f:DI (reg/f:DI 99 [ D.37192 ]) [3 _41->_vptr.DB+0 S8 A64])) db/c.cc:263 89 {*movdi_internal}
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 115 [ MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B] ])
        (mem/f:DI (plus:DI (reg/f:DI 114 [ _41->_vptr.DB ])
                (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B]+0 S8 A64])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ _41->_vptr.DB ])
        (nil)))
(insn 41 40 42 6 (set (reg:DI 2 cx)
        (reg/v/f:DI 110 [ sizes ])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 110 [ sizes ])
        (nil)))
(insn 42 41 43 6 (set (reg:SI 1 dx)
        (reg/v:SI 105 [ num_ranges ])) db/c.cc:263 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 105 [ num_ranges ])
        (nil)))
(insn 43 42 44 6 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.37187 ])) db/c.cc:263 89 {*movdi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 5 di)
        (reg/f:DI 99 [ D.37192 ])) db/c.cc:263 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.37192 ])
        (nil)))
(call_insn 45 44 46 6 (call (mem:QI (reg/f:DI 115 [ MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B] ]) [0 *OBJ_TYPE_REF(_44;(struct DB)_41->10) S1 A8])
        (const_int 0 [0])) db/c.cc:263 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 115 [ MEM[(int (*__vtbl_ptr_type) () *)_42 + 80B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:SI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 46 45 47 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37187 ])) db/c.cc:264 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37187 ])
        (nil)))
(call_insn/j 47 46 50 6 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) db/c.cc:264 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [91.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 104 105 106 107 108 109 110
;; live  gen 	 92 93
;; live  kill	
(note 50 47 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 10 7 (set (reg:DI 93 [ ivtmp.410 ])
        (reg/f:DI 91 [ D.37187 ])) 89 {*movdi_internal}
     (nil))
(insn 10 51 64 7 (set (reg:DI 92 [ ivtmp.404 ])
        (const_int 0 [0])) db/c.cc:258 89 {*movdi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110

;; basic block 8, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 92 93
;; lr  def 	 17 [flags] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 92 93
;; live  kill	 17 [flags]
(code_label 64 10 52 8 215 "" [0 uses])
(note 52 64 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 55 52 56 8 (set (mem/f:DI (reg:DI 93 [ ivtmp.410 ]) [3 MEM[base: _36, offset: 0B]+0 S8 A64])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 56 55 58 8 (set (mem:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 8 [0x8])) [9 MEM[base: _36, offset: 8B]+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 58 56 59 8 (set (mem/f:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 16 [0x10])) [3 MEM[base: _36, offset: 16B]+0 S8 A64])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 59 58 60 8 (set (mem:DI (plus:DI (reg:DI 93 [ ivtmp.410 ])
                (const_int 24 [0x18])) [9 MEM[base: _36, offset: 24B]+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 60 59 61 8 (parallel [
            (set (reg:DI 92 [ ivtmp.404 ])
                (plus:DI (reg:DI 92 [ ivtmp.404 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 61 60 62 8 (parallel [
            (set (reg:DI 93 [ ivtmp.410 ])
                (plus:DI (reg:DI 93 [ ivtmp.410 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 62 61 63 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.37188 ])
            (reg:DI 92 [ ivtmp.404 ]))) db/c.cc:258 8 {*cmpdi_1}
     (nil))
(jump_insn 63 62 97 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) db/c.cc:258 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 33)
;;  succ:       5 [9.0%]  (LOOP_EXIT)
;;              8 [91.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92 93 104 105 106 107 108 109 110

;; basic block 9, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [91.0%] 
;;              9 [91.0%]  (FALLTHRU,DFS_BACK)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(6){ }u78(7){ }u79(16){ }u80(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 102 105 106 107 108 109
;; lr  def 	 17 [flags] 88 94 96 102 118 119
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  gen 	 17 [flags] 88 94 96 102 118 119
;; live  kill	 17 [flags]
(code_label 97 63 96 9 220 "" [1 uses])
(note 96 97 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 96 74 9 (set (reg:DI 94 [ D.37190 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 107 [ range_start_key_len ])) [9 MEM[base: range_start_key_len_25(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:260 89 {*movdi_internal}
     (nil))
(insn 74 72 75 9 (set (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 106 [ range_start_key ])) [3 MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:260 89 {*movdi_internal}
     (nil))
(insn 75 74 76 9 (set (mem/f:DI (reg:DI 88 [ ivtmp.396 ]) [23 MEM[base: _4, offset: 0B]+0 S8 A64])
        (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 118 [ MEM[base: range_start_key_28(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (nil)))
(insn 76 75 77 9 (set (mem:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 8 [0x8])) [23 MEM[base: _4, offset: 8B]+0 S8 A64])
        (reg:DI 94 [ D.37190 ])) db/c.cc:260 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ D.37190 ])
        (nil)))
(insn 77 76 78 9 (set (reg:DI 96 [ D.37190 ])
        (mem:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 109 [ range_limit_key_len ])) [9 MEM[base: range_limit_key_len_32(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:261 89 {*movdi_internal}
     (nil))
(insn 78 77 79 9 (set (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 8 [0x8]))
                (reg/v/f:DI 108 [ range_limit_key ])) [3 MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B]+0 S8 A64])) db/c.cc:261 89 {*movdi_internal}
     (nil))
(insn 79 78 80 9 (set (mem/f:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 16 [0x10])) [23 MEM[base: _4, offset: 16B]+0 S8 A64])
        (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ MEM[base: range_limit_key_35(D), index: ivtmp.391_57, step: 8, offset: 0B] ])
        (nil)))
(insn 80 79 81 9 (set (mem:DI (plus:DI (reg:DI 88 [ ivtmp.396 ])
                (const_int 24 [0x18])) [23 MEM[base: _4, offset: 24B]+0 S8 A64])
        (reg:DI 96 [ D.37190 ])) db/c.cc:261 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.37190 ])
        (nil)))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 102 [ ivtmp.391 ])
                (plus:DI (reg:DI 102 [ ivtmp.391 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 82 81 84 9 (parallel [
            (set (reg:DI 88 [ ivtmp.396 ])
                (plus:DI (reg:DI 88 [ ivtmp.396 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 84 82 85 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 105 [ num_ranges ])
            (subreg:SI (reg:DI 102 [ ivtmp.391 ]) 0))) db/c.cc:259 7 {*cmpsi_1}
     (nil))
(jump_insn 85 84 0 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) db/c.cc:259 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 83)
;;  succ:       6 [9.0%]  (LOOP_EXIT)
;;              9 [91.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91 102 104 105 106 107 108 109 110


;; Function void leveldb_compact_range(leveldb_t*, const char*, size_t, const char*, size_t) (leveldb_compact_range, funcdef_no=1442, decl_uid=2209, cgraph_uid=549, symbol_order=552)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 11 (    1)


void leveldb_compact_range(leveldb_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,10u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u} r17={8d,3u} r18={2d} r19={2d} r20={1d,22u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={2d,1u} r88={2d,1u} r89={1d,2u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,2u} r96={1d,1u} r100={1d,1u} 
;;    total ref usage 261{184d,77u,0e} in 32{30 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  reg->defs[] map:	0[0,2] 1[3,6] 2[7,9] 4[10,13] 5[14,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,44] 18[45,46] 19[47,48] 20[49,49] 21[50,52] 22[53,55] 23[56,58] 24[59,61] 25[62,64] 26[65,67] 27[68,70] 28[71,73] 29[74,75] 30[76,77] 31[78,79] 32[80,81] 33[82,83] 34[84,85] 35[86,87] 36[88,89] 37[90,92] 38[93,95] 39[96,97] 40[98,99] 45[100,101] 46[102,103] 47[104,105] 48[106,107] 49[108,109] 50[110,111] 51[112,113] 52[114,115] 53[116,117] 54[118,119] 55[120,121] 56[122,123] 57[124,125] 58[126,127] 59[128,129] 60[130,131] 61[132,133] 62[134,135] 63[136,137] 64[138,139] 65[140,141] 66[142,143] 67[144,145] 68[146,147] 69[148,149] 70[150,151] 71[152,153] 72[154,155] 73[156,157] 74[158,159] 75[160,161] 76[162,163] 77[164,165] 78[166,167] 79[168,169] 80[170,171] 87[172,173] 88[174,175] 89[176,176] 91[177,177] 92[178,178] 93[179,179] 94[180,180] 95[181,181] 96[182,182] 100[183,183] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d6(1){ }d9(2){ }d13(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d49(20){ }d52(21){ }d55(22){ }d58(23){ }d61(24){ }d64(25){ }d67(26){ }d70(27){ }d73(28){ }d92(37){ }d95(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[49],21[52],22[55],23[58],24[61],25[64],26[67],27[70],28[73],37[92],38[95]
;; rd  kill	(52) 0[0,1,2],1[3,4,5,6],2[7,8,9],4[10,11,12,13],5[14,15,16,17],6[18],7[19],16[36],20[49],21[50,51,52],22[53,54,55],23[56,57,58],24[59,60,61],25[62,63,64],26[65,66,67],27[68,69,70],28[71,72,73],37[90,91,92],38[93,94,95]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[49],37[92]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d49(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 89 91 92 93 94 95 96 100
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 17 [flags] 89 91 92 93 94 95 96 100
;; live  kill	 17 [flags]
;; rd  in  	(9) 1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[49],37[92]
;; rd  gen 	(9) 17[43],89[176],91[177],92[178],93[179],94[180],95[181],96[182],100[183]
;; rd  kill	(16) 17[37,38,39,40,41,42,43,44],89[176],91[177],92[178],93[179],94[180],95[181],96[182],100[183]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; rd  out 	(10) 6[18],7[19],16[36],20[49],89[176],91[177],93[179],94[180],95[181],96[182]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ d18(bb 0 insn -1) }u20(7){ d19(bb 0 insn -1) }u21(16){ d36(bb 0 insn -1) }u22(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96
;; lr  def 	 17 [flags] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; live  gen 	 87
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[18],7[19],16[36],20[49],89[176],91[177],93[179],94[180],95[181],96[182]
;; rd  gen 	(1) 87[173]
;; rd  kill	(10) 17[37,38,39,40,41,42,43,44],87[172,173]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; rd  out 	(9) 6[18],7[19],16[36],20[49],87[173],89[176],91[177],93[179],94[180]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(6){ d18(bb 0 insn -1) }u29(7){ d19(bb 0 insn -1) }u30(16){ d36(bb 0 insn -1) }u31(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94
;; live  gen 	 87
;; live  kill	
;; rd  in  	(10) 6[18],7[19],16[36],20[49],89[176],91[177],93[179],94[180],95[181],96[182]
;; rd  gen 	(1) 87[172]
;; rd  kill	(2) 87[172,173]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; rd  out 	(9) 6[18],7[19],16[36],20[49],87[172],89[176],91[177],93[179],94[180]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 4 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ d18(bb 0 insn -1) }u33(7){ d19(bb 0 insn -1) }u34(16){ d36(bb 0 insn -1) }u35(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[18],7[19],16[36],20[49],87[172,173],89[176],91[177],93[179],94[180]
;; rd  gen 	(1) 17[41]
;; rd  kill	(8) 17[37,38,39,40,41,42,43,44]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; rd  out 	(10) 6[18],7[19],16[36],20[49],87[172,173],89[176],91[177],93[179],94[180]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ d18(bb 0 insn -1) }u39(7){ d19(bb 0 insn -1) }u40(16){ d36(bb 0 insn -1) }u41(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  gen 	 88
;; live  kill	 17 [flags]
;; rd  in  	(10) 6[18],7[19],16[36],20[49],87[172,173],89[176],91[177],93[179],94[180]
;; rd  gen 	(1) 88[175]
;; rd  kill	(10) 17[37,38,39,40,41,42,43,44],88[174,175]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; rd  out 	(9) 6[18],7[19],16[36],20[49],87[172,173],88[175],89[176],91[177]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(6){ d18(bb 0 insn -1) }u48(7){ d19(bb 0 insn -1) }u49(16){ d36(bb 0 insn -1) }u50(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91
;; live  gen 	 88
;; live  kill	
;; rd  in  	(10) 6[18],7[19],16[36],20[49],87[172,173],89[176],91[177],93[179],94[180]
;; rd  gen 	(1) 88[174]
;; rd  kill	(2) 88[174,175]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; rd  out 	(9) 6[18],7[19],16[36],20[49],87[172,173],88[174],89[176],91[177]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 7 6 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ d18(bb 0 insn -1) }u52(7){ d19(bb 0 insn -1) }u53(16){ d36(bb 0 insn -1) }u54(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  gen 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; rd  in  	(10) 6[18],7[19],16[36],20[49],87[172,173],88[174,175],89[176],91[177]
;; rd  gen 	(1) 17[38]
;; rd  kill	(8) 17[37,38,39,40,41,42,43,44]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[18],7[19],16[36],20[49]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 8 )->[9]->( )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(6){ d18(bb 0 insn -1) }u66(7){ d19(bb 0 insn -1) }u67(16){ d36(bb 0 insn -1) }u68(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[49]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[19],16[36],20[49]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ d18(bb 0 insn -1) }u71(7){ d19(bb 0 insn -1) }u72(16){ d36(bb 0 insn -1) }u73(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[49]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[18],7[19],16[36],20[49]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u74(6){ d18(bb 0 insn -1) }u75(7){ d19(bb 0 insn -1) }u76(20){ d49(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[49]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d49(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 9 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 33 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 7 sp) in insn 42:
Processing use of (reg 1 dx) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 4 si) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 5 di) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 91 [ D.37201 ]) in insn 42:
  Adding insn 24 to worklist
Processing use of (reg 100 [ _9->_vptr.DB ]) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 89 [ D.37199 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 92 [ db ]) in insn 22:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ D.37199 ]) in insn 41:
Processing use of (reg 88 [ D.37198 ]) in insn 40:
  Adding insn 12 to worklist
  Adding insn 13 to worklist
Processing use of (reg 20 frame) in insn 12:
Processing use of (reg 87 [ D.37198 ]) in insn 39:
  Adding insn 10 to worklist
  Adding insn 11 to worklist
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 20 frame) in insn 45:
Processing use of (reg 17 flags) in insn 46:
Processing use of (reg 20 frame) in insn 35:
Processing use of (reg 93 [ start_key ]) in insn 35:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 36:
Processing use of (reg 94 [ start_key_len ]) in insn 36:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 17 flags) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 93 [ start_key ]) in insn 32:
Processing use of (reg 20 frame) in insn 28:
Processing use of (reg 95 [ limit_key ]) in insn 28:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 20 frame) in insn 29:
Processing use of (reg 96 [ limit_key_len ]) in insn 29:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 20 frame) in insn 9:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 20 frame) in insn 20:
Processing use of (reg 20 frame) in insn 21:
Processing use of (reg 17 flags) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 95 [ limit_key ]) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_compact_range(leveldb_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,10u} r7={1d,12u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,9u} r17={8d,3u} r18={2d} r19={2d} r20={1d,22u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={2d,1u} r88={2d,1u} r89={1d,2u} r91={1d,1u} r92={1d,1u} r93={1d,2u} r94={1d,1u} r95={1d,2u} r96={1d,1u} r100={1d,1u} 
;;    total ref usage 261{184d,77u,0e} in 32{30 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 17 [flags] 89 91 92 93 94 95 96 100
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 17 [flags] 89 91 92 93 94 95 96 100
;; live  kill	 17 [flags]
(note 14 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 14 3 2 (set (reg/v/f:DI 92 [ db ])
        (reg:DI 5 di [ db ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ db ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 93 [ start_key ])
        (reg:DI 4 si [ start_key ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ start_key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:DI 94 [ start_key_len ])
        (reg:DI 1 dx [ start_key_len ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ start_key_len ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 95 [ limit_key ])
        (reg:DI 2 cx [ limit_key ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ limit_key ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:DI 96 [ limit_key_len ])
        (reg:DI 37 r8 [ limit_key_len ])) db/c.cc:270 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ limit_key_len ])
        (nil)))
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 17 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37202+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:270 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 9 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 a.data_+0 S8 A128])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 18 17 20 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 a.size_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 20 18 21 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 b.data_+0 S8 A128])
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7fb536ecc1b0 *.LC34>)) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 b.size_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/slice.h:28 89 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg/f:DI 89 [ D.37199 ])
        (mem/f:DI (reg/v/f:DI 92 [ db ]) [3 db_8(D)->rep+0 S8 A64])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ db ])
        (nil)))
(insn 23 22 24 2 (set (reg/f:DI 100 [ _9->_vptr.DB ])
        (mem/f:DI (reg/f:DI 89 [ D.37199 ]) [3 _9->_vptr.DB+0 S8 A64])) db/c.cc:275 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg/f:DI 91 [ D.37201 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _9->_vptr.DB ])
                (const_int 88 [0x58])) [3 MEM[(int (*__vtbl_ptr_type) () *)_10 + 88B]+0 S8 A64])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ _9->_vptr.DB ])
        (nil)))
(insn 25 24 26 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 95 [ limit_key ])
            (const_int 0 [0]))) db/c.cc:272 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 54)
            (pc))) db/c.cc:272 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 54)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              4 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 96
;; lr  def 	 17 [flags] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94 95 96
;; live  gen 	 87
;; live  kill	 17 [flags]
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 3 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [13 MEM[(struct Slice *)&b]+0 S8 A128])
        (reg/v/f:DI 95 [ limit_key ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 95 [ limit_key ])
        (nil)))
(insn 29 28 10 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [13 MEM[(struct Slice *)&b + 8B]+0 S8 A64])
        (reg/v:DI 96 [ limit_key_len ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 96 [ limit_key_len ])
        (nil)))
(insn 10 29 54 3 (parallel [
            (set (reg/f:DI 87 [ D.37198 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:272 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

;; basic block 4, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [15.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 93 94
;; live  gen 	 87
;; live  kill	
(code_label 54 10 53 4 228 "" [1 uses])
(note 53 54 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 53 30 4 (set (reg/f:DI 87 [ D.37198 ])
        (const_int 0 [0])) db/c.cc:272 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 30 11 31 5 225 "" [0 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ start_key ])
            (const_int 0 [0]))) db/c.cc:272 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 33 32 34 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 58)
            (pc))) db/c.cc:272 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 58)
;;  succ:       6 [89.9%]  (FALLTHRU)
;;              7 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [89.9%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91 93 94
;; live  gen 	 88
;; live  kill	 17 [flags]
(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [13 MEM[(struct Slice *)&a]+0 S8 A128])
        (reg/v/f:DI 93 [ start_key ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ start_key ])
        (nil)))
(insn 36 35 12 6 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [13 MEM[(struct Slice *)&a + 8B]+0 S8 A64])
        (reg/v:DI 94 [ start_key_len ])) db/c.cc:272 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 94 [ start_key_len ])
        (nil)))
(insn 12 36 58 6 (parallel [
            (set (reg/f:DI 88 [ D.37198 ])
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:272 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91

;; basic block 7, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [10.1%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(6){ }u48(7){ }u49(16){ }u50(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 91
;; live  gen 	 88
;; live  kill	
(code_label 58 12 57 7 229 "" [1 uses])
(note 57 58 13 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 13 57 37 7 (set (reg/f:DI 88 [ D.37198 ])
        (const_int 0 [0])) db/c.cc:272 89 {*movdi_internal}
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              6 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 91
;; live  gen 	 1 [dx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 37 13 38 8 226 "" [0 uses])
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 8 (set (reg:DI 1 dx)
        (reg/f:DI 87 [ D.37198 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37198 ])
        (nil)))
(insn 40 39 41 8 (set (reg:DI 4 si)
        (reg/f:DI 88 [ D.37198 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37198 ])
        (nil)))
(insn 41 40 42 8 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37199 ])) db/c.cc:275 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37199 ])
        (nil)))
(call_insn 42 41 45 8 (call (mem:QI (reg/f:DI 91 [ D.37201 ]) [0 *OBJ_TYPE_REF(_11;(struct DB)_9->11) S1 A8])
        (const_int 0 [0])) db/c.cc:275 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37201 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 45 42 46 8 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37202+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:276 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 46 45 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) db/c.cc:276 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 49)
;;  succ:       10 [100.0%] 
;;              9 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 4
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [0.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 59 46 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 47 59 49 9 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:276 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 49 47 60 10 227 "" [1 uses])
(note 60 49 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_destroy_db(const leveldb_options_t*, const char*, char**) (leveldb_destroy_db, funcdef_no=1443, decl_uid=2213, cgraph_uid=550, symbol_order=553)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 36 count 29 (    1)


void leveldb_destroy_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,5e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1173{948d,220u,5e} in 84{72 regular + 12 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919
;;  reg->defs[] map:	0[0,14] 1[15,32] 2[33,45] 4[46,62] 5[63,86] 6[87,87] 7[88,88] 8[89,100] 9[101,112] 10[113,124] 11[125,136] 12[137,148] 13[149,160] 14[161,172] 15[173,184] 16[185,185] 17[186,212] 18[213,224] 19[225,236] 20[237,237] 21[238,250] 22[251,263] 23[264,276] 24[277,289] 25[290,302] 26[303,315] 27[316,328] 28[329,341] 29[342,353] 30[354,365] 31[366,377] 32[378,389] 33[390,401] 34[402,413] 35[414,425] 36[426,437] 37[438,450] 38[451,463] 39[464,475] 40[476,487] 45[488,499] 46[500,511] 47[512,523] 48[524,535] 49[536,547] 50[548,559] 51[560,571] 52[572,583] 53[584,595] 54[596,607] 55[608,619] 56[620,631] 57[632,643] 58[644,655] 59[656,667] 60[668,679] 61[680,691] 62[692,703] 63[704,715] 64[716,727] 65[728,739] 66[740,751] 67[752,763] 68[764,775] 69[776,787] 70[788,799] 71[800,811] 72[812,823] 73[824,835] 74[836,847] 75[848,859] 76[860,871] 77[872,883] 78[884,895] 79[896,907] 80[908,919] 88[920,920] 89[921,921] 90[922,922] 91[923,923] 92[924,925] 93[926,928] 94[929,930] 99[931,931] 100[932,932] 101[933,933] 106[934,934] 108[935,935] 112[936,936] 113[937,937] 123[938,938] 124[939,940] 125[941,941] 129[942,942] 131[943,943] 132[944,947] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d32(1){ }d45(2){ }d62(4){ }d86(5){ }d87(6){ }d88(7){ }d185(16){ }d237(20){ }d250(21){ }d263(22){ }d276(23){ }d289(24){ }d302(25){ }d315(26){ }d328(27){ }d341(28){ }d450(37){ }d463(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[14],1[32],2[45],4[62],5[86],6[87],7[88],16[185],20[237],21[250],22[263],23[276],24[289],25[302],26[315],27[328],28[341],37[450],38[463]
;; rd  kill	(221) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],2[33,34,35,36,37,38,39,40,41,42,43,44,45],4[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],5[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],6[87],7[88],16[185],20[237],21[238,239,240,241,242,243,244,245,246,247,248,249,250],22[251,252,253,254,255,256,257,258,259,260,261,262,263],23[264,265,266,267,268,269,270,271,272,273,274,275,276],24[277,278,279,280,281,282,283,284,285,286,287,288,289],25[290,291,292,293,294,295,296,297,298,299,300,301,302],26[303,304,305,306,307,308,309,310,311,312,313,314,315],27[316,317,318,319,320,321,322,323,324,325,326,327,328],28[329,330,331,332,333,334,335,336,337,338,339,340,341],37[438,439,440,441,442,443,444,445,446,447,448,449,450],38[451,452,453,454,455,456,457,458,459,460,461,462,463]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[32],4[62],5[86],6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 25 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d87(bb 0 insn -1) }u1(7){ d88(bb 0 insn -1) }u2(16){ d185(bb 0 insn -1) }u3(20){ d237(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 99 100 101 106 131
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[32],4[62],5[86],6[87],7[88],16[185],20[237]
;; rd  gen 	(6) 17[211],99[931],100[932],101[933],106[934],131[943]
;; rd  kill	(32) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],99[931],100[932],101[933],106[934],131[943]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; rd  out 	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ d87(bb 0 insn -1) }u15(7){ d88(bb 0 insn -1) }u16(16){ d185(bb 0 insn -1) }u17(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 92 108
;; live  kill	
;; rd  in  	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;; rd  gen 	(4) 0[13],17[193],92[924],108[935]
;; rd  kill	(45) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],92[924,925],108[935]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ d87(bb 0 insn -1) }u28(7){ d88(bb 0 insn -1) }u29(16){ d185(bb 0 insn -1) }u30(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 112 132
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(4) 0[12],94[930],112[936],132[947]
;; rd  kill	(22) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],94[929,930],112[936],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],94[930],99[931],100[932],101[933],108[935],131[943],132[947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ d87(bb 0 insn -1) }u47(7){ d88(bb 0 insn -1) }u48(16){ d185(bb 0 insn -1) }u49(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(1) 17[187]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ d87(bb 0 insn -1) }u53(7){ d88(bb 0 insn -1) }u54(16){ d185(bb 0 insn -1) }u55(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; live  gen 	 93 113 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(3) 93[927],113[937],132[946]
;; rd  kill	(8) 93[926,927,928],113[937],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],92[924],93[927],99[931],101[933],131[943],132[946]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d87(bb 0 insn -1) }u62(7){ d88(bb 0 insn -1) }u63(16){ d185(bb 0 insn -1) }u64(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(1) 17[186]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ d87(bb 0 insn -1) }u68(7){ d88(bb 0 insn -1) }u69(16){ d185(bb 0 insn -1) }u70(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; live  gen 	 93 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(2) 93[926],132[945]
;; rd  kill	(7) 93[926,927,928],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],92[924],93[926],99[931],101[933],131[943],132[945]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ d87(bb 0 insn -1) }u74(7){ d88(bb 0 insn -1) }u75(16){ d185(bb 0 insn -1) }u76(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; live  gen 	 94 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(2) 94[929],132[944]
;; rd  kill	(6) 94[929,930],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],94[929],99[931],100[932],101[933],108[935],131[943],132[944]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 9 4 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ d87(bb 0 insn -1) }u80(7){ d88(bb 0 insn -1) }u81(16){ d185(bb 0 insn -1) }u82(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 92 93
;; live  kill	
;; rd  in  	(13) 6[87],7[88],16[185],20[237],94[929,930],99[931],100[932],101[933],108[935],131[943],132[944,947]
;; rd  gen 	(3) 0[11],92[925],93[928]
;; rd  kill	(20) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],92[924,925],93[926,927,928]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[925],93[928],99[931],101[933],131[943],132[944,947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 6 8 10 )->[11]->( 21(EH) 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ d87(bb 0 insn -1) }u93(7){ d88(bb 0 insn -1) }u94(16){ d185(bb 0 insn -1) }u95(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(16) 6[87],7[88],16[185],20[237],92[924,925],93[926,927,928],99[931],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 11 )->[12]->( 17(EH) 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ d87(bb 0 insn -1) }u110(7){ d88(bb 0 insn -1) }u111(16){ d185(bb 0 insn -1) }u112(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(1) 0[9]
;; rd  kill	(15) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; rd  out 	(5) 6[87],7[88],16[185],20[237],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ d87(bb 0 insn -1) }u120(7){ d88(bb 0 insn -1) }u121(16){ d185(bb 0 insn -1) }u122(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 89
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],131[943]
;; rd  gen 	(2) 17[205],89[921]
;; rd  kill	(28) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],89[921]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ d87(bb 0 insn -1) }u127(7){ d88(bb 0 insn -1) }u128(16){ d185(bb 0 insn -1) }u129(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; rd  out 	(5) 6[87],7[88],16[185],20[237],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 13 14 )->[15]->( 16 26 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ d87(bb 0 insn -1) }u134(7){ d88(bb 0 insn -1) }u135(16){ d185(bb 0 insn -1) }u136(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 91 123
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;; rd  gen 	(3) 17[203],91[923],123[938]
;; rd  kill	(29) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],91[923],123[938]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[87],7[88],16[185],20[237],91[923]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 15 )->[16]->( 26 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ d87(bb 0 insn -1) }u143(7){ d88(bb 0 insn -1) }u144(16){ d185(bb 0 insn -1) }u145(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],91[923]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 12(EH) )->[17]->( 18 )
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ d87(bb 0 insn -1) }u150(7){ d88(bb 0 insn -1) }u151(16){ d185(bb 0 insn -1) }u152(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],131[943]
;; rd  gen 	(3) 0[6],1[23],125[941]
;; rd  kill	(34) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],125[941]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ d87(bb 0 insn -1) }u155(7){ d88(bb 0 insn -1) }u156(16){ d185(bb 0 insn -1) }u157(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;; rd  gen 	(2) 17[201],88[920]
;; rd  kill	(28) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],88[920]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; rd  out 	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ d87(bb 0 insn -1) }u162(7){ d88(bb 0 insn -1) }u163(16){ d185(bb 0 insn -1) }u164(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 18 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ d87(bb 0 insn -1) }u169(7){ d88(bb 0 insn -1) }u170(16){ d185(bb 0 insn -1) }u171(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 124
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;; rd  gen 	(1) 124[940]
;; rd  kill	(2) 124[939,940]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[940],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 11(EH) )->[21]->( 22 )
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ d87(bb 0 insn -1) }u174(7){ d88(bb 0 insn -1) }u175(16){ d185(bb 0 insn -1) }u176(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 124
;; live  kill	
;; rd  in  	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(3) 0[4],1[21],124[939]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],124[939,940]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[939],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 21 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ d87(bb 0 insn -1) }u179(7){ d88(bb 0 insn -1) }u180(16){ d185(bb 0 insn -1) }u181(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  gen 	 17 [flags] 90 129
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[87],7[88],16[185],20[237],124[939,940],131[943]
;; rd  gen 	(3) 17[199],90[922],129[942]
;; rd  kill	(29) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],90[922],129[942]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; rd  out 	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ d87(bb 0 insn -1) }u188(7){ d88(bb 0 insn -1) }u189(16){ d185(bb 0 insn -1) }u190(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[939,940]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 22 23 )->[24]->( )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ d87(bb 0 insn -1) }u195(7){ d88(bb 0 insn -1) }u196(16){ d185(bb 0 insn -1) }u197(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 2 )->[25]->( )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ d87(bb 0 insn -1) }u202(7){ d88(bb 0 insn -1) }u203(16){ d185(bb 0 insn -1) }u204(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 16 15 )->[26]->( 28 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ d87(bb 0 insn -1) }u208(7){ d88(bb 0 insn -1) }u209(16){ d185(bb 0 insn -1) }u210(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],91[923]
;; rd  gen 	(1) 17[195]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 26 )->[27]->( )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ d87(bb 0 insn -1) }u214(7){ d88(bb 0 insn -1) }u215(16){ d185(bb 0 insn -1) }u216(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 26 )->[28]->( 1 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ d87(bb 0 insn -1) }u219(7){ d88(bb 0 insn -1) }u220(16){ d185(bb 0 insn -1) }u221(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 28 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u222(6){ d87(bb 0 insn -1) }u223(7){ d88(bb 0 insn -1) }u224(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 7 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 45 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 68 to worklist
  Adding insn 82 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 87 to worklist
  Adding insn 91 to worklist
  Adding insn 94 to worklist
  Adding insn 101 to worklist
  Adding insn 104 to worklist
  Adding insn 113 to worklist
  Adding insn 116 to worklist
  Adding insn 127 to worklist
  Adding insn 130 to worklist
  Adding insn 135 to worklist
  Adding insn 140 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 146 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 146:
Processing use of (reg 20 frame) in insn 144:
Processing use of (reg 17 flags) in insn 145:
Processing use of (reg 7 sp) in insn 140:
Processing use of (reg 5 di) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 7 sp) in insn 135:
Processing use of (reg 5 di) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 124) in insn 134:
  Adding insn 119 to worklist
  Adding insn 155 to worklist
Processing use of (reg 0 ax) in insn 155:
Processing use of (reg 125) in insn 119:
  Adding insn 161 to worklist
Processing use of (reg 0 ax) in insn 161:
Processing use of (reg 7 sp) in insn 130:
Processing use of (reg 5 di) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 90 [ D.37217 ]) in insn 129:
  Adding insn 123 to worklist
Processing use of (reg 20 frame) in insn 123:
Processing use of (reg 17 flags) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 90 [ D.37217 ]) in insn 126:
Processing use of (reg 129) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 131) in insn 125:
  Adding insn 15 to worklist
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 7 sp) in insn 116:
Processing use of (reg 5 di) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 88 [ D.37216 ]) in insn 115:
  Adding insn 111 to worklist
Processing use of (reg 20 frame) in insn 111:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 88 [ D.37216 ]) in insn 112:
Processing use of (reg 7 sp) in insn 104:
Processing use of (reg 5 di) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 91 [ D.37217 ]) in insn 103:
  Adding insn 97 to worklist
Processing use of (reg 20 frame) in insn 97:
Processing use of (reg 17 flags) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 91 [ D.37217 ]) in insn 100:
Processing use of (reg 123) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 131) in insn 99:
Processing use of (reg 7 sp) in insn 94:
Processing use of (reg 5 di) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 89 [ D.37216 ]) in insn 93:
  Adding insn 89 to worklist
Processing use of (reg 20 frame) in insn 89:
Processing use of (reg 17 flags) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 89 [ D.37216 ]) in insn 90:
Processing use of (reg 7 sp) in insn 87:
Processing use of (reg 4 si) in insn 87:
  Adding insn 85 to worklist
Processing use of (reg 5 di) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 101 [ errptr ]) in insn 86:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 132) in insn 85:
  Adding insn 30 to worklist
  Adding insn 173 to worklist
  Adding insn 174 to worklist
  Adding insn 175 to worklist
Processing use of (reg 20 frame) in insn 175:
Processing use of (reg 20 frame) in insn 174:
Processing use of (reg 20 frame) in insn 173:
Processing use of (reg 20 frame) in insn 30:
Processing use of (reg 20 frame) in insn 75:
Processing use of (reg 92 [ D.37218 ]) in insn 75:
  Adding insn 71 to worklist
  Adding insn 25 to worklist
Processing use of (reg 108) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 0 ax) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 100 [ name ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 71:
Processing use of (reg 92 [ D.37218 ]) in insn 76:
Processing use of (reg 93 [ D.37217 ]) in insn 76:
  Adding insn 72 to worklist
  Adding insn 11 to worklist
  Adding insn 57 to worklist
Processing use of (reg 106) in insn 57:
  Adding insn 16 to worklist
Processing use of (reg 131) in insn 16:
Processing use of (reg 106) in insn 11:
Processing use of (reg 20 frame) in insn 72:
Processing use of (reg 7 sp) in insn 82:
Processing use of (reg 1 dx) in insn 82:
  Adding insn 79 to worklist
Processing use of (reg 4 si) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 5 di) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 132) in insn 81:
Processing use of (reg 131) in insn 80:
Processing use of (reg 99 [ options ]) in insn 79:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 68:
Processing use of (reg 1 dx) in insn 68:
  Adding insn 65 to worklist
Processing use of (reg 4 si) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 5 di) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 94 [ D.37217 ]) in insn 67:
  Adding insn 36 to worklist
  Adding insn 9 to worklist
Processing use of (reg 106) in insn 9:
Processing use of (reg 0 ax) in insn 36:
Processing use of (reg 100 [ name ]) in insn 66:
Processing use of (reg 108) in insn 65:
Processing use of (reg 17 flags) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 92 [ D.37218 ]) in insn 53:
Processing use of (reg 20 frame) in insn 48:
Processing use of (reg 113 [ MEM[(const char_type &)name_5(D)] ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 100 [ name ]) in insn 47:
Processing use of (reg 17 flags) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 92 [ D.37218 ]) in insn 44:
Processing use of (reg 7 sp) in insn 35:
Processing use of (reg 1 dx) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 4 si) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 5 di) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 131) in insn 34:
Processing use of (reg 132) in insn 33:
Processing use of (reg 20 frame) in insn 37:
Processing use of (reg 94 [ D.37217 ]) in insn 37:
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 112 [ __dnew ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 20 frame) in insn 38:
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 108) in insn 26:
Processing use of (reg 17 flags) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 108) in insn 27:
Processing use of (reg 20 frame) in insn 7:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 106) in insn 17:
Processing use of (reg 17 flags) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 100 [ name ]) in insn 18:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_destroy_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,5e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1173{948d,220u,5e} in 84{72 regular + 12 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 99 100 101 106 131
;; live  kill	 17 [flags]
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 99 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 101 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37221+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:281 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31531]._M_p+0 S8 A128])
        (reg/f:DI 106)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 137)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              25 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 92 108
;; live  kill	
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 25 3 (set (reg:DI 108)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 23 26 3 (set (reg:DI 92 [ D.37218 ])
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (reg:DI 108)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 42)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 112 132
;; live  kill	 17 [flags]
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 4 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 30 33 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 132)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 131)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 4 (set (reg/f:DI 94 [ D.37217 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])
        (reg/f:DI 94 [ D.37217 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 112 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (nil))
(insn 39 38 42 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31531 + 16B]+0 S8 A128])
        (reg:DI 112 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ __dnew ])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 42 39 43 5 235 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37218 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 51)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; live  gen 	 93 113 132
;; live  kill	
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 100 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 48 47 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31531 + 16]+0 S1 A128])
        (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 48 173 6 (set (reg/f:DI 93 [ D.37217 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 173 11 51 6 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 51 173 52 7 237 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37218 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 151)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; live  gen 	 93 132
;; live  kill	
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 174 8 (set (reg/f:DI 93 [ D.37217 ])
        (reg/f:DI 106)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 174 57 151 8 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; live  gen 	 94 132
;; live  kill	
(code_label 151 174 150 9 246 "" [1 uses])
(note 150 151 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 150 175 9 (set (reg/f:DI 94 [ D.37217 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 175 9 60 9 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 92 93
;; live  kill	
(code_label 60 175 61 10 236 "" [0 uses])
(note 61 60 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 61 66 10 (set (reg:DI 1 dx)
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 66 65 67 10 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37217 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37217 ])
        (nil)))
(call_insn 68 67 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 68 72 10 (set (reg:DI 92 [ D.37218 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:DI 93 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              8 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 73 72 74 11 238 "" [0 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31531 + 8B]+0 S8 A64])
        (reg:DI 92 [ D.37218 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 76 75 79 11 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.37217 ])
                (reg:DI 92 [ D.37218 ])) [0 MEM[(char_type &)_47]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37217 ])
        (expr_list:REG_DEAD (reg:DI 92 [ D.37218 ])
            (nil))))
(insn 79 76 80 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 99 [ options ])) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ options ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 4 si)
        (reg/f:DI 131)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 81 80 82 11 (set (reg:DI 5 di)
        (reg/f:DI 132)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 82 81 83 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb9DestroyDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378210d8 DestroyDB>) [0 DestroyDB S1 A8])
        (const_int 0 [0])) db/c.cc:282 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb9DestroyDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378210d8 DestroyDB>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 83 82 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 12 (set (reg:DI 4 si)
        (reg/f:DI 132)) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ errptr ])) db/c.cc:282 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ errptr ])
        (nil)))
(call_insn 87 86 88 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:282 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 89
;; live  kill	
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg/f:DI 89 [ D.37216 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31532.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.37216 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 95)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  gen 	 5 [di]
;; live  kill	
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37216 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37216 ])
        (nil)))
(call_insn 94 93 95 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 91 123
;; live  kill	 17 [flags]
(code_label 95 94 96 15 239 "" [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 15 (set (reg/f:DI 91 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 99 97 100 15 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37217 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 142)
;;  succ:       16 [78.3%]  (FALLTHRU)
;;              26 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 16, loop depth 0, count 0, freq 7832, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [78.3%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37217 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37217 ])
        (nil)))
(call_insn 104 103 160 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
(code_label/s 160 104 163 17 248 "" [1 uses])
(note 163 160 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 161 163 109 17 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 17 [flags] 88
;; live  kill	
(code_label 109 161 110 18 241 "" [0 uses])
(note 110 109 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 18 (set (reg/f:DI 88 [ D.37216 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31532.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37216 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  gen 	 5 [di]
;; live  kill	
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37216 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37216 ])
        (nil)))
(call_insn 116 115 117 19 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 124
;; live  kill	
(code_label 117 116 118 20 242 "" [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 154 20 (set (reg:DI 124)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 124
;; live  kill	
(code_label/s 154 119 159 21 247 "" [1 uses])
(note 159 154 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 159 121 21 (set (reg:DI 124)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU,PRESERVE)
;;              20 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  gen 	 17 [flags] 90 129
;; live  kill	 17 [flags]
(code_label 121 155 122 22 243 "" [0 uses])
(note 122 121 123 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 125 22 (set (reg/f:DI 90 [ D.37217 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31531]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 125 123 126 22 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37217 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 127 126 128 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 131)
;;  succ:       23 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [69.8%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  gen 	 5 [di]
;; live  kill	
(note 128 127 129 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 23 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37217 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37217 ])
        (nil)))
(call_insn 130 129 131 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [30.2%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  gen 	 5 [di]
;; live  kill	
(code_label 131 130 132 24 244 "" [1 uses])
(note 132 131 134 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 134 132 135 24 (set (reg:DI 5 di)
        (reg:DI 124)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 135 134 137 24 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 137 135 138 25 234 "" [1 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 140 139 142 25 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              15 [21.6%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 142 140 149 26 233 "" [1 uses])
(note 149 142 144 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 144 149 145 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37221+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:283 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 145 144 152 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) db/c.cc:283 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 148)
;;  succ:       28 [100.0%] 
;;              27 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 4
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [0.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 152 145 146 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 152 148 27 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:283 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 27, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 148 146 153 28 245 "" [1 uses])
(note 153 148 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_repair_db(const leveldb_options_t*, const char*, char**) (leveldb_repair_db, funcdef_no=1444, decl_uid=2217, cgraph_uid=551, symbol_order=554)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 29 n_edges 36 count 29 (    1)


void leveldb_repair_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,5e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1173{948d,220u,5e} in 84{72 regular + 12 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919
;;  reg->defs[] map:	0[0,14] 1[15,32] 2[33,45] 4[46,62] 5[63,86] 6[87,87] 7[88,88] 8[89,100] 9[101,112] 10[113,124] 11[125,136] 12[137,148] 13[149,160] 14[161,172] 15[173,184] 16[185,185] 17[186,212] 18[213,224] 19[225,236] 20[237,237] 21[238,250] 22[251,263] 23[264,276] 24[277,289] 25[290,302] 26[303,315] 27[316,328] 28[329,341] 29[342,353] 30[354,365] 31[366,377] 32[378,389] 33[390,401] 34[402,413] 35[414,425] 36[426,437] 37[438,450] 38[451,463] 39[464,475] 40[476,487] 45[488,499] 46[500,511] 47[512,523] 48[524,535] 49[536,547] 50[548,559] 51[560,571] 52[572,583] 53[584,595] 54[596,607] 55[608,619] 56[620,631] 57[632,643] 58[644,655] 59[656,667] 60[668,679] 61[680,691] 62[692,703] 63[704,715] 64[716,727] 65[728,739] 66[740,751] 67[752,763] 68[764,775] 69[776,787] 70[788,799] 71[800,811] 72[812,823] 73[824,835] 74[836,847] 75[848,859] 76[860,871] 77[872,883] 78[884,895] 79[896,907] 80[908,919] 88[920,920] 89[921,921] 90[922,922] 91[923,923] 92[924,925] 93[926,928] 94[929,930] 99[931,931] 100[932,932] 101[933,933] 106[934,934] 108[935,935] 112[936,936] 113[937,937] 123[938,938] 124[939,940] 125[941,941] 129[942,942] 131[943,943] 132[944,947] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d32(1){ }d45(2){ }d62(4){ }d86(5){ }d87(6){ }d88(7){ }d185(16){ }d237(20){ }d250(21){ }d263(22){ }d276(23){ }d289(24){ }d302(25){ }d315(26){ }d328(27){ }d341(28){ }d450(37){ }d463(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[14],1[32],2[45],4[62],5[86],6[87],7[88],16[185],20[237],21[250],22[263],23[276],24[289],25[302],26[315],27[328],28[341],37[450],38[463]
;; rd  kill	(221) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],2[33,34,35,36,37,38,39,40,41,42,43,44,45],4[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],5[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],6[87],7[88],16[185],20[237],21[238,239,240,241,242,243,244,245,246,247,248,249,250],22[251,252,253,254,255,256,257,258,259,260,261,262,263],23[264,265,266,267,268,269,270,271,272,273,274,275,276],24[277,278,279,280,281,282,283,284,285,286,287,288,289],25[290,291,292,293,294,295,296,297,298,299,300,301,302],26[303,304,305,306,307,308,309,310,311,312,313,314,315],27[316,317,318,319,320,321,322,323,324,325,326,327,328],28[329,330,331,332,333,334,335,336,337,338,339,340,341],37[438,439,440,441,442,443,444,445,446,447,448,449,450],38[451,452,453,454,455,456,457,458,459,460,461,462,463]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[32],4[62],5[86],6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 25 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d87(bb 0 insn -1) }u1(7){ d88(bb 0 insn -1) }u2(16){ d185(bb 0 insn -1) }u3(20){ d237(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 99 100 101 106 131
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[32],4[62],5[86],6[87],7[88],16[185],20[237]
;; rd  gen 	(6) 17[211],99[931],100[932],101[933],106[934],131[943]
;; rd  kill	(32) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],99[931],100[932],101[933],106[934],131[943]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; rd  out 	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ d87(bb 0 insn -1) }u15(7){ d88(bb 0 insn -1) }u16(16){ d185(bb 0 insn -1) }u17(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 92 108
;; live  kill	
;; rd  in  	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;; rd  gen 	(4) 0[13],17[193],92[924],108[935]
;; rd  kill	(45) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],92[924,925],108[935]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ d87(bb 0 insn -1) }u28(7){ d88(bb 0 insn -1) }u29(16){ d185(bb 0 insn -1) }u30(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 112 132
;; live  kill	 17 [flags]
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(4) 0[12],94[930],112[936],132[947]
;; rd  kill	(22) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],94[929,930],112[936],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],94[930],99[931],100[932],101[933],108[935],131[943],132[947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ d87(bb 0 insn -1) }u47(7){ d88(bb 0 insn -1) }u48(16){ d185(bb 0 insn -1) }u49(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(1) 17[187]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 5 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ d87(bb 0 insn -1) }u53(7){ d88(bb 0 insn -1) }u54(16){ d185(bb 0 insn -1) }u55(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; live  gen 	 93 113 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(3) 93[927],113[937],132[946]
;; rd  kill	(8) 93[926,927,928],113[937],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],92[924],93[927],99[931],101[933],131[943],132[946]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d87(bb 0 insn -1) }u62(7){ d88(bb 0 insn -1) }u63(16){ d185(bb 0 insn -1) }u64(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(1) 17[186]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ d87(bb 0 insn -1) }u68(7){ d88(bb 0 insn -1) }u69(16){ d185(bb 0 insn -1) }u70(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; live  gen 	 93 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(2) 93[926],132[945]
;; rd  kill	(7) 93[926,927,928],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],92[924],93[926],99[931],101[933],131[943],132[945]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ d87(bb 0 insn -1) }u74(7){ d88(bb 0 insn -1) }u75(16){ d185(bb 0 insn -1) }u76(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; live  gen 	 94 132
;; live  kill	
;; rd  in  	(11) 6[87],7[88],16[185],20[237],92[924],99[931],100[932],101[933],106[934],108[935],131[943]
;; rd  gen 	(2) 94[929],132[944]
;; rd  kill	(6) 94[929,930],132[944,945,946,947]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],94[929],99[931],100[932],101[933],108[935],131[943],132[944]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 9 4 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ d87(bb 0 insn -1) }u80(7){ d88(bb 0 insn -1) }u81(16){ d185(bb 0 insn -1) }u82(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 92 93
;; live  kill	
;; rd  in  	(13) 6[87],7[88],16[185],20[237],94[929,930],99[931],100[932],101[933],108[935],131[943],132[944,947]
;; rd  gen 	(3) 0[11],92[925],93[928]
;; rd  kill	(20) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],92[924,925],93[926,927,928]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; rd  out 	(11) 6[87],7[88],16[185],20[237],92[925],93[928],99[931],101[933],131[943],132[944,947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 6 8 10 )->[11]->( 21(EH) 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ d87(bb 0 insn -1) }u93(7){ d88(bb 0 insn -1) }u94(16){ d185(bb 0 insn -1) }u95(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(16) 6[87],7[88],16[185],20[237],92[924,925],93[926,927,928],99[931],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; rd  out 	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 11 )->[12]->( 17(EH) 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ d87(bb 0 insn -1) }u110(7){ d88(bb 0 insn -1) }u111(16){ d185(bb 0 insn -1) }u112(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; rd  in  	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(1) 0[9]
;; rd  kill	(15) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; rd  out 	(5) 6[87],7[88],16[185],20[237],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ d87(bb 0 insn -1) }u120(7){ d88(bb 0 insn -1) }u121(16){ d185(bb 0 insn -1) }u122(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 89
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],131[943]
;; rd  gen 	(2) 17[205],89[921]
;; rd  kill	(28) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],89[921]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ d87(bb 0 insn -1) }u127(7){ d88(bb 0 insn -1) }u128(16){ d185(bb 0 insn -1) }u129(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; rd  out 	(5) 6[87],7[88],16[185],20[237],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 13 14 )->[15]->( 16 26 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ d87(bb 0 insn -1) }u134(7){ d88(bb 0 insn -1) }u135(16){ d185(bb 0 insn -1) }u136(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 91 123
;; live  kill	 17 [flags]
;; rd  in  	(6) 6[87],7[88],16[185],20[237],89[921],131[943]
;; rd  gen 	(3) 17[203],91[923],123[938]
;; rd  kill	(29) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],91[923],123[938]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[87],7[88],16[185],20[237],91[923]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 15 )->[16]->( 26 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ d87(bb 0 insn -1) }u143(7){ d88(bb 0 insn -1) }u144(16){ d185(bb 0 insn -1) }u145(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],91[923]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 12(EH) )->[17]->( 18 )
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ d87(bb 0 insn -1) }u150(7){ d88(bb 0 insn -1) }u151(16){ d185(bb 0 insn -1) }u152(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],131[943]
;; rd  gen 	(3) 0[6],1[23],125[941]
;; rd  kill	(34) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],125[941]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 17 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ d87(bb 0 insn -1) }u155(7){ d88(bb 0 insn -1) }u156(16){ d185(bb 0 insn -1) }u157(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;; rd  gen 	(2) 17[201],88[920]
;; rd  kill	(28) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],88[920]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; rd  out 	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ d87(bb 0 insn -1) }u162(7){ d88(bb 0 insn -1) }u163(16){ d185(bb 0 insn -1) }u164(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],125[941],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 18 19 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ d87(bb 0 insn -1) }u169(7){ d88(bb 0 insn -1) }u170(16){ d185(bb 0 insn -1) }u171(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 124
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],88[920],125[941],131[943]
;; rd  gen 	(1) 124[940]
;; rd  kill	(2) 124[939,940]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[940],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 11(EH) )->[21]->( 22 )
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ d87(bb 0 insn -1) }u174(7){ d88(bb 0 insn -1) }u175(16){ d185(bb 0 insn -1) }u176(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 124
;; live  kill	
;; rd  in  	(10) 6[87],7[88],16[185],20[237],101[933],131[943],132[944,945,946,947]
;; rd  gen 	(3) 0[4],1[21],124[939]
;; rd  kill	(35) 0[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],1[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],124[939,940]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[939],131[943]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 21 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ d87(bb 0 insn -1) }u179(7){ d88(bb 0 insn -1) }u180(16){ d185(bb 0 insn -1) }u181(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  gen 	 17 [flags] 90 129
;; live  kill	 17 [flags]
;; rd  in  	(7) 6[87],7[88],16[185],20[237],124[939,940],131[943]
;; rd  gen 	(3) 17[199],90[922],129[942]
;; rd  kill	(29) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],90[922],129[942]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; rd  out 	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ d87(bb 0 insn -1) }u188(7){ d88(bb 0 insn -1) }u189(16){ d185(bb 0 insn -1) }u190(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; rd  out 	(6) 6[87],7[88],16[185],20[237],124[939,940]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 22 23 )->[24]->( )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ d87(bb 0 insn -1) }u195(7){ d88(bb 0 insn -1) }u196(16){ d185(bb 0 insn -1) }u197(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[87],7[88],16[185],20[237],90[922],124[939,940]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 2 )->[25]->( )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ d87(bb 0 insn -1) }u202(7){ d88(bb 0 insn -1) }u203(16){ d185(bb 0 insn -1) }u204(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(9) 6[87],7[88],16[185],20[237],99[931],100[932],101[933],106[934],131[943]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 16 15 )->[26]->( 28 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ d87(bb 0 insn -1) }u208(7){ d88(bb 0 insn -1) }u209(16){ d185(bb 0 insn -1) }u210(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[87],7[88],16[185],20[237],91[923]
;; rd  gen 	(1) 17[195]
;; rd  kill	(27) 17[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 26 )->[27]->( )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ d87(bb 0 insn -1) }u214(7){ d88(bb 0 insn -1) }u215(16){ d185(bb 0 insn -1) }u216(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 26 )->[28]->( 1 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ d87(bb 0 insn -1) }u219(7){ d88(bb 0 insn -1) }u220(16){ d185(bb 0 insn -1) }u221(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[87],7[88],16[185],20[237]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 16 { d185(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

( 28 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u222(6){ d87(bb 0 insn -1) }u223(7){ d88(bb 0 insn -1) }u224(20){ d237(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[87],7[88],16[185],20[237]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d87(bb 0 insn -1) }
;;   reg 7 { d88(bb 0 insn -1) }
;;   reg 20 { d237(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 7 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 45 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 68 to worklist
  Adding insn 82 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 87 to worklist
  Adding insn 91 to worklist
  Adding insn 94 to worklist
  Adding insn 101 to worklist
  Adding insn 104 to worklist
  Adding insn 113 to worklist
  Adding insn 116 to worklist
  Adding insn 127 to worklist
  Adding insn 130 to worklist
  Adding insn 135 to worklist
  Adding insn 140 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 146 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 146:
Processing use of (reg 20 frame) in insn 144:
Processing use of (reg 17 flags) in insn 145:
Processing use of (reg 7 sp) in insn 140:
Processing use of (reg 5 di) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 7 sp) in insn 135:
Processing use of (reg 5 di) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 124) in insn 134:
  Adding insn 119 to worklist
  Adding insn 155 to worklist
Processing use of (reg 0 ax) in insn 155:
Processing use of (reg 125) in insn 119:
  Adding insn 161 to worklist
Processing use of (reg 0 ax) in insn 161:
Processing use of (reg 7 sp) in insn 130:
Processing use of (reg 5 di) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 90 [ D.37240 ]) in insn 129:
  Adding insn 123 to worklist
Processing use of (reg 20 frame) in insn 123:
Processing use of (reg 17 flags) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 90 [ D.37240 ]) in insn 126:
Processing use of (reg 129) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 131) in insn 125:
  Adding insn 15 to worklist
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 7 sp) in insn 116:
Processing use of (reg 5 di) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 88 [ D.37239 ]) in insn 115:
  Adding insn 111 to worklist
Processing use of (reg 20 frame) in insn 111:
Processing use of (reg 17 flags) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 88 [ D.37239 ]) in insn 112:
Processing use of (reg 7 sp) in insn 104:
Processing use of (reg 5 di) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 91 [ D.37240 ]) in insn 103:
  Adding insn 97 to worklist
Processing use of (reg 20 frame) in insn 97:
Processing use of (reg 17 flags) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 91 [ D.37240 ]) in insn 100:
Processing use of (reg 123) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 131) in insn 99:
Processing use of (reg 7 sp) in insn 94:
Processing use of (reg 5 di) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 89 [ D.37239 ]) in insn 93:
  Adding insn 89 to worklist
Processing use of (reg 20 frame) in insn 89:
Processing use of (reg 17 flags) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 89 [ D.37239 ]) in insn 90:
Processing use of (reg 7 sp) in insn 87:
Processing use of (reg 4 si) in insn 87:
  Adding insn 85 to worklist
Processing use of (reg 5 di) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 101 [ errptr ]) in insn 86:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 132) in insn 85:
  Adding insn 30 to worklist
  Adding insn 173 to worklist
  Adding insn 174 to worklist
  Adding insn 175 to worklist
Processing use of (reg 20 frame) in insn 175:
Processing use of (reg 20 frame) in insn 174:
Processing use of (reg 20 frame) in insn 173:
Processing use of (reg 20 frame) in insn 30:
Processing use of (reg 20 frame) in insn 75:
Processing use of (reg 92 [ D.37241 ]) in insn 75:
  Adding insn 71 to worklist
  Adding insn 25 to worklist
Processing use of (reg 108) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 0 ax) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 100 [ name ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 71:
Processing use of (reg 92 [ D.37241 ]) in insn 76:
Processing use of (reg 93 [ D.37240 ]) in insn 76:
  Adding insn 72 to worklist
  Adding insn 11 to worklist
  Adding insn 57 to worklist
Processing use of (reg 106) in insn 57:
  Adding insn 16 to worklist
Processing use of (reg 131) in insn 16:
Processing use of (reg 106) in insn 11:
Processing use of (reg 20 frame) in insn 72:
Processing use of (reg 7 sp) in insn 82:
Processing use of (reg 1 dx) in insn 82:
  Adding insn 79 to worklist
Processing use of (reg 4 si) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 5 di) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 132) in insn 81:
Processing use of (reg 131) in insn 80:
Processing use of (reg 99 [ options ]) in insn 79:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 68:
Processing use of (reg 1 dx) in insn 68:
  Adding insn 65 to worklist
Processing use of (reg 4 si) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 5 di) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 94 [ D.37240 ]) in insn 67:
  Adding insn 36 to worklist
  Adding insn 9 to worklist
Processing use of (reg 106) in insn 9:
Processing use of (reg 0 ax) in insn 36:
Processing use of (reg 100 [ name ]) in insn 66:
Processing use of (reg 108) in insn 65:
Processing use of (reg 17 flags) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 92 [ D.37241 ]) in insn 53:
Processing use of (reg 20 frame) in insn 48:
Processing use of (reg 113 [ MEM[(const char_type &)name_5(D)] ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 100 [ name ]) in insn 47:
Processing use of (reg 17 flags) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 92 [ D.37241 ]) in insn 44:
Processing use of (reg 7 sp) in insn 35:
Processing use of (reg 1 dx) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 4 si) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 5 di) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 131) in insn 34:
Processing use of (reg 132) in insn 33:
Processing use of (reg 20 frame) in insn 37:
Processing use of (reg 94 [ D.37240 ]) in insn 37:
Processing use of (reg 20 frame) in insn 39:
Processing use of (reg 112 [ __dnew ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 20 frame) in insn 38:
Processing use of (reg 20 frame) in insn 26:
Processing use of (reg 108) in insn 26:
Processing use of (reg 17 flags) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 108) in insn 27:
Processing use of (reg 20 frame) in insn 7:
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 106) in insn 17:
Processing use of (reg 17 flags) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 100 [ name ]) in insn 18:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_repair_db(const leveldb_options_t*, const char*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={15d,4u} r1={18d,4u} r2={13d} r4={17d,5u} r5={24d,12u} r6={1d,28u} r7={1d,40u} r8={12d} r9={12d} r10={12d} r11={12d} r12={12d} r13={12d} r14={12d} r15={12d} r16={1d,27u} r17={27d,9u} r18={12d} r19={12d} r20={1d,48u,5e} r21={13d} r22={13d} r23={13d} r24={13d} r25={13d} r26={13d} r27={13d} r28={13d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={13d} r38={13d} r39={12d} r40={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r88={1d,2u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r92={2d,4u} r93={3d,1u} r94={2d,2u} r99={1d,1u} r100={1d,4u} r101={1d,1u} r106={1d,4u} r108={1d,4u} r112={1d,1u} r113={1d,1u} r123={1d,1u} r124={2d,1u} r125={1d,1u} r129={1d,1u} r131={1d,5u} r132={4d,3u} 
;;    total ref usage 1173{948d,220u,5e} in 84{72 regular + 12 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99 100 101 106 131
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 99 100 101 106 131
;; live  kill	 17 [flags]
(note 12 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 12 3 2 (set (reg/v/f:DI 99 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 100 [ name ])
        (reg:DI 4 si [ name ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 101 [ errptr ])
        (reg:DI 1 dx [ errptr ])) db/c.cc:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ errptr ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 15 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37244+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:288 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 7 16 2 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 106)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:109 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(struct _Alloc_hider *)&D.31540]._M_p+0 S8 A128])
        (reg/f:DI 106)) /usr/include/c++/5/bits/basic_string.h:109 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 100 [ name ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:456 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) /usr/include/c++/5/bits/basic_string.h:456 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2163 (nil)))
 -> 137)
;;  succ:       3 [78.4%]  (FALLTHRU)
;;              25 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131

;; basic block 3, loop depth 0, count 0, freq 9996, maybe hot
;; Invalid sum of incoming frequencies 7837, should be 9996
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 108
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 131
;; live  gen 	 0 [ax] 5 [di] 17 [flags] 92 108
;; live  kill	
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(call_insn/i 22 21 23 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:267 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7fb538cf5870 __builtin_strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 25 3 (set (reg:DI 108)
        (reg:DI 0 ax)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 25 23 26 3 (set (reg:DI 92 [ D.37241 ])
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:267 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])
        (reg:DI 108)) /usr/include/c++/5/bits/basic_string.tcc:219 89 {*movdi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 108)
            (const_int 15 [0xf]))) /usr/include/c++/5/bits/basic_string.tcc:221 8 {*cmpdi_1}
     (nil))
(jump_insn 28 27 29 3 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) /usr/include/c++/5/bits/basic_string.tcc:221 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 42)
;;  succ:       4 [29.0%]  (FALLTHRU)
;;              5 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 4, loop depth 0, count 0, freq 2899, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [29.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 94 112 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 108 131
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 94 112 132
;; live  kill	 17 [flags]
(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 32 4 (parallel [
            (set (reg/f:DI 132)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.tcc:223 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 32 30 33 4 (set (reg:DI 1 dx)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 132)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/f:DI 131)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 35 34 36 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>) [0 _M_create S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.tcc:223 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm") [flags 0x41]  <function_decl 0x7fb537cba5e8 _M_create>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 36 35 37 4 (set (reg/f:DI 94 [ D.37240 ])
        (reg:DI 0 ax)) /usr/include/c++/5/bits/basic_string.tcc:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 37 36 38 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])
        (reg/f:DI 94 [ D.37240 ])) /usr/include/c++/5/bits/basic_string.h:127 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 112 [ __dnew ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (nil))
(insn 39 38 42 4 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [9 MEM[(size_type *)&D.31540 + 16B]+0 S8 A128])
        (reg:DI 112 [ __dnew ])) /usr/include/c++/5/bits/basic_string.h:159 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 112 [ __dnew ])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 5, loop depth 0, count 0, freq 7097, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [71.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 42 39 43 5 261 "" [1 uses])
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37241 ])
            (const_int 1 [0x1]))) /usr/include/c++/5/bits/basic_string.h:296 8 {*cmpdi_1}
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) /usr/include/c++/5/bits/basic_string.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7196 (nil)))
 -> 51)
;;  succ:       6 [28.0%]  (FALLTHRU)
;;              7 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 6, loop depth 0, count 0, freq 1990, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [28.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 106
;; lr  def 	 93 113 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 131
;; live  gen 	 93 113 132
;; live  kill	
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (mem:QI (reg/v/f:DI 100 [ name ]) [0 MEM[(const char_type &)name_5(D)]+0 S1 A8])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 48 47 11 6 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 MEM[(char_type &)&D.31540 + 16]+0 S1 A128])
        (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 113 [ MEM[(const char_type &)name_5(D)] ])
        (nil)))
(insn 11 48 173 6 (set (reg/f:DI 93 [ D.37240 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:243 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 173 11 51 6 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 7, loop depth 0, count 0, freq 5107, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [72.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 51 173 52 7 263 "" [1 uses])
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 92 [ D.37241 ])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:288 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 54 53 55 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 151)
            (pc))) /usr/include/c++/5/bits/char_traits.h:288 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 434 (nil)))
 -> 151)
;;  succ:       8 [95.7%]  (FALLTHRU)
;;              9 [4.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 100 101 106 108 131

;; basic block 8, loop depth 0, count 0, freq 4885, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [95.7%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 93 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 99 101 106 131
;; live  gen 	 93 132
;; live  kill	
(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 57 55 174 8 (set (reg/f:DI 93 [ D.37240 ])
        (reg/f:DI 106)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 174 57 151 8 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 9, loop depth 0, count 0, freq 222, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [4.3%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(6){ }u74(7){ }u75(16){ }u76(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 94 132
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 100 101 106 108 131
;; live  gen 	 94 132
;; live  kill	
(code_label 151 174 150 9 272 "" [1 uses])
(note 150 151 9 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 9 150 175 9 (set (reg/f:DI 94 [ D.37240 ])
        (reg/f:DI 106)) /usr/include/c++/5/bits/char_traits.h:288 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 106)
        (nil)))
(insn 175 9 60 9 (set (reg/f:DI 132)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))) 214 {*leadi}
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132

;; basic block 10, loop depth 0, count 0, freq 3121, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              4 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(6){ }u80(7){ }u81(16){ }u82(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 100 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94 99 100 101 108 131 132
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 92 93
;; live  kill	
(code_label 60 175 61 10 262 "" [0 uses])
(note 61 60 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 61 66 10 (set (reg:DI 1 dx)
        (reg:DI 108)) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 108)
        (nil)))
(insn 66 65 67 10 (set (reg:DI 4 si)
        (reg/v/f:DI 100 [ name ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [ name ])
        (nil)))
(insn 67 66 68 10 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.37240 ])) /usr/include/c++/5/bits/char_traits.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.37240 ])
        (nil)))
(call_insn 68 67 71 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>) [0 memcpy S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/char_traits.h:290 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7fb5372f5948 memcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 71 68 72 10 (set (reg:DI 92 [ D.37241 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 __dnew+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 72 71 73 10 (set (reg/f:DI 93 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              8 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(6){ }u93(7){ }u94(16){ }u95(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 131 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 99 101 131 132
;; live  gen 	 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 73 72 74 11 264 "" [0 uses])
(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 11 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 MEM[(size_type *)&D.31540 + 8B]+0 S8 A64])
        (reg:DI 92 [ D.37241 ])) /usr/include/c++/5/bits/basic_string.h:131 89 {*movdi_internal}
     (nil))
(insn 76 75 79 11 (set (mem:QI (plus:DI (reg/f:DI 93 [ D.37240 ])
                (reg:DI 92 [ D.37241 ])) [0 MEM[(char_type &)_47]+0 S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/char_traits.h:243 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.37240 ])
        (expr_list:REG_DEAD (reg:DI 92 [ D.37241 ])
            (nil))))
(insn 79 76 80 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 99 [ options ])) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ options ])
        (nil)))
(insn 80 79 81 11 (set (reg:DI 4 si)
        (reg/f:DI 131)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 81 80 82 11 (set (reg:DI 5 di)
        (reg/f:DI 132)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(call_insn 82 81 83 11 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb8RepairDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378211b0 RepairDB>) [0 RepairDB S1 A8])
        (const_int 0 [0])) db/c.cc:289 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb8RepairDBERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNS_7OptionsE") [flags 0x41]  <function_decl 0x7fb5378211b0 RepairDB>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              12 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132

;; basic block 12, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [100.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 131 132
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(note 83 82 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 85 83 86 12 (set (reg:DI 4 si)
        (reg/f:DI 132)) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 86 85 87 12 (set (reg:DI 5 di)
        (reg/v/f:DI 101 [ errptr ])) db/c.cc:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [ errptr ])
        (nil)))
(call_insn 87 86 88 12 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:289 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 3 [0x3])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       17 (ABNORMAL,ABNORMAL_CALL,EH)
;;              13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 13, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(6){ }u120(7){ }u121(16){ }u122(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 89
;; live  kill	
(note 88 87 89 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 13 (set (reg/f:DI 89 [ D.37239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31541.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 90 89 91 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.37239 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 91 90 92 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 95)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 95)
;;  succ:       14 [69.8%]  (FALLTHRU)
;;              15 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131

;; basic block 14, loop depth 0, count 0, freq 6980, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [69.8%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 131
;; live  gen 	 5 [di]
;; live  kill	
(note 92 91 93 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 14 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.37239 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37239 ])
        (nil)))
(call_insn 94 93 95 14 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       15 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131

;; basic block 15, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [30.2%] 
;;              14 [100.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(6){ }u134(7){ }u135(16){ }u136(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 91 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 17 [flags] 91 123
;; live  kill	 17 [flags]
(code_label 95 94 96 15 265 "" [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 99 15 (set (reg/f:DI 91 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 99 97 100 15 (parallel [
            (set (reg/f:DI 123)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 100 99 101 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37240 ])
            (reg/f:DI 123))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 123)
        (nil)))
(jump_insn 101 100 102 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 142)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 142)
;;  succ:       16 [78.3%]  (FALLTHRU)
;;              26 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 16, loop depth 0, count 0, freq 7832, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 [78.3%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(6){ }u143(7){ }u144(16){ }u145(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
(note 102 101 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 16 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37240 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37240 ])
        (nil)))
(call_insn 104 103 160 16 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 17 artificial_defs: { d6(0){ }d23(1){ }}
;; bb 17 artificial_uses: { u149(6){ }u150(7){ }u151(16){ }u152(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 125
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 125
;; live  kill	
(code_label/s 160 104 163 17 274 "" [1 uses])
(note 163 160 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 161 163 109 17 (set (reg:DI 125)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 18, loop depth 0, count 0, freq 0
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(6){ }u155(7){ }u156(16){ }u157(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 17 [flags] 88
;; live  kill	
(code_label 109 161 110 18 267 "" [0 uses])
(note 110 109 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 18 (set (reg/f:DI 88 [ D.37239 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31541.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 112 111 113 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37239 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 113 112 114 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 117)
;;  succ:       19 [69.8%]  (FALLTHRU)
;;              20 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131

;; basic block 19, loop depth 0, count 0, freq 0
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [69.8%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u161(6){ }u162(7){ }u163(16){ }u164(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 125 131
;; live  gen 	 5 [di]
;; live  kill	
(note 114 113 115 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 19 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37239 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37239 ])
        (nil)))
(call_insn 116 115 117 19 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131

;; basic block 20, loop depth 0, count 0, freq 0
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [30.2%] 
;;              19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u168(6){ }u169(7){ }u170(16){ }u171(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 131
;; live  gen 	 124
;; live  kill	
(code_label 117 116 118 20 268 "" [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 154 20 (set (reg:DI 124)
        (reg:DI 125)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 125)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 21, loop depth 0, count 0, freq 0
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 21 artificial_defs: { d4(0){ }d21(1){ }}
;; bb 21 artificial_uses: { u173(6){ }u174(7){ }u175(16){ }u176(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 124
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; live  gen 	 0 [ax] 1 [dx] 124
;; live  kill	
(code_label/s 154 119 159 21 273 "" [1 uses])
(note 159 154 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 159 121 21 (set (reg:DI 124)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       22 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131

;; basic block 22, loop depth 0, count 0, freq 0
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU,PRESERVE)
;;              20 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u178(6){ }u179(7){ }u180(16){ }u181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 90 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124 131
;; live  gen 	 17 [flags] 90 129
;; live  kill	 17 [flags]
(code_label 121 155 122 22 269 "" [0 uses])
(note 122 121 123 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 125 22 (set (reg/f:DI 90 [ D.37240 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&D.31540]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 125 123 126 22 (parallel [
            (set (reg/f:DI 129)
                (plus:DI (reg/f:DI 131)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 131)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 126 125 127 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37240 ])
            (reg/f:DI 129))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 129)
        (nil)))
(jump_insn 127 126 128 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 131)
;;  succ:       23 [69.8%]  (FALLTHRU)
;;              24 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124

;; basic block 23, loop depth 0, count 0, freq 0
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [69.8%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u187(6){ }u188(7){ }u189(16){ }u190(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 124
;; live  gen 	 5 [di]
;; live  kill	
(note 128 127 129 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 23 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37240 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37240 ])
        (nil)))
(call_insn 130 129 131 23 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124

;; basic block 24, loop depth 0, count 0, freq 0
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [30.2%] 
;;              23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u194(6){ }u195(7){ }u196(16){ }u197(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 124
;; live  gen 	 5 [di]
;; live  kill	
(code_label 131 130 132 24 270 "" [1 uses])
(note 132 131 134 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 134 132 135 24 (set (reg:DI 5 di)
        (reg:DI 124)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 124)
        (nil)))
(call_insn 135 134 137 24 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, count 0, freq 1275, maybe hot
;; Invalid sum of incoming frequencies 2163, should be 1275
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 137 135 138 25 260 "" [1 uses])
(note 138 137 139 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 25 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7fb536e46480 *.LC23>)) /usr/include/c++/5/bits/basic_string.tcc:216 89 {*movdi_internal}
     (nil))
(call_insn 140 139 142 25 (call (mem:QI (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>) [0 __throw_logic_error S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.tcc:216 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZSt19__throw_logic_errorPKc") [flags 0x41]  <function_decl 0x7fb5388d86c0 __throw_logic_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              15 [21.6%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 142 140 149 26 259 "" [1 uses])
(note 149 142 144 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 144 149 145 26 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37244+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:290 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 145 144 152 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) db/c.cc:290 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 148)
;;  succ:       28 [100.0%] 
;;              27 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, count 0, freq 4
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [0.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u213(6){ }u214(7){ }u215(16){ }u216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 152 145 146 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(call_insn 146 152 148 27 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:290 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 28, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 27, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u218(6){ }u219(7){ }u220(16){ }u221(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 148 146 153 28 271 "" [1 uses])
(note 153 148 0 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_destroy(leveldb_iterator_t*) (leveldb_iter_destroy, funcdef_no=1445, decl_uid=2219, cgraph_uid=552, symbol_order=555)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void leveldb_iter_destroy(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 87[166,166] 90[167,167] 91[168,168] 92[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[43]
;; rd  gen 	(3) 17[38],87[166],90[167]
;; rd  kill	(5) 17[36,37,38],87[166],90[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; rd  out 	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d17(bb 0 insn -1) }u9(7){ d18(bb 0 insn -1) }u10(16){ d35(bb 0 insn -1) }u11(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(2) 91[168],92[169]
;; rd  kill	(2) 91[168],92[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; rd  out 	(5) 6[17],7[18],16[35],20[43],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ d17(bb 0 insn -1) }u19(7){ d18(bb 0 insn -1) }u20(16){ d35(bb 0 insn -1) }u21(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(6){ d17(bb 0 insn -1) }u26(7){ d18(bb 0 insn -1) }u27(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 90 [ iter ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 91 [ _4->_vptr.Iterator ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.37251 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 90 [ iter ]) in insn 6:
Processing use of (reg 87 [ D.37251 ]) in insn 12:
Processing use of (reg 17 flags) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37251 ]) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_destroy(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:292 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37251 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_3(D)->rep+0 S8 A64])) db/c.cc:293 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37251 ])
            (const_int 0 [0]))) db/c.cc:293 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:293 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37251 ]) [3 _4->_vptr.Iterator+0 S8 A64])) db/c.cc:293 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.Iterator ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64])) db/c.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.Iterator ])
        (nil)))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37251 ])) db/c.cc:293 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37251 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) [0 *OBJ_TYPE_REF(_6;(struct Iterator)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:293 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
(code_label 14 13 15 4 286 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ iter ])) db/c.cc:294 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(call_insn/j 17 16 0 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:294 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function unsigned char leveldb_iter_valid(const leveldb_iterator_t*) (leveldb_iter_valid, funcdef_no=1446, decl_uid=2221, cgraph_uid=553, symbol_order=556)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


unsigned char leveldb_iter_valid(const leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 112{96d,16u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 93[93,93] 94[94,94] 95[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 93 94 95
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(5) 0[0],87[92],93[93],94[94],95[95]
;; rd  kill	(6) 0[0,1],87[92],93[93],94[94],95[95]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(0){ d0(bb 2 insn 10) }u13(6){ d11(bb 0 insn -1) }u14(7){ d12(bb 0 insn -1) }u15(20){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 10) }
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 94 [ _3->_vptr.Iterator ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37256 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 93 [ iter ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37256 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


unsigned char leveldb_iter_valid(const leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r93={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 112{96d,16u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 95
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87 93 94 95
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:297 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37256 ])
        (mem/f:DI (reg/v/f:DI 93 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37256 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.Iterator ])
                (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B]+0 S8 A64])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37256 ])) db/c.cc:298 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37256 ])
        (nil)))
(call_insn/j 10 9 0 2 (set (reg:QI 0 ax)
        (call (mem:QI (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->2) S1 A8])
            (const_int 0 [0]))) db/c.cc:298 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg/f:DI 95 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 16B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_seek_to_first(leveldb_iterator_t*) (leveldb_iter_seek_to_first, funcdef_no=1447, decl_uid=2223, cgraph_uid=554, symbol_order=557)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_iter_seek_to_first(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 90[93,93] 91[94,94] 92[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 87[92],90[93],91[94],92[95]
;; rd  kill	(4) 87[92],90[93],91[94],92[95]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 91 [ _3->_vptr.Iterator ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37263 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 90 [ iter ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37263 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_seek_to_first(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:301 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37263 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37263 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B]+0 S8 A64])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37263 ])) db/c.cc:302 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37263 ])
        (nil)))
(call_insn/j 10 9 0 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->3) S1 A8])
        (const_int 0 [0])) db/c.cc:302 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 24B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_seek_to_last(leveldb_iterator_t*) (leveldb_iter_seek_to_last, funcdef_no=1448, decl_uid=2225, cgraph_uid=555, symbol_order=558)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_iter_seek_to_last(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 90[93,93] 91[94,94] 92[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 87[92],90[93],91[94],92[95]
;; rd  kill	(4) 87[92],90[93],91[94],92[95]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 91 [ _3->_vptr.Iterator ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37268 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 90 [ iter ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37268 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_seek_to_last(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:305 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37268 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37268 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37268 ])) db/c.cc:306 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37268 ])
        (nil)))
(call_insn/j 10 9 0 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->4) S1 A8])
        (const_int 0 [0])) db/c.cc:306 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_seek(leveldb_iterator_t*, const char*, size_t) (leveldb_iter_seek, funcdef_no=1449, decl_uid=2229, cgraph_uid=556, symbol_order=559)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)


void leveldb_iter_seek(leveldb_iterator_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 212{175d,36u,1e} in 16{14 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,12] 5[13,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,40] 18[41,42] 19[43,44] 20[45,45] 21[46,48] 22[49,51] 23[52,54] 24[55,57] 25[58,60] 26[61,63] 27[64,66] 28[67,69] 29[70,71] 30[72,73] 31[74,75] 32[76,77] 33[78,79] 34[80,81] 35[82,83] 36[84,85] 37[86,88] 38[89,91] 39[92,93] 40[94,95] 45[96,97] 46[98,99] 47[100,101] 48[102,103] 49[104,105] 50[106,107] 51[108,109] 52[110,111] 53[112,113] 54[114,115] 55[116,117] 56[118,119] 57[120,121] 58[122,123] 59[124,125] 60[126,127] 61[128,129] 62[130,131] 63[132,133] 64[134,135] 65[136,137] 66[138,139] 67[140,141] 68[142,143] 69[144,145] 70[146,147] 71[148,149] 72[150,151] 73[152,153] 74[154,155] 75[156,157] 76[158,159] 77[160,161] 78[162,163] 79[164,165] 80[166,167] 87[168,168] 89[169,169] 90[170,170] 91[171,171] 92[172,172] 94[173,173] 95[174,174] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d12(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d45(20){ }d48(21){ }d51(22){ }d54(23){ }d57(24){ }d60(25){ }d63(26){ }d66(27){ }d69(28){ }d88(37){ }d91(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[12],5[16],6[17],7[18],16[35],20[45],21[48],22[51],23[54],24[57],25[60],26[63],27[66],28[69],37[88],38[91]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11,12],5[13,14,15,16],6[17],7[18],16[35],20[45],21[46,47,48],22[49,50,51],23[52,53,54],24[55,56,57],25[58,59,60],26[61,62,63],27[64,65,66],28[67,68,69],37[86,87,88],38[89,90,91]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[5],4[12],5[16],6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d45(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 90 91 92 94 95
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 87 89 90 91 92 94 95
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[5],4[12],5[16],6[17],7[18],16[35],20[45]
;; rd  gen 	(8) 17[37],87[168],89[169],90[170],91[171],92[172],94[173],95[174]
;; rd  kill	(12) 17[36,37,38,39,40],87[168],89[169],90[170],91[171],92[172],94[173],95[174]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u25(6){ d17(bb 0 insn -1) }u26(7){ d18(bb 0 insn -1) }u27(16){ d35(bb 0 insn -1) }u28(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(6){ d17(bb 0 insn -1) }u31(7){ d18(bb 0 insn -1) }u32(16){ d35(bb 0 insn -1) }u33(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u34(6){ d17(bb 0 insn -1) }u35(7){ d18(bb 0 insn -1) }u36(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 7 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 23:
Processing use of (reg 20 frame) in insn 7:
Processing use of (reg 20 frame) in insn 13:
Processing use of (reg 91 [ k ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 14:
Processing use of (reg 92 [ klen ]) in insn 14:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 4 si) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 5 di) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 89 [ D.37275 ]) in insn 18:
  Adding insn 12 to worklist
Processing use of (reg 94 [ _3->_vptr.Iterator ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 87 [ D.37273 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 90 [ iter ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37273 ]) in insn 17:
Processing use of (reg 95) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 20 frame) in insn 21:
Processing use of (reg 17 flags) in insn 22:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_seek(leveldb_iterator_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 212{175d,36u,1e} in 16{14 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 89 90 91 92 94 95
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 87 89 90 91 92 94 95
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ k ])
        (reg:DI 4 si [ k ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ k ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:DI 92 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:309 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37276+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:309 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.37273 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37273 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 89 [ D.37275 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _3->_vptr.Iterator ])
                (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 40B]+0 S8 A64])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ _3->_vptr.Iterator ])
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31577.data_+0 S8 A128])
        (reg/v/f:DI 91 [ k ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ k ])
        (nil)))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31577.size_+0 S8 A64])
        (reg/v:DI 92 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 92 [ klen ])
        (nil)))
(insn 15 14 16 2 (parallel [
            (set (reg/f:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:310 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (reg/f:DI 95)) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37273 ])) db/c.cc:310 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37273 ])
        (nil)))
(call_insn 18 17 21 2 (call (mem:QI (reg/f:DI 89 [ D.37275 ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->5) S1 A8])
        (const_int 0 [0])) db/c.cc:310 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.37275 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 21 18 22 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37276+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:311 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 22 21 27 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) db/c.cc:311 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 25)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 27 22 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 23 27 25 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:311 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 25 23 28 4 295 "" [1 uses])
(note 28 25 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_next(leveldb_iterator_t*) (leveldb_iter_next, funcdef_no=1450, decl_uid=2231, cgraph_uid=557, symbol_order=560)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_iter_next(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 90[93,93] 91[94,94] 92[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 87[92],90[93],91[94],92[95]
;; rd  kill	(4) 87[92],90[93],91[94],92[95]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 91 [ _3->_vptr.Iterator ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37279 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 90 [ iter ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37279 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_next(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:313 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37279 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37279 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B]+0 S8 A64])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37279 ])) db/c.cc:314 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37279 ])
        (nil)))
(call_insn/j 10 9 0 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->6) S1 A8])
        (const_int 0 [0])) db/c.cc:314 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 48B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_prev(leveldb_iterator_t*) (leveldb_iter_prev, funcdef_no=1451, decl_uid=2233, cgraph_uid=558, symbol_order=561)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_iter_prev(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 90[93,93] 91[94,94] 92[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(4) 87[92],90[93],91[94],92[95]
;; rd  kill	(4) 87[92],90[93],91[94],92[95]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(6){ d11(bb 0 insn -1) }u13(7){ d12(bb 0 insn -1) }u14(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ]) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 91 [ _3->_vptr.Iterator ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37284 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 90 [ iter ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37284 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_prev(leveldb_iterator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 111{96d,15u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 90 91 92
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87 90 91 92
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:317 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37284 ])
        (mem/f:DI (reg/v/f:DI 90 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ iter ])
        (nil)))
(insn 7 6 8 2 (set (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37284 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _3->_vptr.Iterator ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B]+0 S8 A64])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _3->_vptr.Iterator ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37284 ])) db/c.cc:318 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37284 ])
        (nil)))
(call_insn/j 10 9 0 2 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ]) [0 *OBJ_TYPE_REF(_5;(struct Iterator)_3->7) S1 A8])
        (const_int 0 [0])) db/c.cc:318 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const char* leveldb_iter_key(const leveldb_iterator_t*, size_t*) (leveldb_iter_key, funcdef_no=1452, decl_uid=2236, cgraph_uid=559, symbol_order=562)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


const char* leveldb_iter_key(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 124{101d,23u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,7] 4[8,9] 5[10,12] 6[13,13] 7[14,14] 8[15,15] 9[16,16] 10[17,17] 11[18,18] 12[19,19] 13[20,20] 14[21,21] 15[22,22] 16[23,23] 17[24,24] 18[25,25] 19[26,26] 20[27,27] 21[28,29] 22[30,31] 23[32,33] 24[34,35] 25[36,37] 26[38,39] 27[40,41] 28[42,43] 29[44,44] 30[45,45] 31[46,46] 32[47,47] 33[48,48] 34[49,49] 35[50,50] 36[51,51] 37[52,53] 38[54,55] 39[56,56] 40[57,57] 45[58,58] 46[59,59] 47[60,60] 48[61,61] 49[62,62] 50[63,63] 51[64,64] 52[65,65] 53[66,66] 54[67,67] 55[68,68] 56[69,69] 57[70,70] 58[71,71] 59[72,72] 60[73,73] 61[74,74] 62[75,75] 63[76,76] 64[77,77] 65[78,78] 66[79,79] 67[80,80] 68[81,81] 69[82,82] 70[83,83] 71[84,84] 72[85,85] 73[86,86] 74[87,87] 75[88,88] 76[89,89] 77[90,90] 78[91,91] 79[92,92] 80[93,93] 87[94,94] 94[95,95] 95[96,96] 96[97,97] 97[98,98] 99[99,99] 100[100,100] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(4){ }d12(5){ }d13(6){ }d14(7){ }d23(16){ }d27(20){ }d29(21){ }d31(22){ }d33(23){ }d35(24){ }d37(25){ }d39(26){ }d41(27){ }d43(28){ }d53(37){ }d55(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[7],4[9],5[12],6[13],7[14],16[23],20[27],21[29],22[31],23[33],24[35],25[37],26[39],27[41],28[43],37[53],38[55]
;; rd  kill	(37) 0[0,1,2],1[3,4,5],2[6,7],4[8,9],5[10,11,12],6[13],7[14],16[23],20[27],21[28,29],22[30,31],23[32,33],24[34,35],25[36,37],26[38,39],27[40,41],28[42,43],37[52,53],38[54,55]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d13(bb 0 insn -1) }u1(7){ d14(bb 0 insn -1) }u2(16){ d23(bb 0 insn -1) }u3(20){ d27(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 97 99 100
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87 94 95 96 97 99 100
;; live  kill	
;; rd  in  	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;; rd  gen 	(9) 0[0],1[3],87[94],94[95],95[96],96[97],97[98],99[99],100[100]
;; rd  kill	(10) 0[0,1,2],87[94],94[95],95[96],96[97],97[98],99[99],100[100]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(0){ d0(bb 2 insn 19) }u20(6){ d13(bb 0 insn -1) }u21(7){ d14(bb 0 insn -1) }u22(20){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[13],7[14],16[23],20[27]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 19) }
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
  Adding insn 19 to worklist
Processing use of (reg 99 [ s ]) in insn 19:
  Adding insn 22 to worklist
Processing use of (reg 0 ax) in insn 22:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 96 [ _3->_vptr.Iterator ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 87 [ D.37289 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 94 [ iter ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37289 ]) in insn 10:
Processing use of (reg 95 [ klen ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 100 [ s+8 ]) in insn 13:
  Adding insn 23 to worklist
Processing use of (reg 1 dx) in insn 23:
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 0 ax) in insn 20:
starting the processing of deferred insns
ending the processing of deferred insns


const char* leveldb_iter_key(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 124{101d,23u,0e} in 12{11 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 97 99 100
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87 94 95 96 97 99 100
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ klen ])
        (reg:DI 4 si [ klen ])) db/c.cc:321 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ klen ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37289 ])
        (mem/f:DI (reg/v/f:DI 94 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37289 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:322 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ _3->_vptr.Iterator ])
                (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B]+0 S8 A64])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37289 ])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37289 ])
        (nil)))
(call_insn 11 10 22 2 (set (reg:TI 0 ax)
        (call (mem:QI (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->8) S1 A8])
            (const_int 0 [0]))) db/c.cc:322 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 64B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 11 23 2 (set (reg:DI 99 [ s ])
        (reg:DI 0 ax)) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 13 2 (set (reg:DI 100 [ s+8 ])
        (reg:DI 1 dx [+8 ])) db/c.cc:322 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(insn 13 23 19 2 (set (mem:DI (reg/v/f:DI 95 [ klen ]) [9 *klen_7(D)+0 S8 A64])
        (reg:DI 100 [ s+8 ])) db/c.cc:323 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ s+8 ])
        (expr_list:REG_DEAD (reg/v/f:DI 95 [ klen ])
            (nil))))
(insn 19 13 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ s ])) db/c.cc:325 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ s ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) db/c.cc:325 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function const char* leveldb_iter_value(const leveldb_iterator_t*, size_t*) (leveldb_iter_value, funcdef_no=1453, decl_uid=2239, cgraph_uid=560, symbol_order=563)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


const char* leveldb_iter_value(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 124{101d,23u,0e} in 12{11 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,7] 4[8,9] 5[10,12] 6[13,13] 7[14,14] 8[15,15] 9[16,16] 10[17,17] 11[18,18] 12[19,19] 13[20,20] 14[21,21] 15[22,22] 16[23,23] 17[24,24] 18[25,25] 19[26,26] 20[27,27] 21[28,29] 22[30,31] 23[32,33] 24[34,35] 25[36,37] 26[38,39] 27[40,41] 28[42,43] 29[44,44] 30[45,45] 31[46,46] 32[47,47] 33[48,48] 34[49,49] 35[50,50] 36[51,51] 37[52,53] 38[54,55] 39[56,56] 40[57,57] 45[58,58] 46[59,59] 47[60,60] 48[61,61] 49[62,62] 50[63,63] 51[64,64] 52[65,65] 53[66,66] 54[67,67] 55[68,68] 56[69,69] 57[70,70] 58[71,71] 59[72,72] 60[73,73] 61[74,74] 62[75,75] 63[76,76] 64[77,77] 65[78,78] 66[79,79] 67[80,80] 68[81,81] 69[82,82] 70[83,83] 71[84,84] 72[85,85] 73[86,86] 74[87,87] 75[88,88] 76[89,89] 77[90,90] 78[91,91] 79[92,92] 80[93,93] 87[94,94] 94[95,95] 95[96,96] 96[97,97] 97[98,98] 99[99,99] 100[100,100] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(4){ }d12(5){ }d13(6){ }d14(7){ }d23(16){ }d27(20){ }d29(21){ }d31(22){ }d33(23){ }d35(24){ }d37(25){ }d39(26){ }d41(27){ }d43(28){ }d53(37){ }d55(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[7],4[9],5[12],6[13],7[14],16[23],20[27],21[29],22[31],23[33],24[35],25[37],26[39],27[41],28[43],37[53],38[55]
;; rd  kill	(37) 0[0,1,2],1[3,4,5],2[6,7],4[8,9],5[10,11,12],6[13],7[14],16[23],20[27],21[28,29],22[30,31],23[32,33],24[34,35],25[36,37],26[38,39],27[40,41],28[42,43],37[52,53],38[54,55]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d13(bb 0 insn -1) }u1(7){ d14(bb 0 insn -1) }u2(16){ d23(bb 0 insn -1) }u3(20){ d27(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 97 99 100
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87 94 95 96 97 99 100
;; live  kill	
;; rd  in  	(6) 4[9],5[12],6[13],7[14],16[23],20[27]
;; rd  gen 	(9) 0[0],1[3],87[94],94[95],95[96],96[97],97[98],99[99],100[100]
;; rd  kill	(10) 0[0,1,2],87[94],94[95],95[96],96[97],97[98],99[99],100[100]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[13],7[14],16[23],20[27]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 16 { d23(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(0){ d0(bb 2 insn 19) }u20(6){ d13(bb 0 insn -1) }u21(7){ d14(bb 0 insn -1) }u22(20){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[13],7[14],16[23],20[27]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 19) }
;;   reg 6 { d13(bb 0 insn -1) }
;;   reg 7 { d14(bb 0 insn -1) }
;;   reg 20 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
  Adding insn 19 to worklist
Processing use of (reg 99 [ s ]) in insn 19:
  Adding insn 22 to worklist
Processing use of (reg 0 ax) in insn 22:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B] ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 96 [ _3->_vptr.Iterator ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 87 [ D.37296 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 94 [ iter ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 87 [ D.37296 ]) in insn 10:
Processing use of (reg 95 [ vlen ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 100 [ s+8 ]) in insn 13:
  Adding insn 23 to worklist
Processing use of (reg 1 dx) in insn 23:
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 0 ax) in insn 20:
starting the processing of deferred insns
ending the processing of deferred insns


const char* leveldb_iter_value(const leveldb_iterator_t*, size_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 124{101d,23u,0e} in 12{11 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 95 96 97 99 100
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 87 94 95 96 97 99 100
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 94 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 95 [ vlen ])
        (reg:DI 4 si [ vlen ])) db/c.cc:327 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ vlen ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 87 [ D.37296 ])
        (mem/f:DI (reg/v/f:DI 94 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37296 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:328 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B] ])
        (mem/f:DI (plus:DI (reg/f:DI 96 [ _3->_vptr.Iterator ])
                (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B]+0 S8 A64])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96 [ _3->_vptr.Iterator ])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37296 ])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37296 ])
        (nil)))
(call_insn 11 10 22 2 (set (reg:TI 0 ax)
        (call (mem:QI (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B] ]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->9) S1 A8])
            (const_int 0 [0]))) db/c.cc:328 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 97 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 72B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 22 11 23 2 (set (reg:DI 99 [ s ])
        (reg:DI 0 ax)) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 23 22 13 2 (set (reg:DI 100 [ s+8 ])
        (reg:DI 1 dx [+8 ])) db/c.cc:328 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(insn 13 23 19 2 (set (mem:DI (reg/v/f:DI 95 [ vlen ]) [9 *vlen_7(D)+0 S8 A64])
        (reg:DI 100 [ s+8 ])) db/c.cc:329 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100 [ s+8 ])
        (expr_list:REG_DEAD (reg/v/f:DI 95 [ vlen ])
            (nil))))
(insn 19 13 20 2 (set (reg/i:DI 0 ax)
        (reg:DI 99 [ s ])) db/c.cc:331 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ s ])
        (nil)))
(insn 20 19 0 2 (use (reg/i:DI 0 ax)) db/c.cc:331 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_iter_get_error(const leveldb_iterator_t*, char**) (leveldb_iter_get_error, funcdef_no=1454, decl_uid=2242, cgraph_uid=561, symbol_order=564)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 13 count 12 (    1)


void leveldb_iter_get_error(const leveldb_iterator_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={8d} r2={7d} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r90={1d,2u} r91={1d,2u} r93={1d,1u} r94={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} 
;;    total ref usage 556{474d,80u,2e} in 29{23 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464
;;  reg->defs[] map:	0[0,7] 1[8,15] 2[16,22] 4[23,31] 5[32,43] 6[44,44] 7[45,45] 8[46,51] 9[52,57] 10[58,63] 11[64,69] 12[70,75] 13[76,81] 14[82,87] 15[88,93] 16[94,94] 17[95,105] 18[106,111] 19[112,117] 20[118,118] 21[119,125] 22[126,132] 23[133,139] 24[140,146] 25[147,153] 26[154,160] 27[161,167] 28[168,174] 29[175,180] 30[181,186] 31[187,192] 32[193,198] 33[199,204] 34[205,210] 35[211,216] 36[217,222] 37[223,229] 38[230,236] 39[237,242] 40[243,248] 45[249,254] 46[255,260] 47[261,266] 48[267,272] 49[273,278] 50[279,284] 51[285,290] 52[291,296] 53[297,302] 54[303,308] 55[309,314] 56[315,320] 57[321,326] 58[327,332] 59[333,338] 60[339,344] 61[345,350] 62[351,356] 63[357,362] 64[363,368] 65[369,374] 66[375,380] 67[381,386] 68[387,392] 69[393,398] 70[399,404] 71[405,410] 72[411,416] 73[417,422] 74[423,428] 75[429,434] 76[435,440] 77[441,446] 78[447,452] 79[453,458] 80[459,464] 87[465,465] 90[466,466] 91[467,467] 93[468,468] 94[469,469] 96[470,470] 97[471,471] 98[472,472] 100[473,473] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d15(1){ }d22(2){ }d31(4){ }d43(5){ }d44(6){ }d45(7){ }d94(16){ }d118(20){ }d125(21){ }d132(22){ }d139(23){ }d146(24){ }d153(25){ }d160(26){ }d167(27){ }d174(28){ }d229(37){ }d236(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[15],2[22],4[31],5[43],6[44],7[45],16[94],20[118],21[125],22[132],23[139],24[146],25[153],26[160],27[167],28[174],37[229],38[236]
;; rd  kill	(118) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15],2[16,17,18,19,20,21,22],4[23,24,25,26,27,28,29,30,31],5[32,33,34,35,36,37,38,39,40,41,42,43],6[44],7[45],16[94],20[118],21[119,120,121,122,123,124,125],22[126,127,128,129,130,131,132],23[133,134,135,136,137,138,139],24[140,141,142,143,144,145,146],25[147,148,149,150,151,152,153],26[154,155,156,157,158,159,160],27[161,162,163,164,165,166,167],28[168,169,170,171,172,173,174],37[223,224,225,226,227,228,229],38[230,231,232,233,234,235,236]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[31],5[43],6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d44(bb 0 insn -1) }u1(7){ d45(bb 0 insn -1) }u2(16){ d94(bb 0 insn -1) }u3(20){ d118(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 96 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 87 93 94 96 97 98
;; live  kill	 17 [flags]
;; rd  in  	(6) 4[31],5[43],6[44],7[45],16[94],20[118]
;; rd  gen 	(7) 0[5],87[465],93[468],94[469],96[470],97[471],98[472]
;; rd  kill	(14) 0[0,1,2,3,4,5,6,7],87[465],93[468],94[469],96[470],97[471],98[472]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 2 )->[3]->( 4 9 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(6){ d44(bb 0 insn -1) }u25(7){ d45(bb 0 insn -1) }u26(16){ d94(bb 0 insn -1) }u27(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(2) 17[101],91[467]
;; rd  kill	(12) 17[95,96,97,98,99,100,101,102,103,104,105],91[467]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[44],7[45],16[94],20[118],91[467]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 3 )->[4]->( 9 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(6){ d44(bb 0 insn -1) }u32(7){ d45(bb 0 insn -1) }u33(16){ d94(bb 0 insn -1) }u34(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[44],7[45],16[94],20[118],91[467]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 2(EH) )->[5]->( 6 )
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u38(6){ d44(bb 0 insn -1) }u39(7){ d45(bb 0 insn -1) }u40(16){ d94(bb 0 insn -1) }u41(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 100
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 100
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(3) 0[3],1[11],100[473]
;; rd  kill	(17) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15],100[473]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; rd  out 	(5) 6[44],7[45],16[94],20[118],100[473]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ d44(bb 0 insn -1) }u44(7){ d45(bb 0 insn -1) }u45(16){ d94(bb 0 insn -1) }u46(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  gen 	 17 [flags] 90
;; live  kill	
;; rd  in  	(5) 6[44],7[45],16[94],20[118],100[473]
;; rd  gen 	(2) 17[99],90[466]
;; rd  kill	(12) 17[95,96,97,98,99,100,101,102,103,104,105],90[466]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; rd  out 	(6) 6[44],7[45],16[94],20[118],90[466],100[473]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ d44(bb 0 insn -1) }u51(7){ d45(bb 0 insn -1) }u52(16){ d94(bb 0 insn -1) }u53(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[44],7[45],16[94],20[118],90[466],100[473]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; rd  out 	(5) 6[44],7[45],16[94],20[118],100[473]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 6 7 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(6){ d44(bb 0 insn -1) }u58(7){ d45(bb 0 insn -1) }u59(16){ d94(bb 0 insn -1) }u60(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[44],7[45],16[94],20[118],90[466],100[473]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 4 3 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ d44(bb 0 insn -1) }u65(7){ d45(bb 0 insn -1) }u66(16){ d94(bb 0 insn -1) }u67(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
;; rd  in  	(5) 6[44],7[45],16[94],20[118],91[467]
;; rd  gen 	(1) 17[96]
;; rd  kill	(11) 17[95,96,97,98,99,100,101,102,103,104,105]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ d44(bb 0 insn -1) }u71(7){ d45(bb 0 insn -1) }u72(16){ d94(bb 0 insn -1) }u73(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(6){ d44(bb 0 insn -1) }u76(7){ d45(bb 0 insn -1) }u77(16){ d94(bb 0 insn -1) }u78(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u79(6){ d44(bb 0 insn -1) }u80(7){ d45(bb 0 insn -1) }u81(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 6 to worklist
  Adding insn 23 to worklist
  Adding insn 26 to worklist
  Adding insn 35 to worklist
  Adding insn 38 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 49 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 49:
Processing use of (reg 20 frame) in insn 47:
Processing use of (reg 17 flags) in insn 48:
Processing use of (reg 7 sp) in insn 43:
Processing use of (reg 5 di) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 100) in insn 42:
  Adding insn 56 to worklist
Processing use of (reg 0 ax) in insn 56:
Processing use of (reg 7 sp) in insn 38:
Processing use of (reg 5 di) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 90 [ D.37307 ]) in insn 37:
  Adding insn 33 to worklist
Processing use of (reg 20 frame) in insn 33:
Processing use of (reg 17 flags) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 90 [ D.37307 ]) in insn 34:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 91 [ D.37307 ]) in insn 25:
  Adding insn 21 to worklist
Processing use of (reg 20 frame) in insn 21:
Processing use of (reg 17 flags) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 91 [ D.37307 ]) in insn 22:
Processing use of (reg 20 frame) in insn 6:
Processing use of (reg 7 sp) in insn 15:
Processing use of (reg 4 si) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 5 di) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 98 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B] ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 97 [ _3->_vptr.Iterator ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 87 [ D.37304 ]) in insn 11:
  Adding insn 9 to worklist
Processing use of (reg 93 [ iter ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 96) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 87 [ D.37304 ]) in insn 13:
Processing use of (reg 7 sp) in insn 19:
Processing use of (reg 4 si) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 5 di) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 94 [ errptr ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 96) in insn 17:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_iter_get_error(const leveldb_iterator_t*, char**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={8d} r2={7d} r4={9d,3u} r5={12d,6u} r6={1d,11u} r7={1d,17u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,10u} r17={11d,3u} r18={6d} r19={6d} r20={1d,16u,2e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r87={1d,2u} r90={1d,2u} r91={1d,2u} r93={1d,1u} r94={1d,1u} r96={1d,2u} r97={1d,1u} r98={1d,1u} r100={1d,1u} 
;;    total ref usage 556{474d,80u,2e} in 29{23 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 93 94 96 97 98
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 87 93 94 96 97 98
;; live  kill	 17 [flags]
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 93 [ iter ])
        (reg:DI 5 di [ iter ])) db/c.cc:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ iter ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 94 [ errptr ])
        (reg:DI 4 si [ errptr ])) db/c.cc:333 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ errptr ])
        (nil)))
(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 4 9 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37308+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:333 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 6 10 2 (set (reg/f:DI 87 [ D.37304 ])
        (mem/f:DI (reg/v/f:DI 93 [ iter ]) [3 iter_2(D)->rep+0 S8 A64])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ iter ])
        (nil)))
(insn 10 9 11 2 (parallel [
            (set (reg/f:DI 96)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:334 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 97 [ _3->_vptr.Iterator ])
        (mem/f:DI (reg/f:DI 87 [ D.37304 ]) [3 _3->_vptr.Iterator+0 S8 A64])) db/c.cc:334 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B] ])
        (mem/f:DI (plus:DI (reg/f:DI 97 [ _3->_vptr.Iterator ])
                (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B]+0 S8 A64])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ _3->_vptr.Iterator ])
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.37304 ])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37304 ])
        (nil)))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/f:DI 96)) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))
(call_insn 15 14 17 2 (call (mem:QI (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B] ]) [0 *OBJ_TYPE_REF(_5;(const struct Iterator)_3->10) S1 A8])
        (const_int 0 [0])) db/c.cc:334 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 98 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 80B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 15 18 2 (set (reg:DI 4 si)
        (reg/f:DI 96)) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ errptr ])) db/c.cc:334 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ errptr ])
        (nil)))
(call_insn 19 18 20 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>) [0 SaveError S1 A8])
            (const_int 0 [0]))) db/c.cc:334 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:QI 0 ax)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("SaveError") [flags 0x3]  <function_decl 0x7fb53738c798 SaveError>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 3 (set (reg/f:DI 91 [ D.37307 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31600.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 22 21 23 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.37307 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 23 22 24 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 45)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 45)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              9 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(6){ }u32(7){ }u33(16){ }u34(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.37307 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.37307 ])
        (nil)))
(call_insn 26 25 55 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 5 artificial_defs: { d3(0){ }d11(1){ }}
;; bb 5 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 100
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 1 [dx] 100
;; live  kill	
(code_label/s 55 26 57 5 309 "" [1 uses])
(note 57 55 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 56 57 31 5 (set (reg:DI 100)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  gen 	 17 [flags] 90
;; live  kill	
(code_label 31 56 32 6 306 "" [0 uses])
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:DI 90 [ D.37307 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [3 D.31600.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.37307 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 39)
;;  succ:       7 [69.8%]  (FALLTHRU)
;;              8 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [69.8%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(6){ }u51(7){ }u52(16){ }u53(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 100
;; live  gen 	 5 [di]
;; live  kill	
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 7 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.37307 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.37307 ])
        (nil)))
(call_insn 38 37 39 7 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 8, loop depth 0, count 0, freq 0
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [30.2%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  gen 	 5 [di]
;; live  kill	
(code_label 39 38 40 8 307 "" [1 uses])
(note 40 39 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 40 43 8 (set (reg:DI 5 di)
        (reg:DI 100)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 43 42 45 8 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [21.6%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 45 43 52 9 304 "" [1 uses])
(note 52 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 52 48 9 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37308+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:335 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 48 47 53 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) db/c.cc:335 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 51)
;;  succ:       11 [100.0%] 
;;              10 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 4
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [0.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u70(6){ }u71(7){ }u72(16){ }u73(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 53 48 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(call_insn 49 53 51 10 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:335 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 10, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 51 49 54 11 308 "" [1 uses])
(note 54 51 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writebatch_t* leveldb_writebatch_create() (leveldb_writebatch_create, funcdef_no=1455, decl_uid=2243, cgraph_uid=565, symbol_order=568)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)


leveldb_writebatch_t* leveldb_writebatch_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,5u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 351{316d,35u,0e} in 12{8 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313
;;  reg->defs[] map:	0[0,6] 1[7,12] 2[13,17] 4[18,22] 5[23,31] 6[32,32] 7[33,33] 8[34,37] 9[38,41] 10[42,45] 11[46,49] 12[50,53] 13[54,57] 14[58,61] 15[62,65] 16[66,66] 17[67,70] 18[71,74] 19[75,78] 20[79,79] 21[80,84] 22[85,89] 23[90,94] 24[95,99] 25[100,104] 26[105,109] 27[110,114] 28[115,119] 29[120,123] 30[124,127] 31[128,131] 32[132,135] 33[136,139] 34[140,143] 35[144,147] 36[148,151] 37[152,156] 38[157,161] 39[162,165] 40[166,169] 45[170,173] 46[174,177] 47[178,181] 48[182,185] 49[186,189] 50[190,193] 51[194,197] 52[198,201] 53[202,205] 54[206,209] 55[210,213] 56[214,217] 57[218,221] 58[222,225] 59[226,229] 60[230,233] 61[234,237] 62[238,241] 63[242,245] 64[246,249] 65[250,253] 66[254,257] 67[258,261] 68[262,265] 69[266,269] 70[270,273] 71[274,277] 72[278,281] 73[282,285] 74[286,289] 75[290,293] 76[294,297] 77[298,301] 78[302,305] 79[306,309] 80[310,313] 87[314,314] 93[315,315] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d17(2){ }d22(4){ }d31(5){ }d32(6){ }d33(7){ }d66(16){ }d79(20){ }d84(21){ }d89(22){ }d94(23){ }d99(24){ }d104(25){ }d109(26){ }d114(27){ }d119(28){ }d156(37){ }d161(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[12],2[17],4[22],5[31],6[32],7[33],16[66],20[79],21[84],22[89],23[94],24[99],25[104],26[109],27[114],28[119],37[156],38[161]
;; rd  kill	(86) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12],2[13,14,15,16,17],4[18,19,20,21,22],5[23,24,25,26,27,28,29,30,31],6[32],7[33],16[66],20[79],21[80,81,82,83,84],22[85,86,87,88,89],23[90,91,92,93,94],24[95,96,97,98,99],25[100,101,102,103,104],26[105,106,107,108,109],27[110,111,112,113,114],28[115,116,117,118,119],37[152,153,154,155,156],38[157,158,159,160,161]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[32],7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5 3(EH) )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d32(bb 0 insn -1) }u1(7){ d33(bb 0 insn -1) }u2(16){ d66(bb 0 insn -1) }u3(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87
;; live  kill	
;; rd  in  	(4) 6[32],7[33],16[66],20[79]
;; rd  gen 	(1) 87[314]
;; rd  kill	(1) 87[314]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[32],7[33],16[66],20[79],87[314]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 2(EH) )->[3]->( 4 )
;; bb 3 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 3 artificial_uses: { u10(6){ d32(bb 0 insn -1) }u11(7){ d33(bb 0 insn -1) }u12(16){ d66(bb 0 insn -1) }u13(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 1 [dx] 93
;; live  kill	
;; rd  in  	(5) 6[32],7[33],16[66],20[79],87[314]
;; rd  gen 	(3) 0[3],1[9],93[315]
;; rd  kill	(14) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12],93[315]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; rd  out 	(6) 6[32],7[33],16[66],20[79],87[314],93[315]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 3 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ d32(bb 0 insn -1) }u16(7){ d33(bb 0 insn -1) }u17(16){ d66(bb 0 insn -1) }u18(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[32],7[33],16[66],20[79],87[314],93[315]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ d32(bb 0 insn -1) }u26(7){ d33(bb 0 insn -1) }u27(16){ d66(bb 0 insn -1) }u28(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(5) 6[32],7[33],16[66],20[79],87[314]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[32],7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(0){ d0(bb 5 insn 24) }u32(6){ d32(bb 0 insn -1) }u33(7){ d33(bb 0 insn -1) }u34(20){ d79(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[32],7[33],16[66],20[79]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 5 insn 24) }
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 6 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 25 to worklist
Finished finding needed instructions:
  Adding insn 24 to worklist
Processing use of (reg 87 [ D.37315 ]) in insn 24:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
Processing use of (reg 0 ax) in insn 25:
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 5 di) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 87 [ D.37315 ]) in insn 17:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 93) in insn 20:
  Adding insn 28 to worklist
Processing use of (reg 0 ax) in insn 28:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 87 [ D.37315 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_writebatch_t* leveldb_writebatch_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,5u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 351{316d,35u,0e} in 12{8 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 32 [0x20])) db/c.cc:338 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:338 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 87 [ D.37315 ])
        (reg:DI 0 ax)) db/c.cc:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 9 7 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:48 89 {*movdi_internal}
     (nil))
(call_insn 10 9 27 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatchC1Ev") [flags 0x41]  <function_decl 0x7fb537669438 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/c.cc:48 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatchC1Ev") [flags 0x41]  <function_decl 0x7fb537669438 __comp_ctor >)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 3, loop depth 0, count 0, freq 0
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 3 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 1 [dx] 93
;; live  kill	
(code_label/s 27 10 29 3 320 "" [1 uses])
(note 29 27 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 29 15 3 (set (reg:DI 93)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 4, loop depth 0, count 0, freq 0
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di]
;; live  kill	
(code_label 15 28 16 4 319 "" [0 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:338 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37315 ])
        (nil)))
(call_insn 18 17 20 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:338 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 18 21 4 (set (reg:DI 5 di)
        (reg:DI 93)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 21 20 26 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
(note 26 21 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 26 25 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37315 ])) db/c.cc:339 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37315 ])
        (nil)))
(insn 25 24 0 5 (use (reg/i:DI 0 ax)) db/c.cc:339 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_destroy(leveldb_writebatch_t*) (leveldb_writebatch_destroy, funcdef_no=1459, decl_uid=2245, cgraph_uid=569, symbol_order=572)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void leveldb_writebatch_destroy(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} 
;;    total ref usage 191{167d,24u,0e} in 7{5 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 88[166,166] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[43]
;; rd  gen 	(2) 17[38],88[166]
;; rd  kill	(4) 17[36,37,38],88[166]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; rd  out 	(5) 6[17],7[18],16[35],20[43],88[166]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ d17(bb 0 insn -1) }u8(7){ d18(bb 0 insn -1) }u9(16){ d35(bb 0 insn -1) }u10(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(5) 6[17],7[18],16[35],20[43],88[166]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ d17(bb 0 insn -1) }u18(7){ d18(bb 0 insn -1) }u19(16){ d35(bb 0 insn -1) }u20(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[17],7[18],16[35],20[43],88[166]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(6){ d17(bb 0 insn -1) }u22(7){ d18(bb 0 insn -1) }u23(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 88 [ b ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 88 [ b ]) in insn 11:
Processing use of (reg 17 flags) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 88 [ b ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writebatch_destroy(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} 
;;    total ref usage 191{167d,24u,0e} in 7{5 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:341 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 88 [ b ])
            (const_int 0 [0]))) db/c.cc:342 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 16)
            (pc))) db/c.cc:342 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 16)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 5 [di]
;; live  kill	
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:48 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 3 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatchD1Ev") [flags 0x41]  <function_decl 0x7fb5376695e8 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:48 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatchD1Ev") [flags 0x41]  <function_decl 0x7fb5376695e8 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:342 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn/j 12 11 16 3 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:342 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 16 12 17 4 324 "" [1 uses])
(note 17 16 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_clear(leveldb_writebatch_t*) (leveldb_writebatch_clear, funcdef_no=1463, decl_uid=2247, cgraph_uid=570, symbol_order=573)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_writebatch_clear(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 88[92,92] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(1) 88[92]
;; rd  kill	(1) 88[92]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 88 [ b ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writebatch_clear(leveldb_writebatch_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 88
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:345 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:346 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn/j 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch5ClearEv") [flags 0x41]  <function_decl 0x7fb537663870 Clear>) [0 Clear S1 A8])
        (const_int 0 [0])) db/c.cc:346 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch5ClearEv") [flags 0x41]  <function_decl 0x7fb537663870 Clear>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_put(leveldb_writebatch_t*, const char*, size_t, const char*, size_t) (leveldb_writebatch_put, funcdef_no=1464, decl_uid=2253, cgraph_uid=571, symbol_order=574)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)


void leveldb_writebatch_put(leveldb_writebatch_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 220{177d,41u,2e} in 19{17 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169
;;  reg->defs[] map:	0[0,2] 1[3,6] 2[7,9] 4[10,13] 5[14,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,42] 18[43,44] 19[45,46] 20[47,47] 21[48,50] 22[51,53] 23[54,56] 24[57,59] 25[60,62] 26[63,65] 27[66,68] 28[69,71] 29[72,73] 30[74,75] 31[76,77] 32[78,79] 33[80,81] 34[82,83] 35[84,85] 36[86,87] 37[88,90] 38[91,93] 39[94,95] 40[96,97] 45[98,99] 46[100,101] 47[102,103] 48[104,105] 49[106,107] 50[108,109] 51[110,111] 52[112,113] 53[114,115] 54[116,117] 55[118,119] 56[120,121] 57[122,123] 58[124,125] 59[126,127] 60[128,129] 61[130,131] 62[132,133] 63[134,135] 64[136,137] 65[138,139] 66[140,141] 67[142,143] 68[144,145] 69[146,147] 70[148,149] 71[150,151] 72[152,153] 73[154,155] 74[156,157] 75[158,159] 76[160,161] 77[162,163] 78[164,165] 79[166,167] 80[168,169] 88[170,170] 89[171,171] 90[172,172] 91[173,173] 92[174,174] 94[175,175] 95[176,176] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d6(1){ }d9(2){ }d13(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d47(20){ }d50(21){ }d53(22){ }d56(23){ }d59(24){ }d62(25){ }d65(26){ }d68(27){ }d71(28){ }d90(37){ }d93(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[47],21[50],22[53],23[56],24[59],25[62],26[65],27[68],28[71],37[90],38[93]
;; rd  kill	(52) 0[0,1,2],1[3,4,5,6],2[7,8,9],4[10,11,12,13],5[14,15,16,17],6[18],7[19],16[36],20[47],21[48,49,50],22[51,52,53],23[54,55,56],24[57,58,59],25[60,61,62],26[63,64,65],27[66,67,68],28[69,70,71],37[88,89,90],38[91,92,93]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[47],37[90]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d47(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 17 [flags] 88 89 90 91 92 94 95
;; live  kill	 17 [flags]
;; rd  in  	(9) 1[6],2[9],4[13],5[17],6[18],7[19],16[36],20[47],37[90]
;; rd  gen 	(8) 17[38],88[170],89[171],90[172],91[173],92[174],94[175],95[176]
;; rd  kill	(13) 17[37,38,39,40,41,42],88[170],89[171],90[172],91[173],92[174],94[175],95[176]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[18],7[19],16[36],20[47]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d47(bb 0 insn -1) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(6){ d18(bb 0 insn -1) }u32(7){ d19(bb 0 insn -1) }u33(16){ d36(bb 0 insn -1) }u34(20){ d47(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[47]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[19],16[36],20[47]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d47(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ d18(bb 0 insn -1) }u37(7){ d19(bb 0 insn -1) }u38(16){ d36(bb 0 insn -1) }u39(20){ d47(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[47]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[18],7[19],16[36],20[47]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d47(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u40(6){ d18(bb 0 insn -1) }u41(7){ d19(bb 0 insn -1) }u42(20){ d47(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[18],7[19],16[36],20[47]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d47(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 20 frame) in insn 9:
Processing use of (reg 20 frame) in insn 12:
Processing use of (reg 91 [ val ]) in insn 12:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 20 frame) in insn 13:
Processing use of (reg 92 [ vlen ]) in insn 13:
  Adding insn 6 to worklist
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 20 frame) in insn 14:
Processing use of (reg 89 [ key ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 90 [ klen ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 1 dx) in insn 21:
  Adding insn 18 to worklist
Processing use of (reg 4 si) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 88 [ b ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 95) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 94) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 20 frame) in insn 16:
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 17 flags) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writebatch_put(leveldb_writebatch_t*, const char*, size_t, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={3d} r1={4d,2u} r2={3d,1u} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={6d,1u} r18={2d} r19={2d} r20={1d,12u,2e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d,1u} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 220{177d,41u,2e} in 19{17 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 91 92 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 17 [flags] 88 89 90 91 92 94 95
;; live  kill	 17 [flags]
(note 10 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:DI 90 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 91 [ val ])
        (reg:DI 2 cx [ val ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ val ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:DI 92 [ vlen ])
        (reg:DI 37 r8 [ vlen ])) db/c.cc:352 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ vlen ])
        (nil)))
(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 7 12 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37326+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:352 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 12 9 13 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31655.data_+0 S8 A128])
        (reg/v/f:DI 91 [ val ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ val ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31655.size_+0 S8 A64])
        (reg/v:DI 92 [ vlen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 92 [ vlen ])
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 D.31654.data_+0 S8 A128])
        (reg/v/f:DI 89 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ key ])
        (nil)))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [9 D.31654.size_+0 S8 A64])
        (reg/v:DI 90 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ klen ])
        (nil)))
(insn 16 15 17 2 (parallel [
            (set (reg/f:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:353 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:353 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 1 dx)
        (reg/f:DI 94)) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 19 18 20 2 (set (reg:DI 4 si)
        (reg/f:DI 95)) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 20 19 21 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:353 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn 21 20 24 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7fb5376636c0 Put>) [0 Put S1 A8])
        (const_int 0 [0])) db/c.cc:353 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch3PutERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7fb5376636c0 Put>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 24 21 25 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37326+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:354 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 25 24 30 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) db/c.cc:354 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 28)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(6){ }u32(7){ }u33(16){ }u34(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 30 25 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 26 30 28 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:354 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 28 26 31 4 330 "" [1 uses])
(note 31 28 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_delete(leveldb_writebatch_t*, const char*, size_t) (leveldb_writebatch_delete, funcdef_no=1465, decl_uid=2257, cgraph_uid=572, symbol_order=575)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 5 (    1)


void leveldb_writebatch_delete(leveldb_writebatch_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r92={1d,1u} 
;;    total ref usage 205{172d,32u,1e} in 13{11 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,12] 5[13,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,40] 18[41,42] 19[43,44] 20[45,45] 21[46,48] 22[49,51] 23[52,54] 24[55,57] 25[58,60] 26[61,63] 27[64,66] 28[67,69] 29[70,71] 30[72,73] 31[74,75] 32[76,77] 33[78,79] 34[80,81] 35[82,83] 36[84,85] 37[86,88] 38[89,91] 39[92,93] 40[94,95] 45[96,97] 46[98,99] 47[100,101] 48[102,103] 49[104,105] 50[106,107] 51[108,109] 52[110,111] 53[112,113] 54[114,115] 55[116,117] 56[118,119] 57[120,121] 58[122,123] 59[124,125] 60[126,127] 61[128,129] 62[130,131] 63[132,133] 64[134,135] 65[136,137] 66[138,139] 67[140,141] 68[142,143] 69[144,145] 70[146,147] 71[148,149] 72[150,151] 73[152,153] 74[154,155] 75[156,157] 76[158,159] 77[160,161] 78[162,163] 79[164,165] 80[166,167] 88[168,168] 89[169,169] 90[170,170] 92[171,171] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d12(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d45(20){ }d48(21){ }d51(22){ }d54(23){ }d57(24){ }d60(25){ }d63(26){ }d66(27){ }d69(28){ }d88(37){ }d91(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[12],5[16],6[17],7[18],16[35],20[45],21[48],22[51],23[54],24[57],25[60],26[63],27[66],28[69],37[88],38[91]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11,12],5[13,14,15,16],6[17],7[18],16[35],20[45],21[46,47,48],22[49,50,51],23[52,53,54],24[55,56,57],25[58,59,60],26[61,62,63],27[64,65,66],28[67,68,69],37[86,87,88],38[89,90,91]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(7) 1[5],4[12],5[16],6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d45(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 92
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 88 89 90 92
;; live  kill	 17 [flags]
;; rd  in  	(7) 1[5],4[12],5[16],6[17],7[18],16[35],20[45]
;; rd  gen 	(5) 17[37],88[168],89[169],90[170],92[171]
;; rd  kill	(9) 17[36,37,38,39,40],88[168],89[169],90[170],92[171]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(6){ d17(bb 0 insn -1) }u22(7){ d18(bb 0 insn -1) }u23(16){ d35(bb 0 insn -1) }u24(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ d17(bb 0 insn -1) }u27(7){ d18(bb 0 insn -1) }u28(16){ d35(bb 0 insn -1) }u29(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[45]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(6){ d17(bb 0 insn -1) }u31(7){ d18(bb 0 insn -1) }u32(20){ d45(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[45]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d45(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 7 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 20 frame) in insn 7:
Processing use of (reg 20 frame) in insn 10:
Processing use of (reg 89 [ key ]) in insn 10:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 11:
Processing use of (reg 90 [ klen ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 7 sp) in insn 15:
Processing use of (reg 4 si) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 5 di) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 88 [ b ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 92) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 20 frame) in insn 12:
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 17 flags) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writebatch_delete(leveldb_writebatch_t*, const char*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d,1u} r2={3d} r4={4d,2u} r5={4d,2u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={5d,1u} r18={2d} r19={2d} r20={1d,9u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r89={1d,1u} r90={1d,1u} r92={1d,1u} 
;;    total ref usage 205{172d,32u,1e} in 13{11 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 92
;; live  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 4 [si] 5 [di] 17 [flags] 88 89 90 92
;; live  kill	 17 [flags]
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 88 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ key ])
        (reg:DI 4 si [ key ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ key ])
        (nil)))
(insn 4 3 5 2 (set (reg/v:DI 90 [ klen ])
        (reg:DI 1 dx [ klen ])) db/c.cc:358 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ klen ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37330+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:358 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 D.31661.data_+0 S8 A128])
        (reg/v/f:DI 89 [ key ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ key ])
        (nil)))
(insn 11 10 12 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [9 D.31661.size_+0 S8 A64])
        (reg/v:DI 90 [ klen ])) ./include/leveldb/slice.h:31 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ klen ])
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg/f:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:359 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (reg/f:DI 92)) db/c.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg/v/f:DI 88 [ b ])) db/c.cc:359 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ b ])
        (nil)))
(call_insn 15 14 18 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE") [flags 0x41]  <function_decl 0x7fb537663798 Delete>) [0 Delete S1 A8])
        (const_int 0 [0])) db/c.cc:359 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch6DeleteERKNS_5SliceE") [flags 0x41]  <function_decl 0x7fb537663798 Delete>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 15 19 2 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37330+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:360 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 19 18 24 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) db/c.cc:360 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 22)
;;  succ:       4 [100.0%] 
;;              3 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 24 19 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(call_insn 20 24 22 3 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:360 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 22 20 25 4 334 "" [1 uses])
(note 25 22 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t)) (leveldb_writebatch_iterate, funcdef_no=1466, decl_uid=2270, cgraph_uid=581, symbol_order=584)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 10 (    1)


void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={7d,1u} r4={8d,2u} r5={12d,6u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={11d,2u} r18={6d} r19={6d} r20={1d,20u,4e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r95={1d,1u} r97={1d,1u} r99={1d,1u} r102={1d,1u} r105={1d,1u} r107={1d,3u} r108={1d,3u} 
;;    total ref usage 564{477d,83u,4e} in 36{30 regular + 6 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464
;;  reg->defs[] map:	0[0,7] 1[8,16] 2[17,23] 4[24,31] 5[32,43] 6[44,44] 7[45,45] 8[46,51] 9[52,57] 10[58,63] 11[64,69] 12[70,75] 13[76,81] 14[82,87] 15[88,93] 16[94,94] 17[95,105] 18[106,111] 19[112,117] 20[118,118] 21[119,125] 22[126,132] 23[133,139] 24[140,146] 25[147,153] 26[154,160] 27[161,167] 28[168,174] 29[175,180] 30[181,186] 31[187,192] 32[193,198] 33[199,204] 34[205,210] 35[211,216] 36[217,222] 37[223,229] 38[230,236] 39[237,242] 40[243,248] 45[249,254] 46[255,260] 47[261,266] 48[267,272] 49[273,278] 50[279,284] 51[285,290] 52[291,296] 53[297,302] 54[303,308] 55[309,314] 56[315,320] 57[321,326] 58[327,332] 59[333,338] 60[339,344] 61[345,350] 62[351,356] 63[357,362] 64[363,368] 65[369,374] 66[375,380] 67[381,386] 68[387,392] 69[393,398] 70[399,404] 71[405,410] 72[411,416] 73[417,422] 74[423,428] 75[429,434] 76[435,440] 77[441,446] 78[447,452] 79[453,458] 80[459,464] 88[465,465] 90[466,466] 91[467,467] 92[468,468] 93[469,469] 95[470,470] 97[471,471] 99[472,472] 102[473,473] 105[474,474] 107[475,475] 108[476,476] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d16(1){ }d23(2){ }d31(4){ }d43(5){ }d44(6){ }d45(7){ }d94(16){ }d118(20){ }d125(21){ }d132(22){ }d139(23){ }d146(24){ }d153(25){ }d160(26){ }d167(27){ }d174(28){ }d229(37){ }d236(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[7],1[16],2[23],4[31],5[43],6[44],7[45],16[94],20[118],21[125],22[132],23[139],24[146],25[153],26[160],27[167],28[174],37[229],38[236]
;; rd  kill	(118) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],2[17,18,19,20,21,22,23],4[24,25,26,27,28,29,30,31],5[32,33,34,35,36,37,38,39,40,41,42,43],6[44],7[45],16[94],20[118],21[119,120,121,122,123,124,125],22[126,127,128,129,130,131,132],23[133,134,135,136,137,138,139],24[140,141,142,143,144,145,146],25[147,148,149,150,151,152,153],26[154,155,156,157,158,159,160],27[161,162,163,164,165,166,167],28[168,169,170,171,172,173,174],37[223,224,225,226,227,228,229],38[230,231,232,233,234,235,236]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[16],2[23],4[31],5[43],6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 6(EH) 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d44(bb 0 insn -1) }u1(7){ d45(bb 0 insn -1) }u2(16){ d94(bb 0 insn -1) }u3(20){ d118(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 95 97 107 108
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 90 91 92 93 95 97 107 108
;; live  kill	 17 [flags]
;; rd  in  	(8) 1[16],2[23],4[31],5[43],6[44],7[45],16[94],20[118]
;; rd  gen 	(8) 90[466],91[467],92[468],93[469],95[470],97[471],107[475],108[476]
;; rd  kill	(8) 90[466],91[467],92[468],93[469],95[470],97[471],107[475],108[476]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; rd  out 	(6) 6[44],7[45],16[94],20[118],107[475],108[476]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ d44(bb 0 insn -1) }u30(7){ d45(bb 0 insn -1) }u31(16){ d94(bb 0 insn -1) }u32(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(6) 6[44],7[45],16[94],20[118],107[475],108[476]
;; rd  gen 	(2) 17[102],88[465]
;; rd  kill	(12) 17[95,96,97,98,99,100,101,102,103,104,105],88[465]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; rd  out 	(7) 6[44],7[45],16[94],20[118],88[465],107[475],108[476]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ d44(bb 0 insn -1) }u37(7){ d45(bb 0 insn -1) }u38(16){ d94(bb 0 insn -1) }u39(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(7) 6[44],7[45],16[94],20[118],88[465],107[475],108[476]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; rd  out 	(6) 6[44],7[45],16[94],20[118],107[475],108[476]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 3 4 )->[5]->( 9 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ d44(bb 0 insn -1) }u44(7){ d45(bb 0 insn -1) }u45(16){ d94(bb 0 insn -1) }u46(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 5 [di] 17 [flags] 99
;; live  kill	
;; rd  in  	(7) 6[44],7[45],16[94],20[118],88[465],107[475],108[476]
;; rd  gen 	(2) 17[99],99[472]
;; rd  kill	(12) 17[95,96,97,98,99,100,101,102,103,104,105],99[472]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 2(EH) )->[6]->( 7 )
;; bb 6 artificial_defs: { d3(0){ }d12(1){ }}
;; bb 6 artificial_uses: { u56(6){ d44(bb 0 insn -1) }u57(7){ d45(bb 0 insn -1) }u58(16){ d94(bb 0 insn -1) }u59(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 0 [ax] 1 [dx] 105
;; live  kill	
;; rd  in  	(6) 6[44],7[45],16[94],20[118],107[475],108[476]
;; rd  gen 	(3) 0[3],1[12],105[474]
;; rd  kill	(18) 0[0,1,2,3,4,5,6,7],1[8,9,10,11,12,13,14,15,16],105[474]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; rd  out 	(7) 6[44],7[45],16[94],20[118],105[474],107[475],108[476]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ d44(bb 0 insn -1) }u62(7){ d45(bb 0 insn -1) }u63(16){ d94(bb 0 insn -1) }u64(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; live  gen 	 5 [di] 102
;; live  kill	
;; rd  in  	(7) 6[44],7[45],16[94],20[118],105[474],107[475],108[476]
;; rd  gen 	(1) 102[473]
;; rd  kill	(1) 102[473]
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 5 )->[8]->( )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(6){ d44(bb 0 insn -1) }u76(7){ d45(bb 0 insn -1) }u77(16){ d94(bb 0 insn -1) }u78(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 5 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u80(6){ d44(bb 0 insn -1) }u81(7){ d45(bb 0 insn -1) }u82(16){ d94(bb 0 insn -1) }u83(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[44],7[45],16[94],20[118]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 16 { d94(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u84(6){ d44(bb 0 insn -1) }u85(7){ d45(bb 0 insn -1) }u86(20){ d118(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[44],7[45],16[94],20[118]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d44(bb 0 insn -1) }
;;   reg 7 { d45(bb 0 insn -1) }
;;   reg 20 { d118(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 8 to worklist
  Adding insn 26 to worklist
  Adding insn 29 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 56:
Processing use of (reg 20 frame) in insn 44:
Processing use of (reg 102) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 107) in insn 43:
  Adding insn 11 to worklist
Processing use of (reg 7 sp) in insn 47:
Processing use of (reg 5 di) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 108) in insn 46:
  Adding insn 18 to worklist
Processing use of (reg 20 frame) in insn 18:
Processing use of (reg 7 sp) in insn 50:
Processing use of (reg 5 di) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 105) in insn 49:
  Adding insn 63 to worklist
Processing use of (reg 0 ax) in insn 63:
Processing use of (reg 20 frame) in insn 34:
Processing use of (reg 99) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 107) in insn 33:
Processing use of (reg 7 sp) in insn 37:
Processing use of (reg 5 di) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 108) in insn 36:
Processing use of (reg 20 frame) in insn 54:
Processing use of (reg 17 flags) in insn 55:
Processing use of (reg 7 sp) in insn 29:
Processing use of (reg 5 di) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 88 [ D.37335 ]) in insn 28:
  Adding insn 24 to worklist
Processing use of (reg 20 frame) in insn 24:
Processing use of (reg 17 flags) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 88 [ D.37335 ]) in insn 25:
Processing use of (reg 20 frame) in insn 8:
Processing use of (reg 20 frame) in insn 13:
Processing use of (reg 95) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 107) in insn 12:
Processing use of (reg 20 frame) in insn 14:
Processing use of (reg 91 [ state ]) in insn 14:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 20 frame) in insn 15:
Processing use of (reg 92 [ put ]) in insn 15:
  Adding insn 4 to worklist
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 20 frame) in insn 16:
Processing use of (reg 93 [ deleted ]) in insn 16:
  Adding insn 5 to worklist
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 1 dx) in insn 22:
  Adding insn 19 to worklist
Processing use of (reg 4 si) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 97) in insn 21:
  Adding insn 17 to worklist
Processing use of (reg 20 frame) in insn 17:
Processing use of (reg 90 [ b ]) in insn 20:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 108) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writebatch_iterate(leveldb_writebatch_t*, void*, void (*)(void*, const char*, size_t, const char*, size_t), void (*)(void*, const char*, size_t))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={8d,1u} r1={9d,2u} r2={7d,1u} r4={8d,2u} r5={12d,6u} r6={1d,9u} r7={1d,15u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,8u} r17={11d,2u} r18={6d} r19={6d} r20={1d,20u,4e} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={7d} r38={7d} r39={6d} r40={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r88={1d,2u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r95={1d,1u} r97={1d,1u} r99={1d,1u} r102={1d,1u} r105={1d,1u} r107={1d,3u} r108={1d,3u} 
;;    total ref usage 564{477d,83u,4e} in 36{30 regular + 6 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91 92 93 95 97 107 108
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 1 [dx] 4 [si] 5 [di] 90 91 92 93 95 97 107 108
;; live  kill	 17 [flags]
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 90 [ b ])
        (reg:DI 5 di [ b ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 91 [ state ])
        (reg:DI 4 si [ state ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ state ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 92 [ put ])
        (reg:DI 1 dx [ put ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ put ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 93 [ deleted ])
        (reg:DI 2 cx [ deleted ])) db/c.cc:366 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ deleted ])
        (nil)))
(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.37336+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:366 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg:DI 107)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:367 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 95)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                (const_int 16 [0x10])))
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 95)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 14 13 15 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 handler.state_+0 S8 A64])
        (reg/v/f:DI 91 [ state ])) db/c.cc:380 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ state ])
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [3 handler.put_+0 S8 A128])
        (reg/v/f:DI 92 [ put ])) db/c.cc:381 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ put ])
        (nil)))
(insn 16 15 17 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [3 handler.deleted_+0 S8 A64])
        (reg/v/f:DI 93 [ deleted ])) db/c.cc:382 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ deleted ])
        (nil)))
(insn 17 16 18 2 (parallel [
            (set (reg/f:DI 97)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:383 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (parallel [
            (set (reg/f:DI 108)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/c.cc:383 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg/f:DI 108)) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (reg/v/f:DI 90 [ b ])) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ b ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg/f:DI 97)) db/c.cc:383 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 22 21 23 2 (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE") [flags 0x41]  <function_decl 0x7fb537669360 Iterate>) [0 Iterate S1 A8])
        (const_int 0 [0])) db/c.cc:383 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb10WriteBatch7IterateEPNS0_7HandlerE") [flags 0x41]  <function_decl 0x7fb537669360 Iterate>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108

;; basic block 3, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 17 [flags] 88
;; live  kill	
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg/f:DI 88 [ D.37335 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.31757.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37335 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 26 25 27 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 30)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 30)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              5 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108

;; basic block 4, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(6){ }u37(7){ }u38(16){ }u39(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 107 108
;; live  gen 	 5 [di]
;; live  kill	
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37335 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37335 ])
        (nil)))
(call_insn 29 28 30 4 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7fb538d99438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.6%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 5 [di] 17 [flags] 99
;; live  kill	
(code_label 30 29 31 5 338 "" [1 uses])
(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 31 34 5 (set (reg/f:DI 99)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 34 33 36 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 99)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(insn 36 34 37 5 (set (reg:DI 5 di)
        (reg/f:DI 108)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(call_insn 37 36 54 5 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 37 55 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.37336+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/c.cc:384 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 55 54 62 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) db/c.cc:384 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 58)
;;  succ:       9 [100.0%] 
;;              8 [0.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 6 artificial_defs: { d3(0){ }d12(1){ }}
;; bb 6 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 105
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 108
;; live  gen 	 0 [ax] 1 [dx] 105
;; live  kill	
(code_label/s 62 55 64 6 341 "" [1 uses])
(note 64 62 63 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 63 64 40 6 (set (reg:DI 105)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108

;; basic block 7, loop depth 0, count 0, freq 0
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 105 107 108
;; live  gen 	 5 [di] 102
;; live  kill	
(code_label 40 63 41 7 339 "" [0 uses])
(note 41 40 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 44 7 (set (reg/f:DI 102)
        (plus:DI (reg:DI 107)
            (const_int 16 [0x10]))) db/c.cc:367 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ26leveldb_writebatch_iterateE1H")  <var_decl 0x7fb5373d9ab0 _ZTVZ26leveldb_writebatch_iterateE1H>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 44 43 46 7 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 handler.D.31723._vptr.Handler+0 S8 A128])
        (reg/f:DI 102)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102)
        (nil)))
(insn 46 44 47 7 (set (reg:DI 5 di)
        (reg/f:DI 108)) db/c.cc:367 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(call_insn 47 46 49 7 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:367 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10WriteBatch7HandlerD2Ev") [flags 0x41]  <function_decl 0x7fb5376690d8 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 49 47 50 7 (set (reg:DI 5 di)
        (reg:DI 105)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(call_insn 50 49 60 7 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 4
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [0.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(note 60 50 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(call_insn 56 60 58 8 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/c.cc:384 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb5372f5a20 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u80(6){ }u81(7){ }u82(16){ }u83(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 58 56 61 9 340 "" [1 uses])
(note 61 58 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_options_t* leveldb_options_create() (leveldb_options_create, funcdef_no=1475, decl_uid=2271, cgraph_uid=585, symbol_order=588)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)


leveldb_options_t* leveldb_options_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,5u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 351{316d,35u,0e} in 12{8 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313
;;  reg->defs[] map:	0[0,6] 1[7,12] 2[13,17] 4[18,22] 5[23,31] 6[32,32] 7[33,33] 8[34,37] 9[38,41] 10[42,45] 11[46,49] 12[50,53] 13[54,57] 14[58,61] 15[62,65] 16[66,66] 17[67,70] 18[71,74] 19[75,78] 20[79,79] 21[80,84] 22[85,89] 23[90,94] 24[95,99] 25[100,104] 26[105,109] 27[110,114] 28[115,119] 29[120,123] 30[124,127] 31[128,131] 32[132,135] 33[136,139] 34[140,143] 35[144,147] 36[148,151] 37[152,156] 38[157,161] 39[162,165] 40[166,169] 45[170,173] 46[174,177] 47[178,181] 48[182,185] 49[186,189] 50[190,193] 51[194,197] 52[198,201] 53[202,205] 54[206,209] 55[210,213] 56[214,217] 57[218,221] 58[222,225] 59[226,229] 60[230,233] 61[234,237] 62[238,241] 63[242,245] 64[246,249] 65[250,253] 66[254,257] 67[258,261] 68[262,265] 69[266,269] 70[270,273] 71[274,277] 72[278,281] 73[282,285] 74[286,289] 75[290,293] 76[294,297] 77[298,301] 78[302,305] 79[306,309] 80[310,313] 87[314,314] 93[315,315] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d17(2){ }d22(4){ }d31(5){ }d32(6){ }d33(7){ }d66(16){ }d79(20){ }d84(21){ }d89(22){ }d94(23){ }d99(24){ }d104(25){ }d109(26){ }d114(27){ }d119(28){ }d156(37){ }d161(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[6],1[12],2[17],4[22],5[31],6[32],7[33],16[66],20[79],21[84],22[89],23[94],24[99],25[104],26[109],27[114],28[119],37[156],38[161]
;; rd  kill	(86) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12],2[13,14,15,16,17],4[18,19,20,21,22],5[23,24,25,26,27,28,29,30,31],6[32],7[33],16[66],20[79],21[80,81,82,83,84],22[85,86,87,88,89],23[90,91,92,93,94],24[95,96,97,98,99],25[100,101,102,103,104],26[105,106,107,108,109],27[110,111,112,113,114],28[115,116,117,118,119],37[152,153,154,155,156],38[157,158,159,160,161]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[32],7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 5 3(EH) )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d32(bb 0 insn -1) }u1(7){ d33(bb 0 insn -1) }u2(16){ d66(bb 0 insn -1) }u3(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87
;; live  kill	
;; rd  in  	(4) 6[32],7[33],16[66],20[79]
;; rd  gen 	(1) 87[314]
;; rd  kill	(1) 87[314]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; rd  out 	(5) 6[32],7[33],16[66],20[79],87[314]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 2(EH) )->[3]->( 4 )
;; bb 3 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 3 artificial_uses: { u10(6){ d32(bb 0 insn -1) }u11(7){ d33(bb 0 insn -1) }u12(16){ d66(bb 0 insn -1) }u13(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 1 [dx] 93
;; live  kill	
;; rd  in  	(5) 6[32],7[33],16[66],20[79],87[314]
;; rd  gen 	(3) 0[3],1[9],93[315]
;; rd  kill	(14) 0[0,1,2,3,4,5,6],1[7,8,9,10,11,12],93[315]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; rd  out 	(6) 6[32],7[33],16[66],20[79],87[314],93[315]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 3 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ d32(bb 0 insn -1) }u16(7){ d33(bb 0 insn -1) }u17(16){ d66(bb 0 insn -1) }u18(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[32],7[33],16[66],20[79],87[314],93[315]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(3) 7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ d32(bb 0 insn -1) }u26(7){ d33(bb 0 insn -1) }u27(16){ d66(bb 0 insn -1) }u28(20){ d79(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(5) 6[32],7[33],16[66],20[79],87[314]
;; rd  gen 	(1) 0[0]
;; rd  kill	(7) 0[0,1,2,3,4,5,6]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[32],7[33],16[66],20[79]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 16 { d66(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(0){ d0(bb 5 insn 24) }u32(6){ d32(bb 0 insn -1) }u33(7){ d33(bb 0 insn -1) }u34(20){ d79(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[32],7[33],16[66],20[79]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 5 insn 24) }
;;   reg 6 { d32(bb 0 insn -1) }
;;   reg 7 { d33(bb 0 insn -1) }
;;   reg 20 { d79(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 6 to worklist
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 25 to worklist
Finished finding needed instructions:
  Adding insn 24 to worklist
Processing use of (reg 87 [ D.37343 ]) in insn 24:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
Processing use of (reg 0 ax) in insn 25:
Processing use of (reg 7 sp) in insn 18:
Processing use of (reg 5 di) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 87 [ D.37343 ]) in insn 17:
Processing use of (reg 7 sp) in insn 21:
Processing use of (reg 5 di) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 93) in insn 20:
  Adding insn 28 to worklist
Processing use of (reg 0 ax) in insn 28:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 87 [ D.37343 ]) in insn 9:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_options_t* leveldb_options_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={7d,4u} r1={6d} r2={5d} r4={5d} r5={9d,4u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={4d} r18={4d} r19={4d} r20={1d,5u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,3u} r93={1d,1u} 
;;    total ref usage 351{316d,35u,0e} in 12{8 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 87
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 80 [0x50])) db/c.cc:387 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:387 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 87 [ D.37343 ])
        (reg:DI 0 ax)) db/c.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 9 7 10 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:52 89 {*movdi_internal}
     (nil))
(call_insn 10 9 27 2 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb7OptionsC1Ev") [flags 0x41]  <function_decl 0x7fb537807360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/c.cc:52 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb7OptionsC1Ev") [flags 0x41]  <function_decl 0x7fb537807360 __comp_ctor >)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 3, loop depth 0, count 0, freq 0
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 3 artificial_defs: { d3(0){ }d9(1){ }}
;; bb 3 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax] 1 [dx] 93
;; live  kill	
(code_label/s 27 10 29 3 351 "" [1 uses])
(note 29 27 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 28 29 15 3 (set (reg:DI 93)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU,PRESERVE)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93

;; basic block 4, loop depth 0, count 0, freq 0
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU,PRESERVE)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 93
;; live  gen 	 5 [di]
;; live  kill	
(code_label 15 28 16 4 350 "" [0 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:387 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37343 ])
        (nil)))
(call_insn 18 17 20 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:387 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 18 21 4 (set (reg:DI 5 di)
        (reg:DI 93)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 93)
        (nil)))
(call_insn 21 20 26 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fb538d966c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; live  gen 	 0 [ax]
;; live  kill	
(note 26 21 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 26 25 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.37343 ])) db/c.cc:388 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37343 ])
        (nil)))
(insn 25 24 0 5 (use (reg/i:DI 0 ax)) db/c.cc:388 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_destroy(leveldb_options_t*) (leveldb_options_destroy, funcdef_no=1899, decl_uid=2273, cgraph_uid=586, symbol_order=589)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_destroy(leveldb_options_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(1) 87[92]
;; rd  kill	(1) 87[92]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 87 [ options ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_destroy(leveldb_options_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ options ])
        (reg:DI 5 di [ options ])) db/c.cc:390 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ options ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ options ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ options ])
        (nil)))
(call_insn/j 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_comparator(leveldb_options_t*, leveldb_comparator_t*) (leveldb_options_set_comparator, funcdef_no=1480, decl_uid=2276, cgraph_uid=587, symbol_order=590)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_comparator(leveldb_options_t*, leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ cmp ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_comparator(leveldb_options_t*, leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:396 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 88 [ cmp ])
        (reg:DI 4 si [ cmp ])) db/c.cc:396 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ cmp ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem/f:DI (reg/v/f:DI 87 [ opt ]) [3 opt_2(D)->rep.comparator+0 S8 A64])
        (reg/v/f:DI 88 [ cmp ])) db/c.cc:397 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ cmp ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_filter_policy(leveldb_options_t*, leveldb_filterpolicy_t*) (leveldb_options_set_filter_policy, funcdef_no=1481, decl_uid=2279, cgraph_uid=588, symbol_order=591)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_filter_policy(leveldb_options_t*, leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ policy ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_filter_policy(leveldb_options_t*, leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 88 [ policy ])
        (reg:DI 4 si [ policy ])) db/c.cc:402 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ policy ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 72 [0x48])) [3 opt_2(D)->rep.filter_policy+0 S8 A64])
        (reg/v/f:DI 88 [ policy ])) db/c.cc:403 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ policy ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_create_if_missing(leveldb_options_t*, unsigned char) (leveldb_options_set_create_if_missing, funcdef_no=1482, decl_uid=2282, cgraph_uid=589, symbol_order=592)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_create_if_missing(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37354 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_create_if_missing(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:407 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:407 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:408 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37354 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:408 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 8 [0x8])) [17 opt_4(D)->rep.create_if_missing+0 S1 A64])
        (reg:QI 91 [ D.37354 ])) db/c.cc:408 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37354 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_error_if_exists(leveldb_options_t*, unsigned char) (leveldb_options_set_error_if_exists, funcdef_no=1483, decl_uid=2285, cgraph_uid=590, symbol_order=593)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_error_if_exists(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37358 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_error_if_exists(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:412 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:412 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:413 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37358 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:413 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 9 [0x9])) [17 opt_4(D)->rep.error_if_exists+0 S1 A8])
        (reg:QI 91 [ D.37358 ])) db/c.cc:413 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37358 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_paranoid_checks(leveldb_options_t*, unsigned char) (leveldb_options_set_paranoid_checks, funcdef_no=1484, decl_uid=2288, cgraph_uid=591, symbol_order=594)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_paranoid_checks(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37362 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_paranoid_checks(leveldb_options_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:417 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:417 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:418 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37362 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:418 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 10 [0xa])) [17 opt_4(D)->rep.paranoid_checks+0 S1 A16])
        (reg:QI 91 [ D.37362 ])) db/c.cc:418 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37362 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*) (leveldb_options_set_env, funcdef_no=1485, decl_uid=2291, cgraph_uid=592, symbol_order=595)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 87[20,21] 88[22,22] 89[23,23] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(3) 17[8],88[22],89[23]
;; rd  kill	(3) 17[8],88[22],89[23]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; rd  out 	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(16){ d7(bb 0 insn -1) }u11(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[21]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[21],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ d5(bb 0 insn -1) }u14(7){ d6(bb 0 insn -1) }u15(16){ d7(bb 0 insn -1) }u16(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[20]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[20],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ d5(bb 0 insn -1) }u18(7){ d6(bb 0 insn -1) }u19(16){ d7(bb 0 insn -1) }u20(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
;; rd  in  	(7) 6[5],7[6],16[7],20[9],87[20,21],88[22]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(6){ d5(bb 0 insn -1) }u24(7){ d6(bb 0 insn -1) }u25(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ D.37366 ]) in insn 14:
  Adding insn 11 to worklist
  Adding insn 5 to worklist
Processing use of (reg 88 [ opt ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ env ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 89 [ env ]) in insn 8:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_env(leveldb_options_t*, leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:421 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ env ])
        (reg:DI 4 si [ env ])) db/c.cc:421 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ env ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ env ])
            (const_int 0 [0]))) db/c.cc:422 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:422 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 20 3 (set (reg/f:DI 87 [ D.37366 ])
        (mem/f:DI (reg/v/f:DI 89 [ env ]) [3 env_2(D)->rep+0 S8 A64])) db/c.cc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ env ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
(code_label 20 11 19 4 363 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37366 ])
        (const_int 0 [0])) db/c.cc:422 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
(code_label 12 5 13 5 362 "" [0 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 16 [0x10])) [3 opt_5(D)->rep.env+0 S8 A64])
        (reg/f:DI 87 [ D.37366 ])) db/c.cc:422 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37366 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*) (leveldb_options_set_info_log, funcdef_no=1486, decl_uid=2294, cgraph_uid=593, symbol_order=596)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 87[20,21] 88[22,22] 89[23,23] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(3) 17[8],88[22],89[23]
;; rd  kill	(3) 17[8],88[22],89[23]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; rd  out 	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(16){ d7(bb 0 insn -1) }u11(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[21]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[21],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ d5(bb 0 insn -1) }u14(7){ d6(bb 0 insn -1) }u15(16){ d7(bb 0 insn -1) }u16(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[20]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[20],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ d5(bb 0 insn -1) }u18(7){ d6(bb 0 insn -1) }u19(16){ d7(bb 0 insn -1) }u20(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
;; rd  in  	(7) 6[5],7[6],16[7],20[9],87[20,21],88[22]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(6){ d5(bb 0 insn -1) }u24(7){ d6(bb 0 insn -1) }u25(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ D.37369 ]) in insn 14:
  Adding insn 11 to worklist
  Adding insn 5 to worklist
Processing use of (reg 88 [ opt ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ l ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 89 [ l ]) in insn 8:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_info_log(leveldb_options_t*, leveldb_logger_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ l ])
        (reg:DI 4 si [ l ])) db/c.cc:425 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ l ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ l ])
            (const_int 0 [0]))) db/c.cc:426 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 20 3 (set (reg/f:DI 87 [ D.37369 ])
        (mem/f:DI (reg/v/f:DI 89 [ l ]) [3 l_2(D)->rep+0 S8 A64])) db/c.cc:426 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ l ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
(code_label 20 11 19 4 366 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37369 ])
        (const_int 0 [0])) db/c.cc:426 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
(code_label 12 5 13 5 365 "" [0 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 24 [0x18])) [3 opt_5(D)->rep.info_log+0 S8 A64])
        (reg/f:DI 87 [ D.37369 ])) db/c.cc:426 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37369 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t) (leveldb_options_set_write_buffer_size, funcdef_no=1487, decl_uid=2297, cgraph_uid=594, symbol_order=597)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ s ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_write_buffer_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 88 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:429 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 32 [0x20])) [9 opt_2(D)->rep.write_buffer_size+0 S8 A64])
        (reg/v:DI 88 [ s ])) db/c.cc:430 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 88 [ s ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_max_open_files(leveldb_options_t*, int) (leveldb_options_set_max_open_files, funcdef_no=1488, decl_uid=2300, cgraph_uid=595, symbol_order=598)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_max_open_files(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ n ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_max_open_files(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:433 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 4 si [ n ])) db/c.cc:433 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 40 [0x28])) [27 opt_2(D)->rep.max_open_files+0 S4 A64])
        (reg/v:SI 88 [ n ])) db/c.cc:434 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 88 [ n ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*) (leveldb_options_set_cache, funcdef_no=1489, decl_uid=2303, cgraph_uid=596, symbol_order=599)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 88[19,19] 89[20,20] 90[21,21] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89 90
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 88 89 90
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(3) 88[19],89[20],90[21]
;; rd  kill	(3) 88[19],89[20],90[21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(6){ d5(bb 0 insn -1) }u10(7){ d6(bb 0 insn -1) }u11(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 90 [ c_2(D)->rep ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 89 [ c ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_cache(leveldb_options_t*, leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 34{22d,12u,0e} in 4{4 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89 90
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 88 89 90
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ c ])
        (reg:DI 4 si [ c ])) db/c.cc:437 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ c ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 90 [ c_2(D)->rep ])
        (mem/f:DI (reg/v/f:DI 89 [ c ]) [3 c_2(D)->rep+0 S8 A64])) db/c.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ c ])
        (nil)))
(insn 8 7 0 2 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 48 [0x30])) [3 opt_4(D)->rep.block_cache+0 S8 A64])
        (reg/f:DI 90 [ c_2(D)->rep ])) db/c.cc:438 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ c_2(D)->rep ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_block_size(leveldb_options_t*, size_t) (leveldb_options_set_block_size, funcdef_no=1490, decl_uid=2306, cgraph_uid=597, symbol_order=600)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_block_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ s ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_block_size(leveldb_options_t*, size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 88 [ s ])
        (reg:DI 4 si [ s ])) db/c.cc:441 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ s ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:DI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 56 [0x38])) [9 opt_2(D)->rep.block_size+0 S8 A64])
        (reg/v:DI 88 [ s ])) db/c.cc:442 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 88 [ s ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_block_restart_interval(leveldb_options_t*, int) (leveldb_options_set_block_restart_interval, funcdef_no=1491, decl_uid=2309, cgraph_uid=598, symbol_order=601)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_block_restart_interval(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 87[19,19] 88[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 87[19],88[20]
;; rd  kill	(2) 87[19],88[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 88 [ n ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_block_restart_interval(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 87 88
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:445 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 88 [ n ])
        (reg:SI 4 si [ n ])) db/c.cc:445 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ n ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 87 [ opt ])
                (const_int 64 [0x40])) [27 opt_2(D)->rep.block_restart_interval+0 S4 A64])
        (reg/v:SI 88 [ n ])) db/c.cc:446 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 88 [ n ])
        (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_options_set_compression(leveldb_options_t*, int) (leveldb_options_set_compression, funcdef_no=1492, decl_uid=2315, cgraph_uid=599, symbol_order=602)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_options_set_compression(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 20[8,8] 21[9,9] 22[10,10] 23[11,11] 24[12,12] 25[13,13] 26[14,14] 27[15,15] 28[16,16] 37[17,17] 38[18,18] 88[19,19] 89[20,20] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d8(20){ }d9(21){ }d10(22){ }d11(23){ }d12(24){ }d13(25){ }d14(26){ }d15(27){ }d16(28){ }d17(37){ }d18(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[8],21[9],22[10],23[11],24[12],25[13],26[14],27[15],28[16],37[17],38[18]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d8(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 88 89
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[8]
;; rd  gen 	(2) 88[19],89[20]
;; rd  kill	(2) 88[19],89[20]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[8]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(20){ d8(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[8]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d8(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 89 [ t ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_options_set_compression(leveldb_options_t*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 32{21d,11u,0e} in 3{3 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 88 89
;; live  kill	
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:449 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 89 [ t ])
        (reg:SI 4 si [ t ])) db/c.cc:449 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ t ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 0 2 (set (mem:SI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 68 [0x44])) [28 opt_4(D)->rep.compression+0 S4 A32])
        (reg/v:SI 89 [ t ])) db/c.cc:450 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 89 [ t ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_comparator_t* leveldb_comparator_create(void*, void (*)(void*), int (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*)) (leveldb_comparator_create, funcdef_no=1493, decl_uid=2327, cgraph_uid=606, symbol_order=609)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_comparator_t* leveldb_comparator_create(void*, void (*)(void*), int (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,6u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 16{15 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,8] 5[9,11] 6[12,12] 7[13,13] 8[14,14] 9[15,15] 10[16,16] 11[17,17] 12[18,18] 13[19,19] 14[20,20] 15[21,21] 16[22,22] 17[23,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 53[65,65] 54[66,66] 55[67,67] 56[68,68] 57[69,69] 58[70,70] 59[71,71] 60[72,72] 61[73,73] 62[74,74] 63[75,75] 64[76,76] 65[77,77] 66[78,78] 67[79,79] 68[80,80] 69[81,81] 70[82,82] 71[83,83] 72[84,84] 73[85,85] 74[86,86] 75[87,87] 76[88,88] 77[89,89] 78[90,90] 79[91,91] 80[92,92] 89[93,93] 90[94,94] 91[95,95] 92[96,96] 93[97,97] 94[98,98] 95[99,99] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(4){ }d11(5){ }d12(6){ }d13(7){ }d22(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(36) 0[0,1,2],1[3,4],2[5,6],4[7,8],5[9,10,11],6[12],7[13],16[22],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(8) 1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d12(bb 0 insn -1) }u1(7){ d13(bb 0 insn -1) }u2(16){ d22(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89 90 91 92 93 94 95
;; live  kill	
;; rd  in  	(8) 1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26]
;; rd  gen 	(8) 0[0],89[93],90[94],91[95],92[96],93[97],94[98],95[99]
;; rd  kill	(10) 0[0,1,2],89[93],90[94],91[95],92[96],93[97],94[98],95[99]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 16 { d22(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(0){ d0(bb 2 insn 24) }u25(6){ d12(bb 0 insn -1) }u26(7){ d13(bb 0 insn -1) }u27(20){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[12],7[13],16[22],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 24) }
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 25 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
  Adding insn 24 to worklist
Processing use of (reg 93) in insn 24:
  Adding insn 11 to worklist
Processing use of (reg 0 ax) in insn 11:
Processing use of (reg 7 sp) in insn 10:
Processing use of (reg 5 di) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 93) in insn 15:
Processing use of (reg 94) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 95) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 89 [ state ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 93) in insn 16:
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 90 [ destructor ]) in insn 17:
  Adding insn 3 to worklist
Processing use of (reg 93) in insn 17:
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 91 [ compare ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 93) in insn 18:
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 92 [ name ]) in insn 19:
  Adding insn 5 to worklist
Processing use of (reg 93) in insn 19:
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 0 ax) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_comparator_t* leveldb_comparator_create(void*, void (*)(void*), int (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,6u} r94={1d,1u} r95={1d,1u} 
;;    total ref usage 128{100d,28u,0e} in 16{15 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89 90 91 92 93 94 95
;; live  kill	
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (reg/v/f:DI 89 [ state ])
        (reg:DI 5 di [ state ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ state ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ destructor ])
        (reg:DI 4 si [ destructor ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ destructor ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ compare ])
        (reg:DI 1 dx [ compare ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ compare ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ name ])
        (reg:DI 2 cx [ name ])) db/c.cc:460 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ name ])
        (nil)))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:DI 5 di)
        (const_int 40 [0x28])) db/c.cc:461 89 {*movdi_internal}
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:461 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 13 2 (set (reg/f:DI 93)
        (reg:DI 0 ax)) db/c.cc:461 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 93)
            (nil))))
(insn 13 11 14 2 (set (reg:DI 95)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:60 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 94)
        (plus:DI (reg:DI 95)
            (const_int 16 [0x10]))) db/c.cc:60 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 95)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 15 14 16 2 (set (mem/f:DI (reg/f:DI 93) [3 MEM[(struct leveldb_comparator_t *)_3].D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_comparator_t *)_3].state_+0 S8 A64])
        (reg/v/f:DI 89 [ state ])) db/c.cc:462 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ state ])
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_comparator_t *)_3].destructor_+0 S8 A64])
        (reg/v/f:DI 90 [ destructor ])) db/c.cc:463 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ destructor ])
        (nil)))
(insn 18 17 19 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 24 [0x18])) [3 MEM[(struct leveldb_comparator_t *)_3].compare_+0 S8 A64])
        (reg/v/f:DI 91 [ compare ])) db/c.cc:464 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ compare ])
        (nil)))
(insn 19 18 24 2 (set (mem/f:DI (plus:DI (reg/f:DI 93)
                (const_int 32 [0x20])) [3 MEM[(struct leveldb_comparator_t *)_3].name_+0 S8 A64])
        (reg/v/f:DI 92 [ name ])) db/c.cc:465 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ name ])
        (nil)))
(insn 24 19 25 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 93)) db/c.cc:467 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) db/c.cc:467 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_comparator_destroy(leveldb_comparator_t*) (leveldb_comparator_destroy, funcdef_no=1500, decl_uid=2329, cgraph_uid=607, symbol_order=610)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 7 (    1)


void leveldb_comparator_destroy(leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={6d,2u} r18={4d} r19={4d} r20={1d,6u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={1d,2u} r93={1d,8u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 371{321d,50u,0e} in 21{17 regular + 4 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312
;;  reg->defs[] map:	0[0,4] 1[5,9] 2[10,14] 4[15,19] 5[20,28] 6[29,29] 7[30,30] 8[31,34] 9[35,38] 10[39,42] 11[43,46] 12[47,50] 13[51,54] 14[55,58] 15[59,62] 16[63,63] 17[64,69] 18[70,73] 19[74,77] 20[78,78] 21[79,83] 22[84,88] 23[89,93] 24[94,98] 25[99,103] 26[104,108] 27[109,113] 28[114,118] 29[119,122] 30[123,126] 31[127,130] 32[131,134] 33[135,138] 34[139,142] 35[143,146] 36[147,150] 37[151,155] 38[156,160] 39[161,164] 40[165,168] 45[169,172] 46[173,176] 47[177,180] 48[181,184] 49[185,188] 50[189,192] 51[193,196] 52[197,200] 53[201,204] 54[205,208] 55[209,212] 56[213,216] 57[217,220] 58[221,224] 59[225,228] 60[229,232] 61[233,236] 62[237,240] 63[241,244] 64[245,248] 65[249,252] 66[253,256] 67[257,260] 68[261,264] 69[265,268] 70[269,272] 71[273,276] 72[277,280] 73[281,284] 74[285,288] 75[289,292] 76[293,296] 77[297,300] 78[301,304] 79[305,308] 80[309,312] 88[313,313] 93[314,314] 94[315,315] 96[316,316] 97[317,317] 98[318,318] 99[319,319] 100[320,320] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d19(4){ }d28(5){ }d29(6){ }d30(7){ }d63(16){ }d78(20){ }d83(21){ }d88(22){ }d93(23){ }d98(24){ }d103(25){ }d108(26){ }d113(27){ }d118(28){ }d155(37){ }d160(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[4],1[9],2[14],4[19],5[28],6[29],7[30],16[63],20[78],21[83],22[88],23[93],24[98],25[103],26[108],27[113],28[118],37[155],38[160]
;; rd  kill	(83) 0[0,1,2,3,4],1[5,6,7,8,9],2[10,11,12,13,14],4[15,16,17,18,19],5[20,21,22,23,24,25,26,27,28],6[29],7[30],16[63],20[78],21[79,80,81,82,83],22[84,85,86,87,88],23[89,90,91,92,93],24[94,95,96,97,98],25[99,100,101,102,103],26[104,105,106,107,108],27[109,110,111,112,113],28[114,115,116,117,118],37[151,152,153,154,155],38[156,157,158,159,160]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[28],6[29],7[30],16[63],20[78]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d29(bb 0 insn -1) }u1(7){ d30(bb 0 insn -1) }u2(16){ d63(bb 0 insn -1) }u3(20){ d78(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93
;; live  kill	
;; rd  in  	(5) 5[28],6[29],7[30],16[63],20[78]
;; rd  gen 	(2) 17[69],93[314]
;; rd  kill	(7) 17[64,65,66,67,68,69],93[314]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; rd  out 	(5) 6[29],7[30],16[63],20[78],93[314]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ d29(bb 0 insn -1) }u8(7){ d30(bb 0 insn -1) }u9(16){ d63(bb 0 insn -1) }u10(20){ d78(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags] 88 94 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 17 [flags] 88 94 96
;; live  kill	
;; rd  in  	(5) 6[29],7[30],16[63],20[78],93[314]
;; rd  gen 	(4) 17[64],88[313],94[315],96[316]
;; rd  kill	(9) 17[64,65,66,67,68,69],88[313],94[315],96[316]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; rd  out 	(6) 6[29],7[30],16[63],20[78],88[313],93[314]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ d29(bb 0 insn -1) }u17(7){ d30(bb 0 insn -1) }u18(16){ d63(bb 0 insn -1) }u19(20){ d78(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 97 98 99 100
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[63],20[78],88[313],93[314]
;; rd  gen 	(4) 97[317],98[318],99[319],100[320]
;; rd  kill	(4) 97[317],98[318],99[319],100[320]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[29],7[30],16[63],20[78]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(6){ d29(bb 0 insn -1) }u36(7){ d30(bb 0 insn -1) }u37(16){ d63(bb 0 insn -1) }u38(20){ d78(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[29],7[30],16[63],20[78],88[313],93[314]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[29],7[30],16[63],20[78]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

( 2 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ d29(bb 0 insn -1) }u44(7){ d30(bb 0 insn -1) }u45(16){ d63(bb 0 insn -1) }u46(20){ d78(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[29],7[30],16[63],20[78],93[314]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[29],7[30],16[63],20[78]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 16 { d63(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

( 5 4 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u47(6){ d29(bb 0 insn -1) }u48(7){ d30(bb 0 insn -1) }u49(20){ d78(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[29],7[30],16[63],20[78]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d29(bb 0 insn -1) }
;;   reg 7 { d30(bb 0 insn -1) }
;;   reg 20 { d78(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 14 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 18 to worklist
  Adding insn 31 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 31:
Processing use of (reg 5 di) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 88 [ D.37393 ]) in insn 31:
  Adding insn 10 to worklist
Processing use of (reg 94 [ cmp_2(D)->D.28873._vptr.Comparator ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 93 [ cmp ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 93 [ cmp ]) in insn 30:
Processing use of (reg 93 [ cmp ]) in insn 18:
Processing use of (reg 97) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 98) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 7 sp) in insn 22:
Processing use of (reg 5 di) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 100 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_ ]) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 93 [ cmp ]) in insn 20:
Processing use of (reg 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ]) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 93 [ cmp ]) in insn 19:
Processing use of (reg 7 sp) in insn 24:
Processing use of (reg 5 di) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 93 [ cmp ]) in insn 23:
Processing use of (reg 7 sp) in insn 26:
Processing use of (reg 5 di) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 93 [ cmp ]) in insn 25:
Processing use of (reg 17 flags) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 88 [ D.37393 ]) in insn 13:
Processing use of (reg 96) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 17 flags) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 93 [ cmp ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_comparator_destroy(leveldb_comparator_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d} r1={5d} r2={5d} r4={5d} r5={9d,5u} r6={1d,6u} r7={1d,10u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,5u} r17={6d,2u} r18={4d} r19={4d} r20={1d,6u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={1d,2u} r93={1d,8u} r94={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} 
;;    total ref usage 371{321d,50u,0e} in 21{17 regular + 4 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 93
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 93
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 93 [ cmp ])
        (reg:DI 5 di [ cmp ])) db/c.cc:469 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ cmp ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ cmp ])
            (const_int 0 [0]))) db/c.cc:470 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) db/c.cc:470 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 35)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              6 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 17 [flags] 88 94 96
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 17 [flags] 88 94 96
;; live  kill	
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
        (mem/f:DI (reg/v/f:DI 93 [ cmp ]) [3 cmp_2(D)->D.28873._vptr.Comparator+0 S8 A64])) db/c.cc:470 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg/f:DI 88 [ D.37393 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B]+0 S8 A64])) db/c.cc:470 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ cmp_2(D)->D.28873._vptr.Comparator ])
        (nil)))
(insn 11 10 13 3 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZN20leveldb_comparator_tD0Ev") [flags 0x1]  <function_decl 0x7fb53767c5e8 __deleting_dtor >)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) 89 {*movdi_internal}
     (nil))
(insn 13 11 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37393 ])
            (reg:DI 96))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 28)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2005 (nil)))
 -> 28)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              5 [20.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93

;; basic block 4, loop depth 0, count 0, freq 6264, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; live  gen 	 5 [di] 97 98 99 100
;; live  kill	
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 97)
        (plus:DI (reg:DI 98)
            (const_int 16 [0x10]))) db/c.cc:69 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 98)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV20leveldb_comparator_t")  <var_decl 0x7fb537667870 _ZTV20leveldb_comparator_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 18 17 19 4 (set (mem/f:DI (reg/v/f:DI 93 [ cmp ]) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].D.28873._vptr.Comparator+0 S8 A64])
        (reg/f:DI 97)) db/c.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(insn 19 18 20 4 (set (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ cmp ])
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 20 19 21 4 (set (reg/f:DI 100 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_ ])
        (mem/f:DI (plus:DI (reg/v/f:DI 93 [ cmp ])
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_+0 S8 A64])) db/c.cc:70 89 {*movdi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:DI 5 di)
        (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])) db/c.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].state_ ])
        (nil)))
(call_insn 22 21 23 4 (call (mem:QI (reg/f:DI 100 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_ ]) [0 *_9 S1 A8])
        (const_int 0 [0])) db/c.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 100 [ MEM[(struct leveldb_comparator_t *)cmp_2(D)].destructor_ ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ cmp ])) db/c.cc:69 89 {*movdi_internal}
     (nil))
(call_insn 24 23 25 4 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) db/c.cc:69 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10ComparatorD2Ev") [flags 0x41]  <function_decl 0x7fb5377df6c0 __base_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ cmp ])) db/c.cc:71 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ cmp ])
        (nil)))
(call_insn/j 26 25 28 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:71 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 1571, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [20.1%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 93
;; live  gen 	 5 [di]
;; live  kill	
(code_label 28 26 29 5 377 "" [1 uses])
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 5 (set (reg:DI 5 di)
        (reg/v/f:DI 93 [ cmp ])) db/c.cc:470 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ cmp ])
        (nil)))
(call_insn/j 31 30 35 5 (call (mem:QI (reg/f:DI 88 [ D.37393 ]) [0 *OBJ_TYPE_REF(_5;(struct leveldb_comparator_t)cmp_2(D)->1) S1 A8])
        (const_int 0 [0])) db/c.cc:470 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37393 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 35 31 36 6 375 "" [1 uses])
(note 36 35 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_t* leveldb_filterpolicy_create(void*, void (*)(void*), char* (*)(void*, const char* const*, const size_t*, int, size_t*), unsigned char (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*)) (leveldb_filterpolicy_create, funcdef_no=1501, decl_uid=2347, cgraph_uid=614, symbol_order=617)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_filterpolicy_t* leveldb_filterpolicy_create(void*, void (*)(void*), char* (*)(void*, const char* const*, const size_t*, int, size_t*), unsigned char (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,7u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 132{101d,31u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,8] 5[9,11] 6[12,12] 7[13,13] 8[14,14] 9[15,15] 10[16,16] 11[17,17] 12[18,18] 13[19,19] 14[20,20] 15[21,21] 16[22,22] 17[23,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 53[65,65] 54[66,66] 55[67,67] 56[68,68] 57[69,69] 58[70,70] 59[71,71] 60[72,72] 61[73,73] 62[74,74] 63[75,75] 64[76,76] 65[77,77] 66[78,78] 67[79,79] 68[80,80] 69[81,81] 70[82,82] 71[83,83] 72[84,84] 73[85,85] 74[86,86] 75[87,87] 76[88,88] 77[89,89] 78[90,90] 79[91,91] 80[92,92] 89[93,93] 90[94,94] 91[95,95] 92[96,96] 93[97,97] 94[98,98] 95[99,99] 96[100,100] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(4){ }d11(5){ }d12(6){ }d13(7){ }d22(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(36) 0[0,1,2],1[3,4],2[5,6],4[7,8],5[9,10,11],6[12],7[13],16[22],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  out 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; rd  out 	(9) 1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],37[52]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d12(bb 0 insn -1) }u1(7){ d13(bb 0 insn -1) }u2(16){ d22(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 0 [ax] 5 [di] 89 90 91 92 93 94 95 96
;; live  kill	
;; rd  in  	(9) 1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],37[52]
;; rd  gen 	(9) 0[0],89[93],90[94],91[95],92[96],93[97],94[98],95[99],96[100]
;; rd  kill	(11) 0[0,1,2],89[93],90[94],91[95],92[96],93[97],94[98],95[99],96[100]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 16 { d22(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u27(0){ d0(bb 2 insn 26) }u28(6){ d12(bb 0 insn -1) }u29(7){ d13(bb 0 insn -1) }u30(20){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[12],7[13],16[22],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 26) }
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 27 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
  Adding insn 26 to worklist
Processing use of (reg 94) in insn 26:
  Adding insn 12 to worklist
Processing use of (reg 0 ax) in insn 12:
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 94) in insn 16:
Processing use of (reg 95) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 96) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 89 [ state ]) in insn 17:
  Adding insn 2 to worklist
Processing use of (reg 94) in insn 17:
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 90 [ destructor ]) in insn 18:
  Adding insn 3 to worklist
Processing use of (reg 94) in insn 18:
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 91 [ create_filter ]) in insn 19:
  Adding insn 4 to worklist
Processing use of (reg 94) in insn 19:
Processing use of (reg 1 dx) in insn 4:
Processing use of (reg 92 [ key_may_match ]) in insn 20:
  Adding insn 5 to worklist
Processing use of (reg 94) in insn 20:
Processing use of (reg 2 cx) in insn 5:
Processing use of (reg 93 [ name ]) in insn 21:
  Adding insn 6 to worklist
Processing use of (reg 94) in insn 21:
Processing use of (reg 37 r8) in insn 6:
Processing use of (reg 0 ax) in insn 27:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_filterpolicy_t* leveldb_filterpolicy_create(void*, void (*)(void*), char* (*)(void*, const char* const*, const size_t*, int, size_t*), unsigned char (*)(void*, const char*, size_t, const char*, size_t), const char* (*)(void*))

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 37[r8]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,7u} r95={1d,1u} r96={1d,1u} 
;;    total ref usage 132{101d,31u,0e} in 18{17 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 92 93 94 95 96
;; live  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8]
;; live  gen 	 0 [ax] 5 [di] 89 90 91 92 93 94 95 96
;; live  kill	
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 89 [ state ])
        (reg:DI 5 di [ state ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ state ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 90 [ destructor ])
        (reg:DI 4 si [ destructor ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ destructor ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 91 [ create_filter ])
        (reg:DI 1 dx [ create_filter ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ create_filter ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 92 [ key_may_match ])
        (reg:DI 2 cx [ key_may_match ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ key_may_match ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 93 [ name ])
        (reg:DI 37 r8 [ name ])) db/c.cc:485 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ name ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg:DI 5 di)
        (const_int 48 [0x30])) db/c.cc:486 89 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:486 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 14 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) db/c.cc:486 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(insn 14 12 15 2 (set (reg:DI 96)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:86 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 95)
        (plus:DI (reg:DI 96)
            (const_int 16 [0x10]))) db/c.cc:86 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 96)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV22leveldb_filterpolicy_t")  <var_decl 0x7fb537682ab0 _ZTV22leveldb_filterpolicy_t>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 16 15 17 2 (set (mem/f:DI (reg/f:DI 94) [3 MEM[(struct leveldb_filterpolicy_t *)_3].D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 95)) db/c.cc:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95)
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].state_+0 S8 A64])
        (reg/v/f:DI 89 [ state ])) db/c.cc:487 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ state ])
        (nil)))
(insn 18 17 19 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 16 [0x10])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].destructor_+0 S8 A64])
        (reg/v/f:DI 90 [ destructor ])) db/c.cc:488 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ destructor ])
        (nil)))
(insn 19 18 20 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 32 [0x20])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].create_+0 S8 A64])
        (reg/v/f:DI 91 [ create_filter ])) db/c.cc:489 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ create_filter ])
        (nil)))
(insn 20 19 21 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 40 [0x28])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].key_match_+0 S8 A64])
        (reg/v/f:DI 92 [ key_may_match ])) db/c.cc:490 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ key_may_match ])
        (nil)))
(insn 21 20 26 2 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 24 [0x18])) [3 MEM[(struct leveldb_filterpolicy_t *)_3].name_+0 S8 A64])
        (reg/v/f:DI 93 [ name ])) db/c.cc:491 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ name ])
        (nil)))
(insn 26 21 27 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 94)) db/c.cc:493 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 27 26 0 2 (use (reg/i:DI 0 ax)) db/c.cc:493 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*) (leveldb_filterpolicy_destroy, funcdef_no=1508, decl_uid=2349, cgraph_uid=615, symbol_order=618)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,3u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 120{96d,24u,0e} in 7{6 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 53[65,65] 54[66,66] 55[67,67] 56[68,68] 57[69,69] 58[70,70] 59[71,71] 60[72,72] 61[73,73] 62[74,74] 63[75,75] 64[76,76] 65[77,77] 66[78,78] 67[79,79] 68[80,80] 69[81,81] 70[82,82] 71[83,83] 72[84,84] 73[85,85] 74[86,86] 75[87,87] 76[88,88] 77[89,89] 78[90,90] 79[91,91] 80[92,92] 89[93,93] 90[94,94] 91[95,95] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 89
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[26]
;; rd  gen 	(2) 17[23],89[93]
;; rd  kill	(3) 17[22,23],89[93]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; rd  out 	(5) 6[11],7[12],16[21],20[26],89[93]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ d11(bb 0 insn -1) }u8(7){ d12(bb 0 insn -1) }u9(16){ d21(bb 0 insn -1) }u10(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  gen 	 5 [di] 90 91
;; live  kill	
;; rd  in  	(5) 6[11],7[12],16[21],20[26],89[93]
;; rd  gen 	(2) 90[94],91[95]
;; rd  kill	(2) 90[94],91[95]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ d11(bb 0 insn -1) }u18(7){ d12(bb 0 insn -1) }u19(16){ d21(bb 0 insn -1) }u20(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 6[11],7[12],16[21],20[26],89[93]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(6){ d11(bb 0 insn -1) }u22(7){ d12(bb 0 insn -1) }u23(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 12:
Processing use of (reg 5 di) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ]) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 89 [ filter ]) in insn 9:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ filter ]) in insn 11:
Processing use of (reg 17 flags) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 89 [ filter ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_filterpolicy_destroy(leveldb_filterpolicy_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,4u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,3u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 120{96d,24u,0e} in 7{6 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 89
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 89 [ filter ])
        (reg:DI 5 di [ filter ])) db/c.cc:495 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ filter ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ filter ])
            (const_int 0 [0]))) db/c.cc:496 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 16)
            (pc))) db/c.cc:496 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 16)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 91
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; live  gen 	 5 [di] 90 91
;; live  kill	
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
        (mem/f:DI (reg/v/f:DI 89 [ filter ]) [3 filter_2(D)->D.28950._vptr.FilterPolicy+0 S8 A64])) db/c.cc:496 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B]+0 S8 A64])) db/c.cc:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ filter_2(D)->D.28950._vptr.FilterPolicy ])
        (nil)))
(insn 11 10 12 3 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ filter ])) db/c.cc:496 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ filter ])
        (nil)))
(call_insn/j 12 11 16 3 (call (mem:QI (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ]) [0 *OBJ_TYPE_REF(_5;(struct leveldb_filterpolicy_t)filter_2(D)->1) S1 A8])
        (const_int 0 [0])) db/c.cc:496 662 {*sibcall}
     (expr_list:REG_DEAD (reg/f:DI 91 [ MEM[(int (*__vtbl_ptr_type) () *)_4 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	
;; live  kill	
(code_label 16 12 17 4 382 "" [1 uses])
(note 17 16 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int) (leveldb_filterpolicy_create_bloom, funcdef_no=1509, decl_uid=2351, cgraph_uid=627, symbol_order=630)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,5u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 198{172d,26u,0e} in 16{14 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,12] 5[13,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 88[166,166] 90[167,167] 91[168,168] 92[169,169] 93[170,170] 94[171,171] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[12],5[17],6[18],7[19],16[36],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(52) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12],5[13,14,15,16,17],6[18],7[19],16[36],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[17],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90 91 92 93 94
;; live  kill	
;; rd  in  	(5) 5[17],6[18],7[19],16[36],20[43]
;; rd  gen 	(7) 0[0],88[166],90[167],91[168],92[169],93[170],94[171]
;; rd  kill	(10) 0[0,1,2,3],88[166],90[167],91[168],92[169],93[170],94[171]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u22(0){ d0(bb 2 insn 24) }u23(6){ d18(bb 0 insn -1) }u24(7){ d19(bb 0 insn -1) }u25(20){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[18],7[19],16[36],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 24) }
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 25 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 24 to worklist
Processing use of (reg 91) in insn 24:
  Adding insn 8 to worklist
Processing use of (reg 0 ax) in insn 8:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 91) in insn 12:
Processing use of (reg 92) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 93) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 7 sp) in insn 14:
Processing use of (reg 5 di) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 90 [ bits_per_key ]) in insn 13:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 88 [ D.37411 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 91) in insn 16:
Processing use of (reg 0 ax) in insn 15:
Processing use of (reg 91) in insn 17:
Processing use of (reg 91) in insn 19:
Processing use of (reg 94) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 0 ax) in insn 25:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_filterpolicy_t* leveldb_filterpolicy_create_bloom(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,5u} r92={1d,1u} r93={1d,1u} r94={1d,1u} 
;;    total ref usage 198{172d,26u,0e} in 16{14 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91 92 93 94
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90 91 92 93 94
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 90 [ bits_per_key ])
        (reg:SI 5 di [ bits_per_key ])) db/c.cc:499 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ bits_per_key ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 56 [0x38])) db/c.cc:515 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:515 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 91)
        (reg:DI 0 ax)) db/c.cc:515 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 10 8 11 2 (set (reg:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    ] UNSPEC_GOTPCREL)) [45  S8 A8])) db/c.cc:503 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 92)
        (plus:DI (reg:DI 93)
            (const_int 16 [0x10]))) db/c.cc:503 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 93)
        (expr_list:REG_EQUAL (const:DI (plus:DI (symbol_ref/i:DI ("_ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper")  <var_decl 0x7fb537404870 _ZTVZ33leveldb_filterpolicy_create_bloomE7Wrapper>)
                    (const_int 16 [0x10])))
            (nil))))
(insn 12 11 13 2 (set (mem/f:DI (reg/f:DI 91) [3 MEM[(struct Wrapper *)_3].D.31955.D.28950._vptr.FilterPolicy+0 S8 A64])
        (reg/f:DI 92)) db/c.cc:503 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92)
        (nil)))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (reg/v:SI 90 [ bits_per_key ])) db/c.cc:516 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 90 [ bits_per_key ])
        (nil)))
(call_insn 14 13 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb20NewBloomFilterPolicyEi") [flags 0x41]  <function_decl 0x7fb537663438 NewBloomFilterPolicy>) [0 NewBloomFilterPolicy S1 A8])
            (const_int 0 [0]))) db/c.cc:516 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb20NewBloomFilterPolicyEi") [flags 0x41]  <function_decl 0x7fb537663438 NewBloomFilterPolicy>)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg/f:DI 88 [ D.37411 ])
        (reg:DI 0 ax)) db/c.cc:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 16 15 17 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 48 [0x30])) [3 MEM[(struct Wrapper *)_3].rep_+0 S8 A64])
        (reg/f:DI 88 [ D.37411 ])) db/c.cc:516 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37411 ])
        (nil)))
(insn 17 16 18 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 8 [0x8])) [3 MEM[(struct Wrapper *)_3].D.31955.state_+0 S8 A64])
        (const_int 0 [0])) db/c.cc:517 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 94)
        (symbol_ref:DI ("_ZZ33leveldb_filterpolicy_create_bloomEN7Wrapper9DoNothingEPv") [flags 0x3]  <function_decl 0x7fb537401a20 DoNothing>)) db/c.cc:518 89 {*movdi_internal}
     (nil))
(insn 19 18 24 2 (set (mem/f:DI (plus:DI (reg/f:DI 91)
                (const_int 16 [0x10])) [3 MEM[(struct Wrapper *)_3].D.31955.destructor_+0 S8 A64])
        (reg/f:DI 94)) db/c.cc:518 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 24 19 25 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91)) db/c.cc:520 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 25 24 0 2 (use (reg/i:DI 0 ax)) db/c.cc:520 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_readoptions_t* leveldb_readoptions_create() (leveldb_readoptions_create, funcdef_no=1521, decl_uid=2352, cgraph_uid=631, symbol_order=634)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_readoptions_t* leveldb_readoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,4u} 
;;    total ref usage 110{94d,16u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,8] 5[9,11] 6[12,12] 7[13,13] 8[14,14] 9[15,15] 10[16,16] 11[17,17] 12[18,18] 13[19,19] 14[20,20] 15[21,21] 16[22,22] 17[23,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 53[65,65] 54[66,66] 55[67,67] 56[68,68] 57[69,69] 58[70,70] 59[71,71] 60[72,72] 61[73,73] 62[74,74] 63[75,75] 64[76,76] 65[77,77] 66[78,78] 67[79,79] 68[80,80] 69[81,81] 70[82,82] 71[83,83] 72[84,84] 73[85,85] 74[86,86] 75[87,87] 76[88,88] 77[89,89] 78[90,90] 79[91,91] 80[92,92] 89[93,93] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(4){ }d11(5){ }d12(6){ }d13(7){ }d22(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(36) 0[0,1,2],1[3,4],2[5,6],4[7,8],5[9,10,11],6[12],7[13],16[22],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d12(bb 0 insn -1) }u1(7){ d13(bb 0 insn -1) }u2(16){ d22(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89
;; live  kill	
;; rd  in  	(4) 6[12],7[13],16[22],20[26]
;; rd  gen 	(2) 0[0],89[93]
;; rd  kill	(4) 0[0,1,2],89[93]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 16 { d22(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u12(0){ d0(bb 2 insn 16) }u13(6){ d12(bb 0 insn -1) }u14(7){ d13(bb 0 insn -1) }u15(20){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[12],7[13],16[22],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 16) }
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
  Adding insn 16 to worklist
Processing use of (reg 89) in insn 16:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 89) in insn 9:
Processing use of (reg 89) in insn 10:
Processing use of (reg 89) in insn 11:
Processing use of (reg 0 ax) in insn 17:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_readoptions_t* leveldb_readoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,4u} 
;;    total ref usage 110{94d,16u,0e} in 8{7 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 16 [0x10])) db/c.cc:523 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:523 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 89)
        (reg:DI 0 ax)) db/c.cc:523 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 89)
            (nil))))
(insn 9 7 10 2 (set (mem:QI (reg/f:DI 89) [17 MEM[(struct ReadOptions *)_3].verify_checksums+0 S1 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 10 9 11 2 (set (mem:QI (plus:DI (reg/f:DI 89)
                (const_int 1 [0x1])) [17 MEM[(struct ReadOptions *)_3].fill_cache+0 S1 A8])
        (const_int 1 [0x1])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 11 10 16 2 (set (mem/f:DI (plus:DI (reg/f:DI 89)
                (const_int 8 [0x8])) [3 MEM[(struct ReadOptions *)_3].snapshot+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 89 {*movdi_internal}
     (nil))
(insn 16 11 17 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89)) db/c.cc:524 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 17 16 0 2 (use (reg/i:DI 0 ax)) db/c.cc:524 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_destroy(leveldb_readoptions_t*) (leveldb_readoptions_destroy, funcdef_no=1897, decl_uid=2354, cgraph_uid=632, symbol_order=635)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_readoptions_destroy(leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(1) 87[92]
;; rd  kill	(1) 87[92]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 87 [ opt ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_readoptions_destroy(leveldb_readoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:526 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ opt ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
        (nil)))
(call_insn/j 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_set_verify_checksums(leveldb_readoptions_t*, unsigned char) (leveldb_readoptions_set_verify_checksums, funcdef_no=1526, decl_uid=2357, cgraph_uid=633, symbol_order=636)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_readoptions_set_verify_checksums(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37422 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_readoptions_set_verify_checksums(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:532 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:532 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:533 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37422 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:533 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (reg/v/f:DI 88 [ opt ]) [17 opt_4(D)->rep.verify_checksums+0 S1 A64])
        (reg:QI 91 [ D.37422 ])) db/c.cc:533 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37422 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_set_fill_cache(leveldb_readoptions_t*, unsigned char) (leveldb_readoptions_set_fill_cache, funcdef_no=1527, decl_uid=2360, cgraph_uid=634, symbol_order=637)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_readoptions_set_fill_cache(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37426 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_readoptions_set_fill_cache(leveldb_readoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:537 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:537 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:538 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37426 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:538 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 1 [0x1])) [17 opt_4(D)->rep.fill_cache+0 S1 A8])
        (reg:QI 91 [ D.37426 ])) db/c.cc:538 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37426 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_readoptions_set_snapshot(leveldb_readoptions_t*, const leveldb_snapshot_t*) (leveldb_readoptions_set_snapshot, funcdef_no=1528, decl_uid=2363, cgraph_uid=635, symbol_order=638)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


void leveldb_readoptions_set_snapshot(leveldb_readoptions_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 87[20,21] 88[22,22] 89[23,23] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(3) 17[8],88[22],89[23]
;; rd  kill	(3) 17[8],88[22],89[23]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; rd  out 	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d5(bb 0 insn -1) }u9(7){ d6(bb 0 insn -1) }u10(16){ d7(bb 0 insn -1) }u11(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[21]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[21],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ d5(bb 0 insn -1) }u14(7){ d6(bb 0 insn -1) }u15(16){ d7(bb 0 insn -1) }u16(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
;; rd  in  	(6) 6[5],7[6],16[7],20[9],88[22],89[23]
;; rd  gen 	(1) 87[20]
;; rd  kill	(2) 87[20,21]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; rd  out 	(6) 6[5],7[6],16[7],20[9],87[20],88[22]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ d5(bb 0 insn -1) }u18(7){ d6(bb 0 insn -1) }u19(16){ d7(bb 0 insn -1) }u20(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
;; rd  in  	(7) 6[5],7[6],16[7],20[9],87[20,21],88[22]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(6){ d5(bb 0 insn -1) }u24(7){ d6(bb 0 insn -1) }u25(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
Processing use of (reg 87 [ D.37430 ]) in insn 14:
  Adding insn 11 to worklist
  Adding insn 5 to worklist
Processing use of (reg 88 [ opt ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 89 [ snap ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 89 [ snap ]) in insn 8:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_readoptions_set_snapshot(leveldb_readoptions_t*, const leveldb_snapshot_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={1d,1u} r20={1d,5u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={2d,1u} r88={1d,1u} r89={1d,2u} 
;;    total ref usage 50{24d,26u,0e} in 7{7 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 89
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 89
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:543 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 89 [ snap ])
        (reg:DI 4 si [ snap ])) db/c.cc:543 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ snap ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 89 [ snap ])
            (const_int 0 [0]))) db/c.cc:544 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) db/c.cc:544 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 20)
;;  succ:       3 [89.9%]  (FALLTHRU)
;;              4 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; live  gen 	 87
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 20 3 (set (reg/f:DI 87 [ D.37430 ])
        (mem/f:DI (reg/v/f:DI 89 [ snap ]) [3 snap_2(D)->rep+0 S8 A64])) db/c.cc:544 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ snap ])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; live  gen 	 87
;; live  kill	
(code_label 20 11 19 4 393 "" [1 uses])
(note 19 20 5 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 5 19 12 4 (set (reg/f:DI 87 [ D.37430 ])
        (const_int 0 [0])) db/c.cc:544 89 {*movdi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              3 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; live  gen 	
;; live  kill	
(code_label 12 5 13 5 392 "" [0 uses])
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 0 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 88 [ opt ])
                (const_int 8 [0x8])) [3 opt_5(D)->rep.snapshot+0 S8 A64])
        (reg/f:DI 87 [ D.37430 ])) db/c.cc:544 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.37430 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_writeoptions_t* leveldb_writeoptions_create() (leveldb_writeoptions_create, funcdef_no=1529, decl_uid=2364, cgraph_uid=639, symbol_order=642)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_writeoptions_t* leveldb_writeoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,2u} 
;;    total ref usage 108{94d,14u,0e} in 6{5 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92
;;  reg->defs[] map:	0[0,2] 1[3,4] 2[5,6] 4[7,8] 5[9,11] 6[12,12] 7[13,13] 8[14,14] 9[15,15] 10[16,16] 11[17,17] 12[18,18] 13[19,19] 14[20,20] 15[21,21] 16[22,22] 17[23,23] 18[24,24] 19[25,25] 20[26,26] 21[27,28] 22[29,30] 23[31,32] 24[33,34] 25[35,36] 26[37,38] 27[39,40] 28[41,42] 29[43,43] 30[44,44] 31[45,45] 32[46,46] 33[47,47] 34[48,48] 35[49,49] 36[50,50] 37[51,52] 38[53,54] 39[55,55] 40[56,56] 45[57,57] 46[58,58] 47[59,59] 48[60,60] 49[61,61] 50[62,62] 51[63,63] 52[64,64] 53[65,65] 54[66,66] 55[67,67] 56[68,68] 57[69,69] 58[70,70] 59[71,71] 60[72,72] 61[73,73] 62[74,74] 63[75,75] 64[76,76] 65[77,77] 66[78,78] 67[79,79] 68[80,80] 69[81,81] 70[82,82] 71[83,83] 72[84,84] 73[85,85] 74[86,86] 75[87,87] 76[88,88] 77[89,89] 78[90,90] 79[91,91] 80[92,92] 89[93,93] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(4){ }d11(5){ }d12(6){ }d13(7){ }d22(16){ }d26(20){ }d28(21){ }d30(22){ }d32(23){ }d34(24){ }d36(25){ }d38(26){ }d40(27){ }d42(28){ }d52(37){ }d54(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[4],2[6],4[8],5[11],6[12],7[13],16[22],20[26],21[28],22[30],23[32],24[34],25[36],26[38],27[40],28[42],37[52],38[54]
;; rd  kill	(36) 0[0,1,2],1[3,4],2[5,6],4[7,8],5[9,10,11],6[12],7[13],16[22],20[26],21[27,28],22[29,30],23[31,32],24[33,34],25[35,36],26[37,38],27[39,40],28[41,42],37[51,52],38[53,54]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d12(bb 0 insn -1) }u1(7){ d13(bb 0 insn -1) }u2(16){ d22(bb 0 insn -1) }u3(20){ d26(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89
;; live  kill	
;; rd  in  	(4) 6[12],7[13],16[22],20[26]
;; rd  gen 	(2) 0[0],89[93]
;; rd  kill	(4) 0[0,1,2],89[93]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[12],7[13],16[22],20[26]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 16 { d22(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ d0(bb 2 insn 14) }u11(6){ d12(bb 0 insn -1) }u12(7){ d13(bb 0 insn -1) }u13(20){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[12],7[13],16[22],20[26]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 14) }
;;   reg 6 { d12(bb 0 insn -1) }
;;   reg 7 { d13(bb 0 insn -1) }
;;   reg 20 { d26(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 9 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
  Adding insn 14 to worklist
Processing use of (reg 89) in insn 14:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 89) in insn 9:
Processing use of (reg 0 ax) in insn 15:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_writeoptions_t* leveldb_writeoptions_create()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,2u} 
;;    total ref usage 108{94d,14u,0e} in 6{5 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 89
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 1 [0x1])) db/c.cc:548 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:548 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 89)
        (reg:DI 0 ax)) db/c.cc:548 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 89)
            (nil))))
(insn 9 7 14 2 (set (mem:QI (reg/f:DI 89) [17 MEM[(struct WriteOptions *)_3].sync+0 S1 A8])
        (const_int 0 [0])) ./include/leveldb/options.h:189 93 {*movqi_internal}
     (nil))
(insn 14 9 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 89)) db/c.cc:549 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) db/c.cc:549 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writeoptions_destroy(leveldb_writeoptions_t*) (leveldb_writeoptions_destroy, funcdef_no=1533, decl_uid=2366, cgraph_uid=640, symbol_order=643)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_writeoptions_destroy(leveldb_writeoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(1) 87[92]
;; rd  kill	(1) 87[92]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 87 [ opt ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writeoptions_destroy(leveldb_writeoptions_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:551 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ opt ])) db/c.cc:552 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ opt ])
        (nil)))
(call_insn/j 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:552 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_writeoptions_set_sync(leveldb_writeoptions_t*, unsigned char) (leveldb_writeoptions_set_sync, funcdef_no=1534, decl_uid=2369, cgraph_uid=641, symbol_order=644)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_writeoptions_set_sync(leveldb_writeoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,0] 1[1,1] 2[2,2] 4[3,3] 5[4,4] 6[5,5] 7[6,6] 16[7,7] 17[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 88[20,20] 90[21,21] 91[22,22] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(4){ }d4(5){ }d5(6){ }d6(7){ }d7(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(19) 0[0],1[1],2[2],4[3],5[4],6[5],7[6],16[7],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d5(bb 0 insn -1) }u1(7){ d6(bb 0 insn -1) }u2(16){ d7(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
;; rd  in  	(6) 4[3],5[4],6[5],7[6],16[7],20[9]
;; rd  gen 	(4) 17[8],88[20],90[21],91[22]
;; rd  kill	(4) 17[8],88[20],90[21],91[22]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[5],7[6],16[7],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 16 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(6){ d5(bb 0 insn -1) }u11(7){ d6(bb 0 insn -1) }u12(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[5],7[6],16[7],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d5(bb 0 insn -1) }
;;   reg 7 { d6(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 88 [ opt ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 91 [ D.37440 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 17 flags) in insn 9:
  Adding insn 8 to worklist
Processing use of (subreg (reg 90 [ v ]) 0) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 4 si) in insn 3:
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_writeoptions_set_sync(leveldb_writeoptions_t*, unsigned char)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r17={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r88={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 36{23d,13u,0e} in 5{5 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88 90 91
;; live  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 88 90 91
;; live  kill	
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 88 [ opt ])
        (reg:DI 5 di [ opt ])) db/c.cc:556 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ opt ])
        (nil)))
(insn 3 2 5 2 (set (reg:SI 90 [ v ])
        (reg:SI 4 si [ v ])) db/c.cc:556 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ v ])
        (nil)))
(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:QI (reg:SI 90 [ v ]) 0)
            (const_int 0 [0]))) db/c.cc:557 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 90 [ v ])
        (nil)))
(insn 9 8 10 2 (set (reg:QI 91 [ D.37440 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) db/c.cc:557 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 10 9 0 2 (set (mem:QI (reg/v/f:DI 88 [ opt ]) [17 opt_4(D)->rep.sync+0 S1 A8])
        (reg:QI 91 [ D.37440 ])) db/c.cc:557 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 91 [ D.37440 ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ opt ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_cache_t* leveldb_cache_create_lru(size_t) (leveldb_cache_create_lru, funcdef_no=1535, decl_uid=2371, cgraph_uid=642, symbol_order=645)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_cache_t* leveldb_cache_create_lru(size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,2u} 
;;    total ref usage 189{169d,20u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,12] 5[13,17] 6[18,18] 7[19,19] 8[20,21] 9[22,23] 10[24,25] 11[26,27] 12[28,29] 13[30,31] 14[32,33] 15[34,35] 16[36,36] 17[37,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 88[166,166] 90[167,167] 91[168,168] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d17(5){ }d18(6){ }d19(7){ }d36(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[12],5[17],6[18],7[19],16[36],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(52) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12],5[13,14,15,16,17],6[18],7[19],16[36],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[17],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d18(bb 0 insn -1) }u1(7){ d19(bb 0 insn -1) }u2(16){ d36(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90 91
;; live  kill	
;; rd  in  	(5) 5[17],6[18],7[19],16[36],20[43]
;; rd  gen 	(4) 0[0],88[166],90[167],91[168]
;; rd  kill	(7) 0[0,1,2,3],88[166],90[167],91[168]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[18],7[19],16[36],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 16 { d36(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u16(0){ d0(bb 2 insn 18) }u17(6){ d18(bb 0 insn -1) }u18(7){ d19(bb 0 insn -1) }u19(20){ d43(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[18],7[19],16[36],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 18) }
;;   reg 6 { d18(bb 0 insn -1) }
;;   reg 7 { d19(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 18 to worklist
Processing use of (reg 91) in insn 18:
  Adding insn 8 to worklist
Processing use of (reg 0 ax) in insn 8:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 7 sp) in insn 11:
Processing use of (reg 5 di) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 90 [ capacity ]) in insn 10:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 88 [ D.37446 ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 91) in insn 13:
Processing use of (reg 0 ax) in insn 12:
Processing use of (reg 0 ax) in insn 19:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_cache_t* leveldb_cache_create_lru(size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,1u} r91={1d,2u} 
;;    total ref usage 189{169d,20u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90 91
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90 91
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:DI 90 [ capacity ])
        (reg:DI 5 di [ capacity ])) db/c.cc:560 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ capacity ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/c.cc:561 89 {*movdi_internal}
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:561 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 10 2 (set (reg/f:DI 91)
        (reg:DI 0 ax)) db/c.cc:561 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 91)
            (nil))))
(insn 10 8 11 2 (set (reg:DI 5 di)
        (reg/v:DI 90 [ capacity ])) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ capacity ])
        (nil)))
(call_insn 11 10 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb11NewLRUCacheEm") [flags 0x41]  <function_decl 0x7fb5377c2a20 NewLRUCache>) [0 NewLRUCache S1 A8])
            (const_int 0 [0]))) db/c.cc:562 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb11NewLRUCacheEm") [flags 0x41]  <function_decl 0x7fb5377c2a20 NewLRUCache>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 88 [ D.37446 ])
        (reg:DI 0 ax)) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 13 12 18 2 (set (mem/f:DI (reg/f:DI 91) [3 c_3->rep+0 S8 A64])
        (reg/f:DI 88 [ D.37446 ])) db/c.cc:562 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37446 ])
        (nil)))
(insn 18 13 19 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 91)) db/c.cc:564 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (nil)))
(insn 19 18 0 2 (use (reg/i:DI 0 ax)) db/c.cc:564 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_cache_destroy(leveldb_cache_t*) (leveldb_cache_destroy, funcdef_no=1536, decl_uid=2373, cgraph_uid=643, symbol_order=646)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


void leveldb_cache_destroy(leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,38] 18[39,40] 19[41,42] 20[43,43] 21[44,46] 22[47,49] 23[50,52] 24[53,55] 25[56,58] 26[59,61] 27[62,64] 28[65,67] 29[68,69] 30[70,71] 31[72,73] 32[74,75] 33[76,77] 34[78,79] 35[80,81] 36[82,83] 37[84,86] 38[87,89] 39[90,91] 40[92,93] 45[94,95] 46[96,97] 47[98,99] 48[100,101] 49[102,103] 50[104,105] 51[106,107] 52[108,109] 53[110,111] 54[112,113] 55[114,115] 56[116,117] 57[118,119] 58[120,121] 59[122,123] 60[124,125] 61[126,127] 62[128,129] 63[130,131] 64[132,133] 65[134,135] 66[136,137] 67[138,139] 68[140,141] 69[142,143] 70[144,145] 71[146,147] 72[148,149] 73[150,151] 74[152,153] 75[154,155] 76[156,157] 77[158,159] 78[160,161] 79[162,163] 80[164,165] 87[166,166] 90[167,167] 91[168,168] 92[169,169] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d43(20){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[43],21[46],22[49],23[52],24[55],25[58],26[61],27[64],28[67],37[86],38[89]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[43],21[44,45,46],22[47,48,49],23[50,51,52],24[53,54,55],25[56,57,58],26[59,60,61],27[62,63,64],28[65,66,67],37[84,85,86],38[87,88,89]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d43(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[43]
;; rd  gen 	(3) 17[38],87[166],90[167]
;; rd  kill	(5) 17[36,37,38],87[166],90[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; rd  out 	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ d17(bb 0 insn -1) }u9(7){ d18(bb 0 insn -1) }u10(16){ d35(bb 0 insn -1) }u11(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(2) 91[168],92[169]
;; rd  kill	(2) 91[168],92[169]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; rd  out 	(5) 6[17],7[18],16[35],20[43],90[167]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ d17(bb 0 insn -1) }u19(7){ d18(bb 0 insn -1) }u20(16){ d35(bb 0 insn -1) }u21(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[43],87[166],90[167]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[43]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(6){ d17(bb 0 insn -1) }u26(7){ d18(bb 0 insn -1) }u27(20){ d43(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[43]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d43(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 13 to worklist
  Adding insn 17 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 17:
Processing use of (reg 5 di) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 90 [ cache ]) in insn 16:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 13:
Processing use of (reg 5 di) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 91 [ _4->_vptr.Cache ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 87 [ D.37449 ]) in insn 10:
  Adding insn 6 to worklist
Processing use of (reg 90 [ cache ]) in insn 6:
Processing use of (reg 87 [ D.37449 ]) in insn 12:
Processing use of (reg 17 flags) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 87 [ D.37449 ]) in insn 7:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_cache_destroy(leveldb_cache_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={3d,1u} r18={2d} r19={2d} r20={1d,4u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,3u} r90={1d,2u} r91={1d,1u} r92={1d,1u} 
;;    total ref usage 198{170d,28u,0e} in 10{8 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 90
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 87 90
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ cache ])
        (reg:DI 5 di [ cache ])) db/c.cc:566 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ cache ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 87 [ D.37449 ])
        (mem/f:DI (reg/v/f:DI 90 [ cache ]) [3 cache_3(D)->rep+0 S8 A64])) db/c.cc:567 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.37449 ])
            (const_int 0 [0]))) db/c.cc:567 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 14)
            (pc))) db/c.cc:567 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 14)
;;  succ:       3 [78.3%]  (FALLTHRU)
;;              4 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90

;; basic block 3, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [78.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 90
;; live  gen 	 5 [di] 91 92
;; live  kill	
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg/f:DI 91 [ _4->_vptr.Cache ])
        (mem/f:DI (reg/f:DI 87 [ D.37449 ]) [3 _4->_vptr.Cache+0 S8 A64])) db/c.cc:567 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ _4->_vptr.Cache ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B]+0 S8 A64])) db/c.cc:567 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ _4->_vptr.Cache ])
        (nil)))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.37449 ])) db/c.cc:567 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.37449 ])
        (nil)))
(call_insn 13 12 14 3 (call (mem:QI (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ]) [0 *OBJ_TYPE_REF(_6;(struct Cache)_4->1) S1 A8])
        (const_int 0 [0])) db/c.cc:567 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 92 [ MEM[(int (*__vtbl_ptr_type) () *)_5 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [21.6%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; live  gen 	 5 [di]
;; live  kill	
(code_label 14 13 15 4 401 "" [1 uses])
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ cache ])) db/c.cc:568 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ cache ])
        (nil)))
(call_insn/j 17 16 0 4 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:568 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb_env_t* leveldb_create_default_env() (leveldb_create_default_env, funcdef_no=1537, decl_uid=2374, cgraph_uid=644, symbol_order=647)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


leveldb_env_t* leveldb_create_default_env()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={4d,1u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,3u} 
;;    total ref usage 185{167d,18u,0e} in 9{7 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164
;;  reg->defs[] map:	0[0,3] 1[4,6] 2[7,9] 4[10,12] 5[13,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,37] 18[38,39] 19[40,41] 20[42,42] 21[43,45] 22[46,48] 23[49,51] 24[52,54] 25[55,57] 26[58,60] 27[61,63] 28[64,66] 29[67,68] 30[69,70] 31[71,72] 32[73,74] 33[75,76] 34[77,78] 35[79,80] 36[81,82] 37[83,85] 38[86,88] 39[89,90] 40[91,92] 45[93,94] 46[95,96] 47[97,98] 48[99,100] 49[101,102] 50[103,104] 51[105,106] 52[107,108] 53[109,110] 54[111,112] 55[113,114] 56[115,116] 57[117,118] 58[119,120] 59[121,122] 60[123,124] 61[125,126] 62[127,128] 63[129,130] 64[131,132] 65[133,134] 66[135,136] 67[137,138] 68[139,140] 69[141,142] 70[143,144] 71[145,146] 72[147,148] 73[149,150] 74[151,152] 75[153,154] 76[155,156] 77[157,158] 78[159,160] 79[161,162] 80[163,164] 88[165,165] 90[166,166] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d42(20){ }d45(21){ }d48(22){ }d51(23){ }d54(24){ }d57(25){ }d60(26){ }d63(27){ }d66(28){ }d85(37){ }d88(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[3],1[6],2[9],4[12],5[16],6[17],7[18],16[35],20[42],21[45],22[48],23[51],24[54],25[57],26[60],27[63],28[66],37[85],38[88]
;; rd  kill	(51) 0[0,1,2,3],1[4,5,6],2[7,8,9],4[10,11,12],5[13,14,15,16],6[17],7[18],16[35],20[42],21[43,44,45],22[46,47,48],23[49,50,51],24[52,53,54],25[55,56,57],26[58,59,60],27[61,62,63],28[64,65,66],37[83,84,85],38[86,87,88]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d42(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[42]
;; rd  gen 	(3) 0[0],88[165],90[166]
;; rd  kill	(6) 0[0,1,2,3],88[165],90[166]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[17],7[18],16[35],20[42]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u14(0){ d0(bb 2 insn 17) }u15(6){ d17(bb 0 insn -1) }u16(7){ d18(bb 0 insn -1) }u17(20){ d42(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[17],7[18],16[35],20[42]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 6 to worklist
Finished finding needed instructions:
  Adding insn 17 to worklist
Processing use of (reg 90) in insn 17:
  Adding insn 7 to worklist
Processing use of (reg 0 ax) in insn 7:
Processing use of (reg 7 sp) in insn 6:
Processing use of (reg 5 di) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 7 sp) in insn 9:
Processing use of (reg 88 [ D.37456 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 90) in insn 11:
Processing use of (reg 0 ax) in insn 10:
Processing use of (reg 90) in insn 12:
Processing use of (reg 0 ax) in insn 18:
starting the processing of deferred insns
ending the processing of deferred insns


leveldb_env_t* leveldb_create_default_env()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r4={3d} r5={4d,1u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} r90={1d,3u} 
;;    total ref usage 185{167d,18u,0e} in 9{7 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 90
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax] 5 [di] 88 90
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (const_int 16 [0x10])) db/c.cc:572 89 {*movdi_internal}
     (nil))
(call_insn 6 5 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/c.cc:572 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7fb538d991b0 operator new>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 7 6 9 2 (set (reg/f:DI 90)
        (reg:DI 0 ax)) db/c.cc:572 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 90)
            (nil))))
(call_insn 9 7 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb3Env7DefaultEv") [flags 0x41]  <function_decl 0x7fb5375c2e58 Default>) [0 Default S1 A8])
            (const_int 0 [0]))) db/c.cc:573 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb3Env7DefaultEv") [flags 0x41]  <function_decl 0x7fb5375c2e58 Default>)
        (nil))
    (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ D.37456 ])
        (reg:DI 0 ax)) db/c.cc:573 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (mem/f:DI (reg/f:DI 90) [3 result_3->rep+0 S8 A64])
        (reg/f:DI 88 [ D.37456 ])) db/c.cc:573 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37456 ])
        (nil)))
(insn 12 11 17 2 (set (mem:QI (plus:DI (reg/f:DI 90)
                (const_int 8 [0x8])) [17 result_3->is_default+0 S1 A64])
        (const_int 1 [0x1])) db/c.cc:574 93 {*movqi_internal}
     (nil))
(insn 17 12 18 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 90)) db/c.cc:576 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 18 17 0 2 (use (reg/i:DI 0 ax)) db/c.cc:576 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_env_destroy(leveldb_env_t*) (leveldb_env_destroy, funcdef_no=1538, decl_uid=2376, cgraph_uid=645, symbol_order=648)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)


void leveldb_env_destroy(leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={4d,2u} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r91={1d,3u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 205{171d,34u,0e} in 12{10 regular + 2 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;;  reg->defs[] map:	0[0,2] 1[3,5] 2[6,8] 4[9,11] 5[12,16] 6[17,17] 7[18,18] 8[19,20] 9[21,22] 10[23,24] 11[25,26] 12[27,28] 13[29,30] 14[31,32] 15[33,34] 16[35,35] 17[36,39] 18[40,41] 19[42,43] 20[44,44] 21[45,47] 22[48,50] 23[51,53] 24[54,56] 25[57,59] 26[60,62] 27[63,65] 28[66,68] 29[69,70] 30[71,72] 31[73,74] 32[75,76] 33[77,78] 34[79,80] 35[81,82] 36[83,84] 37[85,87] 38[88,90] 39[91,92] 40[93,94] 45[95,96] 46[97,98] 47[99,100] 48[101,102] 49[103,104] 50[105,106] 51[107,108] 52[109,110] 53[111,112] 54[113,114] 55[115,116] 56[117,118] 57[119,120] 58[121,122] 59[123,124] 60[125,126] 61[127,128] 62[129,130] 63[131,132] 64[133,134] 65[135,136] 66[137,138] 67[139,140] 68[141,142] 69[143,144] 70[145,146] 71[147,148] 72[149,150] 73[151,152] 74[153,154] 75[155,156] 76[157,158] 77[159,160] 78[161,162] 79[163,164] 80[165,166] 88[167,167] 91[168,168] 92[169,169] 93[170,170] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(4){ }d16(5){ }d17(6){ }d18(7){ }d35(16){ }d44(20){ }d47(21){ }d50(22){ }d53(23){ }d56(24){ }d59(25){ }d62(26){ }d65(27){ }d68(28){ }d87(37){ }d90(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[2],1[5],2[8],4[11],5[16],6[17],7[18],16[35],20[44],21[47],22[50],23[53],24[56],25[59],26[62],27[65],28[68],37[87],38[90]
;; rd  kill	(51) 0[0,1,2],1[3,4,5],2[6,7,8],4[9,10,11],5[12,13,14,15,16],6[17],7[18],16[35],20[44],21[45,46,47],22[48,49,50],23[51,52,53],24[54,55,56],25[57,58,59],26[60,61,62],27[63,64,65],28[66,67,68],37[85,86,87],38[88,89,90]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[16],6[17],7[18],16[35],20[44]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d17(bb 0 insn -1) }u1(7){ d18(bb 0 insn -1) }u2(16){ d35(bb 0 insn -1) }u3(20){ d44(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
;; rd  in  	(5) 5[16],6[17],7[18],16[35],20[44]
;; rd  gen 	(2) 17[39],91[168]
;; rd  kill	(5) 17[36,37,38,39],91[168]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[17],7[18],16[35],20[44],91[168]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ d17(bb 0 insn -1) }u8(7){ d18(bb 0 insn -1) }u9(16){ d35(bb 0 insn -1) }u10(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 17 [flags] 88
;; live  kill	
;; rd  in  	(5) 6[17],7[18],16[35],20[44],91[168]
;; rd  gen 	(2) 17[38],88[167]
;; rd  kill	(5) 17[36,37,38,39],88[167]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; rd  out 	(6) 6[17],7[18],16[35],20[44],88[167],91[168]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ d17(bb 0 insn -1) }u15(7){ d18(bb 0 insn -1) }u16(16){ d35(bb 0 insn -1) }u17(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; live  gen 	 5 [di] 92 93
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[44],88[167],91[168]
;; rd  gen 	(2) 92[169],93[170]
;; rd  kill	(2) 92[169],93[170]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; rd  out 	(5) 6[17],7[18],16[35],20[44],91[168]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 3 4 2 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ d17(bb 0 insn -1) }u25(7){ d18(bb 0 insn -1) }u26(16){ d35(bb 0 insn -1) }u27(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
;; rd  in  	(6) 6[17],7[18],16[35],20[44],88[167],91[168]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[17],7[18],16[35],20[44]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 16 { d35(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(6){ d17(bb 0 insn -1) }u32(7){ d18(bb 0 insn -1) }u33(20){ d44(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[17],7[18],16[35],20[44]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d17(bb 0 insn -1) }
;;   reg 7 { d18(bb 0 insn -1) }
;;   reg 20 { d44(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 20 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 20:
Processing use of (reg 5 di) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 91 [ env ]) in insn 19:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
Processing use of (reg 7 sp) in insn 16:
Processing use of (reg 5 di) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 93 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 92 [ _5->_vptr.Env ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 88 [ D.37460 ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 91 [ env ]) in insn 9:
Processing use of (reg 88 [ D.37460 ]) in insn 15:
Processing use of (reg 17 flags) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 88 [ D.37460 ]) in insn 10:
Processing use of (reg 17 flags) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 91 [ env ]) in insn 6:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_env_destroy(leveldb_env_t*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u} r17={4d,2u} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,3u} r91={1d,3u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 205{171d,34u,0e} in 12{10 regular + 2 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 17 [flags] 91
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 91 [ env ])
        (reg:DI 5 di [ env ])) db/c.cc:578 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ env ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 91 [ env ])
                    (const_int 8 [0x8])) [17 env_3(D)->is_default+0 S1 A64])
            (const_int 0 [0]))) db/c.cc:579 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) db/c.cc:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 17)
;;  succ:       3 [61.0%]  (FALLTHRU)
;;              5 [39.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 3, loop depth 0, count 0, freq 6100, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [61.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags] 88
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 17 [flags] 88
;; live  kill	
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 88 [ D.37460 ])
        (mem/f:DI (reg/v/f:DI 91 [ env ]) [3 env_3(D)->rep+0 S8 A64])) db/c.cc:579 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.37460 ])
            (const_int 0 [0]))) db/c.cc:579 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 17)
            (pc))) db/c.cc:579 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 17)
;;  succ:       4 [78.3%]  (FALLTHRU)
;;              5 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91

;; basic block 4, loop depth 0, count 0, freq 4779, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [78.3%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 91
;; live  gen 	 5 [di] 92 93
;; live  kill	
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 92 [ _5->_vptr.Env ])
        (mem/f:DI (reg/f:DI 88 [ D.37460 ]) [3 _5->_vptr.Env+0 S8 A64])) db/c.cc:579 89 {*movdi_internal}
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 93 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _5->_vptr.Env ])
                (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B]+0 S8 A64])) db/c.cc:579 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ _5->_vptr.Env ])
        (nil)))
(insn 15 14 16 4 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.37460 ])) db/c.cc:579 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.37460 ])
        (nil)))
(call_insn 16 15 17 4 (call (mem:QI (reg/f:DI 93 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ]) [0 *OBJ_TYPE_REF(_7;(struct Env)_5->1) S1 A8])
        (const_int 0 [0])) db/c.cc:579 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 93 [ MEM[(int (*__vtbl_ptr_type) () *)_6 + 8B] ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [21.6%] 
;;              4 [100.0%]  (FALLTHRU)
;;              2 [39.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; live  gen 	 5 [di]
;; live  kill	
(code_label 17 16 18 5 409 "" [2 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:DI 5 di)
        (reg/v/f:DI 91 [ env ])) db/c.cc:580 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 91 [ env ])
        (nil)))
(call_insn/j 20 19 0 5 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/c.cc:580 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fb538d99360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void leveldb_free(void*) (leveldb_free, funcdef_no=1539, decl_uid=2378, cgraph_uid=646, symbol_order=649)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


void leveldb_free(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91
;;  reg->defs[] map:	0[0,1] 1[2,3] 2[4,5] 4[6,7] 5[8,10] 6[11,11] 7[12,12] 8[13,13] 9[14,14] 10[15,15] 11[16,16] 12[17,17] 13[18,18] 14[19,19] 15[20,20] 16[21,21] 17[22,22] 18[23,23] 19[24,24] 20[25,25] 21[26,27] 22[28,29] 23[30,31] 24[32,33] 25[34,35] 26[36,37] 27[38,39] 28[40,41] 29[42,42] 30[43,43] 31[44,44] 32[45,45] 33[46,46] 34[47,47] 35[48,48] 36[49,49] 37[50,51] 38[52,53] 39[54,54] 40[55,55] 45[56,56] 46[57,57] 47[58,58] 48[59,59] 49[60,60] 50[61,61] 51[62,62] 52[63,63] 53[64,64] 54[65,65] 55[66,66] 56[67,67] 57[68,68] 58[69,69] 59[70,70] 60[71,71] 61[72,72] 62[73,73] 63[74,74] 64[75,75] 65[76,76] 66[77,77] 67[78,78] 68[79,79] 69[80,80] 70[81,81] 71[82,82] 72[83,83] 73[84,84] 74[85,85] 75[86,86] 76[87,87] 77[88,88] 78[89,89] 79[90,90] 80[91,91] 87[92,92] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(4){ }d10(5){ }d11(6){ }d12(7){ }d21(16){ }d25(20){ }d27(21){ }d29(22){ }d31(23){ }d33(24){ }d35(25){ }d37(26){ }d39(27){ }d41(28){ }d51(37){ }d53(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[3],2[5],4[7],5[10],6[11],7[12],16[21],20[25],21[27],22[29],23[31],24[33],25[35],26[37],27[39],28[41],37[51],38[53]
;; rd  kill	(35) 0[0,1],1[2,3],2[4,5],4[6,7],5[8,9,10],6[11],7[12],16[21],20[25],21[26,27],22[28,29],23[30,31],24[32,33],25[34,35],26[36,37],27[38,39],28[40,41],37[50,51],38[52,53]
;;  UD chains for artificial uses at top
;; lr  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 5[10],6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d11(bb 0 insn -1) }u1(7){ d12(bb 0 insn -1) }u2(16){ d21(bb 0 insn -1) }u3(20){ d25(bb 0 insn -1) }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
;; rd  in  	(5) 5[10],6[11],7[12],16[21],20[25]
;; rd  gen 	(1) 87[92]
;; rd  kill	(1) 87[92]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[11],7[12],16[21],20[25]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 16 { d21(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(6){ d11(bb 0 insn -1) }u9(7){ d12(bb 0 insn -1) }u10(20){ d25(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(4) 6[11],7[12],16[21],20[25]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 6 { d11(bb 0 insn -1) }
;;   reg 7 { d12(bb 0 insn -1) }
;;   reg 20 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 7 sp) in insn 7:
Processing use of (reg 5 di) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 87 [ ptr ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 5 di) in insn 2:
starting the processing of deferred insns
ending the processing of deferred insns


void leveldb_free(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
;; live  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 5 [di] 87
;; live  kill	
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ ptr ])
        (reg:DI 5 di [ ptr ])) db/c.cc:583 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ptr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ ptr ])) db/c.cc:584 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ ptr ])
        (nil)))
(call_insn/j 7 6 0 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) db/c.cc:584 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7fb538d19ca8 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int leveldb_major_version() (leveldb_major_version, funcdef_no=1540, decl_uid=2379, cgraph_uid=647, symbol_order=650)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


int leveldb_major_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,1] 1[2,2] 2[3,3] 4[4,4] 5[5,5] 6[6,6] 7[7,7] 16[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(4){ }d5(5){ }d6(6){ }d7(7){ }d8(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(20) 0[0,1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[6],7[7],16[8],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d6(bb 0 insn -1) }u1(7){ d7(bb 0 insn -1) }u2(16){ d8(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(4) 6[6],7[7],16[8],20[9]
;; rd  gen 	(1) 0[0]
;; rd  kill	(2) 0[0,1]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[6],7[7],16[8],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u5(0){ d0(bb 2 insn 9) }u6(6){ d6(bb 0 insn -1) }u7(7){ d7(bb 0 insn -1) }u8(20){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[6],7[7],16[8],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 9) }
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
  Adding insn 9 to worklist
Processing use of (reg 0 ax) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


int leveldb_major_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 1 [0x1])) db/c.cc:589 90 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) db/c.cc:589 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int leveldb_minor_version() (leveldb_minor_version, funcdef_no=1541, decl_uid=2380, cgraph_uid=648, symbol_order=651)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


int leveldb_minor_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
;; Reaching defs:
;;  sparse invalidated 	
;;  dense invalidated 	0, 1, 2, 3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  reg->defs[] map:	0[0,1] 1[2,2] 2[3,3] 4[4,4] 5[5,5] 6[6,6] 7[7,7] 16[8,8] 20[9,9] 21[10,10] 22[11,11] 23[12,12] 24[13,13] 25[14,14] 26[15,15] 27[16,16] 28[17,17] 37[18,18] 38[19,19] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(4){ }d5(5){ }d6(6){ }d7(7){ }d8(16){ }d9(20){ }d10(21){ }d11(22){ }d12(23){ }d13(24){ }d14(25){ }d15(26){ }d16(27){ }d17(28){ }d18(37){ }d19(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; rd  in  	(0) 
;; rd  gen 	(19) 0[1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;; rd  kill	(20) 0[0,1],1[2],2[3],4[4],5[5],6[6],7[7],16[8],20[9],21[10],22[11],23[12],24[13],25[14],26[15],27[16],28[17],37[18],38[19]
;;  UD chains for artificial uses at top
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(4) 6[6],7[7],16[8],20[9]
;;  UD chains for artificial uses at bottom

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ d6(bb 0 insn -1) }u1(7){ d7(bb 0 insn -1) }u2(16){ d8(bb 0 insn -1) }u3(20){ d9(bb 0 insn -1) }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
;; rd  in  	(4) 6[6],7[7],16[8],20[9]
;; rd  gen 	(1) 0[0]
;; rd  kill	(2) 0[0,1]
;;  UD chains for artificial uses at top
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; rd  out 	(5) 0[0],6[6],7[7],16[8],20[9]
;;  UD chains for artificial uses at bottom
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 16 { d8(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u5(0){ d0(bb 2 insn 9) }u6(6){ d6(bb 0 insn -1) }u7(7){ d7(bb 0 insn -1) }u8(20){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  def 	
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; live  gen 	
;; live  kill	
;; rd  in  	(5) 0[0],6[6],7[7],16[8],20[9]
;; rd  gen 	(0) 
;; rd  kill	(0) 
;;  UD chains for artificial uses at top
;; lr  out 	
;; live  out 	
;; rd  out 	(0) 
;;  UD chains for artificial uses at bottom
;;   reg 0 { d0(bb 2 insn 9) }
;;   reg 6 { d6(bb 0 insn -1) }
;;   reg 7 { d7(bb 0 insn -1) }
;;   reg 20 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
Finished finding needed instructions:
  Adding insn 9 to worklist
Processing use of (reg 0 ax) in insn 10:
starting the processing of deferred insns
ending the processing of deferred insns


int leveldb_minor_version()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 2 10 2 (set (reg/i:SI 0 ax)
        (const_int 18 [0x12])) db/c.cc:593 90 {*movsi_internal}
     (nil))
(insn 10 9 0 2 (use (reg/i:SI 0 ax)) db/c.cc:593 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

