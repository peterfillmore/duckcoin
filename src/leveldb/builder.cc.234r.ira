
;; Function virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&) (_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, funcdef_no=2138, decl_uid=44255, cgraph_uid=762, symbol_order=774)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 122 uninteresting (no unique first use)
Reg 123: local to bb 2 def dominates all uses has unique first use
Reg 124 uninteresting (no unique first use)
Ignoring reg 126, has equiv memory
Reg 89 uninteresting
Ignoring reg 129, has equiv memory
Reg 93 uninteresting
Ignoring reg 132, has equiv memory
Reg 97 uninteresting
Ignoring reg 135, has equiv memory
Reg 101 uninteresting
Ignoring reg 138, has equiv memory
Reg 105 uninteresting
Ignoring reg 141, has equiv memory
Reg 109 uninteresting
Ignoring reg 144, has equiv memory
Reg 113 uninteresting
Ignoring reg 147, has equiv memory
Reg 117 uninteresting
Reg 119 uninteresting
Reg 150: local to bb 10 def dominates all uses has unique first use
Found def insn 3 for 123 to be not moveable
Found def insn 75 for 150 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;; 2 succs { 3 18 }
;; 3 succs { 4 17 }
;; 4 succs { 5 16 }
;; 5 succs { 6 15 }
;; 6 succs { 7 14 }
;; 7 succs { 8 13 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 19 }
;; 11 succs { 19 }
;; 12 succs { 19 }
;; 13 succs { 19 }
;; 14 succs { 19 }
;; 15 succs { 19 }
;; 16 succs { 19 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { }
;; 21 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 126: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 129: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 132: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 135: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 67 (nil))

Pass 0 for finding pseudo/allocno costs

    a18 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r124,l0) best DREG, allocno DREG
    a28 (r123,l0) best SIREG, allocno SIREG
    a0 (r122,l0) best AREG, allocno AREG
    a19 (r119,l0) best SIREG, allocno SIREG
    a16 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r115,l0) best SIREG, allocno SIREG
    a14 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r111,l0) best SIREG, allocno SIREG
    a12 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r107,l0) best SIREG, allocno SIREG
    a10 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r103,l0) best SIREG, allocno SIREG
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r99,l0) best SIREG, allocno SIREG
    a6 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best SIREG, allocno SIREG
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best SIREG, allocno SIREG
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best SIREG, allocno SIREG

  a0(r122,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23976,23976 NO_REX_SSE_REGS:23976,23976 SSE_REGS:23976,23976 MMX_REGS:33961,33961 INT_SSE_REGS:25973,25973 ALL_REGS:515376,515376 MEM:6991,6991
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11200,11200
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-200,-200 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15800,15800
  a3(r124,l0) costs: AREG:0,0 DREG:-1997,-1997 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15976,15976 NO_REX_SSE_REGS:15976,15976 SSE_REGS:15976,15976 MMX_REGS:20961,20961 INT_SSE_REGS:16973,16973 ALL_REGS:307376,307376 MEM:3991,3991
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22400,22400 NO_REX_SSE_REGS:22400,22400 SSE_REGS:22400,22400 MMX_REGS:30400,30400 INT_SSE_REGS:24000,24000 ALL_REGS:416000,416000 MEM:8160,8160
  a5(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-160,-160 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28800,28800 NO_REX_SSE_REGS:28800,28800 SSE_REGS:28800,28800 MMX_REGS:40800,40800 INT_SSE_REGS:31200,31200 ALL_REGS:582400,582400 MEM:12640,12640
  a6(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17920,17920 NO_REX_SSE_REGS:17920,17920 SSE_REGS:17920,17920 MMX_REGS:24320,24320 INT_SSE_REGS:19200,19200 ALL_REGS:332800,332800 MEM:6528,6528
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-128,-128 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23040,23040 NO_REX_SSE_REGS:23040,23040 SSE_REGS:23040,23040 MMX_REGS:32640,32640 INT_SSE_REGS:24960,24960 ALL_REGS:465920,465920 MEM:10112,10112
  a8(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14328,14328 NO_REX_SSE_REGS:14328,14328 SSE_REGS:14328,14328 MMX_REGS:19443,19443 INT_SSE_REGS:15351,15351 ALL_REGS:266032,266032 MEM:5219,5219
  a9(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-102,-102 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18424,18424 NO_REX_SSE_REGS:18424,18424 SSE_REGS:18424,18424 MMX_REGS:26099,26099 INT_SSE_REGS:19959,19959 ALL_REGS:372528,372528 MEM:8086,8086
  a10(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11452,11452 NO_REX_SSE_REGS:11452,11452 SSE_REGS:11452,11452 MMX_REGS:15542,15542 INT_SSE_REGS:12270,12270 ALL_REGS:212680,212680 MEM:4171,4171
  a11(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-81,-81 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14724,14724 NO_REX_SSE_REGS:14724,14724 SSE_REGS:14724,14724 MMX_REGS:20859,20859 INT_SSE_REGS:15951,15951 ALL_REGS:297752,297752 MEM:6463,6463
  a12(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9176,9176 NO_REX_SSE_REGS:9176,9176 SSE_REGS:9176,9176 MMX_REGS:12451,12451 INT_SSE_REGS:9831,9831 ALL_REGS:170352,170352 MEM:3342,3342
  a13(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-65,-65 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11800,11800 NO_REX_SSE_REGS:11800,11800 SSE_REGS:11800,11800 MMX_REGS:16715,16715 INT_SSE_REGS:12783,12783 ALL_REGS:238576,238576 MEM:5179,5179
  a14(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7336,7336 NO_REX_SSE_REGS:7336,7336 SSE_REGS:7336,7336 MMX_REGS:9956,9956 INT_SSE_REGS:7860,7860 ALL_REGS:136240,136240 MEM:2672,2672
  a15(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-52,-52 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:13362,13362 INT_SSE_REGS:10218,10218 ALL_REGS:190736,190736 MEM:4140,4140
  a16(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4528,4528 NO_REX_SSE_REGS:4528,4528 SSE_REGS:4528,4528 MMX_REGS:5783,5783 INT_SSE_REGS:4779,4779 ALL_REGS:74048,74048 MEM:1634,1634
  a17(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-41,-41 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7552,7552 NO_REX_SSE_REGS:7552,7552 SSE_REGS:7552,7552 MMX_REGS:10697,10697 INT_SSE_REGS:8181,8181 ALL_REGS:152672,152672 MEM:3315,3315
  a18(r150,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3360,3360 NO_REX_SSE_REGS:3360,3360 SSE_REGS:3360,3360 MMX_REGS:4200,4200 INT_SSE_REGS:3528,3528 ALL_REGS:52416,52416 MEM:1344,1344
  a19(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-168,-168 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4704,4704 NO_REX_SSE_REGS:4704,4704 SSE_REGS:4704,4704 MMX_REGS:6384,6384 INT_SSE_REGS:5040,5040 ALL_REGS:87360,87360 MEM:1848,1848
  a20(r147,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4200,4200 NO_REX_SSE_REGS:4200,4200 SSE_REGS:4200,4200 MMX_REGS:5250,5250 INT_SSE_REGS:4410,4410 ALL_REGS:65520,65520 MEM:0,0
  a21(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5240,5240 NO_REX_SSE_REGS:5240,5240 SSE_REGS:5240,5240 MMX_REGS:6550,6550 INT_SSE_REGS:5502,5502 ALL_REGS:81744,81744 MEM:0,0
  a22(r141,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6560,6560 NO_REX_SSE_REGS:6560,6560 SSE_REGS:6560,6560 MMX_REGS:8200,8200 INT_SSE_REGS:6888,6888 ALL_REGS:102336,102336 MEM:0,0
  a23(r138,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8180,8180 NO_REX_SSE_REGS:8180,8180 SSE_REGS:8180,8180 MMX_REGS:10225,10225 INT_SSE_REGS:8589,8589 ALL_REGS:127608,127608 MEM:0,0
  a24(r135,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10240,10240 NO_REX_SSE_REGS:10240,10240 SSE_REGS:10240,10240 MMX_REGS:12800,12800 INT_SSE_REGS:10752,10752 ALL_REGS:159744,159744 MEM:0,0
  a25(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12800,12800 NO_REX_SSE_REGS:12800,12800 SSE_REGS:12800,12800 MMX_REGS:16000,16000 INT_SSE_REGS:13440,13440 ALL_REGS:199680,199680 MEM:0,0
  a26(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:20000,20000 INT_SSE_REGS:16800,16800 ALL_REGS:249600,249600 MEM:0,0
  a27(r126,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a28(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r124: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r122,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27976,27976 NO_REX_SSE_REGS:27976,27976 SSE_REGS:27976,27976 MMX_REGS:37961,37961 INT_SSE_REGS:29973,29973 ALL_REGS:519376,519376 MEM:9991,9991
  a1(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11200,11200
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-200 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15800,15800
  a3(r124,l0) costs: AREG:0,0 DREG:0,-1997 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19976,19976 NO_REX_SSE_REGS:19976,19976 SSE_REGS:19976,19976 MMX_REGS:24961,24961 INT_SSE_REGS:20973,20973 ALL_REGS:311376,311376 MEM:6991,6991
  a4(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23200,23200 NO_REX_SSE_REGS:23200,23200 SSE_REGS:23200,23200 MMX_REGS:31200,31200 INT_SSE_REGS:24800,24800 ALL_REGS:419200,419200 MEM:8160,8160
  a5(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-160 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29600,29600 NO_REX_SSE_REGS:29600,29600 SSE_REGS:29600,29600 MMX_REGS:41600,41600 INT_SSE_REGS:32000,32000 ALL_REGS:585600,585600 MEM:12640,12640
  a6(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18560,18560 NO_REX_SSE_REGS:18560,18560 SSE_REGS:18560,18560 MMX_REGS:24960,24960 INT_SSE_REGS:19840,19840 ALL_REGS:335360,335360 MEM:6528,6528
  a7(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-128 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23680,23680 NO_REX_SSE_REGS:23680,23680 SSE_REGS:23680,23680 MMX_REGS:33280,33280 INT_SSE_REGS:25600,25600 ALL_REGS:468480,468480 MEM:10112,10112
  a8(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14840,14840 NO_REX_SSE_REGS:14840,14840 SSE_REGS:14840,14840 MMX_REGS:19955,19955 INT_SSE_REGS:15863,15863 ALL_REGS:268080,268080 MEM:5219,5219
  a9(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-102 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18936,18936 NO_REX_SSE_REGS:18936,18936 SSE_REGS:18936,18936 MMX_REGS:26611,26611 INT_SSE_REGS:20471,20471 ALL_REGS:374576,374576 MEM:8086,8086
  a10(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11861,11861 NO_REX_SSE_REGS:11861,11861 SSE_REGS:11861,11861 MMX_REGS:15951,15951 INT_SSE_REGS:12679,12679 ALL_REGS:214316,214316 MEM:4171,4171
  a11(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-81 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15133,15133 NO_REX_SSE_REGS:15133,15133 SSE_REGS:15133,15133 MMX_REGS:21268,21268 INT_SSE_REGS:16360,16360 ALL_REGS:299388,299388 MEM:6463,6463
  a12(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9504,9504 NO_REX_SSE_REGS:9504,9504 SSE_REGS:9504,9504 MMX_REGS:12779,12779 INT_SSE_REGS:10159,10159 ALL_REGS:171664,171664 MEM:3342,3342
  a13(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-65 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12128,12128 NO_REX_SSE_REGS:12128,12128 SSE_REGS:12128,12128 MMX_REGS:17043,17043 INT_SSE_REGS:13111,13111 ALL_REGS:239888,239888 MEM:5179,5179
  a14(r113,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7598,7598 NO_REX_SSE_REGS:7598,7598 SSE_REGS:7598,7598 MMX_REGS:10218,10218 INT_SSE_REGS:8122,8122 ALL_REGS:137288,137288 MEM:2672,2672
  a15(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-52 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9694,9694 NO_REX_SSE_REGS:9694,9694 SSE_REGS:9694,9694 MMX_REGS:13624,13624 INT_SSE_REGS:10480,10480 ALL_REGS:191784,191784 MEM:4140,4140
  a16(r117,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4738,4738 NO_REX_SSE_REGS:4738,4738 SSE_REGS:4738,4738 MMX_REGS:5993,5993 INT_SSE_REGS:4989,4989 ALL_REGS:74888,74888 MEM:1634,1634
  a17(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-41 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7762,7762 NO_REX_SSE_REGS:7762,7762 SSE_REGS:7762,7762 MMX_REGS:10907,10907 INT_SSE_REGS:8391,8391 ALL_REGS:153512,153512 MEM:3315,3315
  a18(r150,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3528,3528 NO_REX_SSE_REGS:3528,3528 SSE_REGS:3528,3528 MMX_REGS:4368,4368 INT_SSE_REGS:3696,3696 ALL_REGS:53088,53088 MEM:1344,1344
  a19(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-168 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4872,4872 NO_REX_SSE_REGS:4872,4872 SSE_REGS:4872,4872 MMX_REGS:6552,6552 INT_SSE_REGS:5208,5208 ALL_REGS:88032,88032 MEM:1848,1848
  a20(r147,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4410,4410 NO_REX_SSE_REGS:4410,4410 SSE_REGS:4410,4410 MMX_REGS:5460,5460 INT_SSE_REGS:4620,4620 ALL_REGS:66360,66360 MEM:0,0
  a21(r144,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5502,5502 NO_REX_SSE_REGS:5502,5502 SSE_REGS:5502,5502 MMX_REGS:6812,6812 INT_SSE_REGS:5764,5764 ALL_REGS:82792,82792 MEM:0,0
  a22(r141,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6888,6888 NO_REX_SSE_REGS:6888,6888 SSE_REGS:6888,6888 MMX_REGS:8528,8528 INT_SSE_REGS:7216,7216 ALL_REGS:103648,103648 MEM:0,0
  a23(r138,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8589,8589 NO_REX_SSE_REGS:8589,8589 SSE_REGS:8589,8589 MMX_REGS:10634,10634 INT_SSE_REGS:8998,8998 ALL_REGS:129244,129244 MEM:0,0
  a24(r135,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10752,10752 NO_REX_SSE_REGS:10752,10752 SSE_REGS:10752,10752 MMX_REGS:13312,13312 INT_SSE_REGS:11264,11264 ALL_REGS:161792,161792 MEM:0,0
  a25(r132,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13440,13440 NO_REX_SSE_REGS:13440,13440 SSE_REGS:13440,13440 MMX_REGS:16640,16640 INT_SSE_REGS:14080,14080 ALL_REGS:202240,202240 MEM:0,0
  a26(r129,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16800,16800 NO_REX_SSE_REGS:16800,16800 SSE_REGS:16800,16800 MMX_REGS:20800,20800 INT_SSE_REGS:17600,17600 ALL_REGS:252800,252800 MEM:0,0
  a27(r126,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a28(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 158(l0): point = 0
   Insn 155(l0): point = 3
   Insn 154(l0): point = 6
   Insn 153(l0): point = 8
   Insn 151(l0): point = 10
   Insn 144(l0): point = 13
   Insn 143(l0): point = 15
   Insn 142(l0): point = 17
   Insn 141(l0): point = 19
   Insn 176(l0): point = 22
   Insn 136(l0): point = 24
   Insn 135(l0): point = 26
   Insn 134(l0): point = 28
   Insn 133(l0): point = 30
   Insn 174(l0): point = 33
   Insn 128(l0): point = 35
   Insn 127(l0): point = 37
   Insn 126(l0): point = 39
   Insn 125(l0): point = 41
   Insn 172(l0): point = 44
   Insn 120(l0): point = 46
   Insn 119(l0): point = 48
   Insn 118(l0): point = 50
   Insn 117(l0): point = 52
   Insn 170(l0): point = 55
   Insn 112(l0): point = 57
   Insn 111(l0): point = 59
   Insn 110(l0): point = 61
   Insn 109(l0): point = 63
   Insn 168(l0): point = 66
   Insn 104(l0): point = 68
   Insn 103(l0): point = 70
   Insn 102(l0): point = 72
   Insn 101(l0): point = 74
   Insn 166(l0): point = 77
   Insn 96(l0): point = 79
   Insn 95(l0): point = 81
   Insn 94(l0): point = 83
   Insn 93(l0): point = 85
   Insn 164(l0): point = 88
   Insn 88(l0): point = 90
   Insn 87(l0): point = 92
   Insn 86(l0): point = 94
   Insn 85(l0): point = 96
   Insn 162(l0): point = 99
   Insn 80(l0): point = 101
   Insn 79(l0): point = 103
   Insn 78(l0): point = 105
   Insn 77(l0): point = 107
   Insn 75(l0): point = 109
   Insn 74(l0): point = 111
   Insn 72(l0): point = 114
   Insn 71(l0): point = 116
   Insn 68(l0): point = 118
   Insn 67(l0): point = 120
   Insn 66(l0): point = 122
   Insn 64(l0): point = 125
   Insn 63(l0): point = 127
   Insn 60(l0): point = 129
   Insn 59(l0): point = 131
   Insn 58(l0): point = 133
   Insn 56(l0): point = 136
   Insn 55(l0): point = 138
   Insn 52(l0): point = 140
   Insn 51(l0): point = 142
   Insn 50(l0): point = 144
   Insn 48(l0): point = 147
   Insn 47(l0): point = 149
   Insn 44(l0): point = 151
   Insn 43(l0): point = 153
   Insn 42(l0): point = 155
   Insn 40(l0): point = 158
   Insn 39(l0): point = 160
   Insn 36(l0): point = 162
   Insn 35(l0): point = 164
   Insn 34(l0): point = 166
   Insn 32(l0): point = 169
   Insn 31(l0): point = 171
   Insn 28(l0): point = 173
   Insn 27(l0): point = 175
   Insn 26(l0): point = 177
   Insn 24(l0): point = 180
   Insn 23(l0): point = 182
   Insn 20(l0): point = 184
   Insn 19(l0): point = 186
   Insn 18(l0): point = 188
   Insn 16(l0): point = 191
   Insn 15(l0): point = 193
   Insn 12(l0): point = 195
   Insn 11(l0): point = 197
   Insn 10(l0): point = 199
   Insn 7(l0): point = 201
   Insn 4(l0): point = 203
   Insn 3(l0): point = 205
   Insn 2(l0): point = 207
 a0(r122): [11..207]
 a1(r89): [183..195] [14..21]
 a2(r87): [189..199] [18..21]
 a3(r124): [108..203] [97..98] [86..87] [75..76] [64..65] [53..54] [42..43] [31..32] [20..21]
 a4(r93): [172..184] [25..32]
 a5(r91): [178..188] [29..32]
 a6(r97): [161..173] [36..43]
 a7(r95): [167..177] [40..43]
 a8(r101): [150..162] [47..54]
 a9(r99): [156..166] [51..54]
 a10(r105): [139..151] [58..65]
 a11(r103): [145..155] [62..65]
 a12(r109): [128..140] [69..76]
 a13(r107): [134..144] [73..76]
 a14(r113): [117..129] [80..87]
 a15(r111): [123..133] [84..87]
 a16(r117): [114..118] [91..98]
 a17(r115): [112..122] [95..98]
 a18(r150): [102..109]
 a19(r119): [106..111]
 a20(r147): [119..120]
 a21(r144): [130..131]
 a22(r141): [141..142]
 a23(r138): [152..153]
 a24(r135): [163..164]
 a25(r132): [174..175]
 a26(r129): [185..186]
 a27(r126): [196..197]
 a28(r123): [200..205]
Compressing live ranges: from 210 to 52 - 24%
Ranges after the compression:
 a0(r122): [0..51]
 a1(r89): [42..47] [0..1]
 a2(r87): [46..49] [0..1]
 a3(r124): [0..51]
 a4(r93): [38..43] [2..3]
 a5(r91): [42..45] [2..3]
 a6(r97): [34..39] [4..5]
 a7(r95): [38..41] [4..5]
 a8(r101): [30..35] [6..7]
 a9(r99): [34..37] [6..7]
 a10(r105): [26..31] [8..9]
 a11(r103): [30..33] [8..9]
 a12(r109): [22..27] [10..11]
 a13(r107): [26..29] [10..11]
 a14(r113): [18..23] [12..13]
 a15(r111): [22..25] [12..13]
 a16(r117): [18..19] [14..15]
 a17(r115): [18..21] [14..15]
 a18(r150): [16..17]
 a19(r119): [16..17]
 a20(r147): [20..21]
 a21(r144): [24..25]
 a22(r141): [28..29]
 a23(r138): [32..33]
 a24(r135): [36..37]
 a25(r132): [40..41]
 a26(r129): [44..45]
 a27(r126): [48..49]
 a28(r123): [50..51]
+++Allocating 232 bytes for conflict table (uncompressed size 232)
;; a0(r122,l0) conflicts: a1(r89,l0) a2(r87,l0) a3(r124,l0) a4(r93,l0) a5(r91,l0) a6(r97,l0) a7(r95,l0) a8(r101,l0) a9(r99,l0) a10(r105,l0) a11(r103,l0) a12(r109,l0) a13(r107,l0) a14(r113,l0) a15(r111,l0) a16(r117,l0) a17(r115,l0) a18(r150,l0) a19(r119,l0) a20(r147,l0) a21(r144,l0) a22(r141,l0) a23(r138,l0) a24(r135,l0) a25(r132,l0) a26(r129,l0) a27(r126,l0) a28(r123,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a1(r89,l0) conflicts: a2(r87,l0) a0(r122,l0) a3(r124,l0) a4(r93,l0) a5(r91,l0) a26(r129,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a2(r87,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a27(r126,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a3(r124,l0) conflicts: a1(r89,l0) a2(r87,l0) a0(r122,l0) a4(r93,l0) a5(r91,l0) a6(r97,l0) a7(r95,l0) a8(r101,l0) a9(r99,l0) a10(r105,l0) a11(r103,l0) a12(r109,l0) a13(r107,l0) a14(r113,l0) a15(r111,l0) a16(r117,l0) a17(r115,l0) a18(r150,l0) a19(r119,l0) a20(r147,l0) a21(r144,l0) a22(r141,l0) a23(r138,l0) a24(r135,l0) a25(r132,l0) a26(r129,l0) a27(r126,l0) a28(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r93,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a5(r91,l0) a6(r97,l0) a7(r95,l0) a25(r132,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a5(r91,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a4(r93,l0) a26(r129,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a6(r97,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r93,l0) a7(r95,l0) a8(r101,l0) a9(r99,l0) a24(r135,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a7(r95,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r93,l0) a6(r97,l0) a25(r132,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a8(r101,l0) conflicts: a0(r122,l0) a3(r124,l0) a6(r97,l0) a9(r99,l0) a10(r105,l0) a11(r103,l0) a23(r138,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a9(r99,l0) conflicts: a0(r122,l0) a3(r124,l0) a6(r97,l0) a8(r101,l0) a24(r135,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a10(r105,l0) conflicts: a0(r122,l0) a3(r124,l0) a8(r101,l0) a11(r103,l0) a12(r109,l0) a13(r107,l0) a22(r141,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a11(r103,l0) conflicts: a0(r122,l0) a3(r124,l0) a8(r101,l0) a10(r105,l0) a23(r138,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a12(r109,l0) conflicts: a0(r122,l0) a3(r124,l0) a10(r105,l0) a13(r107,l0) a14(r113,l0) a15(r111,l0) a21(r144,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a13(r107,l0) conflicts: a0(r122,l0) a3(r124,l0) a10(r105,l0) a12(r109,l0) a22(r141,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a14(r113,l0) conflicts: a0(r122,l0) a3(r124,l0) a12(r109,l0) a15(r111,l0) a16(r117,l0) a17(r115,l0) a20(r147,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a15(r111,l0) conflicts: a0(r122,l0) a3(r124,l0) a12(r109,l0) a14(r113,l0) a21(r144,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a16(r117,l0) conflicts: a0(r122,l0) a3(r124,l0) a14(r113,l0) a17(r115,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a17(r115,l0) conflicts: a0(r122,l0) a3(r124,l0) a14(r113,l0) a16(r117,l0) a20(r147,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a18(r150,l0) conflicts: a0(r122,l0) a3(r124,l0) a19(r119,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a19(r119,l0) conflicts: a0(r122,l0) a3(r124,l0) a18(r150,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a20(r147,l0) conflicts: a0(r122,l0) a3(r124,l0) a14(r113,l0) a17(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r144,l0) conflicts: a0(r122,l0) a3(r124,l0) a12(r109,l0) a15(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r141,l0) conflicts: a0(r122,l0) a3(r124,l0) a10(r105,l0) a13(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r138,l0) conflicts: a0(r122,l0) a3(r124,l0) a8(r101,l0) a11(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r135,l0) conflicts: a0(r122,l0) a3(r124,l0) a6(r97,l0) a9(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r132,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r93,l0) a7(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r129,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a5(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r126,l0) conflicts: a2(r87,l0) a0(r122,l0) a3(r124,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r123,l0) conflicts: a0(r122,l0) a3(r124,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  pref0:a3(r124)<-hr1@2995
  pref1:a28(r123)<-hr4@1500
  pref2:a0(r122)<-hr0@1500
  pref3:a19(r119)<-hr4@252
  pref4:a17(r115)<-hr4@61
  pref5:a15(r111)<-hr4@78
  pref6:a13(r107)<-hr4@97
  pref7:a11(r103)<-hr4@121
  pref8:a9(r99)<-hr4@153
  pref9:a7(r95)<-hr4@192
  pref10:a5(r91)<-hr4@240
  pref11:a2(r87)<-hr4@300
  pref12:a0(r122)<-hr5@1997
  regions=1, blocks=22, points=52
    allocnos=29 (big 0), copies=0, conflicts=0, ranges=45

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r122 1r89 2r87 3r124 4r93 5r91 6r97 7r95 8r101 9r99 10r105 11r103 12r109 13r107 14r113 15r111 16r117 17r115 18r150 19r119 20r147 21r144 22r141 23r138 24r135 25r132 26r129 27r126 28r123
    modified regnos: 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 122 123 124 126 129 132 135 138 141 144 147 150
    border:
    Pressure: GENERAL_REGS=5
 Removing pref12:hr5@1997
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@25964
          2:( 0 2-6 37-44)@163148
            3:( 0 2 3 6 37-44)@108522
      Allocno a0r122 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a3r124 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r93 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a5r91 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a6r97 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a7r95 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a8r101 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a9r99 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a10r105 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a11r103 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a12r109 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a13r107 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a14r113 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a15r111 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a16r117 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a17r115 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a18r150 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, node:  0 2 3 6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a19r119 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a20r147 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a21r144 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a22r141 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a23r138 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a24r135 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a25r132 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a26r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r126 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a28r123 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Pushing a18(r150,l0)(cost 0)
      Pushing a20(r147,l0)(cost 0)
      Pushing a16(r117,l0)(cost 0)
      Pushing a19(r119,l0)(cost 0)
      Pushing a21(r144,l0)(cost 0)
      Pushing a17(r115,l0)(cost 0)
      Pushing a22(r141,l0)(cost 0)
      Pushing a15(r111,l0)(cost 0)
      Pushing a14(r113,l0)(cost 0)
      Pushing a23(r138,l0)(cost 0)
      Pushing a13(r107,l0)(cost 0)
      Pushing a12(r109,l0)(cost 0)
      Pushing a24(r135,l0)(cost 0)
      Pushing a11(r103,l0)(cost 0)
        Making a3(r124,l0) colorable
      Pushing a10(r105,l0)(cost 0)
      Pushing a25(r132,l0)(cost 0)
      Pushing a9(r99,l0)(cost 0)
        Making a0(r122,l0) colorable
      Pushing a8(r101,l0)(cost 0)
      Pushing a26(r129,l0)(cost 0)
      Pushing a7(r95,l0)(cost 0)
      Pushing a6(r97,l0)(cost 0)
      Pushing a3(r124,l0)(cost 12982)
      Pushing a28(r123,l0)(cost 0)
      Pushing a27(r126,l0)(cost 0)
      Pushing a5(r91,l0)(cost 0)
      Pushing a4(r93,l0)(cost 0)
      Pushing a0(r122,l0)(cost 9991)
      Pushing a2(r87,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Popping a1(r89,l0)  -- assign reg 2
      Popping a2(r87,l0)  -- assign reg 4
      Popping a0(r122,l0)  -- assign reg 3
      Popping a4(r93,l0)  -- assign reg 0
      Popping a5(r91,l0)  -- assign reg 4
      Popping a27(r126,l0)  -- assign reg 0
      Popping a28(r123,l0)  -- assign reg 4
      Popping a3(r124,l0)  -- assign reg 1
      Popping a6(r97,l0)  -- assign reg 2
      Popping a7(r95,l0)  -- assign reg 4
      Popping a26(r129,l0)  -- assign reg 0
      Popping a8(r101,l0)  -- assign reg 0
      Popping a9(r99,l0)  -- assign reg 4
      Popping a25(r132,l0)  -- assign reg 2
      Popping a10(r105,l0)  -- assign reg 2
      Popping a11(r103,l0)  -- assign reg 4
      Popping a24(r135,l0)  -- assign reg 0
      Popping a12(r109,l0)  -- assign reg 0
      Popping a13(r107,l0)  -- assign reg 4
      Popping a23(r138,l0)  -- assign reg 2
      Popping a14(r113,l0)  -- assign reg 2
      Popping a15(r111,l0)  -- assign reg 4
      Popping a22(r141,l0)  -- assign reg 0
      Popping a17(r115,l0)  -- assign reg 4
      Popping a21(r144,l0)  -- assign reg 2
      Popping a19(r119,l0)  -- assign reg 4
      Popping a16(r117,l0)  -- assign reg 0
      Popping a20(r147,l0)  -- assign reg 0
      Popping a18(r150,l0)  -- assign reg 0
Disposition:
    2:r87  l0     4    1:r89  l0     2    5:r91  l0     4    4:r93  l0     0
    7:r95  l0     4    6:r97  l0     2    9:r99  l0     4    8:r101 l0     0
   11:r103 l0     4   10:r105 l0     2   13:r107 l0     4   12:r109 l0     0
   15:r111 l0     4   14:r113 l0     2   17:r115 l0     4   16:r117 l0     0
   19:r119 l0     4    0:r122 l0     3   28:r123 l0     4    3:r124 l0     1
   27:r126 l0     0   26:r129 l0     0   25:r132 l0     2   24:r135 l0     0
   23:r138 l0     2   22:r141 l0     0   21:r144 l0     2   20:r147 l0     0
   18:r150 l0     0
New iteration of spill/restore move
+++Costs: overall -11982, reg -11982, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb::Status leveldb::EnvWrapper::DeleteFile(const string&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={12d,2u} r1={20d,10u} r2={11d} r4={20d,10u} r5={20d,10u} r6={1d,21u} r7={1d,31u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,20u} r17={20d,9u} r18={10d} r19={10d} r20={1d,23u} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,3u,1e} r89={1d,3u} r91={1d,3u,1e} r93={1d,3u} r95={1d,3u,1e} r97={1d,3u} r99={1d,3u,1e} r101={1d,3u} r103={1d,3u,1e} r105={1d,3u} r107={1d,3u,1e} r109={1d,3u} r111={1d,3u,1e} r113={1d,3u} r115={1d,3u,1e} r117={1d,2u} r119={1d,2u} r122={1d,10u} r123={1d,1u} r124={1d,9u} r126={1d,1u} r129={1d,1u} r132={1d,1u} r135={1d,1u} r138={1d,1u} r141={1d,1u} r144={1d,1u} r147={1d,1u} r150={1d,1u} 
;;    total ref usage 1028{806d,214u,8e} in 95{85 regular + 10 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89 122 123 124 126
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 122 [ <retval> ])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/f:DI 123 [ this ])
        (reg:DI 4 si [ this ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 124 [ f ])
        (reg:DI 1 dx [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ f ])
        (nil)))
(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 5 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.51292+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 7 11 2 (set (reg/f:DI 87 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 123 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ this ])
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 126 [ _3->_vptr.Env ])
        (mem/f:DI (reg/f:DI 87 [ D.51288 ]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.51288 ]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 89 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 126 [ _3->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 126 [ _3->_vptr.Env ])
        (nil)))
(note 13 12 15 2 NOTE_INSN_DELETED)
(insn 15 13 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.51290 ])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  def 	 17 [flags] 91 93 129
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg/f:DI 91 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51288 ])
        (nil)))
(insn 19 18 20 3 (set (reg/f:DI 129 [ _11->_vptr.Env ])
        (mem/f:DI (reg/f:DI 91 [ D.51288 ]) [3 _11->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 91 [ D.51288 ]) [3 _11->_vptr.Env+0 S8 A64])
        (nil)))
(insn 20 19 23 3 (set (reg/f:DI 93 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 129 [ _11->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_12 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ _11->_vptr.Env ])
        (nil)))
(insn 23 20 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.51290 ])
            (reg/f:DI 89 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.51290 ])
        (nil)))
(jump_insn 24 23 25 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 131)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93
;; lr  def 	 17 [flags] 95 97 132
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 95 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_11].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.51288 ])
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 132 [ _16->_vptr.Env ])
        (mem/f:DI (reg/f:DI 95 [ D.51288 ]) [3 _16->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 95 [ D.51288 ]) [3 _16->_vptr.Env+0 S8 A64])
        (nil)))
(insn 28 27 31 4 (set (reg/f:DI 97 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 132 [ _16->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_17 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ _16->_vptr.Env ])
        (nil)))
(insn 31 28 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ D.51290 ])
            (reg/f:DI 93 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.51290 ])
        (nil)))
(jump_insn 32 31 33 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 123)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 123)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              16 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97
;; lr  def 	 17 [flags] 99 101 135
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 5 (set (reg/f:DI 99 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_16].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.51288 ])
        (nil)))
(insn 35 34 36 5 (set (reg/f:DI 135 [ _21->_vptr.Env ])
        (mem/f:DI (reg/f:DI 99 [ D.51288 ]) [3 _21->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 99 [ D.51288 ]) [3 _21->_vptr.Env+0 S8 A64])
        (nil)))
(insn 36 35 39 5 (set (reg/f:DI 101 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 135 [ _21->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_22 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ _21->_vptr.Env ])
        (nil)))
(insn 39 36 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ D.51290 ])
            (reg/f:DI 97 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.51290 ])
        (nil)))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 115)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              15 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101
;; lr  def 	 17 [flags] 103 105 138
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 103 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_21].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.51288 ])
        (nil)))
(insn 43 42 44 6 (set (reg/f:DI 138 [ _26->_vptr.Env ])
        (mem/f:DI (reg/f:DI 103 [ D.51288 ]) [3 _26->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 103 [ D.51288 ]) [3 _26->_vptr.Env+0 S8 A64])
        (nil)))
(insn 44 43 47 6 (set (reg/f:DI 105 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 138 [ _26->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_27 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138 [ _26->_vptr.Env ])
        (nil)))
(insn 47 44 48 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 105 [ D.51290 ])
            (reg/f:DI 101 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.51290 ])
        (nil)))
(jump_insn 48 47 49 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 107)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 107)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              14 [19.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(6){ }u55(7){ }u56(16){ }u57(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105
;; lr  def 	 17 [flags] 107 109 141
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 7 (set (reg/f:DI 107 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_26].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.51288 ])
        (nil)))
(insn 51 50 52 7 (set (reg/f:DI 141 [ _31->_vptr.Env ])
        (mem/f:DI (reg/f:DI 107 [ D.51288 ]) [3 _31->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 107 [ D.51288 ]) [3 _31->_vptr.Env+0 S8 A64])
        (nil)))
(insn 52 51 55 7 (set (reg/f:DI 109 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 141 [ _31->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_32 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 141 [ _31->_vptr.Env ])
        (nil)))
(insn 55 52 56 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ D.51290 ])
            (reg/f:DI 105 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.51290 ])
        (nil)))
(jump_insn 56 55 57 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 99)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              13 [19.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags] 111 113 144
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 8 (set (reg/f:DI 111 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_31].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.51288 ])
        (nil)))
(insn 59 58 60 8 (set (reg/f:DI 144 [ _36->_vptr.Env ])
        (mem/f:DI (reg/f:DI 111 [ D.51288 ]) [3 _36->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 111 [ D.51288 ]) [3 _36->_vptr.Env+0 S8 A64])
        (nil)))
(insn 60 59 63 8 (set (reg/f:DI 113 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 144 [ _36->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_37 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ _36->_vptr.Env ])
        (nil)))
(insn 63 60 64 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 113 [ D.51290 ])
            (reg/f:DI 109 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.51290 ])
        (nil)))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 91)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              12 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(6){ }u75(7){ }u76(16){ }u77(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113
;; lr  def 	 17 [flags] 115 117 147
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg/f:DI 115 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_36].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.51288 ])
        (nil)))
(insn 67 66 68 9 (set (reg/f:DI 147 [ _41->_vptr.Env ])
        (mem/f:DI (reg/f:DI 115 [ D.51288 ]) [3 _41->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 115 [ D.51288 ]) [3 _41->_vptr.Env+0 S8 A64])
        (nil)))
(insn 68 67 71 9 (set (reg/f:DI 117 [ D.51290 ])
        (mem/f:DI (plus:DI (reg/f:DI 147 [ _41->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_42 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ _41->_vptr.Env ])
        (nil)))
(insn 71 68 72 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.51290 ])
            (reg/f:DI 113 [ D.51290 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.51290 ])
        (nil)))
(jump_insn 72 71 73 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1980 (nil)))
 -> 83)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              11 [19.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(6){ }u85(7){ }u86(16){ }u87(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 119 150
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 10 (set (reg/f:DI 119 [ D.51288 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ D.51288 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_41].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.51288 ])
        (nil)))
(insn 75 74 76 10 (set (reg/f:DI 150 [ _46->_vptr.Env ])
        (mem/f:DI (reg/f:DI 119 [ D.51288 ]) [3 _46->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 76 75 77 10 NOTE_INSN_DELETED)
(insn 77 76 78 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 78 77 79 10 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.51288 ])
        (nil)))
(insn 79 78 80 10 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 80 79 162 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 150 [ _46->_vptr.Env ])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_47 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_48;(struct Env)_46->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 150 [ _46->_vptr.Env ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 162 80 163 10 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 163 162 83)
;; basic block 11, loop depth 0, count 0, freq 416, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9 [19.8%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u99(6){ }u100(7){ }u101(16){ }u102(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 83 163 84 11 9 "" [1 uses])
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 86 85 87 11 (set (reg:DI 4 si)
        (reg/f:DI 115 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.51288 ])
        (nil)))
(insn 87 86 88 11 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 88 87 164 11 (call (mem:QI (reg/f:DI 117 [ D.51290 ]) [0 *OBJ_TYPE_REF(_43;(struct Env)_41->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 164 88 165 11 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 165 164 91)
;; basic block 12, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [20.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(6){ }u112(7){ }u113(16){ }u114(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 91 165 92 12 8 "" [1 uses])
(note 92 91 93 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 94 93 95 12 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.51288 ])
        (nil)))
(insn 95 94 96 12 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 96 95 166 12 (call (mem:QI (reg/f:DI 113 [ D.51290 ]) [0 *OBJ_TYPE_REF(_38;(struct Env)_36->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 166 96 167 12 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 167 166 99)
;; basic block 13, loop depth 0, count 0, freq 653, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       7 [19.9%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(6){ }u124(7){ }u125(16){ }u126(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 99 167 100 13 7 "" [1 uses])
(note 100 99 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 13 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 102 101 103 13 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.51288 ])
        (nil)))
(insn 103 102 104 13 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 104 103 168 13 (call (mem:QI (reg/f:DI 109 [ D.51290 ]) [0 *OBJ_TYPE_REF(_33;(struct Env)_31->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 168 104 169 13 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 169 168 107)
;; basic block 14, loop depth 0, count 0, freq 815, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       6 [19.9%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u135(6){ }u136(7){ }u137(16){ }u138(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 107 169 108 14 6 "" [1 uses])
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 109 108 110 14 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 110 109 111 14 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.51288 ])
        (nil)))
(insn 111 110 112 14 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 112 111 170 14 (call (mem:QI (reg/f:DI 105 [ D.51290 ]) [0 *OBJ_TYPE_REF(_28;(struct Env)_26->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 170 112 171 14 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 171 170 115)
;; basic block 15, loop depth 0, count 0, freq 1024, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       5 [20.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u147(6){ }u148(7){ }u149(16){ }u150(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 115 171 116 15 5 "" [1 uses])
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 15 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 118 117 119 15 (set (reg:DI 4 si)
        (reg/f:DI 99 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.51288 ])
        (nil)))
(insn 119 118 120 15 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 120 119 172 15 (call (mem:QI (reg/f:DI 101 [ D.51290 ]) [0 *OBJ_TYPE_REF(_23;(struct Env)_21->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 172 120 173 15 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 173 172 123)
;; basic block 16, loop depth 0, count 0, freq 1280, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       4 [20.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u159(6){ }u160(7){ }u161(16){ }u162(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 123 173 124 16 4 "" [1 uses])
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 126 16 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 126 125 127 16 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.51288 ])
        (nil)))
(insn 127 126 128 16 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 128 127 174 16 (call (mem:QI (reg/f:DI 97 [ D.51290 ]) [0 *OBJ_TYPE_REF(_18;(struct Env)_16->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 174 128 175 16 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 175 174 131)
;; basic block 17, loop depth 0, count 0, freq 1600, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       3 [20.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u171(6){ }u172(7){ }u173(16){ }u174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 131 175 132 17 3 "" [1 uses])
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 17 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 134 133 135 17 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.51288 ])
        (nil)))
(insn 135 134 136 17 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 136 135 176 17 (call (mem:QI (reg/f:DI 93 [ D.51290 ]) [0 *OBJ_TYPE_REF(_13;(struct Env)_11->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 176 136 177 17 (set (pc)
        (label_ref 149)) 654 {jump}
     (nil)
 -> 149)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 177 176 139)
;; basic block 18, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       2 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 139 177 140 18 2 "" [1 uses])
(note 140 139 141 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 18 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 142 141 143 18 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.51288 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51288 ])
        (nil)))
(insn 143 142 144 18 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(call_insn 144 143 149 18 (call (mem:QI (reg/f:DI 89 [ D.51290 ]) [0 *OBJ_TYPE_REF(_5;(struct Env)_3->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.51290 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;;              10 [100.0%] 
;;              11 [100.0%] 
;;              12 [100.0%] 
;;              13 [100.0%] 
;;              14 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u195(6){ }u196(7){ }u197(16){ }u198(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 0 [ax] 17 [flags]
(code_label 149 144 159 19 1 "" [8 uses])
(note 159 149 151 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 151 159 153 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ <retval> ])
        (nil)))
(insn 153 151 154 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.51292+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ./include/leveldb/env.h:296 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 154 153 160 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 157)
            (pc))) ./include/leveldb/env.h:296 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 157)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u202(6){ }u203(7){ }u204(16){ }u205(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 160 154 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 155 160 156 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 156 155 157)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u207(6){ }u208(7){ }u209(16){ }u210(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 157 156 161 21 11 "" [1 uses])
(note 161 157 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 158 161 0 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:296 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**) (_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE, funcdef_no=2135, decl_uid=44245, cgraph_uid=759, symbol_order=771)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 22 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 122 uninteresting (no unique first use)
Reg 123: local to bb 2 def dominates all uses has unique first use
Reg 124 uninteresting (no unique first use)
Reg 125 uninteresting (no unique first use)
Ignoring reg 127, has equiv memory
Reg 89 uninteresting
Ignoring reg 130, has equiv memory
Reg 93 uninteresting
Ignoring reg 133, has equiv memory
Reg 97 uninteresting
Ignoring reg 136, has equiv memory
Reg 101 uninteresting
Ignoring reg 139, has equiv memory
Reg 105 uninteresting
Ignoring reg 142, has equiv memory
Reg 109 uninteresting
Ignoring reg 145, has equiv memory
Reg 113 uninteresting
Ignoring reg 148, has equiv memory
Reg 117 uninteresting
Reg 119 uninteresting
Reg 151: local to bb 10 def dominates all uses has unique first use
Found def insn 3 for 123 to be not moveable
Found def insn 76 for 151 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;; 2 succs { 3 18 }
;; 3 succs { 4 17 }
;; 4 succs { 5 16 }
;; 5 succs { 6 15 }
;; 6 succs { 7 14 }
;; 7 succs { 8 13 }
;; 8 succs { 9 12 }
;; 9 succs { 10 11 }
;; 10 succs { 19 }
;; 11 succs { 19 }
;; 12 succs { 19 }
;; 13 succs { 19 }
;; 14 succs { 19 }
;; 15 succs { 19 }
;; 16 succs { 19 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 21 20 }
;; 20 succs { }
;; 21 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 127: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 130: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 133: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 68 (nil))

Pass 0 for finding pseudo/allocno costs

    a19 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r125,l0) best CREG, allocno CREG
    a3 (r124,l0) best DREG, allocno DREG
    a29 (r123,l0) best SIREG, allocno SIREG
    a0 (r122,l0) best AREG, allocno AREG
    a20 (r119,l0) best SIREG, allocno SIREG
    a17 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r115,l0) best SIREG, allocno SIREG
    a15 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r111,l0) best SIREG, allocno SIREG
    a13 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r107,l0) best SIREG, allocno SIREG
    a11 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r103,l0) best SIREG, allocno SIREG
    a9 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best SIREG, allocno SIREG
    a7 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r95,l0) best SIREG, allocno SIREG
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r91,l0) best SIREG, allocno SIREG
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best SIREG, allocno SIREG

  a0(r122,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23976,23976 NO_REX_SSE_REGS:23976,23976 SSE_REGS:23976,23976 MMX_REGS:33961,33961 INT_SSE_REGS:25973,25973 ALL_REGS:515376,515376 MEM:6991,6991
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:11200,11200
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-200,-200 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:15800,15800
  a3(r124,l0) costs: AREG:0,0 DREG:-1997,-1997 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15976,15976 NO_REX_SSE_REGS:15976,15976 SSE_REGS:15976,15976 MMX_REGS:20961,20961 INT_SSE_REGS:16973,16973 ALL_REGS:307376,307376 MEM:3991,3991
  a4(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:-1997,-1997 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15976,15976 NO_REX_SSE_REGS:15976,15976 SSE_REGS:15976,15976 MMX_REGS:20961,20961 INT_SSE_REGS:16973,16973 ALL_REGS:307376,307376 MEM:3991,3991
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22400,22400 NO_REX_SSE_REGS:22400,22400 SSE_REGS:22400,22400 MMX_REGS:30400,30400 INT_SSE_REGS:24000,24000 ALL_REGS:416000,416000 MEM:8160,8160
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-160,-160 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28800,28800 NO_REX_SSE_REGS:28800,28800 SSE_REGS:28800,28800 MMX_REGS:40800,40800 INT_SSE_REGS:31200,31200 ALL_REGS:582400,582400 MEM:12640,12640
  a7(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17920,17920 NO_REX_SSE_REGS:17920,17920 SSE_REGS:17920,17920 MMX_REGS:24320,24320 INT_SSE_REGS:19200,19200 ALL_REGS:332800,332800 MEM:6528,6528
  a8(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-128,-128 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23040,23040 NO_REX_SSE_REGS:23040,23040 SSE_REGS:23040,23040 MMX_REGS:32640,32640 INT_SSE_REGS:24960,24960 ALL_REGS:465920,465920 MEM:10112,10112
  a9(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14328,14328 NO_REX_SSE_REGS:14328,14328 SSE_REGS:14328,14328 MMX_REGS:19443,19443 INT_SSE_REGS:15351,15351 ALL_REGS:266032,266032 MEM:5219,5219
  a10(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-102,-102 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18424,18424 NO_REX_SSE_REGS:18424,18424 SSE_REGS:18424,18424 MMX_REGS:26099,26099 INT_SSE_REGS:19959,19959 ALL_REGS:372528,372528 MEM:8086,8086
  a11(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11452,11452 NO_REX_SSE_REGS:11452,11452 SSE_REGS:11452,11452 MMX_REGS:15542,15542 INT_SSE_REGS:12270,12270 ALL_REGS:212680,212680 MEM:4171,4171
  a12(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-81,-81 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14724,14724 NO_REX_SSE_REGS:14724,14724 SSE_REGS:14724,14724 MMX_REGS:20859,20859 INT_SSE_REGS:15951,15951 ALL_REGS:297752,297752 MEM:6463,6463
  a13(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9176,9176 NO_REX_SSE_REGS:9176,9176 SSE_REGS:9176,9176 MMX_REGS:12451,12451 INT_SSE_REGS:9831,9831 ALL_REGS:170352,170352 MEM:3342,3342
  a14(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-65,-65 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11800,11800 NO_REX_SSE_REGS:11800,11800 SSE_REGS:11800,11800 MMX_REGS:16715,16715 INT_SSE_REGS:12783,12783 ALL_REGS:238576,238576 MEM:5179,5179
  a15(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7336,7336 NO_REX_SSE_REGS:7336,7336 SSE_REGS:7336,7336 MMX_REGS:9956,9956 INT_SSE_REGS:7860,7860 ALL_REGS:136240,136240 MEM:2672,2672
  a16(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-52,-52 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9432,9432 NO_REX_SSE_REGS:9432,9432 SSE_REGS:9432,9432 MMX_REGS:13362,13362 INT_SSE_REGS:10218,10218 ALL_REGS:190736,190736 MEM:4140,4140
  a17(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4528,4528 NO_REX_SSE_REGS:4528,4528 SSE_REGS:4528,4528 MMX_REGS:5783,5783 INT_SSE_REGS:4779,4779 ALL_REGS:74048,74048 MEM:1634,1634
  a18(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-41,-41 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7552,7552 NO_REX_SSE_REGS:7552,7552 SSE_REGS:7552,7552 MMX_REGS:10697,10697 INT_SSE_REGS:8181,8181 ALL_REGS:152672,152672 MEM:3315,3315
  a19(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3360,3360 NO_REX_SSE_REGS:3360,3360 SSE_REGS:3360,3360 MMX_REGS:4200,4200 INT_SSE_REGS:3528,3528 ALL_REGS:52416,52416 MEM:1344,1344
  a20(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-168,-168 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4704,4704 NO_REX_SSE_REGS:4704,4704 SSE_REGS:4704,4704 MMX_REGS:6384,6384 INT_SSE_REGS:5040,5040 ALL_REGS:87360,87360 MEM:1848,1848
  a21(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4200,4200 NO_REX_SSE_REGS:4200,4200 SSE_REGS:4200,4200 MMX_REGS:5250,5250 INT_SSE_REGS:4410,4410 ALL_REGS:65520,65520 MEM:0,0
  a22(r145,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5240,5240 NO_REX_SSE_REGS:5240,5240 SSE_REGS:5240,5240 MMX_REGS:6550,6550 INT_SSE_REGS:5502,5502 ALL_REGS:81744,81744 MEM:0,0
  a23(r142,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6560,6560 NO_REX_SSE_REGS:6560,6560 SSE_REGS:6560,6560 MMX_REGS:8200,8200 INT_SSE_REGS:6888,6888 ALL_REGS:102336,102336 MEM:0,0
  a24(r139,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8180,8180 NO_REX_SSE_REGS:8180,8180 SSE_REGS:8180,8180 MMX_REGS:10225,10225 INT_SSE_REGS:8589,8589 ALL_REGS:127608,127608 MEM:0,0
  a25(r136,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10240,10240 NO_REX_SSE_REGS:10240,10240 SSE_REGS:10240,10240 MMX_REGS:12800,12800 INT_SSE_REGS:10752,10752 ALL_REGS:159744,159744 MEM:0,0
  a26(r133,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12800,12800 NO_REX_SSE_REGS:12800,12800 SSE_REGS:12800,12800 MMX_REGS:16000,16000 INT_SSE_REGS:13440,13440 ALL_REGS:199680,199680 MEM:0,0
  a27(r130,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:20000,20000 INT_SSE_REGS:16800,16800 ALL_REGS:249600,249600 MEM:0,0
  a28(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a29(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r122,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27976,27976 NO_REX_SSE_REGS:27976,27976 SSE_REGS:27976,27976 MMX_REGS:37961,37961 INT_SSE_REGS:29973,29973 ALL_REGS:519376,519376 MEM:9991,9991
  a1(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:11200,11200
  a2(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-200 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:15800,15800
  a3(r124,l0) costs: AREG:0,0 DREG:0,-1997 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19976,19976 NO_REX_SSE_REGS:19976,19976 SSE_REGS:19976,19976 MMX_REGS:24961,24961 INT_SSE_REGS:20973,20973 ALL_REGS:311376,311376 MEM:6991,6991
  a4(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1997 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19976,19976 NO_REX_SSE_REGS:19976,19976 SSE_REGS:19976,19976 MMX_REGS:24961,24961 INT_SSE_REGS:20973,20973 ALL_REGS:311376,311376 MEM:6991,6991
  a5(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23200,23200 NO_REX_SSE_REGS:23200,23200 SSE_REGS:23200,23200 MMX_REGS:31200,31200 INT_SSE_REGS:24800,24800 ALL_REGS:419200,419200 MEM:8160,8160
  a6(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-160 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29600,29600 NO_REX_SSE_REGS:29600,29600 SSE_REGS:29600,29600 MMX_REGS:41600,41600 INT_SSE_REGS:32000,32000 ALL_REGS:585600,585600 MEM:12640,12640
  a7(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18560,18560 NO_REX_SSE_REGS:18560,18560 SSE_REGS:18560,18560 MMX_REGS:24960,24960 INT_SSE_REGS:19840,19840 ALL_REGS:335360,335360 MEM:6528,6528
  a8(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-128 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23680,23680 NO_REX_SSE_REGS:23680,23680 SSE_REGS:23680,23680 MMX_REGS:33280,33280 INT_SSE_REGS:25600,25600 ALL_REGS:468480,468480 MEM:10112,10112
  a9(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14840,14840 NO_REX_SSE_REGS:14840,14840 SSE_REGS:14840,14840 MMX_REGS:19955,19955 INT_SSE_REGS:15863,15863 ALL_REGS:268080,268080 MEM:5219,5219
  a10(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-102 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18936,18936 NO_REX_SSE_REGS:18936,18936 SSE_REGS:18936,18936 MMX_REGS:26611,26611 INT_SSE_REGS:20471,20471 ALL_REGS:374576,374576 MEM:8086,8086
  a11(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11861,11861 NO_REX_SSE_REGS:11861,11861 SSE_REGS:11861,11861 MMX_REGS:15951,15951 INT_SSE_REGS:12679,12679 ALL_REGS:214316,214316 MEM:4171,4171
  a12(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-81 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15133,15133 NO_REX_SSE_REGS:15133,15133 SSE_REGS:15133,15133 MMX_REGS:21268,21268 INT_SSE_REGS:16360,16360 ALL_REGS:299388,299388 MEM:6463,6463
  a13(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9504,9504 NO_REX_SSE_REGS:9504,9504 SSE_REGS:9504,9504 MMX_REGS:12779,12779 INT_SSE_REGS:10159,10159 ALL_REGS:171664,171664 MEM:3342,3342
  a14(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-65 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12128,12128 NO_REX_SSE_REGS:12128,12128 SSE_REGS:12128,12128 MMX_REGS:17043,17043 INT_SSE_REGS:13111,13111 ALL_REGS:239888,239888 MEM:5179,5179
  a15(r113,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:7598,7598 NO_REX_SSE_REGS:7598,7598 SSE_REGS:7598,7598 MMX_REGS:10218,10218 INT_SSE_REGS:8122,8122 ALL_REGS:137288,137288 MEM:2672,2672
  a16(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-52 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9694,9694 NO_REX_SSE_REGS:9694,9694 SSE_REGS:9694,9694 MMX_REGS:13624,13624 INT_SSE_REGS:10480,10480 ALL_REGS:191784,191784 MEM:4140,4140
  a17(r117,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4738,4738 NO_REX_SSE_REGS:4738,4738 SSE_REGS:4738,4738 MMX_REGS:5993,5993 INT_SSE_REGS:4989,4989 ALL_REGS:74888,74888 MEM:1634,1634
  a18(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-41 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7762,7762 NO_REX_SSE_REGS:7762,7762 SSE_REGS:7762,7762 MMX_REGS:10907,10907 INT_SSE_REGS:8391,8391 ALL_REGS:153512,153512 MEM:3315,3315
  a19(r151,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3528,3528 NO_REX_SSE_REGS:3528,3528 SSE_REGS:3528,3528 MMX_REGS:4368,4368 INT_SSE_REGS:3696,3696 ALL_REGS:53088,53088 MEM:1344,1344
  a20(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-168 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4872,4872 NO_REX_SSE_REGS:4872,4872 SSE_REGS:4872,4872 MMX_REGS:6552,6552 INT_SSE_REGS:5208,5208 ALL_REGS:88032,88032 MEM:1848,1848
  a21(r148,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4410,4410 NO_REX_SSE_REGS:4410,4410 SSE_REGS:4410,4410 MMX_REGS:5460,5460 INT_SSE_REGS:4620,4620 ALL_REGS:66360,66360 MEM:0,0
  a22(r145,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5502,5502 NO_REX_SSE_REGS:5502,5502 SSE_REGS:5502,5502 MMX_REGS:6812,6812 INT_SSE_REGS:5764,5764 ALL_REGS:82792,82792 MEM:0,0
  a23(r142,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6888,6888 NO_REX_SSE_REGS:6888,6888 SSE_REGS:6888,6888 MMX_REGS:8528,8528 INT_SSE_REGS:7216,7216 ALL_REGS:103648,103648 MEM:0,0
  a24(r139,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8589,8589 NO_REX_SSE_REGS:8589,8589 SSE_REGS:8589,8589 MMX_REGS:10634,10634 INT_SSE_REGS:8998,8998 ALL_REGS:129244,129244 MEM:0,0
  a25(r136,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10752,10752 NO_REX_SSE_REGS:10752,10752 SSE_REGS:10752,10752 MMX_REGS:13312,13312 INT_SSE_REGS:11264,11264 ALL_REGS:161792,161792 MEM:0,0
  a26(r133,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13440,13440 NO_REX_SSE_REGS:13440,13440 SSE_REGS:13440,13440 MMX_REGS:16640,16640 INT_SSE_REGS:14080,14080 ALL_REGS:202240,202240 MEM:0,0
  a27(r130,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16800,16800 NO_REX_SSE_REGS:16800,16800 SSE_REGS:16800,16800 MMX_REGS:20800,20800 INT_SSE_REGS:17600,17600 ALL_REGS:252800,252800 MEM:0,0
  a28(r127,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a29(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 168(l0): point = 0
   Insn 165(l0): point = 3
   Insn 164(l0): point = 6
   Insn 163(l0): point = 8
   Insn 161(l0): point = 10
   Insn 154(l0): point = 13
   Insn 153(l0): point = 15
   Insn 152(l0): point = 17
   Insn 151(l0): point = 19
   Insn 150(l0): point = 21
   Insn 186(l0): point = 24
   Insn 145(l0): point = 26
   Insn 144(l0): point = 28
   Insn 143(l0): point = 30
   Insn 142(l0): point = 32
   Insn 141(l0): point = 34
   Insn 184(l0): point = 37
   Insn 136(l0): point = 39
   Insn 135(l0): point = 41
   Insn 134(l0): point = 43
   Insn 133(l0): point = 45
   Insn 132(l0): point = 47
   Insn 182(l0): point = 50
   Insn 127(l0): point = 52
   Insn 126(l0): point = 54
   Insn 125(l0): point = 56
   Insn 124(l0): point = 58
   Insn 123(l0): point = 60
   Insn 180(l0): point = 63
   Insn 118(l0): point = 65
   Insn 117(l0): point = 67
   Insn 116(l0): point = 69
   Insn 115(l0): point = 71
   Insn 114(l0): point = 73
   Insn 178(l0): point = 76
   Insn 109(l0): point = 78
   Insn 108(l0): point = 80
   Insn 107(l0): point = 82
   Insn 106(l0): point = 84
   Insn 105(l0): point = 86
   Insn 176(l0): point = 89
   Insn 100(l0): point = 91
   Insn 99(l0): point = 93
   Insn 98(l0): point = 95
   Insn 97(l0): point = 97
   Insn 96(l0): point = 99
   Insn 174(l0): point = 102
   Insn 91(l0): point = 104
   Insn 90(l0): point = 106
   Insn 89(l0): point = 108
   Insn 88(l0): point = 110
   Insn 87(l0): point = 112
   Insn 172(l0): point = 115
   Insn 82(l0): point = 117
   Insn 81(l0): point = 119
   Insn 80(l0): point = 121
   Insn 79(l0): point = 123
   Insn 78(l0): point = 125
   Insn 76(l0): point = 127
   Insn 75(l0): point = 129
   Insn 73(l0): point = 132
   Insn 72(l0): point = 134
   Insn 69(l0): point = 136
   Insn 68(l0): point = 138
   Insn 67(l0): point = 140
   Insn 65(l0): point = 143
   Insn 64(l0): point = 145
   Insn 61(l0): point = 147
   Insn 60(l0): point = 149
   Insn 59(l0): point = 151
   Insn 57(l0): point = 154
   Insn 56(l0): point = 156
   Insn 53(l0): point = 158
   Insn 52(l0): point = 160
   Insn 51(l0): point = 162
   Insn 49(l0): point = 165
   Insn 48(l0): point = 167
   Insn 45(l0): point = 169
   Insn 44(l0): point = 171
   Insn 43(l0): point = 173
   Insn 41(l0): point = 176
   Insn 40(l0): point = 178
   Insn 37(l0): point = 180
   Insn 36(l0): point = 182
   Insn 35(l0): point = 184
   Insn 33(l0): point = 187
   Insn 32(l0): point = 189
   Insn 29(l0): point = 191
   Insn 28(l0): point = 193
   Insn 27(l0): point = 195
   Insn 25(l0): point = 198
   Insn 24(l0): point = 200
   Insn 21(l0): point = 202
   Insn 20(l0): point = 204
   Insn 19(l0): point = 206
   Insn 17(l0): point = 209
   Insn 16(l0): point = 211
   Insn 13(l0): point = 213
   Insn 12(l0): point = 215
   Insn 11(l0): point = 217
   Insn 8(l0): point = 219
   Insn 5(l0): point = 221
   Insn 4(l0): point = 223
   Insn 3(l0): point = 225
   Insn 2(l0): point = 227
 a0(r122): [11..227]
 a1(r89): [201..213] [14..23]
 a2(r87): [207..217] [18..23]
 a3(r124): [124..223] [111..114] [98..101] [85..88] [72..75] [59..62] [46..49] [33..36] [20..23]
 a4(r125): [126..221] [113..114] [100..101] [87..88] [74..75] [61..62] [48..49] [35..36] [22..23]
 a5(r93): [190..202] [27..36]
 a6(r91): [196..206] [31..36]
 a7(r97): [179..191] [40..49]
 a8(r95): [185..195] [44..49]
 a9(r101): [168..180] [53..62]
 a10(r99): [174..184] [57..62]
 a11(r105): [157..169] [66..75]
 a12(r103): [163..173] [70..75]
 a13(r109): [146..158] [79..88]
 a14(r107): [152..162] [83..88]
 a15(r113): [135..147] [92..101]
 a16(r111): [141..151] [96..101]
 a17(r117): [132..136] [105..114]
 a18(r115): [130..140] [109..114]
 a19(r151): [118..127]
 a20(r119): [122..129]
 a21(r148): [137..138]
 a22(r145): [148..149]
 a23(r142): [159..160]
 a24(r139): [170..171]
 a25(r136): [181..182]
 a26(r133): [192..193]
 a27(r130): [203..204]
 a28(r127): [214..215]
 a29(r123): [218..225]
Compressing live ranges: from 230 to 52 - 22%
Ranges after the compression:
 a0(r122): [0..51]
 a1(r89): [42..47] [0..1]
 a2(r87): [46..49] [0..1]
 a3(r124): [0..51]
 a4(r125): [0..51]
 a5(r93): [38..43] [2..3]
 a6(r91): [42..45] [2..3]
 a7(r97): [34..39] [4..5]
 a8(r95): [38..41] [4..5]
 a9(r101): [30..35] [6..7]
 a10(r99): [34..37] [6..7]
 a11(r105): [26..31] [8..9]
 a12(r103): [30..33] [8..9]
 a13(r109): [22..27] [10..11]
 a14(r107): [26..29] [10..11]
 a15(r113): [18..23] [12..13]
 a16(r111): [22..25] [12..13]
 a17(r117): [18..19] [14..15]
 a18(r115): [18..21] [14..15]
 a19(r151): [16..17]
 a20(r119): [16..17]
 a21(r148): [20..21]
 a22(r145): [24..25]
 a23(r142): [28..29]
 a24(r139): [32..33]
 a25(r136): [36..37]
 a26(r133): [40..41]
 a27(r130): [44..45]
 a28(r127): [48..49]
 a29(r123): [50..51]
+++Allocating 240 bytes for conflict table (uncompressed size 240)
;; a0(r122,l0) conflicts: a1(r89,l0) a2(r87,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a6(r91,l0) a7(r97,l0) a8(r95,l0) a9(r101,l0) a10(r99,l0) a11(r105,l0) a12(r103,l0) a13(r109,l0) a14(r107,l0) a15(r113,l0) a16(r111,l0) a17(r117,l0) a18(r115,l0) a19(r151,l0) a20(r119,l0) a21(r148,l0) a22(r145,l0) a23(r142,l0) a24(r139,l0) a25(r136,l0) a26(r133,l0) a27(r130,l0) a28(r127,l0) a29(r123,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a1(r89,l0) conflicts: a2(r87,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a6(r91,l0) a27(r130,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a2(r87,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0) a28(r127,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a3(r124,l0) conflicts: a1(r89,l0) a2(r87,l0) a0(r122,l0) a4(r125,l0) a5(r93,l0) a6(r91,l0) a7(r97,l0) a8(r95,l0) a9(r101,l0) a10(r99,l0) a11(r105,l0) a12(r103,l0) a13(r109,l0) a14(r107,l0) a15(r113,l0) a16(r111,l0) a17(r117,l0) a18(r115,l0) a19(r151,l0) a20(r119,l0) a21(r148,l0) a22(r145,l0) a23(r142,l0) a24(r139,l0) a25(r136,l0) a26(r133,l0) a27(r130,l0) a28(r127,l0) a29(r123,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a4(r125,l0) conflicts: a1(r89,l0) a2(r87,l0) a0(r122,l0) a3(r124,l0) a5(r93,l0) a6(r91,l0) a7(r97,l0) a8(r95,l0) a9(r101,l0) a10(r99,l0) a11(r105,l0) a12(r103,l0) a13(r109,l0) a14(r107,l0) a15(r113,l0) a16(r111,l0) a17(r117,l0) a18(r115,l0) a19(r151,l0) a20(r119,l0) a21(r148,l0) a22(r145,l0) a23(r142,l0) a24(r139,l0) a25(r136,l0) a26(r133,l0) a27(r130,l0) a28(r127,l0) a29(r123,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r93,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0) a6(r91,l0) a7(r97,l0) a8(r95,l0) a26(r133,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a6(r91,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a27(r130,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a7(r97,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a8(r95,l0) a9(r101,l0) a10(r99,l0) a25(r136,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a8(r95,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a7(r97,l0) a26(r133,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a9(r101,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a7(r97,l0) a10(r99,l0) a11(r105,l0) a12(r103,l0) a24(r139,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a10(r99,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a7(r97,l0) a9(r101,l0) a25(r136,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a11(r105,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a9(r101,l0) a12(r103,l0) a13(r109,l0) a14(r107,l0) a23(r142,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a12(r103,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a9(r101,l0) a11(r105,l0) a24(r139,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a13(r109,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a11(r105,l0) a14(r107,l0) a15(r113,l0) a16(r111,l0) a22(r145,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a14(r107,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a11(r105,l0) a13(r109,l0) a23(r142,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a15(r113,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a13(r109,l0) a16(r111,l0) a17(r117,l0) a18(r115,l0) a21(r148,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a16(r111,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a13(r109,l0) a15(r113,l0) a22(r145,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a17(r117,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a15(r113,l0) a18(r115,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a18(r115,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a15(r113,l0) a17(r117,l0) a21(r148,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a19(r151,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a20(r119,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a20(r119,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a19(r151,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a21(r148,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a15(r113,l0) a18(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r145,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a13(r109,l0) a16(r111,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r142,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a11(r105,l0) a14(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r139,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a9(r101,l0) a12(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r136,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a7(r97,l0) a10(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r133,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0) a5(r93,l0) a8(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r130,l0) conflicts: a1(r89,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0) a6(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r127,l0) conflicts: a2(r87,l0) a0(r122,l0) a3(r124,l0) a4(r125,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r123,l0) conflicts: a0(r122,l0) a3(r124,l0) a4(r125,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

  pref0:a4(r125)<-hr2@2995
  pref1:a3(r124)<-hr1@2995
  pref2:a29(r123)<-hr4@1500
  pref3:a0(r122)<-hr0@1500
  pref4:a20(r119)<-hr4@252
  pref5:a18(r115)<-hr4@61
  pref6:a16(r111)<-hr4@78
  pref7:a14(r107)<-hr4@97
  pref8:a12(r103)<-hr4@121
  pref9:a10(r99)<-hr4@153
  pref10:a8(r95)<-hr4@192
  pref11:a6(r91)<-hr4@240
  pref12:a2(r87)<-hr4@300
  pref13:a0(r122)<-hr5@1997
  regions=1, blocks=22, points=52
    allocnos=30 (big 0), copies=0, conflicts=0, ranges=46

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r122 1r89 2r87 3r124 4r125 5r93 6r91 7r97 8r95 9r101 10r99 11r105 12r103 13r109 14r107 15r113 16r111 17r117 18r115 19r151 20r119 21r148 22r145 23r142 24r139 25r136 26r133 27r130 28r127 29r123
    modified regnos: 87 89 91 93 95 97 99 101 103 105 107 109 111 113 115 117 119 122 123 124 125 127 130 133 136 139 142 145 148 151
    border:
    Pressure: GENERAL_REGS=6
 Removing pref13:hr5@1997
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@25964
          2:( 0 1 3-6 37-44)@25964
            3:( 0 3-6 37-44)@163148
              4:( 0 3 6 37-44)@108522
      Allocno a0r122 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a2r87 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a3r124 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 37-44, node:  0 1 3-6 37-44 (confl regs =  2 7-36 45-79)
      Allocno a4r125 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r93 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a6r91 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a7r97 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a8r95 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a9r101 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a10r99 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a11r105 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a12r103 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a13r109 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a14r107 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a15r113 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a16r111 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a17r117 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a18r115 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a19r151 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a20r119 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a21r148 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a22r145 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a23r142 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a24r139 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a25r136 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a26r133 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r130 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a28r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a29r123 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Pushing a19(r151,l0)(cost 0)
      Pushing a21(r148,l0)(cost 0)
      Pushing a17(r117,l0)(cost 0)
      Pushing a20(r119,l0)(cost 0)
      Pushing a22(r145,l0)(cost 0)
      Pushing a18(r115,l0)(cost 0)
      Pushing a23(r142,l0)(cost 0)
      Pushing a16(r111,l0)(cost 0)
      Pushing a15(r113,l0)(cost 0)
      Pushing a24(r139,l0)(cost 0)
      Pushing a14(r107,l0)(cost 0)
      Pushing a13(r109,l0)(cost 0)
      Pushing a25(r136,l0)(cost 0)
      Pushing a12(r103,l0)(cost 0)
      Pushing a11(r105,l0)(cost 0)
        Making a4(r125,l0) colorable
      Pushing a26(r133,l0)(cost 0)
        Making a3(r124,l0) colorable
      Pushing a10(r99,l0)(cost 0)
      Pushing a9(r101,l0)(cost 0)
      Pushing a27(r130,l0)(cost 0)
        Making a0(r122,l0) colorable
      Pushing a8(r95,l0)(cost 0)
      Pushing a7(r97,l0)(cost 0)
      Pushing a4(r125,l0)(cost 12982)
      Pushing a3(r124,l0)(cost 12982)
      Pushing a29(r123,l0)(cost 0)
      Pushing a28(r127,l0)(cost 0)
      Pushing a6(r91,l0)(cost 0)
      Pushing a5(r93,l0)(cost 0)
      Pushing a0(r122,l0)(cost 9991)
      Pushing a2(r87,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Popping a1(r89,l0)  -- assign reg 37
      Popping a2(r87,l0)  -- assign reg 4
      Popping a0(r122,l0)  -- assign reg 3
      Popping a5(r93,l0)  -- assign reg 0
      Popping a6(r91,l0)  -- assign reg 4
      Popping a28(r127,l0)  -- assign reg 0
      Popping a29(r123,l0)  -- assign reg 4
      Popping a3(r124,l0)  -- assign reg 1
      Popping a4(r125,l0)  -- assign reg 2
      Popping a7(r97,l0)  -- assign reg 37
      Popping a8(r95,l0)  -- assign reg 4
      Popping a27(r130,l0)  -- assign reg 0
      Popping a9(r101,l0)  -- assign reg 0
      Popping a10(r99,l0)  -- assign reg 4
      Popping a26(r133,l0)  -- assign reg 5
      Popping a11(r105,l0)  -- assign reg 37
      Popping a12(r103,l0)  -- assign reg 4
      Popping a25(r136,l0)  -- assign reg 0
      Popping a13(r109,l0)  -- assign reg 0
      Popping a14(r107,l0)  -- assign reg 4
      Popping a24(r139,l0)  -- assign reg 5
      Popping a15(r113,l0)  -- assign reg 37
      Popping a16(r111,l0)  -- assign reg 4
      Popping a23(r142,l0)  -- assign reg 0
      Popping a18(r115,l0)  -- assign reg 4
      Popping a22(r145,l0)  -- assign reg 5
      Popping a20(r119,l0)  -- assign reg 4
      Popping a17(r117,l0)  -- assign reg 0
      Popping a21(r148,l0)  -- assign reg 0
      Popping a19(r151,l0)  -- assign reg 0
Disposition:
    2:r87  l0     4    1:r89  l0    37    6:r91  l0     4    5:r93  l0     0
    8:r95  l0     4    7:r97  l0    37   10:r99  l0     4    9:r101 l0     0
   12:r103 l0     4   11:r105 l0    37   14:r107 l0     4   13:r109 l0     0
   16:r111 l0     4   15:r113 l0    37   18:r115 l0     4   17:r117 l0     0
   20:r119 l0     4    0:r122 l0     3   29:r123 l0     4    3:r124 l0     1
    4:r125 l0     2   28:r127 l0     0   27:r130 l0     0   26:r133 l0     5
   25:r136 l0     0   24:r139 l0     5   23:r142 l0     0   22:r145 l0     5
   21:r148 l0     0   19:r151 l0     0
New iteration of spill/restore move
+++Costs: overall -17973, reg -17973, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual leveldb::Status leveldb::EnvWrapper::NewWritableFile(const string&, leveldb::WritableFile**)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={12d,2u} r1={20d,10u} r2={20d,10u} r4={20d,10u} r5={20d,10u} r6={1d,21u} r7={1d,31u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,20u} r17={20d,9u} r18={10d} r19={10d} r20={1d,23u} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r87={1d,3u,1e} r89={1d,3u} r91={1d,3u,1e} r93={1d,3u} r95={1d,3u,1e} r97={1d,3u} r99={1d,3u,1e} r101={1d,3u} r103={1d,3u,1e} r105={1d,3u} r107={1d,3u,1e} r109={1d,3u} r111={1d,3u,1e} r113={1d,3u} r115={1d,3u,1e} r117={1d,2u} r119={1d,2u} r122={1d,10u} r123={1d,1u} r124={1d,9u} r125={1d,9u} r127={1d,1u} r130={1d,1u} r133={1d,1u} r136={1d,1u} r139={1d,1u} r142={1d,1u} r145={1d,1u} r148={1d,1u} r151={1d,1u} 
;;    total ref usage 1057{816d,233u,8e} in 105{95 regular + 10 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 89 122 123 124 125 127
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/f:DI 122 [ <retval> ])
        (reg:DI 5 di [ .result_ptr ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/f:DI 123 [ this ])
        (reg:DI 4 si [ this ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ this ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 124 [ f ])
        (reg:DI 1 dx [ f ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ f ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 125 [ r ])
        (reg:DI 2 cx [ r ])) ./include/leveldb/env.h:289 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ r ])
        (nil)))
(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 6 11 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.51341+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:289 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 11 8 12 2 (set (reg/f:DI 87 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 123 [ this ])
                (const_int 8 [0x8])) [3 this_2(D)->target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ this ])
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 127 [ _3->_vptr.Env ])
        (mem/f:DI (reg/f:DI 87 [ D.51337 ]) [3 _3->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 87 [ D.51337 ]) [3 _3->_vptr.Env+0 S8 A64])
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 89 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _3->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_4 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ _3->_vptr.Env ])
        (nil)))
(note 14 13 16 2 NOTE_INSN_DELETED)
(insn 16 14 17 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 89 [ D.51339 ])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 17 16 18 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 148)
;;  succ:       3 [80.0%]  (FALLTHRU)
;;              18 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124 125

;; basic block 3, loop depth 0, count 0, freq 8000, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [80.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  def 	 17 [flags] 91 93 130
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 3 (set (reg/f:DI 91 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_3].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51337 ])
        (nil)))
(insn 20 19 21 3 (set (reg/f:DI 130 [ _12->_vptr.Env ])
        (mem/f:DI (reg/f:DI 91 [ D.51337 ]) [3 _12->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 91 [ D.51337 ]) [3 _12->_vptr.Env+0 S8 A64])
        (nil)))
(insn 21 20 24 3 (set (reg/f:DI 93 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 130 [ _12->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_13 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130 [ _12->_vptr.Env ])
        (nil)))
(insn 24 21 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 93 [ D.51339 ])
            (reg/f:DI 89 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.51339 ])
        (nil)))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 139)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 139)
;;  succ:       4 [80.0%]  (FALLTHRU)
;;              17 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124 125

;; basic block 4, loop depth 0, count 0, freq 6400, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [80.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93
;; lr  def 	 17 [flags] 95 97 133
(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 4 (set (reg/f:DI 95 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 91 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_12].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.51337 ])
        (nil)))
(insn 28 27 29 4 (set (reg/f:DI 133 [ _17->_vptr.Env ])
        (mem/f:DI (reg/f:DI 95 [ D.51337 ]) [3 _17->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 95 [ D.51337 ]) [3 _17->_vptr.Env+0 S8 A64])
        (nil)))
(insn 29 28 32 4 (set (reg/f:DI 97 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 133 [ _17->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_18 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 133 [ _17->_vptr.Env ])
        (nil)))
(insn 32 29 33 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ D.51339 ])
            (reg/f:DI 93 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.51339 ])
        (nil)))
(jump_insn 33 32 34 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 130)
;;  succ:       5 [80.0%]  (FALLTHRU)
;;              16 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124 125

;; basic block 5, loop depth 0, count 0, freq 5120, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [80.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(6){ }u36(7){ }u37(16){ }u38(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97
;; lr  def 	 17 [flags] 99 101 136
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg/f:DI 99 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_17].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.51337 ])
        (nil)))
(insn 36 35 37 5 (set (reg/f:DI 136 [ _22->_vptr.Env ])
        (mem/f:DI (reg/f:DI 99 [ D.51337 ]) [3 _22->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 99 [ D.51337 ]) [3 _22->_vptr.Env+0 S8 A64])
        (nil)))
(insn 37 36 40 5 (set (reg/f:DI 101 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 136 [ _22->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_23 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ _22->_vptr.Env ])
        (nil)))
(insn 40 37 41 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 101 [ D.51339 ])
            (reg/f:DI 97 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.51339 ])
        (nil)))
(jump_insn 41 40 42 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 121)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 121)
;;  succ:       6 [80.0%]  (FALLTHRU)
;;              15 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124 125

;; basic block 6, loop depth 0, count 0, freq 4096, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 [80.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101
;; lr  def 	 17 [flags] 103 105 139
(note 42 41 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 6 (set (reg/f:DI 103 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 99 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_22].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.51337 ])
        (nil)))
(insn 44 43 45 6 (set (reg/f:DI 139 [ _27->_vptr.Env ])
        (mem/f:DI (reg/f:DI 103 [ D.51337 ]) [3 _27->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 103 [ D.51337 ]) [3 _27->_vptr.Env+0 S8 A64])
        (nil)))
(insn 45 44 48 6 (set (reg/f:DI 105 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 139 [ _27->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_28 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 139 [ _27->_vptr.Env ])
        (nil)))
(insn 48 45 49 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 105 [ D.51339 ])
            (reg/f:DI 101 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.51339 ])
        (nil)))
(jump_insn 49 48 50 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 112)
;;  succ:       7 [80.1%]  (FALLTHRU)
;;              14 [19.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124 125

;; basic block 7, loop depth 0, count 0, freq 3281, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [80.1%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105
;; lr  def 	 17 [flags] 107 109 142
(note 50 49 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 7 (set (reg/f:DI 107 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_27].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.51337 ])
        (nil)))
(insn 52 51 53 7 (set (reg/f:DI 142 [ _32->_vptr.Env ])
        (mem/f:DI (reg/f:DI 107 [ D.51337 ]) [3 _32->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 107 [ D.51337 ]) [3 _32->_vptr.Env+0 S8 A64])
        (nil)))
(insn 53 52 56 7 (set (reg/f:DI 109 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 142 [ _32->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_33 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 142 [ _32->_vptr.Env ])
        (nil)))
(insn 56 53 57 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 109 [ D.51339 ])
            (reg/f:DI 105 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.51339 ])
        (nil)))
(jump_insn 57 56 58 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1990 (nil)))
 -> 103)
;;  succ:       8 [80.1%]  (FALLTHRU)
;;              13 [19.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124 125

;; basic block 8, loop depth 0, count 0, freq 2628, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [80.1%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109
;; lr  def 	 17 [flags] 111 113 145
(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 8 (set (reg/f:DI 111 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_32].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.51337 ])
        (nil)))
(insn 60 59 61 8 (set (reg/f:DI 145 [ _37->_vptr.Env ])
        (mem/f:DI (reg/f:DI 111 [ D.51337 ]) [3 _37->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 111 [ D.51337 ]) [3 _37->_vptr.Env+0 S8 A64])
        (nil)))
(insn 61 60 64 8 (set (reg/f:DI 113 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 145 [ _37->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_38 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 145 [ _37->_vptr.Env ])
        (nil)))
(insn 64 61 65 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 113 [ D.51339 ])
            (reg/f:DI 109 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.51339 ])
        (nil)))
(jump_insn 65 64 66 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 94)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              12 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124 125

;; basic block 9, loop depth 0, count 0, freq 2102, maybe hot
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113
;; lr  def 	 17 [flags] 115 117 148
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 68 9 (set (reg/f:DI 115 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 111 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_37].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.51337 ])
        (nil)))
(insn 68 67 69 9 (set (reg/f:DI 148 [ _42->_vptr.Env ])
        (mem/f:DI (reg/f:DI 115 [ D.51337 ]) [3 _42->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 115 [ D.51337 ]) [3 _42->_vptr.Env+0 S8 A64])
        (nil)))
(insn 69 68 72 9 (set (reg/f:DI 117 [ D.51339 ])
        (mem/f:DI (plus:DI (reg/f:DI 148 [ _42->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_43 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ _42->_vptr.Env ])
        (nil)))
(insn 72 69 73 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 117 [ D.51339 ])
            (reg/f:DI 113 [ D.51339 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.51339 ])
        (nil)))
(jump_insn 73 72 74 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1980 (nil)))
 -> 85)
;;  succ:       10 [80.2%]  (FALLTHRU)
;;              11 [19.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124 125

;; basic block 10, loop depth 0, count 0, freq 1686, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [80.2%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 119 151
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 10 (set (reg/f:DI 119 [ D.51337 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ D.51337 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_42].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.51337 ])
        (nil)))
(insn 76 75 77 10 (set (reg/f:DI 151 [ _47->_vptr.Env ])
        (mem/f:DI (reg/f:DI 119 [ D.51337 ]) [3 _47->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 77 76 78 10 NOTE_INSN_DELETED)
(insn 78 77 79 10 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 79 78 80 10 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 80 79 81 10 (set (reg:DI 4 si)
        (reg/f:DI 119 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 119 [ D.51337 ])
        (nil)))
(insn 81 80 82 10 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 82 81 172 10 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 151 [ _47->_vptr.Env ])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_48 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_49;(struct Env)_47->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 151 [ _47->_vptr.Env ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 172 82 173 10 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 173 172 85)
;; basic block 11, loop depth 0, count 0, freq 416, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9 [19.8%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 115 117 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 85 173 86 11 23 "" [1 uses])
(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 11 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 88 87 89 11 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 89 88 90 11 (set (reg:DI 4 si)
        (reg/f:DI 115 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ D.51337 ])
        (nil)))
(insn 90 89 91 11 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 91 90 174 11 (call (mem:QI (reg/f:DI 117 [ D.51339 ]) [0 *OBJ_TYPE_REF(_44;(struct Env)_42->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 117 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 174 91 175 11 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 175 174 94)
;; basic block 12, loop depth 0, count 0, freq 526, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 [20.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u116(6){ }u117(7){ }u118(16){ }u119(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 111 113 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 94 175 95 12 22 "" [1 uses])
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 97 96 98 12 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 98 97 99 12 (set (reg:DI 4 si)
        (reg/f:DI 111 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ D.51337 ])
        (nil)))
(insn 99 98 100 12 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 100 99 176 12 (call (mem:QI (reg/f:DI 113 [ D.51339 ]) [0 *OBJ_TYPE_REF(_39;(struct Env)_37->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 113 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 176 100 177 12 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 177 176 103)
;; basic block 13, loop depth 0, count 0, freq 653, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       7 [19.9%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u130(6){ }u131(7){ }u132(16){ }u133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 107 109 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 103 177 104 13 21 "" [1 uses])
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 13 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 106 105 107 13 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 107 106 108 13 (set (reg:DI 4 si)
        (reg/f:DI 107 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.51337 ])
        (nil)))
(insn 108 107 109 13 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 109 108 178 13 (call (mem:QI (reg/f:DI 109 [ D.51339 ]) [0 *OBJ_TYPE_REF(_34;(struct Env)_32->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 178 109 179 13 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 179 178 112)
;; basic block 14, loop depth 0, count 0, freq 815, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       6 [19.9%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u144(6){ }u145(7){ }u146(16){ }u147(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 105 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 112 179 113 14 20 "" [1 uses])
(note 113 112 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 14 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 115 114 116 14 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 116 115 117 14 (set (reg:DI 4 si)
        (reg/f:DI 103 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.51337 ])
        (nil)))
(insn 117 116 118 14 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 118 117 180 14 (call (mem:QI (reg/f:DI 105 [ D.51339 ]) [0 *OBJ_TYPE_REF(_29;(struct Env)_27->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 180 118 181 14 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 181 180 121)
;; basic block 15, loop depth 0, count 0, freq 1024, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       5 [20.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u158(6){ }u159(7){ }u160(16){ }u161(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99 101 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 121 181 122 15 19 "" [1 uses])
(note 122 121 123 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 15 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 124 123 125 15 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 125 124 126 15 (set (reg:DI 4 si)
        (reg/f:DI 99 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.51337 ])
        (nil)))
(insn 126 125 127 15 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 127 126 182 15 (call (mem:QI (reg/f:DI 101 [ D.51339 ]) [0 *OBJ_TYPE_REF(_24;(struct Env)_22->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 182 127 183 15 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 183 182 130)
;; basic block 16, loop depth 0, count 0, freq 1280, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       4 [20.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u172(6){ }u173(7){ }u174(16){ }u175(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 95 97 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 130 183 131 16 18 "" [1 uses])
(note 131 130 132 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 132 131 133 16 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 133 132 134 16 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 134 133 135 16 (set (reg:DI 4 si)
        (reg/f:DI 95 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.51337 ])
        (nil)))
(insn 135 134 136 16 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 136 135 184 16 (call (mem:QI (reg/f:DI 97 [ D.51339 ]) [0 *OBJ_TYPE_REF(_19;(struct Env)_17->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 184 136 185 16 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 185 184 139)
;; basic block 17, loop depth 0, count 0, freq 1600, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       3 [20.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u186(6){ }u187(7){ }u188(16){ }u189(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 93 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 139 185 140 17 17 "" [1 uses])
(note 140 139 141 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 17 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 142 141 143 17 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 143 142 144 17 (set (reg:DI 4 si)
        (reg/f:DI 91 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.51337 ])
        (nil)))
(insn 144 143 145 17 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 145 144 186 17 (call (mem:QI (reg/f:DI 93 [ D.51339 ]) [0 *OBJ_TYPE_REF(_14;(struct Env)_12->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(jump_insn 186 145 187 17 (set (pc)
        (label_ref 159)) 654 {jump}
     (nil)
 -> 159)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

(barrier 187 186 148)
;; basic block 18, loop depth 0, count 0, freq 2000, maybe hot
;;  prev block 17, next block 19, flags: (RTL)
;;  pred:       2 [20.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u200(6){ }u201(7){ }u202(16){ }u203(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124 125
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 122 124 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 148 187 149 18 16 "" [1 uses])
(note 149 148 150 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 18 (set (reg:DI 2 cx)
        (reg/v/f:DI 125 [ r ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 125 [ r ])
        (nil)))
(insn 151 150 152 18 (set (reg:DI 1 dx)
        (reg/v/f:DI 124 [ f ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 124 [ f ])
        (nil)))
(insn 152 151 153 18 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.51337 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51337 ])
        (nil)))
(insn 153 152 154 18 (set (reg:DI 5 di)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(call_insn 154 153 159 18 (call (mem:QI (reg/f:DI 89 [ D.51339 ]) [0 *OBJ_TYPE_REF(_5;(struct Env)_3->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.51339 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       19 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122

;; basic block 19, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 18, next block 20, flags: (RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
;;              10 [100.0%] 
;;              11 [100.0%] 
;;              12 [100.0%] 
;;              13 [100.0%] 
;;              14 [100.0%] 
;;              15 [100.0%] 
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 0 [ax] 17 [flags]
(code_label 159 154 169 19 15 "" [8 uses])
(note 169 159 161 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 161 169 163 19 (set (reg/i:DI 0 ax)
        (reg/f:DI 122 [ <retval> ])) ./include/leveldb/env.h:291 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ <retval> ])
        (nil)))
(insn 163 161 164 19 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.51341+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) ./include/leveldb/env.h:291 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 164 163 170 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) ./include/leveldb/env.h:291 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 167)
;;  succ:       21 [100.0%] 
;;              20 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 4
;;  prev block 19, next block 21, flags: (RTL)
;;  pred:       19 [0.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u221(6){ }u222(7){ }u223(16){ }u224(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 170 164 165 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(call_insn 165 170 166 20 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:291 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 166 165 167)
;; basic block 21, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 20, next block 1, flags: (RTL)
;;  pred:       19 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u226(6){ }u227(7){ }u228(16){ }u229(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 167 166 171 21 25 "" [1 uses])
(note 171 167 168 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 168 171 0 21 (use (reg/i:DI 0 ax)) ./include/leveldb/env.h:291 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*) (_ZN7leveldb10BuildTableERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPNS_3EnvERKNS_7OptionsEPNS_10TableCacheEPNS_8IteratorEPNS_12FileMetaDataE, funcdef_no=2151, decl_uid=23608, cgraph_uid=775, symbol_order=787)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 322.
deleting insn with uid = 318.
rescanning insn with uid = 279.
deleting insn with uid = 278.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 205 n_edges 315 count 212 (    1)
Reg 253 uninteresting (no unique first use)
Reg 254: def dominates all uses has unique first use
Reg 256: def dominates all uses has unique first use
Reg 257: def dominates all uses has unique first use
Ignoring reg 261, has equiv memory
Ignoring reg 264, has equiv memory
Ignoring reg 265, has equiv memory
Reg 94 uninteresting
Ignoring reg 267, has equiv memory
Reg 96 uninteresting
Ignoring reg 270, has equiv memory
Reg 173 uninteresting
Ignoring reg 273, has equiv memory
Reg 177 uninteresting
Ignoring reg 276, has equiv memory
Reg 181 uninteresting
Ignoring reg 279, has equiv memory
Reg 185 uninteresting
Ignoring reg 282, has equiv memory
Reg 189 uninteresting
Ignoring reg 285, has equiv memory
Reg 193 uninteresting
Ignoring reg 288, has equiv memory
Reg 197 uninteresting
Ignoring reg 291, has equiv memory
Reg 201 uninteresting
Reg 203: local to bb 16 def dominates all uses has unique first use
Reg 297: local to bb 16 def dominates all uses has unique first use
Reg 206 uninteresting (no unique first use)
Reg 100 uninteresting (no unique first use)
Ignoring reg 328, has equiv memory
Reg 444: local to bb 50 def dominates all uses has unique first use
Reg 445: local to bb 50 def dominates all uses has unique first use
Ignoring reg 330, has equiv memory
Ignoring reg 332, has equiv memory
Reg 107 uninteresting
Ignoring reg 334, has equiv memory
Ignoring reg 336, has equiv memory
Ignoring reg 340, has equiv memory
Ignoring reg 342, has equiv memory
Ignoring reg 344, has equiv memory
Ignoring reg 348, has equiv memory
Reg 97: def dominates all uses has unique first use
Ignoring reg 119, has equiv memory
Ignoring reg 122, has equiv memory
Reg 352: local to bb 76 def dominates all uses has unique first use
Reg 116 uninteresting (no unique first use)
Ignoring reg 129, has equiv memory
Reg 355: local to bb 88 def dominates all uses has unique first use
Reg 125 uninteresting (no unique first use)
Reg 135 uninteresting
Reg 357: local to bb 100 def dominates all uses has unique first use
Ignoring reg 139, has equiv memory
Ignoring reg 140, has equiv memory
Ignoring reg 361, has equiv memory
Reg 132 uninteresting (no unique first use)
Reg 363: local to bb 113 def dominates all uses has unique first use
Ignoring reg 366, has equiv memory
Reg 151 uninteresting
Reg 369: local to bb 116 def dominates all uses has unique first use
Reg 144: def dominates all uses has unique first use
Ignoring reg 371, has equiv memory
Reg 216 uninteresting
Ignoring reg 374, has equiv memory
Reg 220 uninteresting
Ignoring reg 377, has equiv memory
Reg 224 uninteresting
Ignoring reg 380, has equiv memory
Reg 228 uninteresting
Ignoring reg 383, has equiv memory
Reg 232 uninteresting
Ignoring reg 386, has equiv memory
Reg 236 uninteresting
Ignoring reg 389, has equiv memory
Reg 240 uninteresting
Ignoring reg 392, has equiv memory
Reg 244 uninteresting
Reg 246: local to bb 138 def dominates all uses has unique first use
Reg 397: local to bb 138 def dominates all uses has unique first use
Reg 166 uninteresting
Reg 160: def dominates all uses has unique first use
Reg 421: def dominates all uses has unique first use
Reg 161 uninteresting
Reg 424: def dominates all uses has unique first use
Reg 426: def dominates all uses has unique first use
Reg 148 uninteresting
Reg 428: def dominates all uses has unique first use
Reg 120 uninteresting
Reg 430: def dominates all uses has unique first use
Reg 127 uninteresting
Reg 432: def dominates all uses has unique first use
Reg 134 uninteresting
Reg 434: def dominates all uses has unique first use
Reg 147 uninteresting
Reg 156: def dominates all uses has unique first use
Reg 162 uninteresting
Ignoring reg 440, has equiv memory
Reg 159 uninteresting
Reg 97 not local to one basic block
Reg 144 not local to one basic block
Reg 156 not local to one basic block
Reg 160 not local to one basic block
Found def insn 112 for 203 to be not moveable
Found def insn 705 for 246 to be not moveable
Reg 254 not local to one basic block
Reg 256 not local to one basic block
Reg 257 not local to one basic block
Found def insn 116 for 297 to be not moveable
Found def insn 420 for 352 to be not moveable
Found def insn 463 for 355 to be not moveable
Found def insn 506 for 357 to be not moveable
Found def insn 564 for 363 to be not moveable
Found def insn 592 for 369 to be not moveable
Found def insn 708 for 397 to be not moveable
Reg 421 not local to one basic block
Reg 424 not local to one basic block
Reg 426 not local to one basic block
Reg 428 not local to one basic block
Reg 430 not local to one basic block
Reg 432 not local to one basic block
Reg 434 not local to one basic block
Found def insn 1087 for 444 to be not moveable
Found def insn 1088 for 445 to be not moveable
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 52, latch 59
;;  depth 1, outer 0
;;  nodes: 52 59 58 57 56 55 54 53
;; 2 succs { 192 3 }
;; 3 succs { 192 4 }
;; 4 succs { 188 5 }
;; 5 succs { 7 6 }
;; 6 succs { 114 }
;; 7 succs { 8 35 }
;; 8 succs { 9 33 }
;; 9 succs { 10 31 }
;; 10 succs { 11 29 }
;; 11 succs { 12 27 }
;; 12 succs { 13 25 }
;; 13 succs { 14 23 }
;; 14 succs { 15 21 }
;; 15 succs { 16 19 }
;; 16 succs { 17 188 }
;; 17 succs { 37 18 }
;; 18 succs { 44 }
;; 19 succs { 188 20 }
;; 20 succs { 17 }
;; 21 succs { 188 22 }
;; 22 succs { 17 }
;; 23 succs { 188 24 }
;; 24 succs { 17 }
;; 25 succs { 188 26 }
;; 26 succs { 17 }
;; 27 succs { 188 28 }
;; 28 succs { 17 }
;; 29 succs { 188 30 }
;; 30 succs { 17 }
;; 31 succs { 188 32 }
;; 32 succs { 17 }
;; 33 succs { 188 34 }
;; 34 succs { 17 }
;; 35 succs { 188 36 }
;; 36 succs { 17 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 42 }
;; 40 succs { 162 41 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 160 47 }
;; 47 succs { 188 48 }
;; 48 succs { 166 49 }
;; 49 succs { 188 50 }
;; 50 succs { 51 188 }
;; 51 succs { 52 }
;; 52 succs { 188 53 }
;; 53 succs { 54 60 }
;; 54 succs { 188 55 }
;; 55 succs { 56 188 }
;; 56 succs { 188 57 }
;; 57 succs { 188 58 }
;; 58 succs { 188 59 }
;; 59 succs { 52 }
;; 60 succs { 61 74 }
;; 61 succs { 188 62 }
;; 62 succs { 63 70 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 68 }
;; 66 succs { 168 67 }
;; 67 succs { 69 }
;; 68 succs { 69 }
;; 69 succs { 70 }
;; 70 succs { 71 196 }
;; 71 succs { 196 }
;; 72 succs { 188 73 }
;; 73 succs { 75 }
;; 74 succs { 188 75 }
;; 75 succs { 76 99 }
;; 76 succs { 188 77 }
;; 77 succs { 79 78 }
;; 78 succs { 85 }
;; 79 succs { 80 81 }
;; 80 succs { 81 }
;; 81 succs { 82 84 }
;; 82 succs { 172 83 }
;; 83 succs { 84 }
;; 84 succs { 85 }
;; 85 succs { 86 87 }
;; 86 succs { 87 }
;; 87 succs { 88 99 }
;; 88 succs { 188 89 }
;; 89 succs { 91 90 }
;; 90 succs { 97 }
;; 91 succs { 92 93 }
;; 92 succs { 93 }
;; 93 succs { 94 96 }
;; 94 succs { 176 95 }
;; 95 succs { 96 }
;; 96 succs { 97 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 102 114 }
;; 102 succs { 188 103 }
;; 103 succs { 188 104 }
;; 104 succs { 106 105 }
;; 105 succs { 198 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 109 111 }
;; 109 succs { 180 110 }
;; 110 succs { 111 }
;; 111 succs { 198 }
;; 112 succs { 113 }
;; 113 succs { 114 }
;; 114 succs { 188 115 }
;; 115 succs { 116 127 }
;; 116 succs { 188 117 }
;; 117 succs { 118 125 }
;; 118 succs { 119 120 }
;; 119 succs { 120 }
;; 120 succs { 121 123 }
;; 121 succs { 184 122 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 }
;; 125 succs { 126 127 }
;; 126 succs { 127 }
;; 127 succs { 128 200 }
;; 128 succs { 160 129 }
;; 129 succs { 200 }
;; 130 succs { 131 155 }
;; 131 succs { 132 153 }
;; 132 succs { 133 151 }
;; 133 succs { 134 149 }
;; 134 succs { 135 147 }
;; 135 succs { 136 145 }
;; 136 succs { 137 143 }
;; 137 succs { 138 141 }
;; 138 succs { 139 188 }
;; 139 succs { 159 140 }
;; 140 succs { 160 }
;; 141 succs { 188 142 }
;; 142 succs { 139 }
;; 143 succs { 188 144 }
;; 144 succs { 139 }
;; 145 succs { 188 146 }
;; 146 succs { 139 }
;; 147 succs { 188 148 }
;; 148 succs { 139 }
;; 149 succs { 188 150 }
;; 150 succs { 139 }
;; 151 succs { 188 152 }
;; 152 succs { 139 }
;; 153 succs { 188 154 }
;; 154 succs { 139 }
;; 155 succs { 188 156 }
;; 156 succs { 139 }
;; 157 succs { 188 158 }
;; 158 succs { 139 }
;; 159 succs { 160 }
;; 160 succs { 161 202 }
;; 161 succs { 202 }
;; 162 succs { 163 }
;; 163 succs { 164 165 }
;; 164 succs { 165 }
;; 165 succs { 189 }
;; 166 succs { 167 }
;; 167 succs { 189 }
;; 168 succs { 169 }
;; 169 succs { 170 171 }
;; 170 succs { 171 }
;; 171 succs { 189 }
;; 172 succs { 173 }
;; 173 succs { 174 175 }
;; 174 succs { 175 }
;; 175 succs { 189 }
;; 176 succs { 177 }
;; 177 succs { 178 179 }
;; 178 succs { 179 }
;; 179 succs { 189 }
;; 180 succs { 181 }
;; 181 succs { 182 183 }
;; 182 succs { 183 }
;; 183 succs { 189 }
;; 184 succs { 185 }
;; 185 succs { 186 187 }
;; 186 succs { 187 }
;; 187 succs { 189 }
;; 188 succs { 189 }
;; 189 succs { 190 191 }
;; 190 succs { 191 }
;; 191 succs { 193 }
;; 192 succs { 193 }
;; 193 succs { 194 195 }
;; 194 succs { 195 }
;; 195 succs { }
;; 196 succs { 197 75 }
;; 197 succs { 72 }
;; 198 succs { 112 199 }
;; 199 succs { 113 }
;; 200 succs { 130 201 }
;; 201 succs { 157 }
;; 202 succs { 204 203 }
;; 203 succs { }
;; 204 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 119: (insn_list:REG_DEP_TRUE 398 (nil))
init_insns for 122: (insn_list:REG_DEP_TRUE 418 (nil))
init_insns for 129: (insn_list:REG_DEP_TRUE 461 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 516 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 517 (nil))
init_insns for 261: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 264: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 265: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 267: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 270: (insn_list:REG_DEP_TRUE 49 (nil))
init_insns for 273: (insn_list:REG_DEP_TRUE 57 (nil))
init_insns for 276: (insn_list:REG_DEP_TRUE 65 (nil))
init_insns for 279: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 282: (insn_list:REG_DEP_TRUE 81 (nil))
init_insns for 285: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 288: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 291: (insn_list:REG_DEP_TRUE 105 (nil))
init_insns for 328: (insn_list:REG_DEP_TRUE 284 (nil))
init_insns for 330: (insn_list:REG_DEP_TRUE 290 (nil))
init_insns for 332: (insn_list:REG_DEP_TRUE 300 (nil))
init_insns for 334: (insn_list:REG_DEP_TRUE 309 (nil))
init_insns for 336: (insn_list:REG_DEP_TRUE 315 (nil))
init_insns for 340: (insn_list:REG_DEP_TRUE 319 (nil))
init_insns for 342: (insn_list:REG_DEP_TRUE 328 (nil))
init_insns for 344: (insn_list:REG_DEP_TRUE 334 (nil))
init_insns for 348: (insn_list:REG_DEP_TRUE 343 (nil))
init_insns for 361: (insn_list:REG_DEP_TRUE 531 (nil))
init_insns for 366: (insn_list:REG_DEP_TRUE 579 (nil))
init_insns for 371: (insn_list:REG_DEP_TRUE 642 (nil))
init_insns for 374: (insn_list:REG_DEP_TRUE 650 (nil))
init_insns for 377: (insn_list:REG_DEP_TRUE 658 (nil))
init_insns for 380: (insn_list:REG_DEP_TRUE 666 (nil))
init_insns for 383: (insn_list:REG_DEP_TRUE 674 (nil))
init_insns for 386: (insn_list:REG_DEP_TRUE 682 (nil))
init_insns for 389: (insn_list:REG_DEP_TRUE 690 (nil))
init_insns for 392: (insn_list:REG_DEP_TRUE 698 (nil))
init_insns for 440: (insn_list:REG_DEP_TRUE 978 (nil))
Reg 294 had equivalence, but can't be eliminated
Reg 299 had equivalence, but can't be eliminated
Reg 302 had equivalence, but can't be eliminated
Reg 305 had equivalence, but can't be eliminated
Reg 308 had equivalence, but can't be eliminated
Reg 311 had equivalence, but can't be eliminated
Reg 314 had equivalence, but can't be eliminated
Reg 317 had equivalence, but can't be eliminated
Reg 320 had equivalence, but can't be eliminated
Reg 323 had equivalence, but can't be eliminated
Reg 350 had equivalence, but can't be eliminated
Reg 351 had equivalence, but can't be eliminated
Reg 354 had equivalence, but can't be eliminated
Reg 359 had equivalence, but can't be eliminated
Reg 360 had equivalence, but can't be eliminated
Reg 368 had equivalence, but can't be eliminated
Reg 395 had equivalence, but can't be eliminated
Reg 399 had equivalence, but can't be eliminated
Reg 401 had equivalence, but can't be eliminated
Reg 403 had equivalence, but can't be eliminated
Reg 405 had equivalence, but can't be eliminated
Reg 407 had equivalence, but can't be eliminated
Reg 409 had equivalence, but can't be eliminated
Reg 411 had equivalence, but can't be eliminated
Reg 413 had equivalence, but can't be eliminated
Reg 415 had equivalence, but can't be eliminated
Reg 450 had equivalence, but can't be eliminated
Reg 452 had equivalence, but can't be eliminated
Reg 453 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a105 (r453,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a104 (r452,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a103 (r451,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r450,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r449,l0) best DIREG, allocno DIREG
    a86 (r448,l0) best DIREG, allocno DIREG
    a8 (r447,l0) best DIREG, allocno DIREG
    a92 (r446,l0) best DIREG, allocno DIREG
    a117 (r445,l0) best DREG, allocno DREG
    a116 (r444,l0) best AREG, allocno AREG
    a4 (r440,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r438,l0) best AREG, allocno AREG
    a16 (r437,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r434,l0) best AREG, allocno AREG
    a19 (r432,l0) best AREG, allocno AREG
    a21 (r430,l0) best AREG, allocno AREG
    a23 (r428,l0) best AREG, allocno AREG
    a25 (r426,l0) best AREG, allocno AREG
    a27 (r424,l0) best AREG, allocno AREG
    a28 (r421,l0) best AREG, allocno AREG
    a14 (r420,l0) best AREG, allocno AREG
    a31 (r418,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r415,l0) best DIREG, allocno DIREG
    a35 (r413,l0) best DIREG, allocno DIREG
    a38 (r411,l0) best DIREG, allocno DIREG
    a41 (r409,l0) best DIREG, allocno DIREG
    a44 (r407,l0) best DIREG, allocno DIREG
    a47 (r405,l0) best DIREG, allocno DIREG
    a50 (r403,l0) best DIREG, allocno DIREG
    a53 (r401,l0) best DIREG, allocno DIREG
    a56 (r399,l0) best DIREG, allocno DIREG
    a58 (r397,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a59 (r395,l0) best DIREG, allocno DIREG
    a61 (r392,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a62 (r389,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a63 (r386,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a64 (r383,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a65 (r380,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a66 (r377,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a67 (r374,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a68 (r371,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a72 (r369,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a73 (r368,l0) best DIREG, allocno DIREG
    a75 (r366,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a76 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a79 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a80 (r360,l0) best DIREG, allocno DIREG
    a81 (r359,l0) best SIREG, allocno SIREG
    a84 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a89 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a90 (r354,l0) best DIREG, allocno DIREG
    a95 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a96 (r351,l0) best DIREG, allocno DIREG
    a102 (r350,l0) best DIREG, allocno DIREG
    a106 (r348,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a107 (r344,l0) best AD_REGS, allocno AD_REGS
    a108 (r342,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a109 (r340,l0) best DREG, allocno DREG
    a110 (r336,l0) best AD_REGS, allocno AD_REGS
    a111 (r334,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a113 (r332,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a114 (r331,l0) best DIREG, allocno DIREG
    a115 (r330,l0) best DREG, allocno DREG
    a118 (r328,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a124 (r323,l0) best DIREG, allocno DIREG
    a126 (r320,l0) best DIREG, allocno DIREG
    a129 (r317,l0) best DIREG, allocno DIREG
    a132 (r314,l0) best DIREG, allocno DIREG
    a135 (r311,l0) best DIREG, allocno DIREG
    a138 (r308,l0) best DIREG, allocno DIREG
    a141 (r305,l0) best DIREG, allocno DIREG
    a144 (r302,l0) best DIREG, allocno DIREG
    a147 (r299,l0) best DIREG, allocno DIREG
    a149 (r297,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a150 (r294,l0) best DIREG, allocno DIREG
    a152 (r291,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a153 (r288,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a154 (r285,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a155 (r282,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a156 (r279,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a157 (r276,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a158 (r273,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a159 (r270,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a160 (r267,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a162 (r265,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a164 (r264,l0) best DREG, allocno DREG
    a165 (r261,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r259,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r258,l0) best SIREG, allocno SIREG
    a11 (r257,l0) best DIREG, allocno DIREG
    a119 (r256,l0) best CREG, allocno CREG
    a2 (r255,l0) best DREG, allocno DREG
    a163 (r254,l0) best SIREG, allocno SIREG
    a0 (r253,l0) best AREG, allocno AREG
    a120 (r250,l0) best DIREG, allocno DIREG
    a60 (r246,l0) best SIREG, allocno SIREG
    a55 (r244,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a57 (r242,l0) best SIREG, allocno SIREG
    a52 (r240,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a54 (r238,l0) best SIREG, allocno SIREG
    a49 (r236,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r234,l0) best SIREG, allocno SIREG
    a46 (r232,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a48 (r230,l0) best SIREG, allocno SIREG
    a43 (r228,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r226,l0) best SIREG, allocno SIREG
    a40 (r224,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r222,l0) best SIREG, allocno SIREG
    a37 (r220,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r218,l0) best SIREG, allocno SIREG
    a34 (r216,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a70 (r214,l0) best AREG, allocno AREG
    a77 (r213,l0) best AREG, allocno AREG
    a87 (r211,l0) best AREG, allocno AREG
    a93 (r209,l0) best AREG, allocno AREG
    a100 (r207,l0) best AREG, allocno AREG
    a122 (r206,l0) best DIREG, allocno DIREG
    a151 (r203,l0) best SIREG, allocno SIREG
    a146 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a148 (r199,l0) best SIREG, allocno SIREG
    a143 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a145 (r195,l0) best SIREG, allocno SIREG
    a140 (r193,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a142 (r191,l0) best SIREG, allocno SIREG
    a137 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a139 (r187,l0) best SIREG, allocno SIREG
    a134 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a136 (r183,l0) best SIREG, allocno SIREG
    a131 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a133 (r179,l0) best SIREG, allocno SIREG
    a128 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a130 (r175,l0) best SIREG, allocno SIREG
    a125 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a127 (r171,l0) best SIREG, allocno SIREG
    a69 (r168,l0) best DIREG, allocno DIREG
    a99 (r167,l0) best DIREG, allocno DIREG
    a32 (r166,l0) best DIREG, allocno DIREG
    a13 (r162,l0) best DIREG, allocno DIREG
    a29 (r161,l0) best DIREG, allocno DIREG
    a30 (r160,l0) best DIREG, allocno DIREG
    a1 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r156,l0) best DIREG, allocno DIREG
    a36 (r154,l0) best SIREG, allocno SIREG
    a74 (r151,l0) best DIREG, allocno DIREG
    a26 (r148,l0) best DIREG, allocno DIREG
    a18 (r147,l0) best DIREG, allocno DIREG
    a71 (r144,l0) best DIREG, allocno DIREG
    a5 (r141,l0) best AREG, allocno AREG
    a82 (r140,l0) best DREG, allocno DREG
    a83 (r139,l0) best CREG, allocno CREG
    a85 (r135,l0) best DIREG, allocno DIREG
    a20 (r134,l0) best DIREG, allocno DIREG
    a78 (r132,l0) best DIREG, allocno DIREG
    a91 (r129,l0) best SIREG, allocno SIREG
    a22 (r127,l0) best DIREG, allocno DIREG
    a88 (r125,l0) best DIREG, allocno DIREG
    a97 (r122,l0) best SIREG, allocno SIREG
    a24 (r120,l0) best DIREG, allocno DIREG
    a98 (r119,l0) best AREG, allocno AREG
    a94 (r116,l0) best DIREG, allocno DIREG
    a112 (r107,l0) best AREG, allocno AREG
    a10 (r100,l0) best DIREG, allocno DIREG
    a101 (r97,l0) best DIREG, allocno DIREG
    a123 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a161 (r94,l0) best AREG, allocno AREG
    a121 (r87,l0) best AREG, allocno AREG

  a0(r253,l0) costs: AREG:-595,-595 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-595,-595 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27672,27672 NO_REX_SSE_REGS:27672,27672 SSE_REGS:27672,27672 MMX_REGS:41992,41992 INT_SSE_REGS:30536,30536 ALL_REGS:655212,655212 MEM:11456,11456
  a1(r159,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6588,6588 NO_REX_SSE_REGS:6588,6588 SSE_REGS:6588,6588 MMX_REGS:8508,8508 INT_SSE_REGS:6972,6972 ALL_REGS:110344,110344 MEM:2635,2635
  a2(r255,l0) costs: AREG:0,0 DREG:-595,-595 CREG:0,0 BREG:0,0 SIREG:-18,-18 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17304,17304 NO_REX_SSE_REGS:17304,17304 SSE_REGS:17304,17304 MMX_REGS:25144,25144 INT_SSE_REGS:18872,18872 ALL_REGS:385644,385644 MEM:6790,6790
  a3(r450,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20311,20311 NO_REX_SSE_REGS:20311,20311 SSE_REGS:20311,20311 MMX_REGS:28171,28171 INT_SSE_REGS:21883,21883 ALL_REGS:450736,450736 MEM:7096,7096
  a4(r440,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5860,5860 NO_REX_SSE_REGS:5860,5860 SSE_REGS:5860,5860 MMX_REGS:7325,7325 INT_SSE_REGS:6153,6153 ALL_REGS:91416,91416 MEM:0,0
  a5(r141,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48,48 NO_REX_SSE_REGS:48,48 SSE_REGS:48,48 MMX_REGS:73,73 INT_SSE_REGS:53,53 ALL_REGS:1140,1140 MEM:19,19
  a6(r258,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-221,-221 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:139504,139504 NO_REX_SSE_REGS:139504,139504 SSE_REGS:139504,139504 MMX_REGS:223719,223719 INT_SSE_REGS:156347,156347 ALL_REGS:3562844,3562844 MEM:62279,62279
  a7(r259,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38156,38156 NO_REX_SSE_REGS:38156,38156 SSE_REGS:38156,38156 MMX_REGS:57541,57541 INT_SSE_REGS:42033,42033 ALL_REGS:868296,868296 MEM:17888,17888
  a8(r447,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-317,-317 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12550,12550 NO_REX_SSE_REGS:12550,12550 SSE_REGS:12550,12550 MMX_REGS:15600,15600 INT_SSE_REGS:13160,13160 ALL_REGS:249600,249600 MEM:4190,4190
  a9(r449,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:72,72 NO_REX_SSE_REGS:72,72 SSE_REGS:72,72 MMX_REGS:97,97 INT_SSE_REGS:77,77 ALL_REGS:1348,1348 MEM:26,26
  a10(r100,l0) costs: AREG:-20,-20 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-21,-21 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8656,8656 NO_REX_SSE_REGS:8656,8656 SSE_REGS:8656,8656 MMX_REGS:13966,13966 INT_SSE_REGS:9718,9718 ALL_REGS:222896,222896 MEM:3206,3206
  a11(r257,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4768,4768 NO_REX_SSE_REGS:4768,4768 SSE_REGS:4768,4768 MMX_REGS:4773,4773 INT_SSE_REGS:4769,4769 ALL_REGS:59708,59708 MEM:598,598
  a12(r438,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:5,5
  a13(r162,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a14(r420,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:72,72 NO_REX_SSE_REGS:72,72 SSE_REGS:72,72 MMX_REGS:77,77 INT_SSE_REGS:73,73 ALL_REGS:1008,1008 MEM:11,11
  a15(r156,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a16(r437,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a17(r434,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a18(r147,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a19(r432,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a20(r134,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a21(r430,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a22(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a23(r428,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a24(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a25(r426,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a26(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a27(r424,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a28(r421,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a29(r161,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a30(r160,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-466,-466 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15628,15628 NO_REX_SSE_REGS:15628,15628 SSE_REGS:15628,15628 MMX_REGS:20933,20933 INT_SSE_REGS:16689,16689 ALL_REGS:282568,282568 MEM:5563,5563
  a31(r418,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12495,12495 NO_REX_SSE_REGS:12495,12495 SSE_REGS:12495,12495 MMX_REGS:15470,15470 INT_SSE_REGS:13090,13090 ALL_REGS:247520,247520 MEM:3570,3570
  a32(r166,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-64,-64 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2352,2352 NO_REX_SSE_REGS:2352,2352 SSE_REGS:2352,2352 MMX_REGS:3132,3132 INT_SSE_REGS:2508,2508 ALL_REGS:42016,42016 MEM:928,928
  a33(r415,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-18,-18 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:378,378 NO_REX_SSE_REGS:378,378 SSE_REGS:378,378 MMX_REGS:468,468 INT_SSE_REGS:396,396 ALL_REGS:7488,7488 MEM:126,126
  a34(r216,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2044,2044 NO_REX_SSE_REGS:2044,2044 SSE_REGS:2044,2044 MMX_REGS:2774,2774 INT_SSE_REGS:2190,2190 ALL_REGS:37960,37960 MEM:744,744
  a35(r413,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-14,-14 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:294,294 NO_REX_SSE_REGS:294,294 SSE_REGS:294,294 MMX_REGS:364,364 INT_SSE_REGS:308,308 ALL_REGS:5824,5824 MEM:98,98
  a36(r154,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-14,-14 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2628,2628 NO_REX_SSE_REGS:2628,2628 SSE_REGS:2628,2628 MMX_REGS:3723,3723 INT_SSE_REGS:2847,2847 ALL_REGS:53144,53144 MEM:1154,1154
  a37(r220,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1644,1644 NO_REX_SSE_REGS:1644,1644 SSE_REGS:1644,1644 MMX_REGS:2229,2229 INT_SSE_REGS:1761,1761 ALL_REGS:30472,30472 MEM:598,598
  a38(r411,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-11,-11 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:231,231 NO_REX_SSE_REGS:231,231 SSE_REGS:231,231 MMX_REGS:286,286 INT_SSE_REGS:242,242 ALL_REGS:4576,4576 MEM:77,77
  a39(r218,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-11,-11 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2116,2116 NO_REX_SSE_REGS:2116,2116 SSE_REGS:2116,2116 MMX_REGS:2996,2996 INT_SSE_REGS:2292,2292 ALL_REGS:42744,42744 MEM:929,929
  a40(r224,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1316,1316 NO_REX_SSE_REGS:1316,1316 SSE_REGS:1316,1316 MMX_REGS:1786,1786 INT_SSE_REGS:1410,1410 ALL_REGS:24440,24440 MEM:479,479
  a41(r409,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-9,-9 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:189,189 NO_REX_SSE_REGS:189,189 SSE_REGS:189,189 MMX_REGS:234,234 INT_SSE_REGS:198,198 ALL_REGS:3744,3744 MEM:63,63
  a42(r222,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-9,-9 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1692,1692 NO_REX_SSE_REGS:1692,1692 SSE_REGS:1692,1692 MMX_REGS:2397,2397 INT_SSE_REGS:1833,1833 ALL_REGS:34216,34216 MEM:743,743
  a43(r228,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1056,1056 NO_REX_SSE_REGS:1056,1056 SSE_REGS:1056,1056 MMX_REGS:1431,1431 INT_SSE_REGS:1131,1131 ALL_REGS:19552,19552 MEM:384,384
  a44(r407,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-7,-7 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:147,147 NO_REX_SSE_REGS:147,147 SSE_REGS:147,147 MMX_REGS:182,182 INT_SSE_REGS:154,154 ALL_REGS:2912,2912 MEM:49,49
  a45(r226,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-7,-7 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1360,1360 NO_REX_SSE_REGS:1360,1360 SSE_REGS:1360,1360 MMX_REGS:1925,1925 INT_SSE_REGS:1473,1473 ALL_REGS:27456,27456 MEM:597,597
  a46(r232,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:840,840 NO_REX_SSE_REGS:840,840 SSE_REGS:840,840 MMX_REGS:1140,1140 INT_SSE_REGS:900,900 ALL_REGS:15600,15600 MEM:305,305
  a47(r405,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-5,-5 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:105,105 NO_REX_SSE_REGS:105,105 SSE_REGS:105,105 MMX_REGS:130,130 INT_SSE_REGS:110,110 ALL_REGS:2080,2080 MEM:35,35
  a48(r230,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-5,-5 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1080,1080 NO_REX_SSE_REGS:1080,1080 SSE_REGS:1080,1080 MMX_REGS:1530,1530 INT_SSE_REGS:1170,1170 ALL_REGS:21840,21840 MEM:475,475
  a49(r236,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:692,692 NO_REX_SSE_REGS:692,692 SSE_REGS:692,692 MMX_REGS:937,937 INT_SSE_REGS:741,741 ALL_REGS:12792,12792 MEM:251,251
  a50(r403,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-4,-4 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:28,28
  a51(r234,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-4,-4 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:892,892 NO_REX_SSE_REGS:892,892 SSE_REGS:892,892 MMX_REGS:1262,1262 INT_SSE_REGS:966,966 ALL_REGS:17992,17992 MEM:392,392
  a52(r240,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:560,560 NO_REX_SSE_REGS:560,560 SSE_REGS:560,560 MMX_REGS:760,760 INT_SSE_REGS:600,600 ALL_REGS:10400,10400 MEM:204,204
  a53(r401,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-4,-4 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:28,28
  a54(r238,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-4,-4 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,720 NO_REX_SSE_REGS:720,720 SSE_REGS:720,720 MMX_REGS:1020,1020 INT_SSE_REGS:780,780 ALL_REGS:14560,14560 MEM:316,316
  a55(r244,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:344,344 NO_REX_SSE_REGS:344,344 SSE_REGS:344,344 MMX_REGS:439,439 INT_SSE_REGS:363,363 ALL_REGS:5616,5616 MEM:124,124
  a56(r399,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-3,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:1248,1248 MEM:21,21
  a57(r242,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-3,-3 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:576,576 NO_REX_SSE_REGS:576,576 SSE_REGS:576,576 MMX_REGS:816,816 INT_SSE_REGS:624,624 ALL_REGS:11648,11648 MEM:253,253
  a58(r397,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:260,260 NO_REX_SSE_REGS:260,260 SSE_REGS:260,260 MMX_REGS:325,325 INT_SSE_REGS:273,273 ALL_REGS:4056,4056 MEM:104,104
  a59(r395,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-13,-13 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:273,273 NO_REX_SSE_REGS:273,273 SSE_REGS:273,273 MMX_REGS:338,338 INT_SSE_REGS:286,286 ALL_REGS:5408,5408 MEM:91,91
  a60(r246,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-13,-13 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:364,364 NO_REX_SSE_REGS:364,364 SSE_REGS:364,364 MMX_REGS:494,494 INT_SSE_REGS:390,390 ALL_REGS:6760,6760 MEM:143,143
  a61(r392,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:320,320 NO_REX_SSE_REGS:320,320 SSE_REGS:320,320 MMX_REGS:400,400 INT_SSE_REGS:336,336 ALL_REGS:4992,4992 MEM:0,0
  a62(r389,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:400,400 NO_REX_SSE_REGS:400,400 SSE_REGS:400,400 MMX_REGS:500,500 INT_SSE_REGS:420,420 ALL_REGS:6240,6240 MEM:0,0
  a63(r386,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:500,500 NO_REX_SSE_REGS:500,500 SSE_REGS:500,500 MMX_REGS:625,625 INT_SSE_REGS:525,525 ALL_REGS:7800,7800 MEM:0,0
  a64(r383,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:600,600 NO_REX_SSE_REGS:600,600 SSE_REGS:600,600 MMX_REGS:750,750 INT_SSE_REGS:630,630 ALL_REGS:9360,9360 MEM:0,0
  a65(r380,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:760,760 NO_REX_SSE_REGS:760,760 SSE_REGS:760,760 MMX_REGS:950,950 INT_SSE_REGS:798,798 ALL_REGS:11856,11856 MEM:0,0
  a66(r377,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:940,940 NO_REX_SSE_REGS:940,940 SSE_REGS:940,940 MMX_REGS:1175,1175 INT_SSE_REGS:987,987 ALL_REGS:14664,14664 MEM:0,0
  a67(r374,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1180,1180 NO_REX_SSE_REGS:1180,1180 SSE_REGS:1180,1180 MMX_REGS:1475,1475 INT_SSE_REGS:1239,1239 ALL_REGS:18408,18408 MEM:0,0
  a68(r371,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1460,1460 NO_REX_SSE_REGS:1460,1460 SSE_REGS:1460,1460 MMX_REGS:1825,1825 INT_SSE_REGS:1533,1533 ALL_REGS:22776,22776 MEM:0,0
  a69(r168,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-293,-293 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13460,13460 NO_REX_SSE_REGS:13460,13460 SSE_REGS:13460,13460 MMX_REGS:18130,18130 INT_SSE_REGS:14394,14394 ALL_REGS:246168,246168 MEM:5218,5218
  a70(r214,l0) costs: AREG:-139,-139 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3184,3184 NO_REX_SSE_REGS:3184,3184 SSE_REGS:3184,3184 MMX_REGS:4179,4179 INT_SSE_REGS:3383,3383 ALL_REGS:61292,61292 MEM:995,995
  a71(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-139,-139 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7124,7124 NO_REX_SSE_REGS:7124,7124 SSE_REGS:7124,7124 MMX_REGS:9919,9919 INT_SSE_REGS:7683,7683 ALL_REGS:139256,139256 MEM:2760,2760
  a72(r369,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4420,4420 NO_REX_SSE_REGS:4420,4420 SSE_REGS:4420,4420 MMX_REGS:5525,5525 INT_SSE_REGS:4641,4641 ALL_REGS:68952,68952 MEM:1768,1768
  a73(r368,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-221,-221 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4641,4641 NO_REX_SSE_REGS:4641,4641 SSE_REGS:4641,4641 MMX_REGS:5746,5746 INT_SSE_REGS:4862,4862 ALL_REGS:91936,91936 MEM:1547,1547
  a74(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-221,-221 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8108,8108 NO_REX_SSE_REGS:8108,8108 SSE_REGS:8108,8108 MMX_REGS:10798,10798 INT_SSE_REGS:8646,8646 ALL_REGS:144872,144872 MEM:3199,3199
  a75(r366,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6340,6340 NO_REX_SSE_REGS:6340,6340 SSE_REGS:6340,6340 MMX_REGS:7925,7925 INT_SSE_REGS:6657,6657 ALL_REGS:98904,98904 MEM:0,0
  a76(r363,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a77(r213,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:6,6
  a78(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44,44 NO_REX_SSE_REGS:44,44 SSE_REGS:44,44 MMX_REGS:64,64 INT_SSE_REGS:48,48 ALL_REGS:936,936 MEM:18,18
  a79(r361,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a80(r360,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a81(r359,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a82(r140,l0) costs: AREG:0,0 DREG:-1,-1 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a83(r139,l0) costs: AREG:0,0 DREG:0,0 CREG:-1,-1 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a84(r357,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:280,280 NO_REX_SSE_REGS:280,280 SSE_REGS:280,280 MMX_REGS:350,350 INT_SSE_REGS:294,294 ALL_REGS:4368,4368 MEM:112,112
  a85(r135,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-14,-14 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:624,624 NO_REX_SSE_REGS:624,624 SSE_REGS:624,624 MMX_REGS:864,864 INT_SSE_REGS:672,672 ALL_REGS:12064,12064 MEM:258,258
  a86(r448,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:72,72 NO_REX_SSE_REGS:72,72 SSE_REGS:72,72 MMX_REGS:97,97 INT_SSE_REGS:77,77 ALL_REGS:1348,1348 MEM:26,26
  a87(r211,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:6,6
  a88(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44,44 NO_REX_SSE_REGS:44,44 SSE_REGS:44,44 MMX_REGS:64,64 INT_SSE_REGS:48,48 ALL_REGS:936,936 MEM:18,18
  a89(r355,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a90(r354,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a91(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:3,3
  a92(r446,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:72,72 NO_REX_SSE_REGS:72,72 SSE_REGS:72,72 MMX_REGS:97,97 INT_SSE_REGS:77,77 ALL_REGS:1348,1348 MEM:26,26
  a93(r209,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:408,408 MEM:6,6
  a94(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44,44 NO_REX_SSE_REGS:44,44 SSE_REGS:44,44 MMX_REGS:64,64 INT_SSE_REGS:48,48 ALL_REGS:936,936 MEM:18,18
  a95(r352,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a96(r351,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a97(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:3,3
  a98(r119,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a99(r167,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-3,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:148,148 NO_REX_SSE_REGS:148,148 SSE_REGS:148,148 MMX_REGS:203,203 INT_SSE_REGS:159,159 ALL_REGS:2808,2808 MEM:58,58
  a100(r207,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:42,42 INT_SSE_REGS:34,34 ALL_REGS:616,616 MEM:10,10
  a101(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:114,114 INT_SSE_REGS:90,90 ALL_REGS:1560,1560 MEM:32,32
  a102(r350,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-3,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:1248,1248 MEM:21,21
  a103(r451,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a104(r452,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a105(r453,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a106(r348,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19600,19600 NO_REX_SSE_REGS:19600,19600 SSE_REGS:19600,19600 MMX_REGS:24500,24500 INT_SSE_REGS:20580,20580 ALL_REGS:305760,305760 MEM:0,0
  a107(r344,l0) costs: AD_REGS:-980,-980 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7840,7840 NO_REX_SSE_REGS:7840,7840 SSE_REGS:7840,7840 INT_SSE_REGS:24500,24500 MEM:8820,8820
  a108(r342,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19600,19600 NO_REX_SSE_REGS:19600,19600 SSE_REGS:19600,19600 MMX_REGS:24500,24500 INT_SSE_REGS:20580,20580 ALL_REGS:305760,305760 MEM:0,0
  a109(r340,l0) costs: AREG:0,0 DREG:-980,-980 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19600,19600 NO_REX_SSE_REGS:19600,19600 SSE_REGS:19600,19600 MMX_REGS:24500,24500 INT_SSE_REGS:20580,20580 ALL_REGS:305760,305760 MEM:-980,-980
  a110(r336,l0) costs: AD_REGS:-980,-980 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7840,7840 NO_REX_SSE_REGS:7840,7840 SSE_REGS:7840,7840 INT_SSE_REGS:24500,24500 MEM:8820,8820
  a111(r334,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19600,19600 NO_REX_SSE_REGS:19600,19600 SSE_REGS:19600,19600 MMX_REGS:24500,24500 INT_SSE_REGS:20580,20580 ALL_REGS:305760,305760 MEM:0,0
  a112(r107,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,5000
  a113(r332,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a114(r331,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-20,-20 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:420,420 NO_REX_SSE_REGS:420,420 SSE_REGS:420,420 MMX_REGS:520,520 INT_SSE_REGS:440,440 ALL_REGS:8320,8320 MEM:140,140
  a115(r330,l0) costs: AREG:0,0 DREG:-20,-20 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:400,400 NO_REX_SSE_REGS:400,400 SSE_REGS:400,400 MMX_REGS:500,500 INT_SSE_REGS:420,420 ALL_REGS:6240,6240 MEM:-20,-20
  a116(r444,l0) costs: AREG:-20,-20 DREG:0,0 CREG:-20,-20 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:320,320 NO_REX_SSE_REGS:320,320 SSE_REGS:320,320 MMX_REGS:420,420 INT_SSE_REGS:340,340 ALL_REGS:6160,6160 MEM:80,80
  a117(r445,l0) costs: AREG:0,0 DREG:-20,-20 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:320,320 NO_REX_SSE_REGS:320,320 SSE_REGS:320,320 MMX_REGS:420,420 INT_SSE_REGS:340,340 ALL_REGS:6160,6160 MEM:80,80
  a118(r328,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:400,400 NO_REX_SSE_REGS:400,400 SSE_REGS:400,400 MMX_REGS:500,500 INT_SSE_REGS:420,420 ALL_REGS:6240,6240 MEM:0,0
  a119(r256,l0) costs: AREG:0,0 DREG:0,0 CREG:-595,-595 BREG:0,0 SIREG:-20,-20 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4920,4920 NO_REX_SSE_REGS:4920,4920 SSE_REGS:4920,4920 MMX_REGS:5020,5020 INT_SSE_REGS:4940,4940 ALL_REGS:63660,63660 MEM:655,655
  a120(r250,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-207,-207 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7144,7144 NO_REX_SSE_REGS:7144,7144 SSE_REGS:7144,7144 MMX_REGS:9664,9664 INT_SSE_REGS:7648,7648 ALL_REGS:135176,135176 MEM:2663,2663
  a121(r87,l0) costs: AREG:-186,-186 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-186,-186 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15420,15420 NO_REX_SSE_REGS:15420,15420 SSE_REGS:15420,15420 MMX_REGS:20505,20505 INT_SSE_REGS:16437,16437 ALL_REGS:280368,280368 MEM:5703,5703
  a122(r206,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-186,-186 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9804,9804 NO_REX_SSE_REGS:9804,9804 SSE_REGS:9804,9804 MMX_REGS:13704,13704 INT_SSE_REGS:10584,10584 ALL_REGS:193128,193128 MEM:3795,3795
  a123(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8316,8316 NO_REX_SSE_REGS:8316,8316 SSE_REGS:8316,8316 MMX_REGS:11286,11286 INT_SSE_REGS:8910,8910 ALL_REGS:154440,154440 MEM:3326,3326
  a124(r323,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-59,-59 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1239,1239 NO_REX_SSE_REGS:1239,1239 SSE_REGS:1239,1239 MMX_REGS:1534,1534 INT_SSE_REGS:1298,1298 ALL_REGS:24544,24544 MEM:413,413
  a125(r173,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6656,6656 NO_REX_SSE_REGS:6656,6656 SSE_REGS:6656,6656 MMX_REGS:9031,9031 INT_SSE_REGS:7131,7131 ALL_REGS:123552,123552 MEM:2424,2424
  a126(r320,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-47,-47 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:987,987 NO_REX_SSE_REGS:987,987 SSE_REGS:987,987 MMX_REGS:1222,1222 INT_SSE_REGS:1034,1034 ALL_REGS:19552,19552 MEM:329,329
  a127(r171,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-47,-47 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8560,8560 NO_REX_SSE_REGS:8560,8560 SSE_REGS:8560,8560 MMX_REGS:12125,12125 INT_SSE_REGS:9273,9273 ALL_REGS:173056,173056 MEM:3757,3757
  a128(r177,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5320,5320 NO_REX_SSE_REGS:5320,5320 SSE_REGS:5320,5320 MMX_REGS:7220,7220 INT_SSE_REGS:5700,5700 ALL_REGS:98800,98800 MEM:1938,1938
  a129(r317,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-38,-38 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:798,798 NO_REX_SSE_REGS:798,798 SSE_REGS:798,798 MMX_REGS:988,988 INT_SSE_REGS:836,836 ALL_REGS:15808,15808 MEM:266,266
  a130(r175,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-38,-38 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6840,6840 NO_REX_SSE_REGS:6840,6840 SSE_REGS:6840,6840 MMX_REGS:9690,9690 INT_SSE_REGS:7410,7410 ALL_REGS:138320,138320 MEM:3002,3002
  a131(r181,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4248,4248 NO_REX_SSE_REGS:4248,4248 SSE_REGS:4248,4248 MMX_REGS:5763,5763 INT_SSE_REGS:4551,4551 ALL_REGS:78832,78832 MEM:1547,1547
  a132(r314,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-30,-30 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:630,630 NO_REX_SSE_REGS:630,630 SSE_REGS:630,630 MMX_REGS:780,780 INT_SSE_REGS:660,660 ALL_REGS:12480,12480 MEM:210,210
  a133(r179,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-30,-30 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5464,5464 NO_REX_SSE_REGS:5464,5464 SSE_REGS:5464,5464 MMX_REGS:7739,7739 INT_SSE_REGS:5919,5919 ALL_REGS:110448,110448 MEM:2398,2398
  a134(r185,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3388,3388 NO_REX_SSE_REGS:3388,3388 SSE_REGS:3388,3388 MMX_REGS:4598,4598 INT_SSE_REGS:3630,3630 ALL_REGS:62920,62920 MEM:1234,1234
  a135(r311,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-24,-24 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:504,504 NO_REX_SSE_REGS:504,504 SSE_REGS:504,504 MMX_REGS:624,624 INT_SSE_REGS:528,528 ALL_REGS:9984,9984 MEM:168,168
  a136(r183,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-24,-24 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4356,4356 NO_REX_SSE_REGS:4356,4356 SSE_REGS:4356,4356 MMX_REGS:6171,6171 INT_SSE_REGS:4719,4719 ALL_REGS:88088,88088 MEM:1912,1912
  a137(r189,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2716,2716 NO_REX_SSE_REGS:2716,2716 SSE_REGS:2716,2716 MMX_REGS:3686,3686 INT_SSE_REGS:2910,2910 ALL_REGS:50440,50440 MEM:989,989
  a138(r308,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-19,-19 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:399,399 NO_REX_SSE_REGS:399,399 SSE_REGS:399,399 MMX_REGS:494,494 INT_SSE_REGS:418,418 ALL_REGS:7904,7904 MEM:133,133
  a139(r187,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-19,-19 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3492,3492 NO_REX_SSE_REGS:3492,3492 SSE_REGS:3492,3492 MMX_REGS:4947,4947 INT_SSE_REGS:3783,3783 ALL_REGS:70616,70616 MEM:1533,1533
  a140(r193,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2176,2176 NO_REX_SSE_REGS:2176,2176 SSE_REGS:2176,2176 MMX_REGS:2951,2951 INT_SSE_REGS:2331,2331 ALL_REGS:40352,40352 MEM:792,792
  a141(r305,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-15,-15 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:315,315 NO_REX_SSE_REGS:315,315 SSE_REGS:315,315 MMX_REGS:390,390 INT_SSE_REGS:330,330 ALL_REGS:6240,6240 MEM:105,105
  a142(r191,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-15,-15 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2800,2800 NO_REX_SSE_REGS:2800,2800 SSE_REGS:2800,2800 MMX_REGS:3965,3965 INT_SSE_REGS:3033,3033 ALL_REGS:56576,56576 MEM:1229,1229
  a143(r197,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1736,1736 NO_REX_SSE_REGS:1736,1736 SSE_REGS:1736,1736 MMX_REGS:2356,2356 INT_SSE_REGS:1860,1860 ALL_REGS:32240,32240 MEM:632,632
  a144(r302,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-12,-12 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:252,252 NO_REX_SSE_REGS:252,252 SSE_REGS:252,252 MMX_REGS:312,312 INT_SSE_REGS:264,264 ALL_REGS:4992,4992 MEM:84,84
  a145(r195,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-12,-12 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2232,2232 NO_REX_SSE_REGS:2232,2232 SSE_REGS:2232,2232 MMX_REGS:3162,3162 INT_SSE_REGS:2418,2418 ALL_REGS:45136,45136 MEM:980,980
  a146(r201,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1072,1072 NO_REX_SSE_REGS:1072,1072 SSE_REGS:1072,1072 MMX_REGS:1367,1367 INT_SSE_REGS:1131,1131 ALL_REGS:17472,17472 MEM:386,386
  a147(r299,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-9,-9 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:189,189 NO_REX_SSE_REGS:189,189 SSE_REGS:189,189 MMX_REGS:234,234 INT_SSE_REGS:198,198 ALL_REGS:3744,3744 MEM:63,63
  a148(r199,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-9,-9 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1792,1792 NO_REX_SSE_REGS:1792,1792 SSE_REGS:1792,1792 MMX_REGS:2537,2537 INT_SSE_REGS:1941,1941 ALL_REGS:36192,36192 MEM:787,787
  a149(r297,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:800,800 NO_REX_SSE_REGS:800,800 SSE_REGS:800,800 MMX_REGS:1000,1000 INT_SSE_REGS:840,840 ALL_REGS:12480,12480 MEM:320,320
  a150(r294,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-40,-40 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:840,840 NO_REX_SSE_REGS:840,840 SSE_REGS:840,840 MMX_REGS:1040,1040 INT_SSE_REGS:880,880 ALL_REGS:16640,16640 MEM:280,280
  a151(r203,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-40,-40 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1120,1120 NO_REX_SSE_REGS:1120,1120 SSE_REGS:1120,1120 MMX_REGS:1520,1520 INT_SSE_REGS:1200,1200 ALL_REGS:20800,20800 MEM:440,440
  a152(r291,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1000,1000 NO_REX_SSE_REGS:1000,1000 SSE_REGS:1000,1000 MMX_REGS:1250,1250 INT_SSE_REGS:1050,1050 ALL_REGS:15600,15600 MEM:0,0
  a153(r288,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1240,1240 NO_REX_SSE_REGS:1240,1240 SSE_REGS:1240,1240 MMX_REGS:1550,1550 INT_SSE_REGS:1302,1302 ALL_REGS:19344,19344 MEM:0,0
  a154(r285,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1560,1560 NO_REX_SSE_REGS:1560,1560 SSE_REGS:1560,1560 MMX_REGS:1950,1950 INT_SSE_REGS:1638,1638 ALL_REGS:24336,24336 MEM:0,0
  a155(r282,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1940,1940 NO_REX_SSE_REGS:1940,1940 SSE_REGS:1940,1940 MMX_REGS:2425,2425 INT_SSE_REGS:2037,2037 ALL_REGS:30264,30264 MEM:0,0
  a156(r279,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2420,2420 NO_REX_SSE_REGS:2420,2420 SSE_REGS:2420,2420 MMX_REGS:3025,3025 INT_SSE_REGS:2541,2541 ALL_REGS:37752,37752 MEM:0,0
  a157(r276,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3040,3040 NO_REX_SSE_REGS:3040,3040 SSE_REGS:3040,3040 MMX_REGS:3800,3800 INT_SSE_REGS:3192,3192 ALL_REGS:47424,47424 MEM:0,0
  a158(r273,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3800,3800 NO_REX_SSE_REGS:3800,3800 SSE_REGS:3800,3800 MMX_REGS:4750,4750 INT_SSE_REGS:3990,3990 ALL_REGS:59280,59280 MEM:0,0
  a159(r270,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4760,4760 NO_REX_SSE_REGS:4760,4760 SSE_REGS:4760,4760 MMX_REGS:5950,5950 INT_SSE_REGS:4998,4998 ALL_REGS:74256,74256 MEM:0,0
  a160(r267,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5940,5940 NO_REX_SSE_REGS:5940,5940 SSE_REGS:5940,5940 MMX_REGS:7425,7425 INT_SSE_REGS:6237,6237 ALL_REGS:92664,92664 MEM:0,0
  a161(r94,l0) costs: AREG:-595,-595 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:2975,2975
  a162(r265,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11900,11900 NO_REX_SSE_REGS:11900,11900 SSE_REGS:11900,11900 MMX_REGS:14875,14875 INT_SSE_REGS:12495,12495 ALL_REGS:185640,185640 MEM:0,0
  a163(r254,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1190,-1190 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:9520,9520 NO_REX_SSE_REGS:9520,9520 SSE_REGS:9520,9520 MMX_REGS:12495,12495 INT_SSE_REGS:10115,10115 ALL_REGS:183260,183260 MEM:2380,2380
  a164(r264,l0) costs: AREG:0,0 DREG:-595,-595 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11900,11900 NO_REX_SSE_REGS:11900,11900 SSE_REGS:11900,11900 MMX_REGS:14875,14875 INT_SSE_REGS:12495,12495 ALL_REGS:185640,185640 MEM:-595,-595
  a165(r261,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11900,11900 NO_REX_SSE_REGS:11900,11900 SSE_REGS:11900,11900 MMX_REGS:14875,14875 INT_SSE_REGS:12495,12495 ALL_REGS:185640,185640 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r453: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r452: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r449: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r448: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r447: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r446: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r445: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r444: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r440: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r438: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r437: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r434: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r430: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r428: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r426: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r424: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r421: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r420: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r418: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r415: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r413: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r411: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r409: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r407: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r405: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r403: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r401: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r399: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r397: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r395: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r392: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r389: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r377: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r374: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r369: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r368: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r366: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r360: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r359: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r354: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r351: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r350: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r348: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r344: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r340: preferred DREG, alternative NO_REGS, allocno DREG
    r336: preferred AD_REGS, alternative GENERAL_REGS, allocno GENERAL_REGS
    r334: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r332: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r331: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r330: preferred DREG, alternative NO_REGS, allocno DREG
    r328: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r323: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r320: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r317: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r314: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r311: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r308: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r305: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r302: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r299: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r297: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r294: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r291: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r288: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r285: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r282: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r279: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r276: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r273: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r270: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r264: preferred DREG, alternative NO_REGS, allocno DREG
    r261: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r258: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r257: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r256: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r255: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r254: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r253: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r250: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r246: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r242: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r238: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r234: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r230: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r226: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r222: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r218: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r214: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r213: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r211: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r209: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r207: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r206: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r203: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r199: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r195: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r191: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r187: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r183: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r179: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r175: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r171: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r156: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred DREG, alternative NO_REGS, allocno DREG
    r139: preferred CREG, alternative NO_REGS, allocno CREG
    r135: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r120: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r253,l0) costs: AREG:0,-595 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-595,-595 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:30052,30052 NO_REX_SSE_REGS:30052,30052 SSE_REGS:30052,30052 MMX_REGS:44372,44372 INT_SSE_REGS:32916,32916 ALL_REGS:657592,657592 MEM:13241,13241
  a1(r159,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6881,6881 NO_REX_SSE_REGS:6881,6881 SSE_REGS:6881,6881 MMX_REGS:8801,8801 INT_SSE_REGS:7265,7265 ALL_REGS:111516,111516 MEM:2635,2635
  a2(r255,l0) costs: AREG:0,0 DREG:0,-595 CREG:0,0 BREG:0,0 SIREG:-18,-18 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19684,19684 NO_REX_SSE_REGS:19684,19684 SSE_REGS:19684,19684 MMX_REGS:27524,27524 INT_SSE_REGS:21252,21252 ALL_REGS:388024,388024 MEM:8575,8575
  a3(r450,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20311,20311 NO_REX_SSE_REGS:20311,20311 SSE_REGS:20311,20311 MMX_REGS:28171,28171 INT_SSE_REGS:21883,21883 ALL_REGS:450736,450736 MEM:7096,7096
  a4(r440,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6153,6153 NO_REX_SSE_REGS:6153,6153 SSE_REGS:6153,6153 MMX_REGS:7618,7618 INT_SSE_REGS:6446,6446 ALL_REGS:92588,92588 MEM:0,0
  a5(r141,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:52,52 NO_REX_SSE_REGS:52,52 SSE_REGS:52,52 MMX_REGS:77,77 INT_SSE_REGS:57,57 ALL_REGS:1144,1144 MEM:22,22
  a6(r258,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-221 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:141884,141884 NO_REX_SSE_REGS:141884,141884 SSE_REGS:141884,141884 MMX_REGS:226099,226099 INT_SSE_REGS:158727,158727 ALL_REGS:3565224,3565224 MEM:64064,64064
  a7(r259,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:38751,38751 NO_REX_SSE_REGS:38751,38751 SSE_REGS:38751,38751 MMX_REGS:58136,58136 INT_SSE_REGS:42628,42628 ALL_REGS:870676,870676 MEM:17888,17888
  a8(r447,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-317 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12550,12550 NO_REX_SSE_REGS:12550,12550 SSE_REGS:12550,12550 MMX_REGS:15600,15600 INT_SSE_REGS:13160,13160 ALL_REGS:249600,249600 MEM:4190,4190
  a9(r449,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:78,78 NO_REX_SSE_REGS:78,78 SSE_REGS:78,78 MMX_REGS:103,103 INT_SSE_REGS:83,83 ALL_REGS:1360,1360 MEM:29,29
  a10(r100,l0) costs: AREG:-20,-20 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-21 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8736,8736 NO_REX_SSE_REGS:8736,8736 SSE_REGS:8736,8736 MMX_REGS:14046,14046 INT_SSE_REGS:9798,9798 ALL_REGS:222976,222976 MEM:3266,3266
  a11(r257,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7148,7148 NO_REX_SSE_REGS:7148,7148 SSE_REGS:7148,7148 MMX_REGS:7153,7153 INT_SSE_REGS:7149,7149 ALL_REGS:62088,62088 MEM:2383,2383
  a12(r438,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:11,11
  a13(r162,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a14(r420,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:104,104 NO_REX_SSE_REGS:104,104 SSE_REGS:104,104 MMX_REGS:109,109 INT_SSE_REGS:105,105 ALL_REGS:1040,1040 MEM:35,35
  a15(r156,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a16(r437,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a17(r434,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a18(r147,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a19(r432,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a20(r134,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a21(r430,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a22(r127,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a23(r428,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a24(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a25(r426,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a26(r148,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a27(r424,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a28(r421,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a29(r161,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:11,11
  a30(r160,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-466 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16223,16223 NO_REX_SSE_REGS:16223,16223 SSE_REGS:16223,16223 MMX_REGS:21528,21528 INT_SSE_REGS:17284,17284 ALL_REGS:284948,284948 MEM:5563,5563
  a31(r418,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12495,12495 NO_REX_SSE_REGS:12495,12495 SSE_REGS:12495,12495 MMX_REGS:15470,15470 INT_SSE_REGS:13090,13090 ALL_REGS:247520,247520 MEM:3570,3570
  a32(r166,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-64 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2444,2444 NO_REX_SSE_REGS:2444,2444 SSE_REGS:2444,2444 MMX_REGS:3224,3224 INT_SSE_REGS:2600,2600 ALL_REGS:42384,42384 MEM:928,928
  a33(r415,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-18 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:378,378 NO_REX_SSE_REGS:378,378 SSE_REGS:378,378 MMX_REGS:468,468 INT_SSE_REGS:396,396 ALL_REGS:7488,7488 MEM:126,126
  a34(r216,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2117,2117 NO_REX_SSE_REGS:2117,2117 SSE_REGS:2117,2117 MMX_REGS:2847,2847 INT_SSE_REGS:2263,2263 ALL_REGS:38252,38252 MEM:744,744
  a35(r413,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-14 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:294,294 NO_REX_SSE_REGS:294,294 SSE_REGS:294,294 MMX_REGS:364,364 INT_SSE_REGS:308,308 ALL_REGS:5824,5824 MEM:98,98
  a36(r154,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-14 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2701,2701 NO_REX_SSE_REGS:2701,2701 SSE_REGS:2701,2701 MMX_REGS:3796,3796 INT_SSE_REGS:2920,2920 ALL_REGS:53436,53436 MEM:1154,1154
  a37(r220,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1703,1703 NO_REX_SSE_REGS:1703,1703 SSE_REGS:1703,1703 MMX_REGS:2288,2288 INT_SSE_REGS:1820,1820 ALL_REGS:30708,30708 MEM:598,598
  a38(r411,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-11 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:231,231 NO_REX_SSE_REGS:231,231 SSE_REGS:231,231 MMX_REGS:286,286 INT_SSE_REGS:242,242 ALL_REGS:4576,4576 MEM:77,77
  a39(r218,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-11 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2175,2175 NO_REX_SSE_REGS:2175,2175 SSE_REGS:2175,2175 MMX_REGS:3055,3055 INT_SSE_REGS:2351,2351 ALL_REGS:42980,42980 MEM:929,929
  a40(r224,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1363,1363 NO_REX_SSE_REGS:1363,1363 SSE_REGS:1363,1363 MMX_REGS:1833,1833 INT_SSE_REGS:1457,1457 ALL_REGS:24628,24628 MEM:479,479
  a41(r409,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-9 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:189,189 NO_REX_SSE_REGS:189,189 SSE_REGS:189,189 MMX_REGS:234,234 INT_SSE_REGS:198,198 ALL_REGS:3744,3744 MEM:63,63
  a42(r222,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-9 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1739,1739 NO_REX_SSE_REGS:1739,1739 SSE_REGS:1739,1739 MMX_REGS:2444,2444 INT_SSE_REGS:1880,1880 ALL_REGS:34404,34404 MEM:743,743
  a43(r228,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1094,1094 NO_REX_SSE_REGS:1094,1094 SSE_REGS:1094,1094 MMX_REGS:1469,1469 INT_SSE_REGS:1169,1169 ALL_REGS:19704,19704 MEM:384,384
  a44(r407,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-7 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:147,147 NO_REX_SSE_REGS:147,147 SSE_REGS:147,147 MMX_REGS:182,182 INT_SSE_REGS:154,154 ALL_REGS:2912,2912 MEM:49,49
  a45(r226,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-7 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1398,1398 NO_REX_SSE_REGS:1398,1398 SSE_REGS:1398,1398 MMX_REGS:1963,1963 INT_SSE_REGS:1511,1511 ALL_REGS:27608,27608 MEM:597,597
  a46(r232,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:870,870 NO_REX_SSE_REGS:870,870 SSE_REGS:870,870 MMX_REGS:1170,1170 INT_SSE_REGS:930,930 ALL_REGS:15720,15720 MEM:305,305
  a47(r405,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-5 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:105,105 NO_REX_SSE_REGS:105,105 SSE_REGS:105,105 MMX_REGS:130,130 INT_SSE_REGS:110,110 ALL_REGS:2080,2080 MEM:35,35
  a48(r230,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-5 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1110,1110 NO_REX_SSE_REGS:1110,1110 SSE_REGS:1110,1110 MMX_REGS:1560,1560 INT_SSE_REGS:1200,1200 ALL_REGS:21960,21960 MEM:475,475
  a49(r236,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:717,717 NO_REX_SSE_REGS:717,717 SSE_REGS:717,717 MMX_REGS:962,962 INT_SSE_REGS:766,766 ALL_REGS:12892,12892 MEM:251,251
  a50(r403,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-4 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:28,28
  a51(r234,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-4 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:917,917 NO_REX_SSE_REGS:917,917 SSE_REGS:917,917 MMX_REGS:1287,1287 INT_SSE_REGS:991,991 ALL_REGS:18092,18092 MEM:392,392
  a52(r240,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:580,580 NO_REX_SSE_REGS:580,580 SSE_REGS:580,580 MMX_REGS:780,780 INT_SSE_REGS:620,620 ALL_REGS:10480,10480 MEM:204,204
  a53(r401,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-4 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:28,28
  a54(r238,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-4 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:740,740 NO_REX_SSE_REGS:740,740 SSE_REGS:740,740 MMX_REGS:1040,1040 INT_SSE_REGS:800,800 ALL_REGS:14640,14640 MEM:316,316
  a55(r244,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:360,360 NO_REX_SSE_REGS:360,360 SSE_REGS:360,360 MMX_REGS:455,455 INT_SSE_REGS:379,379 ALL_REGS:5680,5680 MEM:124,124
  a56(r399,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:1248,1248 MEM:21,21
  a57(r242,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-3 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:592,592 NO_REX_SSE_REGS:592,592 SSE_REGS:592,592 MMX_REGS:832,832 INT_SSE_REGS:640,640 ALL_REGS:11712,11712 MEM:253,253
  a58(r397,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:273,273 NO_REX_SSE_REGS:273,273 SSE_REGS:273,273 MMX_REGS:338,338 INT_SSE_REGS:286,286 ALL_REGS:4108,4108 MEM:104,104
  a59(r395,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-13 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:273,273 NO_REX_SSE_REGS:273,273 SSE_REGS:273,273 MMX_REGS:338,338 INT_SSE_REGS:286,286 ALL_REGS:5408,5408 MEM:91,91
  a60(r246,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-13 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:377,377 NO_REX_SSE_REGS:377,377 SSE_REGS:377,377 MMX_REGS:507,507 INT_SSE_REGS:403,403 ALL_REGS:6812,6812 MEM:143,143
  a61(r392,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:336,336 NO_REX_SSE_REGS:336,336 SSE_REGS:336,336 MMX_REGS:416,416 INT_SSE_REGS:352,352 ALL_REGS:5056,5056 MEM:0,0
  a62(r389,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:420,420 NO_REX_SSE_REGS:420,420 SSE_REGS:420,420 MMX_REGS:520,520 INT_SSE_REGS:440,440 ALL_REGS:6320,6320 MEM:0,0
  a63(r386,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:525,525 NO_REX_SSE_REGS:525,525 SSE_REGS:525,525 MMX_REGS:650,650 INT_SSE_REGS:550,550 ALL_REGS:7900,7900 MEM:0,0
  a64(r383,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:630,630 NO_REX_SSE_REGS:630,630 SSE_REGS:630,630 MMX_REGS:780,780 INT_SSE_REGS:660,660 ALL_REGS:9480,9480 MEM:0,0
  a65(r380,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:798,798 NO_REX_SSE_REGS:798,798 SSE_REGS:798,798 MMX_REGS:988,988 INT_SSE_REGS:836,836 ALL_REGS:12008,12008 MEM:0,0
  a66(r377,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:987,987 NO_REX_SSE_REGS:987,987 SSE_REGS:987,987 MMX_REGS:1222,1222 INT_SSE_REGS:1034,1034 ALL_REGS:14852,14852 MEM:0,0
  a67(r374,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1239,1239 NO_REX_SSE_REGS:1239,1239 SSE_REGS:1239,1239 MMX_REGS:1534,1534 INT_SSE_REGS:1298,1298 ALL_REGS:18644,18644 MEM:0,0
  a68(r371,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1533,1533 NO_REX_SSE_REGS:1533,1533 SSE_REGS:1533,1533 MMX_REGS:1898,1898 INT_SSE_REGS:1606,1606 ALL_REGS:23068,23068 MEM:0,0
  a69(r168,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-293 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13959,13959 NO_REX_SSE_REGS:13959,13959 SSE_REGS:13959,13959 MMX_REGS:18629,18629 INT_SSE_REGS:14893,14893 ALL_REGS:248164,248164 MEM:5218,5218
  a70(r214,l0) costs: AREG:0,-139 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3980,3980 NO_REX_SSE_REGS:3980,3980 SSE_REGS:3980,3980 MMX_REGS:4975,4975 INT_SSE_REGS:4179,4179 ALL_REGS:62088,62088 MEM:1592,1592
  a71(r144,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-139 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7345,7345 NO_REX_SSE_REGS:7345,7345 SSE_REGS:7345,7345 MMX_REGS:10140,10140 INT_SSE_REGS:7904,7904 ALL_REGS:140140,140140 MEM:2760,2760
  a72(r369,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4641,4641 NO_REX_SSE_REGS:4641,4641 SSE_REGS:4641,4641 MMX_REGS:5746,5746 INT_SSE_REGS:4862,4862 ALL_REGS:69836,69836 MEM:1768,1768
  a73(r368,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-221 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4641,4641 NO_REX_SSE_REGS:4641,4641 SSE_REGS:4641,4641 MMX_REGS:5746,5746 INT_SSE_REGS:4862,4862 ALL_REGS:91936,91936 MEM:1547,1547
  a74(r151,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-221 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8425,8425 NO_REX_SSE_REGS:8425,8425 SSE_REGS:8425,8425 MMX_REGS:11115,11115 INT_SSE_REGS:8963,8963 ALL_REGS:146140,146140 MEM:3199,3199
  a75(r366,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6657,6657 NO_REX_SSE_REGS:6657,6657 SSE_REGS:6657,6657 MMX_REGS:8242,8242 INT_SSE_REGS:6974,6974 ALL_REGS:100172,100172 MEM:0,0
  a76(r363,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a77(r213,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:12,12
  a78(r132,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45,45 NO_REX_SSE_REGS:45,45 SSE_REGS:45,45 MMX_REGS:65,65 INT_SSE_REGS:49,49 ALL_REGS:940,940 MEM:18,18
  a79(r361,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a80(r360,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a81(r359,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a82(r140,l0) costs: AREG:0,0 DREG:-1,-1 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:-1,-1
  a83(r139,l0) costs: AREG:0,0 DREG:0,0 CREG:-1,-1 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:-1,-1
  a84(r357,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:294,294 NO_REX_SSE_REGS:294,294 SSE_REGS:294,294 MMX_REGS:364,364 INT_SSE_REGS:308,308 ALL_REGS:4424,4424 MEM:112,112
  a85(r135,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-14 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:644,644 NO_REX_SSE_REGS:644,644 SSE_REGS:644,644 MMX_REGS:884,884 INT_SSE_REGS:692,692 ALL_REGS:12144,12144 MEM:258,258
  a86(r448,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:78,78 NO_REX_SSE_REGS:78,78 SSE_REGS:78,78 MMX_REGS:103,103 INT_SSE_REGS:83,83 ALL_REGS:1360,1360 MEM:29,29
  a87(r211,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:12,12
  a88(r125,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45,45 NO_REX_SSE_REGS:45,45 SSE_REGS:45,45 MMX_REGS:65,65 INT_SSE_REGS:49,49 ALL_REGS:940,940 MEM:18,18
  a89(r355,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a90(r354,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a91(r129,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:3,3
  a92(r446,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:78,78 NO_REX_SSE_REGS:78,78 SSE_REGS:78,78 MMX_REGS:103,103 INT_SSE_REGS:83,83 ALL_REGS:1360,1360 MEM:29,29
  a93(r209,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:416,416 MEM:12,12
  a94(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45,45 NO_REX_SSE_REGS:45,45 SSE_REGS:45,45 MMX_REGS:65,65 INT_SSE_REGS:49,49 ALL_REGS:940,940 MEM:18,18
  a95(r352,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a96(r351,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a97(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:3,3
  a98(r119,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a99(r167,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:153,153 NO_REX_SSE_REGS:153,153 SSE_REGS:153,153 MMX_REGS:208,208 INT_SSE_REGS:164,164 ALL_REGS:2828,2828 MEM:58,58
  a100(r207,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40,40 NO_REX_SSE_REGS:40,40 SSE_REGS:40,40 MMX_REGS:50,50 INT_SSE_REGS:42,42 ALL_REGS:624,624 MEM:16,16
  a101(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:87,87 NO_REX_SSE_REGS:87,87 SSE_REGS:87,87 MMX_REGS:117,117 INT_SSE_REGS:93,93 ALL_REGS:1572,1572 MEM:32,32
  a102(r350,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-3 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:1248,1248 MEM:21,21
  a103(r451,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a104(r452,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a105(r453,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8100,8100 NO_REX_SSE_REGS:8100,8100 SSE_REGS:8100,8100 MMX_REGS:13000,13000 INT_SSE_REGS:9080,9080 ALL_REGS:208000,208000 MEM:3020,3020
  a106(r348,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20580,20580 NO_REX_SSE_REGS:20580,20580 SSE_REGS:20580,20580 MMX_REGS:25480,25480 INT_SSE_REGS:21560,21560 ALL_REGS:309680,309680 MEM:0,0
  a107(r344,l0) costs: AD_REGS:0,-980 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32340,32340 NO_REX_SSE_REGS:32340,32340 SSE_REGS:32340,32340 INT_SSE_REGS:32340,32340 MEM:15680,15680
  a108(r342,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20580,20580 NO_REX_SSE_REGS:20580,20580 SSE_REGS:20580,20580 MMX_REGS:25480,25480 INT_SSE_REGS:21560,21560 ALL_REGS:309680,309680 MEM:0,0
  a109(r340,l0) costs: AREG:0,0 DREG:-980,-980 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20580,20580 NO_REX_SSE_REGS:20580,20580 SSE_REGS:20580,20580 MMX_REGS:25480,25480 INT_SSE_REGS:21560,21560 ALL_REGS:309680,309680 MEM:-980,-980
  a110(r336,l0) costs: AD_REGS:0,-980 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32340,32340 NO_REX_SSE_REGS:32340,32340 SSE_REGS:32340,32340 INT_SSE_REGS:32340,32340 MEM:15680,15680
  a111(r334,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:20580,20580 NO_REX_SSE_REGS:20580,20580 SSE_REGS:20580,20580 MMX_REGS:25480,25480 INT_SSE_REGS:21560,21560 ALL_REGS:309680,309680 MEM:0,0
  a112(r107,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:8000,8000
  a113(r332,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a114(r331,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-20 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:420,420 NO_REX_SSE_REGS:420,420 SSE_REGS:420,420 MMX_REGS:520,520 INT_SSE_REGS:440,440 ALL_REGS:8320,8320 MEM:140,140
  a115(r330,l0) costs: AREG:0,0 DREG:-20,-20 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:420,420 NO_REX_SSE_REGS:420,420 SSE_REGS:420,420 MMX_REGS:520,520 INT_SSE_REGS:440,440 ALL_REGS:6320,6320 MEM:-20,-20
  a116(r444,l0) costs: AREG:0,-20 DREG:0,0 CREG:-20,-20 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:400,400 NO_REX_SSE_REGS:400,400 SSE_REGS:400,400 MMX_REGS:500,500 INT_SSE_REGS:420,420 ALL_REGS:6240,6240 MEM:140,140
  a117(r445,l0) costs: AREG:0,0 DREG:0,-20 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:400,400 NO_REX_SSE_REGS:400,400 SSE_REGS:400,400 MMX_REGS:500,500 INT_SSE_REGS:420,420 ALL_REGS:6240,6240 MEM:140,140
  a118(r328,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:420,420 NO_REX_SSE_REGS:420,420 SSE_REGS:420,420 MMX_REGS:520,520 INT_SSE_REGS:440,440 ALL_REGS:6320,6320 MEM:0,0
  a119(r256,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-595 BREG:0,0 SIREG:-20,-20 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7300,7300 NO_REX_SSE_REGS:7300,7300 SSE_REGS:7300,7300 MMX_REGS:7400,7400 INT_SSE_REGS:7320,7320 ALL_REGS:66040,66040 MEM:2440,2440
  a120(r250,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-207 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7770,7770 NO_REX_SSE_REGS:7770,7770 SSE_REGS:7770,7770 MMX_REGS:10290,10290 INT_SSE_REGS:8274,8274 ALL_REGS:136360,136360 MEM:2993,2993
  a121(r87,l0) costs: AREG:0,-186 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-186,-186 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16647,16647 NO_REX_SSE_REGS:16647,16647 SSE_REGS:16647,16647 MMX_REGS:21732,21732 INT_SSE_REGS:17664,17664 ALL_REGS:283044,283044 MEM:6261,6261
  a122(r206,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-186 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10101,10101 NO_REX_SSE_REGS:10101,10101 SSE_REGS:10101,10101 MMX_REGS:14001,14001 INT_SSE_REGS:10881,10881 ALL_REGS:194316,194316 MEM:3795,3795
  a123(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8613,8613 NO_REX_SSE_REGS:8613,8613 SSE_REGS:8613,8613 MMX_REGS:11583,11583 INT_SSE_REGS:9207,9207 ALL_REGS:155628,155628 MEM:3326,3326
  a124(r323,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-59 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1239,1239 NO_REX_SSE_REGS:1239,1239 SSE_REGS:1239,1239 MMX_REGS:1534,1534 INT_SSE_REGS:1298,1298 ALL_REGS:24544,24544 MEM:413,413
  a125(r173,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6894,6894 NO_REX_SSE_REGS:6894,6894 SSE_REGS:6894,6894 MMX_REGS:9269,9269 INT_SSE_REGS:7369,7369 ALL_REGS:124504,124504 MEM:2424,2424
  a126(r320,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-47 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:987,987 NO_REX_SSE_REGS:987,987 SSE_REGS:987,987 MMX_REGS:1222,1222 INT_SSE_REGS:1034,1034 ALL_REGS:19552,19552 MEM:329,329
  a127(r171,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-47 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8798,8798 NO_REX_SSE_REGS:8798,8798 SSE_REGS:8798,8798 MMX_REGS:12363,12363 INT_SSE_REGS:9511,9511 ALL_REGS:174008,174008 MEM:3757,3757
  a128(r177,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5510,5510 NO_REX_SSE_REGS:5510,5510 SSE_REGS:5510,5510 MMX_REGS:7410,7410 INT_SSE_REGS:5890,5890 ALL_REGS:99560,99560 MEM:1938,1938
  a129(r317,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-38 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:798,798 NO_REX_SSE_REGS:798,798 SSE_REGS:798,798 MMX_REGS:988,988 INT_SSE_REGS:836,836 ALL_REGS:15808,15808 MEM:266,266
  a130(r175,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-38 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7030,7030 NO_REX_SSE_REGS:7030,7030 SSE_REGS:7030,7030 MMX_REGS:9880,9880 INT_SSE_REGS:7600,7600 ALL_REGS:139080,139080 MEM:3002,3002
  a131(r181,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4400,4400 NO_REX_SSE_REGS:4400,4400 SSE_REGS:4400,4400 MMX_REGS:5915,5915 INT_SSE_REGS:4703,4703 ALL_REGS:79440,79440 MEM:1547,1547
  a132(r314,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-30 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:630,630 NO_REX_SSE_REGS:630,630 SSE_REGS:630,630 MMX_REGS:780,780 INT_SSE_REGS:660,660 ALL_REGS:12480,12480 MEM:210,210
  a133(r179,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-30 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5616,5616 NO_REX_SSE_REGS:5616,5616 SSE_REGS:5616,5616 MMX_REGS:7891,7891 INT_SSE_REGS:6071,6071 ALL_REGS:111056,111056 MEM:2398,2398
  a134(r185,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3509,3509 NO_REX_SSE_REGS:3509,3509 SSE_REGS:3509,3509 MMX_REGS:4719,4719 INT_SSE_REGS:3751,3751 ALL_REGS:63404,63404 MEM:1234,1234
  a135(r311,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-24 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:504,504 NO_REX_SSE_REGS:504,504 SSE_REGS:504,504 MMX_REGS:624,624 INT_SSE_REGS:528,528 ALL_REGS:9984,9984 MEM:168,168
  a136(r183,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-24 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4477,4477 NO_REX_SSE_REGS:4477,4477 SSE_REGS:4477,4477 MMX_REGS:6292,6292 INT_SSE_REGS:4840,4840 ALL_REGS:88572,88572 MEM:1912,1912
  a137(r189,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2813,2813 NO_REX_SSE_REGS:2813,2813 SSE_REGS:2813,2813 MMX_REGS:3783,3783 INT_SSE_REGS:3007,3007 ALL_REGS:50828,50828 MEM:989,989
  a138(r308,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-19 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:399,399 NO_REX_SSE_REGS:399,399 SSE_REGS:399,399 MMX_REGS:494,494 INT_SSE_REGS:418,418 ALL_REGS:7904,7904 MEM:133,133
  a139(r187,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-19 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3589,3589 NO_REX_SSE_REGS:3589,3589 SSE_REGS:3589,3589 MMX_REGS:5044,5044 INT_SSE_REGS:3880,3880 ALL_REGS:71004,71004 MEM:1533,1533
  a140(r193,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2254,2254 NO_REX_SSE_REGS:2254,2254 SSE_REGS:2254,2254 MMX_REGS:3029,3029 INT_SSE_REGS:2409,2409 ALL_REGS:40664,40664 MEM:792,792
  a141(r305,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-15 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:315,315 NO_REX_SSE_REGS:315,315 SSE_REGS:315,315 MMX_REGS:390,390 INT_SSE_REGS:330,330 ALL_REGS:6240,6240 MEM:105,105
  a142(r191,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-15 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2878,2878 NO_REX_SSE_REGS:2878,2878 SSE_REGS:2878,2878 MMX_REGS:4043,4043 INT_SSE_REGS:3111,3111 ALL_REGS:56888,56888 MEM:1229,1229
  a143(r197,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1798,1798 NO_REX_SSE_REGS:1798,1798 SSE_REGS:1798,1798 MMX_REGS:2418,2418 INT_SSE_REGS:1922,1922 ALL_REGS:32488,32488 MEM:632,632
  a144(r302,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-12 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:252,252 NO_REX_SSE_REGS:252,252 SSE_REGS:252,252 MMX_REGS:312,312 INT_SSE_REGS:264,264 ALL_REGS:4992,4992 MEM:84,84
  a145(r195,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-12 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2294,2294 NO_REX_SSE_REGS:2294,2294 SSE_REGS:2294,2294 MMX_REGS:3224,3224 INT_SSE_REGS:2480,2480 ALL_REGS:45384,45384 MEM:980,980
  a146(r201,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1122,1122 NO_REX_SSE_REGS:1122,1122 SSE_REGS:1122,1122 MMX_REGS:1417,1417 INT_SSE_REGS:1181,1181 ALL_REGS:17672,17672 MEM:386,386
  a147(r299,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-9 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:189,189 NO_REX_SSE_REGS:189,189 SSE_REGS:189,189 MMX_REGS:234,234 INT_SSE_REGS:198,198 ALL_REGS:3744,3744 MEM:63,63
  a148(r199,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-9 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1842,1842 NO_REX_SSE_REGS:1842,1842 SSE_REGS:1842,1842 MMX_REGS:2587,2587 INT_SSE_REGS:1991,1991 ALL_REGS:36392,36392 MEM:787,787
  a149(r297,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:840,840 NO_REX_SSE_REGS:840,840 SSE_REGS:840,840 MMX_REGS:1040,1040 INT_SSE_REGS:880,880 ALL_REGS:12640,12640 MEM:320,320
  a150(r294,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-40 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:840,840 NO_REX_SSE_REGS:840,840 SSE_REGS:840,840 MMX_REGS:1040,1040 INT_SSE_REGS:880,880 ALL_REGS:16640,16640 MEM:280,280
  a151(r203,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-40 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1160,1160 NO_REX_SSE_REGS:1160,1160 SSE_REGS:1160,1160 MMX_REGS:1560,1560 INT_SSE_REGS:1240,1240 ALL_REGS:20960,20960 MEM:440,440
  a152(r291,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1050,1050 NO_REX_SSE_REGS:1050,1050 SSE_REGS:1050,1050 MMX_REGS:1300,1300 INT_SSE_REGS:1100,1100 ALL_REGS:15800,15800 MEM:0,0
  a153(r288,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1302,1302 NO_REX_SSE_REGS:1302,1302 SSE_REGS:1302,1302 MMX_REGS:1612,1612 INT_SSE_REGS:1364,1364 ALL_REGS:19592,19592 MEM:0,0
  a154(r285,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1638,1638 NO_REX_SSE_REGS:1638,1638 SSE_REGS:1638,1638 MMX_REGS:2028,2028 INT_SSE_REGS:1716,1716 ALL_REGS:24648,24648 MEM:0,0
  a155(r282,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2037,2037 NO_REX_SSE_REGS:2037,2037 SSE_REGS:2037,2037 MMX_REGS:2522,2522 INT_SSE_REGS:2134,2134 ALL_REGS:30652,30652 MEM:0,0
  a156(r279,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2541,2541 NO_REX_SSE_REGS:2541,2541 SSE_REGS:2541,2541 MMX_REGS:3146,3146 INT_SSE_REGS:2662,2662 ALL_REGS:38236,38236 MEM:0,0
  a157(r276,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3192,3192 NO_REX_SSE_REGS:3192,3192 SSE_REGS:3192,3192 MMX_REGS:3952,3952 INT_SSE_REGS:3344,3344 ALL_REGS:48032,48032 MEM:0,0
  a158(r273,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3990,3990 NO_REX_SSE_REGS:3990,3990 SSE_REGS:3990,3990 MMX_REGS:4940,4940 INT_SSE_REGS:4180,4180 ALL_REGS:60040,60040 MEM:0,0
  a159(r270,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4998,4998 NO_REX_SSE_REGS:4998,4998 SSE_REGS:4998,4998 MMX_REGS:6188,6188 INT_SSE_REGS:5236,5236 ALL_REGS:75208,75208 MEM:0,0
  a160(r267,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:6237,6237 NO_REX_SSE_REGS:6237,6237 SSE_REGS:6237,6237 MMX_REGS:7722,7722 INT_SSE_REGS:6534,6534 ALL_REGS:93852,93852 MEM:0,0
  a161(r94,l0) costs: AREG:0,-595 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4760,4760
  a162(r265,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12495,12495 NO_REX_SSE_REGS:12495,12495 SSE_REGS:12495,12495 MMX_REGS:15470,15470 INT_SSE_REGS:13090,13090 ALL_REGS:188020,188020 MEM:0,0
  a163(r254,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1190 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11900,11900 NO_REX_SSE_REGS:11900,11900 SSE_REGS:11900,11900 MMX_REGS:14875,14875 INT_SSE_REGS:12495,12495 ALL_REGS:185640,185640 MEM:4165,4165
  a164(r264,l0) costs: AREG:0,0 DREG:-595,-595 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12495,12495 NO_REX_SSE_REGS:12495,12495 SSE_REGS:12495,12495 MMX_REGS:15470,15470 INT_SSE_REGS:13090,13090 ALL_REGS:188020,188020 MEM:-595,-595
  a165(r261,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12495,12495 NO_REX_SSE_REGS:12495,12495 SSE_REGS:12495,12495 MMX_REGS:15470,15470 INT_SSE_REGS:13090,13090 ALL_REGS:188020,188020 MEM:0,0

   Insn 998(l0): point = 0
   Insn 995(l0): point = 3
   Insn 994(l0): point = 6
   Insn 993(l0): point = 8
   Insn 991(l0): point = 10
   Insn 947(l0): point = 13
   Insn 946(l0): point = 15
   Insn 942(l0): point = 18
   Insn 941(l0): point = 20
   Insn 939(l0): point = 23
   Insn 938(l0): point = 25
   Insn 937(l0): point = 27
   Insn 1048(l0): point = 30
   Insn 1399(l0): point = 33
   Insn 933(l0): point = 35
   Insn 930(l0): point = 38
   Insn 929(l0): point = 40
   Insn 927(l0): point = 43
   Insn 926(l0): point = 45
   Insn 925(l0): point = 47
   Insn 923(l0): point = 49
   Insn 1054(l0): point = 52
   Insn 1397(l0): point = 55
   Insn 919(l0): point = 57
   Insn 916(l0): point = 60
   Insn 915(l0): point = 62
   Insn 913(l0): point = 65
   Insn 912(l0): point = 67
   Insn 911(l0): point = 69
   Insn 1084(l0): point = 72
   Insn 1395(l0): point = 75
   Insn 905(l0): point = 77
   Insn 902(l0): point = 80
   Insn 901(l0): point = 82
   Insn 899(l0): point = 85
   Insn 898(l0): point = 87
   Insn 897(l0): point = 89
   Insn 1080(l0): point = 92
   Insn 1393(l0): point = 95
   Insn 891(l0): point = 97
   Insn 888(l0): point = 100
   Insn 887(l0): point = 102
   Insn 885(l0): point = 105
   Insn 884(l0): point = 107
   Insn 883(l0): point = 109
   Insn 1076(l0): point = 112
   Insn 1391(l0): point = 115
   Insn 877(l0): point = 117
   Insn 874(l0): point = 120
   Insn 873(l0): point = 122
   Insn 871(l0): point = 125
   Insn 870(l0): point = 127
   Insn 869(l0): point = 129
   Insn 1072(l0): point = 132
   Insn 1389(l0): point = 135
   Insn 863(l0): point = 137
   Insn 860(l0): point = 140
   Insn 859(l0): point = 142
   Insn 857(l0): point = 145
   Insn 856(l0): point = 147
   Insn 855(l0): point = 149
   Insn 1068(l0): point = 152
   Insn 1387(l0): point = 155
   Insn 849(l0): point = 157
   Insn 848(l0): point = 159
   Insn 847(l0): point = 161
   Insn 1064(l0): point = 164
   Insn 1385(l0): point = 167
   Insn 841(l0): point = 169
   Insn 838(l0): point = 172
   Insn 837(l0): point = 174
   Insn 835(l0): point = 177
   Insn 834(l0): point = 179
   Insn 833(l0): point = 181
   Insn 1060(l0): point = 184
   Insn 1383(l0): point = 187
   Insn 826(l0): point = 189
   Insn 825(l0): point = 191
   Insn 823(l0): point = 194
   Insn 822(l0): point = 196
   Insn 821(l0): point = 198
   Insn 819(l0): point = 200
   Insn 814(l0): point = 203
   Insn 813(l0): point = 205
   Insn 1354(l0): point = 208
   Insn 717(l0): point = 211
   Insn 716(l0): point = 213
   Insn 715(l0): point = 215
   Insn 1378(l0): point = 218
   Insn 799(l0): point = 221
   Insn 798(l0): point = 223
   Insn 797(l0): point = 225
   Insn 796(l0): point = 227
   Insn 794(l0): point = 229
   Insn 1357(l0): point = 232
   Insn 728(l0): point = 235
   Insn 727(l0): point = 237
   Insn 726(l0): point = 239
   Insn 725(l0): point = 241
   Insn 723(l0): point = 243
   Insn 1360(l0): point = 246
   Insn 739(l0): point = 249
   Insn 738(l0): point = 251
   Insn 737(l0): point = 253
   Insn 736(l0): point = 255
   Insn 734(l0): point = 257
   Insn 1363(l0): point = 260
   Insn 749(l0): point = 263
   Insn 748(l0): point = 265
   Insn 747(l0): point = 267
   Insn 746(l0): point = 269
   Insn 744(l0): point = 271
   Insn 1366(l0): point = 274
   Insn 759(l0): point = 277
   Insn 758(l0): point = 279
   Insn 757(l0): point = 281
   Insn 756(l0): point = 283
   Insn 754(l0): point = 285
   Insn 1369(l0): point = 288
   Insn 769(l0): point = 291
   Insn 768(l0): point = 293
   Insn 767(l0): point = 295
   Insn 766(l0): point = 297
   Insn 764(l0): point = 299
   Insn 1372(l0): point = 302
   Insn 779(l0): point = 305
   Insn 778(l0): point = 307
   Insn 777(l0): point = 309
   Insn 776(l0): point = 311
   Insn 774(l0): point = 313
   Insn 1375(l0): point = 316
   Insn 789(l0): point = 319
   Insn 788(l0): point = 321
   Insn 787(l0): point = 323
   Insn 786(l0): point = 325
   Insn 784(l0): point = 327
   Insn 1381(l0): point = 330
   Insn 808(l0): point = 333
   Insn 807(l0): point = 335
   Insn 806(l0): point = 337
   Insn 805(l0): point = 339
   Insn 803(l0): point = 341
   Insn 1409(l0): point = 344
   Insn 713(l0): point = 347
   Insn 712(l0): point = 349
   Insn 711(l0): point = 351
   Insn 710(l0): point = 353
   Insn 708(l0): point = 355
   Insn 706(l0): point = 357
   Insn 705(l0): point = 359
   Insn 703(l0): point = 362
   Insn 702(l0): point = 364
   Insn 699(l0): point = 366
   Insn 698(l0): point = 368
   Insn 697(l0): point = 370
   Insn 695(l0): point = 373
   Insn 694(l0): point = 375
   Insn 691(l0): point = 377
   Insn 690(l0): point = 379
   Insn 689(l0): point = 381
   Insn 687(l0): point = 384
   Insn 686(l0): point = 386
   Insn 683(l0): point = 388
   Insn 682(l0): point = 390
   Insn 681(l0): point = 392
   Insn 679(l0): point = 395
   Insn 678(l0): point = 397
   Insn 675(l0): point = 399
   Insn 674(l0): point = 401
   Insn 673(l0): point = 403
   Insn 671(l0): point = 406
   Insn 670(l0): point = 408
   Insn 667(l0): point = 410
   Insn 666(l0): point = 412
   Insn 665(l0): point = 414
   Insn 663(l0): point = 417
   Insn 662(l0): point = 419
   Insn 659(l0): point = 421
   Insn 658(l0): point = 423
   Insn 657(l0): point = 425
   Insn 655(l0): point = 428
   Insn 654(l0): point = 430
   Insn 651(l0): point = 432
   Insn 650(l0): point = 434
   Insn 649(l0): point = 436
   Insn 647(l0): point = 439
   Insn 646(l0): point = 441
   Insn 643(l0): point = 443
   Insn 642(l0): point = 445
   Insn 641(l0): point = 447
   Insn 984(l0): point = 450
   Insn 983(l0): point = 452
   Insn 979(l0): point = 454
   Insn 978(l0): point = 456
   Insn 1351(l0): point = 459
   Insn 636(l0): point = 462
   Insn 635(l0): point = 464
   Insn 633(l0): point = 467
   Insn 632(l0): point = 469
   Insn 628(l0): point = 472
   Insn 627(l0): point = 474
   Insn 625(l0): point = 477
   Insn 624(l0): point = 479
   Insn 621(l0): point = 482
   Insn 15(l0): point = 485
   Insn 1348(l0): point = 488
   Insn 618(l0): point = 490
   Insn 616(l0): point = 492
   Insn 615(l0): point = 495
   Insn 614(l0): point = 497
   Insn 612(l0): point = 500
   Insn 611(l0): point = 502
   Insn 608(l0): point = 505
   Insn 607(l0): point = 507
   Insn 606(l0): point = 509
   Insn 604(l0): point = 512
   Insn 603(l0): point = 514
   Insn 601(l0): point = 517
   Insn 600(l0): point = 519
   Insn 599(l0): point = 521
   Insn 598(l0): point = 523
   Insn 596(l0): point = 526
   Insn 595(l0): point = 528
   Insn 594(l0): point = 530
   Insn 592(l0): point = 532
   Insn 591(l0): point = 534
   Insn 590(l0): point = 536
   Insn 589(l0): point = 538
   Insn 587(l0): point = 541
   Insn 586(l0): point = 543
   Insn 585(l0): point = 545
   Insn 583(l0): point = 548
   Insn 582(l0): point = 550
   Insn 581(l0): point = 552
   Insn 579(l0): point = 554
   Insn 567(l0): point = 557
   Insn 566(l0): point = 559
   Insn 564(l0): point = 561
   Insn 1405(l0): point = 564
   Insn 562(l0): point = 567
   Insn 561(l0): point = 569
   Insn 966(l0): point = 572
   Insn 965(l0): point = 574
   Insn 1346(l0): point = 577
   Insn 557(l0): point = 579
   Insn 1172(l0): point = 582
   Insn 554(l0): point = 584
   Insn 553(l0): point = 587
   Insn 552(l0): point = 589
   Insn 550(l0): point = 592
   Insn 549(l0): point = 594
   Insn 1185(l0): point = 596
   Insn 548(l0): point = 598
   Insn 545(l0): point = 601
   Insn 544(l0): point = 603
   Insn 542(l0): point = 606
   Insn 541(l0): point = 608
   Insn 1344(l0): point = 611
   Insn 1171(l0): point = 613
   Insn 539(l0): point = 616
   Insn 538(l0): point = 618
   Insn 537(l0): point = 620
   Insn 535(l0): point = 623
   Insn 534(l0): point = 625
   Insn 533(l0): point = 627
   Insn 531(l0): point = 629
   Insn 530(l0): point = 631
   Insn 528(l0): point = 633
   Insn 527(l0): point = 636
   Insn 526(l0): point = 638
   Insn 525(l0): point = 640
   Insn 524(l0): point = 642
   Insn 523(l0): point = 644
   Insn 522(l0): point = 646
   Insn 521(l0): point = 648
   Insn 520(l0): point = 650
   Insn 519(l0): point = 652
   Insn 518(l0): point = 654
   Insn 517(l0): point = 656
   Insn 516(l0): point = 658
   Insn 514(l0): point = 661
   Insn 513(l0): point = 663
   Insn 512(l0): point = 665
   Insn 509(l0): point = 668
   Insn 508(l0): point = 670
   Insn 506(l0): point = 672
   Insn 504(l0): point = 675
   Insn 503(l0): point = 677
   Insn 502(l0): point = 679
   Insn 497(l0): point = 682
   Insn 496(l0): point = 684
   Insn 494(l0): point = 687
   Insn 493(l0): point = 689
   Insn 489(l0): point = 692
   Insn 1170(l0): point = 695
   Insn 486(l0): point = 697
   Insn 485(l0): point = 700
   Insn 484(l0): point = 702
   Insn 482(l0): point = 705
   Insn 481(l0): point = 707
   Insn 1184(l0): point = 709
   Insn 480(l0): point = 711
   Insn 477(l0): point = 714
   Insn 476(l0): point = 716
   Insn 474(l0): point = 719
   Insn 473(l0): point = 721
   Insn 1341(l0): point = 724
   Insn 1169(l0): point = 726
   Insn 471(l0): point = 729
   Insn 470(l0): point = 731
   Insn 469(l0): point = 733
   Insn 467(l0): point = 736
   Insn 466(l0): point = 738
   Insn 465(l0): point = 740
   Insn 463(l0): point = 742
   Insn 462(l0): point = 744
   Insn 461(l0): point = 746
   Insn 459(l0): point = 749
   Insn 458(l0): point = 751
   Insn 454(l0): point = 754
   Insn 453(l0): point = 756
   Insn 451(l0): point = 759
   Insn 450(l0): point = 761
   Insn 446(l0): point = 764
   Insn 1168(l0): point = 767
   Insn 443(l0): point = 769
   Insn 442(l0): point = 772
   Insn 441(l0): point = 774
   Insn 439(l0): point = 777
   Insn 438(l0): point = 779
   Insn 1173(l0): point = 781
   Insn 437(l0): point = 783
   Insn 434(l0): point = 786
   Insn 433(l0): point = 788
   Insn 431(l0): point = 791
   Insn 430(l0): point = 793
   Insn 1338(l0): point = 796
   Insn 1167(l0): point = 798
   Insn 428(l0): point = 801
   Insn 427(l0): point = 803
   Insn 426(l0): point = 805
   Insn 424(l0): point = 808
   Insn 423(l0): point = 810
   Insn 422(l0): point = 812
   Insn 420(l0): point = 814
   Insn 419(l0): point = 816
   Insn 418(l0): point = 818
   Insn 412(l0): point = 821
   Insn 411(l0): point = 823
   Insn 410(l0): point = 825
   Insn 409(l0): point = 827
   Insn 408(l0): point = 829
   Insn 407(l0): point = 831
   Insn 404(l0): point = 834
   Insn 403(l0): point = 836
   Insn 1335(l0): point = 839
   Insn 398(l0): point = 841
   Insn 396(l0): point = 843
   Insn 395(l0): point = 846
   Insn 394(l0): point = 848
   Insn 1402(l0): point = 851
   Insn 953(l0): point = 854
   Insn 952(l0): point = 856
   Insn 1333(l0): point = 859
   Insn 390(l0): point = 861
   Insn 389(l0): point = 863
   Insn 387(l0): point = 866
   Insn 386(l0): point = 868
   Insn 383(l0): point = 871
   Insn 14(l0): point = 874
   Insn 1331(l0): point = 877
   Insn 380(l0): point = 879
   Insn 378(l0): point = 881
   Insn 377(l0): point = 884
   Insn 376(l0): point = 886
   Insn 374(l0): point = 889
   Insn 373(l0): point = 891
   Insn 370(l0): point = 894
   Insn 369(l0): point = 896
   Insn 368(l0): point = 898
   Insn 366(l0): point = 901
   Insn 365(l0): point = 903
   Insn 363(l0): point = 906
   Insn 362(l0): point = 908
   Insn 361(l0): point = 910
   Insn 360(l0): point = 912
   Insn 358(l0): point = 915
   Insn 357(l0): point = 917
   Insn 356(l0): point = 919
   Insn 355(l0): point = 921
   Insn 353(l0): point = 924
   Insn 352(l0): point = 926
   Insn 303(l0): point = 929
   Insn 302(l0): point = 931
   Insn 300(l0): point = 933
   Insn 1329(l0): point = 936
   Insn 346(l0): point = 939
   Insn 345(l0): point = 941
   Insn 343(l0): point = 943
   Insn 341(l0): point = 946
   Insn 340(l0): point = 948
   Insn 339(l0): point = 950
   Insn 338(l0): point = 952
   Insn 334(l0): point = 954
   Insn 332(l0): point = 956
   Insn 331(l0): point = 959
   Insn 330(l0): point = 961
   Insn 328(l0): point = 963
   Insn 326(l0): point = 966
   Insn 325(l0): point = 968
   Insn 324(l0): point = 970
   Insn 323(l0): point = 972
   Insn 322(l0): point = 974
   Insn 321(l0): point = 976
   Insn 319(l0): point = 978
   Insn 315(l0): point = 980
   Insn 313(l0): point = 982
   Insn 312(l0): point = 985
   Insn 311(l0): point = 987
   Insn 309(l0): point = 989
   Insn 307(l0): point = 992
   Insn 306(l0): point = 994
   Insn 304(l0): point = 996
   Insn 337(l0): point = 999
   Insn 336(l0): point = 1001
   Insn 320(l0): point = 1003
   Insn 297(l0): point = 1006
   Insn 296(l0): point = 1008
   Insn 295(l0): point = 1010
   Insn 294(l0): point = 1012
   Insn 293(l0): point = 1014
   Insn 292(l0): point = 1016
   Insn 291(l0): point = 1018
   Insn 290(l0): point = 1020
   Insn 1088(l0): point = 1022
   Insn 1087(l0): point = 1024
   Insn 287(l0): point = 1027
   Insn 286(l0): point = 1029
   Insn 284(l0): point = 1031
   Insn 282(l0): point = 1034
   Insn 281(l0): point = 1036
   Insn 280(l0): point = 1038
   Insn 279(l0): point = 1040
   Insn 275(l0): point = 1042
   Insn 274(l0): point = 1045
   Insn 273(l0): point = 1047
   Insn 271(l0): point = 1050
   Insn 270(l0): point = 1052
   Insn 267(l0): point = 1055
   Insn 266(l0): point = 1057
   Insn 264(l0): point = 1060
   Insn 263(l0): point = 1062
   Insn 260(l0): point = 1065
   Insn 12(l0): point = 1068
   Insn 1326(l0): point = 1071
   Insn 257(l0): point = 1073
   Insn 255(l0): point = 1075
   Insn 254(l0): point = 1078
   Insn 253(l0): point = 1080
   Insn 251(l0): point = 1083
   Insn 250(l0): point = 1085
   Insn 247(l0): point = 1088
   Insn 246(l0): point = 1090
   Insn 245(l0): point = 1092
   Insn 243(l0): point = 1095
   Insn 242(l0): point = 1097
   Insn 1297(l0): point = 1100
   Insn 13(l0): point = 1102
   Insn 127(l0): point = 1105
   Insn 126(l0): point = 1107
   Insn 125(l0): point = 1109
   Insn 124(l0): point = 1111
   Insn 1321(l0): point = 1114
   Insn 225(l0): point = 1117
   Insn 224(l0): point = 1119
   Insn 223(l0): point = 1121
   Insn 222(l0): point = 1123
   Insn 221(l0): point = 1125
   Insn 219(l0): point = 1127
   Insn 218(l0): point = 1129
   Insn 1300(l0): point = 1132
   Insn 140(l0): point = 1135
   Insn 139(l0): point = 1137
   Insn 138(l0): point = 1139
   Insn 137(l0): point = 1141
   Insn 136(l0): point = 1143
   Insn 134(l0): point = 1145
   Insn 133(l0): point = 1147
   Insn 1303(l0): point = 1150
   Insn 153(l0): point = 1153
   Insn 152(l0): point = 1155
   Insn 151(l0): point = 1157
   Insn 150(l0): point = 1159
   Insn 149(l0): point = 1161
   Insn 147(l0): point = 1163
   Insn 146(l0): point = 1165
   Insn 1306(l0): point = 1168
   Insn 165(l0): point = 1171
   Insn 164(l0): point = 1173
   Insn 163(l0): point = 1175
   Insn 162(l0): point = 1177
   Insn 161(l0): point = 1179
   Insn 159(l0): point = 1181
   Insn 158(l0): point = 1183
   Insn 1309(l0): point = 1186
   Insn 177(l0): point = 1189
   Insn 176(l0): point = 1191
   Insn 175(l0): point = 1193
   Insn 174(l0): point = 1195
   Insn 173(l0): point = 1197
   Insn 171(l0): point = 1199
   Insn 170(l0): point = 1201
   Insn 1312(l0): point = 1204
   Insn 189(l0): point = 1207
   Insn 188(l0): point = 1209
   Insn 187(l0): point = 1211
   Insn 186(l0): point = 1213
   Insn 185(l0): point = 1215
   Insn 183(l0): point = 1217
   Insn 182(l0): point = 1219
   Insn 1315(l0): point = 1222
   Insn 201(l0): point = 1225
   Insn 200(l0): point = 1227
   Insn 199(l0): point = 1229
   Insn 198(l0): point = 1231
   Insn 197(l0): point = 1233
   Insn 195(l0): point = 1235
   Insn 194(l0): point = 1237
   Insn 1318(l0): point = 1240
   Insn 213(l0): point = 1243
   Insn 212(l0): point = 1245
   Insn 211(l0): point = 1247
   Insn 210(l0): point = 1249
   Insn 209(l0): point = 1251
   Insn 207(l0): point = 1253
   Insn 206(l0): point = 1255
   Insn 1324(l0): point = 1258
   Insn 237(l0): point = 1261
   Insn 236(l0): point = 1263
   Insn 235(l0): point = 1265
   Insn 234(l0): point = 1267
   Insn 233(l0): point = 1269
   Insn 231(l0): point = 1271
   Insn 230(l0): point = 1273
   Insn 122(l0): point = 1276
   Insn 121(l0): point = 1278
   Insn 120(l0): point = 1280
   Insn 119(l0): point = 1282
   Insn 118(l0): point = 1284
   Insn 116(l0): point = 1286
   Insn 114(l0): point = 1288
   Insn 113(l0): point = 1290
   Insn 112(l0): point = 1292
   Insn 110(l0): point = 1295
   Insn 109(l0): point = 1297
   Insn 106(l0): point = 1299
   Insn 105(l0): point = 1301
   Insn 104(l0): point = 1303
   Insn 102(l0): point = 1306
   Insn 101(l0): point = 1308
   Insn 98(l0): point = 1310
   Insn 97(l0): point = 1312
   Insn 96(l0): point = 1314
   Insn 94(l0): point = 1317
   Insn 93(l0): point = 1319
   Insn 90(l0): point = 1321
   Insn 89(l0): point = 1323
   Insn 88(l0): point = 1325
   Insn 86(l0): point = 1328
   Insn 85(l0): point = 1330
   Insn 82(l0): point = 1332
   Insn 81(l0): point = 1334
   Insn 80(l0): point = 1336
   Insn 78(l0): point = 1339
   Insn 77(l0): point = 1341
   Insn 74(l0): point = 1343
   Insn 73(l0): point = 1345
   Insn 72(l0): point = 1347
   Insn 70(l0): point = 1350
   Insn 69(l0): point = 1352
   Insn 66(l0): point = 1354
   Insn 65(l0): point = 1356
   Insn 64(l0): point = 1358
   Insn 62(l0): point = 1361
   Insn 61(l0): point = 1363
   Insn 58(l0): point = 1365
   Insn 57(l0): point = 1367
   Insn 56(l0): point = 1369
   Insn 54(l0): point = 1372
   Insn 53(l0): point = 1374
   Insn 50(l0): point = 1376
   Insn 49(l0): point = 1378
   Insn 48(l0): point = 1380
   Insn 46(l0): point = 1383
   Insn 45(l0): point = 1385
   Insn 42(l0): point = 1387
   Insn 41(l0): point = 1389
   Insn 1295(l0): point = 1392
   Insn 1166(l0): point = 1394
   Insn 39(l0): point = 1397
   Insn 38(l0): point = 1399
   Insn 36(l0): point = 1401
   Insn 35(l0): point = 1404
   Insn 34(l0): point = 1406
   Insn 32(l0): point = 1408
   Insn 30(l0): point = 1411
   Insn 29(l0): point = 1413
   Insn 28(l0): point = 1415
   Insn 27(l0): point = 1417
   Insn 26(l0): point = 1419
   Insn 25(l0): point = 1421
   Insn 23(l0): point = 1424
   Insn 22(l0): point = 1426
   Insn 20(l0): point = 1428
   Insn 19(l0): point = 1430
   Insn 18(l0): point = 1432
   Insn 11(l0): point = 1434
   Insn 8(l0): point = 1436
   Insn 7(l0): point = 1438
   Insn 6(l0): point = 1440
   Insn 5(l0): point = 1442
   Insn 4(l0): point = 1444
   Insn 3(l0): point = 1446
   Insn 2(l0): point = 1448
 a0(r253): [28..1448] [11..12]
 a1(r159): [442..454] [334..346]
 a2(r255): [448..1444] [338..346]
 a3(r450): [199..1421] [48..186]
 a4(r440): [455..456]
 a5(r141): [560..633]
 a6(r258): [531..1438]
 a7(r259): [465..1436]
 a8(r447): [1392..1394] [1276..1288] [1258..1271] [1240..1253] [1222..1235] [1204..1217] [1186..1199] [1168..1181] [1150..1163] [1132..1145] [551..1127]
 a9(r449): [611..613] [590..598] [570..582]
 a10(r100): [828..1042] [162..166]
 a11(r257): [1397..1440] [639..1391]
 a12(r438): [33..35] [16..30]
 a13(r162): [21..27]
 a14(r420): [167..169] [155..157] [135..137] [115..117] [95..97] [75..77] [55..57] [36..52]
 a15(r156): [41..49]
 a16(r437): [46..47]
 a17(r434): [58..72]
 a18(r147): [63..69]
 a19(r432): [78..92]
 a20(r134): [83..89]
 a21(r430): [98..112]
 a22(r127): [103..109]
 a23(r428): [118..132]
 a24(r120): [123..129]
 a25(r426): [138..152]
 a26(r148): [143..149]
 a27(r424): [158..164]
 a28(r421): [170..184]
 a29(r161): [175..181]
 a30(r160): [192..200]
 a31(r418): [197..198]
 a32(r166): [211..215] [206..207]
 a33(r415): [336..341]
 a34(r216): [431..443] [222..231]
 a35(r413): [224..229]
 a36(r154): [437..447] [226..231]
 a37(r220): [420..432] [320..329]
 a38(r411): [322..327]
 a39(r218): [426..436] [324..329]
 a40(r224): [409..421] [306..315]
 a41(r409): [308..313]
 a42(r222): [415..425] [310..315]
 a43(r228): [398..410] [292..301]
 a44(r407): [294..299]
 a45(r226): [404..414] [296..301]
 a46(r232): [387..399] [278..287]
 a47(r405): [280..285]
 a48(r230): [393..403] [282..287]
 a49(r236): [376..388] [264..273]
 a50(r403): [266..271]
 a51(r234): [382..392] [268..273]
 a52(r240): [365..377] [250..259]
 a53(r401): [252..257]
 a54(r238): [371..381] [254..259]
 a55(r244): [362..366] [236..245]
 a56(r399): [238..243]
 a57(r242): [360..370] [240..245]
 a58(r397): [348..355]
 a59(r395): [350..357]
 a60(r246): [352..359]
 a61(r392): [367..368]
 a62(r389): [378..379]
 a63(r386): [389..390]
 a64(r383): [400..401]
 a65(r380): [411..412]
 a66(r377): [422..423]
 a67(r374): [433..434]
 a68(r371): [444..445]
 a69(r168): [512..521] [498..505] [475..490]
 a70(r214): [488..492] [483..485]
 a71(r144): [510..523]
 a72(r369): [527..532]
 a73(r368): [529..534]
 a74(r151): [539..545]
 a75(r366): [549..554]
 a76(r363): [558..561]
 a77(r213): [592..596] [580..584]
 a78(r132): [614..620] [604..610]
 a79(r361): [624..629]
 a80(r360): [626..631]
 a81(r359): [641..648]
 a82(r140): [643..656]
 a83(r139): [645..658]
 a84(r357): [669..672]
 a85(r135): [671..679]
 a86(r448): [724..726] [703..711] [685..695]
 a87(r211): [705..709] [693..697]
 a88(r125): [727..733] [717..723]
 a89(r355): [737..742]
 a90(r354): [739..744]
 a91(r129): [741..746]
 a92(r446): [796..798] [775..783] [757..767]
 a93(r209): [777..781] [765..769]
 a94(r116): [799..805] [789..795]
 a95(r352): [809..814]
 a96(r351): [811..816]
 a97(r122): [813..818]
 a98(r119): [842..843]
 a99(r167): [901..910] [887..894] [864..879]
 a100(r207): [877..881] [872..874]
 a101(r97): [899..912]
 a102(r350): [918..921]
 a103(r451): [929..1003]
 a104(r452): [929..1001]
 a105(r453): [929..999]
 a106(r348): [940..943]
 a107(r344 [0]): [955..956]
 a107(r344 [1]): [955..956]
 a108(r342): [960..963]
 a109(r340): [973..978]
 a110(r336 [0]): [981..982]
 a110(r336 [1]): [981..982]
 a111(r334): [986..989]
 a112(r107): [995..996]
 a113(r332): [930..933]
 a114(r331): [1009..1018]
 a115(r330): [1013..1020]
 a116(r444): [1015..1024]
 a117(r445): [1017..1022]
 a118(r328): [1028..1031]
 a119(r256): [1397..1442] [1039..1391]
 a120(r250): [1100..1102] [1071..1073] [1058..1068]
 a121(r87): [1105..1109] [1095..1099] [1081..1088] [1066..1075]
 a122(r206): [1103..1111] [1093..1099]
 a123(r96): [1375..1387] [1262..1275]
 a124(r323): [1264..1273]
 a125(r173): [1364..1376] [1118..1131]
 a126(r320): [1120..1129]
 a127(r171): [1370..1380] [1122..1131]
 a128(r177): [1353..1365] [1244..1257]
 a129(r317): [1246..1255]
 a130(r175): [1359..1369] [1248..1257]
 a131(r181): [1342..1354] [1226..1239]
 a132(r314): [1228..1237]
 a133(r179): [1348..1358] [1230..1239]
 a134(r185): [1331..1343] [1208..1221]
 a135(r311): [1210..1219]
 a136(r183): [1337..1347] [1212..1221]
 a137(r189): [1320..1332] [1190..1203]
 a138(r308): [1192..1201]
 a139(r187): [1326..1336] [1194..1203]
 a140(r193): [1309..1321] [1172..1185]
 a141(r305): [1174..1183]
 a142(r191): [1315..1325] [1176..1185]
 a143(r197): [1298..1310] [1154..1167]
 a144(r302): [1156..1165]
 a145(r195): [1304..1314] [1158..1167]
 a146(r201): [1295..1299] [1136..1149]
 a147(r299): [1138..1147]
 a148(r199): [1293..1303] [1140..1149]
 a149(r297): [1277..1286]
 a150(r294): [1279..1290]
 a151(r203): [1281..1292]
 a152(r291): [1300..1301]
 a153(r288): [1311..1312]
 a154(r285): [1322..1323]
 a155(r282): [1333..1334]
 a156(r279): [1344..1345]
 a157(r276): [1355..1356]
 a158(r273): [1366..1367]
 a159(r270): [1377..1378]
 a160(r267): [1388..1389]
 a161(r94): [1400..1401]
 a162(r265): [1405..1408]
 a163(r254): [1416..1446]
 a164(r264): [1418..1419]
 a165(r261): [1425..1428]
Compressing live ranges: from 1451 to 270 - 18%
Ranges after the compression:
 a0(r253): [4..269] [0..1]
 a1(r159): [96..101] [64..65]
 a2(r255): [100..269] [64..65]
 a3(r450): [42..267] [10..39]
 a4(r440): [102..103]
 a5(r141): [118..131]
 a6(r258): [112..269]
 a7(r259): [104..269]
 a8(r447): [260..261] [116..225]
 a9(r449): [126..127] [120..123]
 a10(r100): [160..193] [34..35]
 a11(r257): [262..269] [132..259]
 a12(r438): [2..7]
 a13(r162): [2..3]
 a14(r420): [36..37] [32..33] [28..29] [24..25] [20..21] [16..17] [8..13]
 a15(r156): [8..11]
 a16(r437): [8..9]
 a17(r434): [14..15]
 a18(r147): [14..15]
 a19(r432): [18..19]
 a20(r134): [18..19]
 a21(r430): [22..23]
 a22(r127): [22..23]
 a23(r428): [26..27]
 a24(r120): [26..27]
 a25(r426): [30..31]
 a26(r148): [30..31]
 a27(r424): [34..35]
 a28(r421): [38..39]
 a29(r161): [38..39]
 a30(r160): [40..43]
 a31(r418): [40..41]
 a32(r166): [44..47]
 a33(r415): [64..65]
 a34(r216): [92..97] [48..49]
 a35(r413): [48..49]
 a36(r154): [96..99] [48..49]
 a37(r220): [88..93] [62..63]
 a38(r411): [62..63]
 a39(r218): [92..95] [62..63]
 a40(r224): [84..89] [60..61]
 a41(r409): [60..61]
 a42(r222): [88..91] [60..61]
 a43(r228): [80..85] [58..59]
 a44(r407): [58..59]
 a45(r226): [84..87] [58..59]
 a46(r232): [76..81] [56..57]
 a47(r405): [56..57]
 a48(r230): [80..83] [56..57]
 a49(r236): [72..77] [54..55]
 a50(r403): [54..55]
 a51(r234): [76..79] [54..55]
 a52(r240): [68..73] [52..53]
 a53(r401): [52..53]
 a54(r238): [72..75] [52..53]
 a55(r244): [68..69] [50..51]
 a56(r399): [50..51]
 a57(r242): [68..71] [50..51]
 a58(r397): [66..67]
 a59(r395): [66..67]
 a60(r246): [66..67]
 a61(r392): [70..71]
 a62(r389): [74..75]
 a63(r386): [78..79]
 a64(r383): [82..83]
 a65(r380): [86..87]
 a66(r377): [90..91]
 a67(r374): [94..95]
 a68(r371): [98..99]
 a69(r168): [104..111]
 a70(r214): [104..107]
 a71(r144): [110..111]
 a72(r369): [112..113]
 a73(r368): [112..113]
 a74(r151): [114..115]
 a75(r366): [116..117]
 a76(r363): [118..119]
 a77(r213): [120..123]
 a78(r132): [128..129] [124..125]
 a79(r361): [130..131]
 a80(r360): [130..131]
 a81(r359): [132..133]
 a82(r140): [132..133]
 a83(r139): [132..133]
 a84(r357): [134..135]
 a85(r135): [134..135]
 a86(r448): [142..143] [136..139]
 a87(r211): [136..139]
 a88(r125): [144..145] [140..141]
 a89(r355): [146..147]
 a90(r354): [146..147]
 a91(r129): [146..147]
 a92(r446): [154..155] [148..151]
 a93(r209): [148..151]
 a94(r116): [156..157] [152..153]
 a95(r352): [158..159]
 a96(r351): [158..159]
 a97(r122): [158..159]
 a98(r119): [160..161]
 a99(r167): [162..169]
 a100(r207): [162..165]
 a101(r97): [168..169]
 a102(r350): [170..171]
 a103(r451): [172..187]
 a104(r452): [172..187]
 a105(r453): [172..187]
 a106(r348): [174..175]
 a107(r344 [0]): [176..177]
 a107(r344 [1]): [176..177]
 a108(r342): [178..179]
 a109(r340): [180..181]
 a110(r336 [0]): [182..183]
 a110(r336 [1]): [182..183]
 a111(r334): [184..185]
 a112(r107): [186..187]
 a113(r332): [172..173]
 a114(r331): [188..189]
 a115(r330): [188..189]
 a116(r444): [188..189]
 a117(r445): [188..189]
 a118(r328): [190..191]
 a119(r256): [262..269] [192..259]
 a120(r250): [202..203] [194..197]
 a121(r87): [204..205] [194..201]
 a122(r206): [204..205] [200..201]
 a123(r96): [254..257] [222..223]
 a124(r323): [222..223]
 a125(r173): [250..255] [206..207]
 a126(r320): [206..207]
 a127(r171): [254..257] [206..207]
 a128(r177): [246..251] [220..221]
 a129(r317): [220..221]
 a130(r175): [250..253] [220..221]
 a131(r181): [242..247] [218..219]
 a132(r314): [218..219]
 a133(r179): [246..249] [218..219]
 a134(r185): [238..243] [216..217]
 a135(r311): [216..217]
 a136(r183): [242..245] [216..217]
 a137(r189): [234..239] [214..215]
 a138(r308): [214..215]
 a139(r187): [238..241] [214..215]
 a140(r193): [230..235] [212..213]
 a141(r305): [212..213]
 a142(r191): [234..237] [212..213]
 a143(r197): [226..231] [210..211]
 a144(r302): [210..211]
 a145(r195): [230..233] [210..211]
 a146(r201): [226..227] [208..209]
 a147(r299): [208..209]
 a148(r199): [226..229] [208..209]
 a149(r297): [224..225]
 a150(r294): [224..225]
 a151(r203): [224..225]
 a152(r291): [228..229]
 a153(r288): [232..233]
 a154(r285): [236..237]
 a155(r282): [240..241]
 a156(r279): [244..245]
 a157(r276): [248..249]
 a158(r273): [252..253]
 a159(r270): [256..257]
 a160(r267): [258..259]
 a161(r94): [262..263]
 a162(r265): [264..265]
 a163(r254): [266..269]
 a164(r264): [266..267]
 a165(r261): [268..269]
+++Allocating 2616 bytes for conflict table (uncompressed size 4032)
;; a0(r253,l0) conflicts: a12(r438,l0) a16(r437,l0) a15(r156,l0) a14(r420,l0) a3(r450,l0) a17(r434,l0) a18(r147,l0) a19(r432,l0) a20(r134,l0) a21(r430,l0) a22(r127,l0) a23(r428,l0) a24(r120,l0) a25(r426,l0) a26(r148,l0) a27(r424,l0) a10(r100,l0) a28(r421,l0) a29(r161,l0) a31(r418,l0) a30(r160,l0) a32(r166,l0) a35(r413,l0) a34(r216,l0) a36(r154,l0) a56(r399,l0) a55(r244,l0) a57(r242,l0) a53(r401,l0) a52(r240,l0) a54(r238,l0) a50(r403,l0) a49(r236,l0) a51(r234,l0) a47(r405,l0) a46(r232,l0) a48(r230,l0) a44(r407,l0) a43(r228,l0) a45(r226,l0) a41(r409,l0) a40(r224,l0) a42(r222,l0) a38(r411,l0) a37(r220,l0) a39(r218,l0) a33(r415,l0) a1(r159,l0) a2(r255,l0) a58(r397,l0) a59(r395,l0) a60(r246,l0) a61(r392,l0) a62(r389,l0) a63(r386,l0) a64(r383,l0) a65(r380,l0) a66(r377,l0) a67(r374,l0) a68(r371,l0) a4(r440,l0) a70(r214,l0) a69(r168,l0) a7(r259,l0) a71(r144,l0) a72(r369,l0) a73(r368,l0) a6(r258,l0) a74(r151,l0) a75(r366,l0) a8(r447,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a1(r159,l0) conflicts: a0(r253,l0) a3(r450,l0) a34(r216,l0) a36(r154,l0) a33(r415,l0) a2(r255,l0) a68(r371,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a2(r255,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a33(r415,l0) a1(r159,l0) a4(r440,l0) a70(r214,l0) a69(r168,l0) a7(r259,l0) a71(r144,l0) a72(r369,l0) a73(r368,l0) a6(r258,l0) a74(r151,l0) a75(r366,l0) a8(r447,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a3(r450,l0) conflicts: a0(r253,l0) a15(r156,l0) a14(r420,l0) a17(r434,l0) a18(r147,l0) a19(r432,l0) a20(r134,l0) a21(r430,l0) a22(r127,l0) a23(r428,l0) a24(r120,l0) a25(r426,l0) a26(r148,l0) a27(r424,l0) a10(r100,l0) a28(r421,l0) a29(r161,l0) a30(r160,l0) a32(r166,l0) a35(r413,l0) a34(r216,l0) a36(r154,l0) a56(r399,l0) a55(r244,l0) a57(r242,l0) a53(r401,l0) a52(r240,l0) a54(r238,l0) a50(r403,l0) a49(r236,l0) a51(r234,l0) a47(r405,l0) a46(r232,l0) a48(r230,l0) a44(r407,l0) a43(r228,l0) a45(r226,l0) a41(r409,l0) a40(r224,l0) a42(r222,l0) a38(r411,l0) a37(r220,l0) a39(r218,l0) a33(r415,l0) a1(r159,l0) a2(r255,l0) a58(r397,l0) a59(r395,l0) a60(r246,l0) a61(r392,l0) a62(r389,l0) a63(r386,l0) a64(r383,l0) a65(r380,l0) a66(r377,l0) a67(r374,l0) a68(r371,l0) a4(r440,l0) a70(r214,l0) a69(r168,l0) a7(r259,l0) a71(r144,l0) a72(r369,l0) a73(r368,l0) a6(r258,l0) a74(r151,l0) a75(r366,l0) a8(r447,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a4(r440,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r141,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a76(r363,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a6(r258,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a72(r369,l0) a73(r368,l0) a74(r151,l0) a75(r366,l0) a8(r447,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a7(r259,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a70(r214,l0) a69(r168,l0) a71(r144,l0) a72(r369,l0) a73(r368,l0) a6(r258,l0) a74(r151,l0) a75(r366,l0) a8(r447,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a8(r447,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a75(r366,l0) a76(r363,l0) a5(r141,l0) a77(r213,l0) a9(r449,l0) a78(r132,l0) a79(r361,l0) a80(r360,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a9(r449,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0) a77(r213,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r100,l0) conflicts: a0(r253,l0) a3(r450,l0) a27(r424,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a11(r257,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a81(r359,l0) a82(r140,l0) a83(r139,l0) a84(r357,l0) a85(r135,l0) a87(r211,l0) a86(r448,l0) a88(r125,l0) a89(r355,l0) a90(r354,l0) a91(r129,l0) a93(r209,l0) a92(r446,l0) a94(r116,l0) a95(r352,l0) a96(r351,l0) a97(r122,l0) a98(r119,l0) a100(r207,l0) a99(r167,l0) a101(r97,l0) a102(r350,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0) a118(r328,l0) a119(r256,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a12(r438,l0) conflicts: a0(r253,l0) a13(r162,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a13(r162,l0) conflicts: a12(r438,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r420,l0) conflicts: a0(r253,l0) a16(r437,l0) a15(r156,l0) a3(r450,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a15(r156,l0) conflicts: a0(r253,l0) a16(r437,l0) a14(r420,l0) a3(r450,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r437,l0) conflicts: a0(r253,l0) a15(r156,l0) a14(r420,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r434,l0) conflicts: a0(r253,l0) a3(r450,l0) a18(r147,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a18(r147,l0) conflicts: a0(r253,l0) a3(r450,l0) a17(r434,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r432,l0) conflicts: a0(r253,l0) a3(r450,l0) a20(r134,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a20(r134,l0) conflicts: a0(r253,l0) a3(r450,l0) a19(r432,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r430,l0) conflicts: a0(r253,l0) a3(r450,l0) a22(r127,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a22(r127,l0) conflicts: a0(r253,l0) a3(r450,l0) a21(r430,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r428,l0) conflicts: a0(r253,l0) a3(r450,l0) a24(r120,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a24(r120,l0) conflicts: a0(r253,l0) a3(r450,l0) a23(r428,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r426,l0) conflicts: a0(r253,l0) a3(r450,l0) a26(r148,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a26(r148,l0) conflicts: a0(r253,l0) a3(r450,l0) a25(r426,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r424,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a28(r421,l0) conflicts: a0(r253,l0) a3(r450,l0) a29(r161,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a29(r161,l0) conflicts: a0(r253,l0) a3(r450,l0) a28(r421,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r160,l0) conflicts: a0(r253,l0) a3(r450,l0) a31(r418,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r418,l0) conflicts: a0(r253,l0) a30(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r166,l0) conflicts: a0(r253,l0) a3(r450,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r415,l0) conflicts: a0(r253,l0) a3(r450,l0) a1(r159,l0) a2(r255,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a34(r216,l0) conflicts: a0(r253,l0) a3(r450,l0) a35(r413,l0) a36(r154,l0) a37(r220,l0) a39(r218,l0) a1(r159,l0) a67(r374,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a35(r413,l0) conflicts: a0(r253,l0) a3(r450,l0) a34(r216,l0) a36(r154,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a36(r154,l0) conflicts: a0(r253,l0) a3(r450,l0) a35(r413,l0) a34(r216,l0) a1(r159,l0) a68(r371,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a37(r220,l0) conflicts: a0(r253,l0) a3(r450,l0) a34(r216,l0) a40(r224,l0) a42(r222,l0) a38(r411,l0) a39(r218,l0) a66(r377,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a38(r411,l0) conflicts: a0(r253,l0) a3(r450,l0) a37(r220,l0) a39(r218,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a39(r218,l0) conflicts: a0(r253,l0) a3(r450,l0) a34(r216,l0) a38(r411,l0) a37(r220,l0) a67(r374,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a40(r224,l0) conflicts: a0(r253,l0) a3(r450,l0) a43(r228,l0) a45(r226,l0) a41(r409,l0) a42(r222,l0) a37(r220,l0) a65(r380,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a41(r409,l0) conflicts: a0(r253,l0) a3(r450,l0) a40(r224,l0) a42(r222,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a42(r222,l0) conflicts: a0(r253,l0) a3(r450,l0) a41(r409,l0) a40(r224,l0) a37(r220,l0) a66(r377,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a43(r228,l0) conflicts: a0(r253,l0) a3(r450,l0) a46(r232,l0) a48(r230,l0) a44(r407,l0) a45(r226,l0) a40(r224,l0) a64(r383,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a44(r407,l0) conflicts: a0(r253,l0) a3(r450,l0) a43(r228,l0) a45(r226,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a45(r226,l0) conflicts: a0(r253,l0) a3(r450,l0) a44(r407,l0) a43(r228,l0) a40(r224,l0) a65(r380,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a46(r232,l0) conflicts: a0(r253,l0) a3(r450,l0) a49(r236,l0) a51(r234,l0) a47(r405,l0) a48(r230,l0) a43(r228,l0) a63(r386,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a47(r405,l0) conflicts: a0(r253,l0) a3(r450,l0) a46(r232,l0) a48(r230,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a48(r230,l0) conflicts: a0(r253,l0) a3(r450,l0) a47(r405,l0) a46(r232,l0) a43(r228,l0) a64(r383,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a49(r236,l0) conflicts: a0(r253,l0) a3(r450,l0) a52(r240,l0) a54(r238,l0) a50(r403,l0) a51(r234,l0) a46(r232,l0) a62(r389,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a50(r403,l0) conflicts: a0(r253,l0) a3(r450,l0) a49(r236,l0) a51(r234,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a51(r234,l0) conflicts: a0(r253,l0) a3(r450,l0) a50(r403,l0) a49(r236,l0) a46(r232,l0) a63(r386,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a52(r240,l0) conflicts: a0(r253,l0) a3(r450,l0) a55(r244,l0) a57(r242,l0) a53(r401,l0) a54(r238,l0) a49(r236,l0) a61(r392,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a53(r401,l0) conflicts: a0(r253,l0) a3(r450,l0) a52(r240,l0) a54(r238,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a54(r238,l0) conflicts: a0(r253,l0) a3(r450,l0) a53(r401,l0) a52(r240,l0) a49(r236,l0) a62(r389,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a55(r244,l0) conflicts: a0(r253,l0) a3(r450,l0) a56(r399,l0) a57(r242,l0) a52(r240,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a56(r399,l0) conflicts: a0(r253,l0) a3(r450,l0) a55(r244,l0) a57(r242,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a57(r242,l0) conflicts: a0(r253,l0) a3(r450,l0) a56(r399,l0) a55(r244,l0) a52(r240,l0) a61(r392,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a58(r397,l0) conflicts: a0(r253,l0) a3(r450,l0) a59(r395,l0) a60(r246,l0)
;;     total conflict hard regs: 1 4 5
;;     conflict hard regs: 1 4 5

;; a59(r395,l0) conflicts: a0(r253,l0) a3(r450,l0) a58(r397,l0) a60(r246,l0)
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a60(r246,l0) conflicts: a0(r253,l0) a3(r450,l0) a58(r397,l0) a59(r395,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

;; a61(r392,l0) conflicts: a0(r253,l0) a3(r450,l0) a57(r242,l0) a52(r240,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a62(r389,l0) conflicts: a0(r253,l0) a3(r450,l0) a54(r238,l0) a49(r236,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a63(r386,l0) conflicts: a0(r253,l0) a3(r450,l0) a51(r234,l0) a46(r232,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a64(r383,l0) conflicts: a0(r253,l0) a3(r450,l0) a48(r230,l0) a43(r228,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a65(r380,l0) conflicts: a0(r253,l0) a3(r450,l0) a45(r226,l0) a40(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r377,l0) conflicts: a0(r253,l0) a3(r450,l0) a42(r222,l0) a37(r220,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r374,l0) conflicts: a0(r253,l0) a3(r450,l0) a34(r216,l0) a39(r218,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r371,l0) conflicts: a0(r253,l0) a3(r450,l0) a36(r154,l0) a1(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a69(r168,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a70(r214,l0) a7(r259,l0) a71(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a70(r214,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a69(r168,l0) a7(r259,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a71(r144,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a69(r168,l0) a7(r259,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a72(r369,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a73(r368,l0) a6(r258,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a73(r368,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a72(r369,l0) a6(r258,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a74(r151,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a75(r366,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a76(r363,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a77(r213,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0) a9(r449,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a78(r132,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r361,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0) a80(r360,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a80(r360,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a5(r141,l0) a79(r361,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a81(r359,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a82(r140,l0) a83(r139,l0) a11(r257,l0)
;;     total conflict hard regs: 1 2 37
;;     conflict hard regs: 1 2 37

;; a82(r140,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a81(r359,l0) a11(r257,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r139,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a81(r359,l0) a11(r257,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r357,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a85(r135,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a85(r135,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a84(r357,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r448,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a87(r211,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r211,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a86(r448,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a88(r125,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a89(r355,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a90(r354,l0) a91(r129,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a90(r354,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a89(r355,l0) a91(r129,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a91(r129,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a89(r355,l0) a90(r354,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a92(r446,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a93(r209,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a93(r209,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a92(r446,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a94(r116,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a95(r352,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a96(r351,l0) a97(r122,l0)
;;     total conflict hard regs: 4 5
;;     conflict hard regs: 4 5

;; a96(r351,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a95(r352,l0) a97(r122,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a97(r122,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a95(r352,l0) a96(r351,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r119,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r167,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a100(r207,l0) a101(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a100(r207,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a99(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r97,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a99(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a102(r350,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a103(r451,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a113(r332,l0) a104(r452,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a104(r452,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a113(r332,l0) a103(r451,l0) a105(r453,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a105(r453,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a113(r332,l0) a103(r451,l0) a104(r452,l0) a106(r348,l0) a107(r344,w0,l0) a107(r344,w1,l0) a108(r342,l0) a109(r340,l0) a110(r336,w0,l0) a110(r336,w1,l0) a111(r334,l0) a112(r107,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a106(r348,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a107(r344,l0) conflicts:
;;   subobject 0: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r342,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a109(r340,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r336,l0) conflicts:
;;   subobject 0: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:


;;   subobject 1: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r334,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a112(r107,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r332,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a103(r451,l0) a104(r452,l0) a105(r453,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a114(r331,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a115(r330,l0) a116(r444,l0) a117(r445,l0)
;;     total conflict hard regs: 1 2 4 37
;;     conflict hard regs: 1 2 4 37

;; a115(r330,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a114(r331,l0) a116(r444,l0) a117(r445,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r444,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a114(r331,l0) a115(r330,l0) a117(r445,l0)
;;     total conflict hard regs: 1 37
;;     conflict hard regs: 1 37

;; a117(r445,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a114(r331,l0) a115(r330,l0) a116(r444,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r328,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a119(r256,l0) conflicts: a0(r253,l0) a3(r450,l0) a10(r100,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a120(r250,l0) a121(r87,l0) a122(r206,l0) a126(r320,l0) a125(r173,l0) a127(r171,l0) a147(r299,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a128(r177,l0) a130(r175,l0) a124(r323,l0) a123(r96,l0) a149(r297,l0) a150(r294,l0) a151(r203,l0) a152(r291,l0) a153(r288,l0) a154(r285,l0) a155(r282,l0) a156(r279,l0) a157(r276,l0) a158(r273,l0) a159(r270,l0) a160(r267,l0) a161(r94,l0) a162(r265,l0) a164(r264,l0) a163(r254,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a120(r250,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a121(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r87,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a120(r250,l0) a122(r206,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a122(r206,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a121(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a123(r96,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a125(r173,l0) a127(r171,l0) a124(r323,l0) a159(r270,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a124(r323,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a123(r96,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a125(r173,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a126(r320,l0) a127(r171,l0) a128(r177,l0) a130(r175,l0) a123(r96,l0) a158(r273,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a126(r320,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a125(r173,l0) a127(r171,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a127(r171,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a126(r320,l0) a125(r173,l0) a123(r96,l0) a159(r270,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a128(r177,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a125(r173,l0) a131(r181,l0) a133(r179,l0) a129(r317,l0) a130(r175,l0) a157(r276,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a129(r317,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a128(r177,l0) a130(r175,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a130(r175,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a125(r173,l0) a129(r317,l0) a128(r177,l0) a158(r273,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a131(r181,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a134(r185,l0) a136(r183,l0) a132(r314,l0) a133(r179,l0) a128(r177,l0) a156(r279,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a132(r314,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a131(r181,l0) a133(r179,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a133(r179,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a132(r314,l0) a131(r181,l0) a128(r177,l0) a157(r276,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a134(r185,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a137(r189,l0) a139(r187,l0) a135(r311,l0) a136(r183,l0) a131(r181,l0) a155(r282,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a135(r311,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a134(r185,l0) a136(r183,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a136(r183,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a135(r311,l0) a134(r185,l0) a131(r181,l0) a156(r279,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a137(r189,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a140(r193,l0) a142(r191,l0) a138(r308,l0) a139(r187,l0) a134(r185,l0) a154(r285,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a138(r308,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a137(r189,l0) a139(r187,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a139(r187,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a138(r308,l0) a137(r189,l0) a134(r185,l0) a155(r282,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a140(r193,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a143(r197,l0) a145(r195,l0) a141(r305,l0) a142(r191,l0) a137(r189,l0) a153(r288,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a141(r305,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a140(r193,l0) a142(r191,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a142(r191,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a141(r305,l0) a140(r193,l0) a137(r189,l0) a154(r285,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a143(r197,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a146(r201,l0) a148(r199,l0) a144(r302,l0) a145(r195,l0) a140(r193,l0) a152(r291,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a144(r302,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a143(r197,l0) a145(r195,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a145(r195,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a144(r302,l0) a143(r197,l0) a140(r193,l0) a153(r288,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a146(r201,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a147(r299,l0) a148(r199,l0) a143(r197,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a147(r299,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a146(r201,l0) a148(r199,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a148(r199,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a147(r299,l0) a146(r201,l0) a143(r197,l0) a152(r291,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a149(r297,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a150(r294,l0) a151(r203,l0)
;;     total conflict hard regs: 1 2 4 5
;;     conflict hard regs: 1 2 4 5

;; a150(r294,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a149(r297,l0) a151(r203,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a151(r203,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a8(r447,l0) a11(r257,l0) a119(r256,l0) a149(r297,l0) a150(r294,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

;; a152(r291,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a148(r199,l0) a143(r197,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r288,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a145(r195,l0) a140(r193,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r285,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a142(r191,l0) a137(r189,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r282,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a139(r187,l0) a134(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r279,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a136(r183,l0) a131(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r276,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a133(r179,l0) a128(r177,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a158(r273,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a125(r173,l0) a130(r175,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a159(r270,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a127(r171,l0) a123(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r267,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r94,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r265,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a163(r254,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a164(r264,l0) a165(r261,l0)
;;     total conflict hard regs: 0-2 4 5 37-40
;;     conflict hard regs: 0-2 4 5 37-40

;; a164(r264,l0) conflicts: a0(r253,l0) a3(r450,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a163(r254,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a165(r261,l0) conflicts: a0(r253,l0) a2(r255,l0) a7(r259,l0) a6(r258,l0) a11(r257,l0) a119(r256,l0) a163(r254,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

  cp0:a12(r438)<->a14(r420)@1:move
  cp1:a3(r450)<->a16(r437)@1:shuffle
  cp2:a14(r420)<->a17(r434)@1:move
  cp3:a14(r420)<->a19(r432)@1:move
  cp4:a14(r420)<->a21(r430)@1:move
  cp5:a14(r420)<->a23(r428)@1:move
  cp6:a14(r420)<->a25(r426)@1:move
  cp7:a14(r420)<->a27(r424)@1:move
  cp8:a14(r420)<->a28(r421)@1:move
  cp9:a3(r450)<->a31(r418)@74:shuffle
  cp10:a9(r449)<->a78(r132)@1:move
  cp11:a86(r448)<->a88(r125)@1:move
  cp12:a92(r446)<->a94(r116)@1:move
  cp13:a120(r250)<->a122(r206)@30:move
  pref0:a9(r449)<-hr5@3
  pref1:a86(r448)<-hr5@3
  pref2:a8(r447)<-hr5@475
  pref3:a92(r446)<-hr5@3
  pref4:a117(r445)<-hr1@30
  pref5:a116(r444)<-hr0@30
  pref6:a33(r415)<-hr5@27
  pref7:a35(r413)<-hr5@21
  pref8:a38(r411)<-hr5@16
  pref9:a41(r409)<-hr5@13
  pref10:a44(r407)<-hr5@10
  pref11:a47(r405)<-hr5@7
  pref12:a50(r403)<-hr5@6
  pref13:a53(r401)<-hr5@6
  pref14:a56(r399)<-hr5@4
  pref15:a59(r395)<-hr5@19
  pref16:a73(r368)<-hr5@331
  pref17:a102(r350)<-hr5@4
  pref18:a107(r344)<-hr0@1470
  pref19:a110(r336)<-hr0@1470
  pref20:a114(r331)<-hr5@30
  pref21:a124(r323)<-hr5@88
  pref22:a126(r320)<-hr5@70
  pref23:a129(r317)<-hr5@57
  pref24:a132(r314)<-hr5@45
  pref25:a135(r311)<-hr5@36
  pref26:a138(r308)<-hr5@28
  pref27:a141(r305)<-hr5@22
  pref28:a144(r302)<-hr5@18
  pref29:a147(r299)<-hr5@13
  pref30:a150(r294)<-hr5@60
  pref31:a6(r258)<-hr4@648
  pref32:a119(r256)<-hr2@892
  pref33:a2(r255)<-hr1@892
  pref34:a163(r254)<-hr4@1785
  pref35:a0(r253)<-hr0@892
  pref36:a120(r250)<-hr5@310
  pref37:a60(r246)<-hr4@19
  pref38:a57(r242)<-hr4@4
  pref39:a54(r238)<-hr4@6
  pref40:a51(r234)<-hr4@6
  pref41:a48(r230)<-hr4@7
  pref42:a45(r226)<-hr4@10
  pref43:a42(r222)<-hr4@13
  pref44:a39(r218)<-hr4@16
  pref45:a70(r214)<-hr0@208
  pref46:a122(r206)<-hr5@279
  pref47:a151(r203)<-hr4@60
  pref48:a148(r199)<-hr4@13
  pref49:a145(r195)<-hr4@18
  pref50:a142(r191)<-hr4@22
  pref51:a139(r187)<-hr4@28
  pref52:a136(r183)<-hr4@36
  pref53:a133(r179)<-hr4@45
  pref54:a130(r175)<-hr4@57
  pref55:a127(r171)<-hr4@70
  pref56:a69(r168)<-hr5@439
  pref57:a99(r167)<-hr5@4
  pref58:a32(r166)<-hr5@96
  pref59:a30(r160)<-hr5@699
  pref60:a36(r154)<-hr4@21
  pref61:a74(r151)<-hr5@331
  pref62:a71(r144)<-hr5@208
  pref63:a85(r135)<-hr5@21
  pref64:a112(r107)<-hr0@1500
  pref65:a10(r100)<-hr5@1069
  pref66:a161(r94)<-hr0@892
  pref67:a121(r87)<-hr0@279
  pref68:a12(r438)<-hr5@1
  pref69:a13(r162)<-hr5@1
  pref70:a12(r438)<-hr0@1
  pref71:a15(r156)<-hr5@1
  pref72:a14(r420)<-hr0@1
  pref73:a18(r147)<-hr5@1
  pref74:a17(r434)<-hr0@1
  pref75:a20(r134)<-hr5@1
  pref76:a19(r432)<-hr0@1
  pref77:a22(r127)<-hr5@1
  pref78:a21(r430)<-hr0@1
  pref79:a24(r120)<-hr5@1
  pref80:a23(r428)<-hr0@1
  pref81:a26(r148)<-hr5@1
  pref82:a25(r426)<-hr0@1
  pref83:a27(r424)<-hr0@1
  pref84:a29(r161)<-hr5@1
  pref85:a28(r421)<-hr0@1
  pref86:a3(r450)<-hr1@381
  pref87:a2(r255)<-hr4@77
  pref88:a5(r141)<-hr5@1
  pref89:a77(r213)<-hr0@1
  pref90:a78(r132)<-hr5@1
  pref91:a5(r141)<-hr0@1
  pref92:a5(r141)<-hr4@1
  pref93:a80(r360)<-hr5@1
  pref94:a83(r139)<-hr2@1
  pref95:a82(r140)<-hr1@1
  pref96:a81(r359)<-hr4@1
  pref97:a11(r257)<-hr5@1
  pref98:a87(r211)<-hr0@1
  pref99:a88(r125)<-hr5@1
  pref100:a91(r129)<-hr4@1
  pref101:a90(r354)<-hr5@1
  pref102:a93(r209)<-hr0@1
  pref103:a94(r116)<-hr5@1
  pref104:a97(r122)<-hr4@1
  pref105:a96(r351)<-hr5@1
  pref106:a98(r119)<-hr0@1
  pref107:a100(r207)<-hr0@1
  pref108:a101(r97)<-hr5@1
  pref109:a10(r100)<-hr4@3
  pref110:a6(r258)<-hr5@5150
  pref111:a104(r452)<-hr1@980
  pref112:a105(r453)<-hr4@980
  pref113:a109(r340)<-hr1@980
  pref114:a103(r451)<-hr5@980
  pref115:a117(r445)<-hr37@40
  pref116:a116(r444)<-hr2@20
  pref117:a115(r330)<-hr1@20
  pref118:a10(r100)<-hr0@20
  pref119:a119(r256)<-hr4@20
  pref120:a121(r87)<-hr5@186
  pref121:a8(r447)<-hr2@293
  pref122:a164(r264)<-hr1@595
  pref123:a3(r450)<-hr5@595
  pref124:a0(r253)<-hr5@595
  pref125:a11(r257)<-hr37@1190
  pref126:a6(r258)<-hr38@1190
  regions=2, blocks=205, points=270
    allocnos=166 (big 2), copies=14, conflicts=0, ranges=224

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs
    all: 0r253 1r159 2r255 3r450 4r440 5r141 6r258 7r259 8r447 9r449 10r100 11r257 12r438 13r162 14r420 15r156 16r437 17r434 18r147 19r432 20r134 21r430 22r127 23r428 24r120 25r426 26r148 27r424 28r421 29r161 30r160 31r418 32r166 33r415 34r216 35r413 36r154 37r220 38r411 39r218 40r224 41r409 42r222 43r228 44r407 45r226 46r232 47r405 48r230 49r236 50r403 51r234 52r240 53r401 54r238 55r244 56r399 57r242 58r397 59r395 60r246 61r392 62r389 63r386 64r383 65r380 66r377 67r374 68r371 69r168 70r214 71r144 72r369 73r368 74r151 75r366 76r363 77r213 78r132 79r361 80r360 81r359 82r140 83r139 84r357 85r135 86r448 87r211 88r125 89r355 90r354 91r129 92r446 93r209 94r116 95r352 96r351 97r122 98r119 99r167 100r207 101r97 102r350 103r451 104r452 105r453 106r348 107r344 108r342 109r340 110r336 111r334 112r107 113r332 114r331 115r330 116r444 117r445 118r328 119r256 120r250 121r87 122r206 123r96 124r323 125r173 126r320 127r171 128r177 129r317 130r175 131r181 132r314 133r179 134r185 135r311 136r183 137r189 138r308 139r187 140r193 141r305 142r191 143r197 144r302 145r195 146r201 147r299 148r199 149r297 150r294 151r203 152r291 153r288 154r285 155r282 156r279 157r276 158r273 159r270 160r267 161r94 162r265 163r254 164r264 165r261
    modified regnos
    border:
    Pressure: GENERAL_REGS=16
 Removing pref124:hr5@595
 Removing pref35:hr0@892
 Removing pref87:hr4@77
 Removing pref33:hr1@892
 Removing pref123:hr5@595
 Removing pref86:hr1@381
 Removing pref92:hr4@1
 Removing pref91:hr0@1
 Removing pref88:hr5@1
 Removing pref126:hr38@1190
 Removing pref110:hr5@5150
 Removing pref31:hr4@648
 Removing pref121:hr2@293
 Removing pref2:hr5@475
 Removing pref118:hr0@20
 Removing pref109:hr4@3
 Removing pref65:hr5@1069
 Removing pref125:hr37@1190
 Removing pref97:hr5@1
 Removing pref68:hr5@1
 Removing pref114:hr5@980
 Removing pref111:hr1@980
 Removing pref112:hr4@980
 Removing pref119:hr4@20
 Removing pref32:hr2@892
 Removing pref34:hr4@1785
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@257084082
          2:( 0 2-6 37-44)@10424
            3:( 0 3-6 37-44)@33480
              4:( 0 3 5 6 37-44)@12160
                5:( 0 3 6 37-44)@41446
                  6:( 0 3 6 41-44)@98
                    7:( 3 6 41-44)@282300
            8:( 2)@2
          9:( 1)@3192
      Allocno a0r253 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a1r159 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a2r255 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a3r450 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a4r440 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r141 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a6r258 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a7r259 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a8r447 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a9r449 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r100 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a11r257 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a12r438 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a13r162 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r420 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a15r156 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r437 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a17r434 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a18r147 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r432 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a20r134 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a21r430 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a22r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a23r428 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a24r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a25r426 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a26r148 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r424 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a28r421 of GENERAL_REGS(15) has 7 avail. regs  0 3 6 41-44, node:  0 3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a29r161 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a30r160 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a31r418 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a32r166 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a33r415 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a34r216 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a35r413 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a36r154 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a37r220 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a38r411 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a39r218 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a40r224 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a41r409 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a42r222 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a43r228 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a44r407 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a45r226 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a46r232 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a47r405 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a48r230 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a49r236 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a50r403 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a51r234 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a52r240 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a53r401 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a54r238 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a55r244 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a56r399 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a57r242 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a58r397 of GENERAL_REGS(15) has 12 avail. regs  0 2 3 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 5 7-36 45-79)
      Allocno a59r395 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0 2-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a60r246 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 37-44, node:  0 2-6 37-44 (confl regs =  1 7-36 45-79)
      Allocno a61r392 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a62r389 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a63r386 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a64r383 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a65r380 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a66r377 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a67r374 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a68r371 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a69r168 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a70r214 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a71r144 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a72r369 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a73r368 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a74r151 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a75r366 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a76r363 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a77r213 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a78r132 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a79r361 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a80r360 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a81r359 of GENERAL_REGS(15) has 12 avail. regs  0 3-6 38-44, ^node:  0 3-6 37-44 (confl regs =  1 2 7-37 45-79)
      Allocno a82r140 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a83r139 of CREG(1) has 1 avail. regs  2, node:  2 (confl regs =  0 1 3-79)
      Allocno a84r357 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a85r135 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a86r448 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a87r211 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a88r125 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a89r355 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a90r354 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a91r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a92r446 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a93r209 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a94r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a95r352 of GENERAL_REGS(15) has 13 avail. regs  0-3 6 37-44, ^node:  0-6 37-44 (confl regs =  4 5 7-36 45-79)
      Allocno a96r351 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a97r122 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a98r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a99r167 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a100r207 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a101r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a102r350 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a103r451 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a104r452 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a105r453 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a106r348 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a107r344 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 obj 0 (confl regs =  7-36 45-79),  obj 1 (confl regs =  7-36 45-79)
      Allocno a108r342 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a109r340 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a110r336 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 obj 0 (confl regs =  7-36 45-79),  obj 1 (confl regs =  7-36 45-79)
      Allocno a111r334 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a112r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a113r332 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a114r331 of GENERAL_REGS(15) has 11 avail. regs  0 3 5 6 38-44, ^node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-37 45-79)
      Allocno a115r330 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a116r444 of GENERAL_REGS(15) has 13 avail. regs  0 2-6 38-44, ^node:  0 2-6 37-44 (confl regs =  1 7-37 45-79)
      Allocno a117r445 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a118r328 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a119r256 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a120r250 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a121r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a122r206 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a123r96 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a124r323 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a125r173 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a126r320 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a127r171 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a128r177 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a129r317 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a130r175 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a131r181 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a132r314 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a133r179 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a134r185 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a135r311 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a136r183 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a137r189 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a138r308 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a139r187 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a140r193 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a141r305 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a142r191 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a143r197 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a144r302 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a145r195 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a146r201 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a147r299 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a148r199 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a149r297 of GENERAL_REGS(15) has 11 avail. regs  0 3 6 37-44, node:  0 3 6 37-44 (confl regs =  1 2 4 5 7-36 45-79)
      Allocno a150r294 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, node:  0 3 5 6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a151r203 of GENERAL_REGS(15) has 13 avail. regs  0 3-6 37-44, node:  0 3-6 37-44 (confl regs =  1 2 7-36 45-79)
      Allocno a152r291 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a153r288 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a154r285 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a155r282 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a156r279 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a157r276 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a158r273 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a159r270 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a160r267 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a161r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a162r265 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a163r254 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-40 45-79)
      Allocno a164r264 of DREG(1) has 1 avail. regs  1, node:  1 (confl regs =  0 2-79)
      Allocno a165r261 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, ^node:  0-6 37-44 (confl regs =  5 7-36 45-79)
      Forming thread by copy 13:a120r250-a122r206 (freq=30):
        Result (freq=1877): a120r250(800) a122r206(1077)
      Forming thread by copy 0:a12r438-a14r420 (freq=1):
        Result (freq=12): a12r438(3) a14r420(9)
      Forming thread by copy 2:a14r420-a17r434 (freq=1):
        Result (freq=14): a12r438(3) a17r434(2) a14r420(9)
      Forming thread by copy 3:a14r420-a19r432 (freq=1):
        Result (freq=16): a12r438(3) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 4:a14r420-a21r430 (freq=1):
        Result (freq=18): a12r438(3) a21r430(2) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 5:a14r420-a23r428 (freq=1):
        Result (freq=20): a12r438(3) a23r428(2) a21r430(2) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 6:a14r420-a25r426 (freq=1):
        Result (freq=22): a12r438(3) a25r426(2) a23r428(2) a21r430(2) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 7:a14r420-a27r424 (freq=1):
        Result (freq=24): a12r438(3) a27r424(2) a25r426(2) a23r428(2) a21r430(2) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 8:a14r420-a28r421 (freq=1):
        Result (freq=26): a12r438(3) a28r421(2) a27r424(2) a25r426(2) a23r428(2) a21r430(2) a19r432(2) a17r434(2) a14r420(9)
      Forming thread by copy 10:a9r449-a78r132 (freq=1):
        Result (freq=13): a9r449(8) a78r132(5)
      Forming thread by copy 11:a86r448-a88r125 (freq=1):
        Result (freq=13): a86r448(8) a88r125(5)
      Forming thread by copy 12:a92r446-a94r116 (freq=1):
        Result (freq=13): a92r446(8) a94r116(5)
      Pushing a98(r119,l0)(cost 0)
      Pushing a96(r351,l0)(cost 0)
      Pushing a95(r352,l0)(cost 0)
      Pushing a90(r354,l0)(cost 0)
      Pushing a89(r355,l0)(cost 0)
      Pushing a83(r139,l0)(cost 0)
      Pushing a82(r140,l0)(cost 0)
      Pushing a81(r359,l0)(cost 0)
      Pushing a80(r360,l0)(cost 0)
      Pushing a79(r361,l0)(cost 0)
      Pushing a76(r363,l0)(cost 0)
      Pushing a16(r437,l0)(cost 0)
      Pushing a97(r122,l0)(cost 0)
      Pushing a93(r209,l0)(cost 0)
      Pushing a91(r129,l0)(cost 0)
      Pushing a87(r211,l0)(cost 0)
      Pushing a77(r213,l0)(cost 0)
      Pushing a29(r161,l0)(cost 0)
      Pushing a26(r148,l0)(cost 0)
      Pushing a24(r120,l0)(cost 0)
      Pushing a22(r127,l0)(cost 0)
      Pushing a20(r134,l0)(cost 0)
      Pushing a18(r147,l0)(cost 0)
      Pushing a15(r156,l0)(cost 0)
      Pushing a13(r162,l0)(cost 0)
      Pushing a100(r207,l0)(cost 0)
      Pushing a102(r350,l0)(cost 0)
      Pushing a56(r399,l0)(cost 0)
      Pushing a53(r401,l0)(cost 0)
      Pushing a50(r403,l0)(cost 0)
      Pushing a101(r97,l0)(cost 0)
      Pushing a47(r405,l0)(cost 0)
      Pushing a94(r116,l0)(cost 0)
      Pushing a92(r446,l0)(cost 0)
      Pushing a88(r125,l0)(cost 0)
      Pushing a86(r448,l0)(cost 0)
      Pushing a78(r132,l0)(cost 0)
      Pushing a9(r449,l0)(cost 0)
      Pushing a44(r407,l0)(cost 0)
      Pushing a99(r167,l0)(cost 0)
      Pushing a147(r299,l0)(cost 0)
      Pushing a41(r409,l0)(cost 0)
      Pushing a38(r411,l0)(cost 0)
      Pushing a144(r302,l0)(cost 0)
      Pushing a59(r395,l0)(cost 0)
      Pushing a58(r397,l0)(cost 0)
      Pushing a28(r421,l0)(cost 0)
      Pushing a27(r424,l0)(cost 0)
      Pushing a25(r426,l0)(cost 0)
      Pushing a23(r428,l0)(cost 0)
      Pushing a21(r430,l0)(cost 0)
      Pushing a19(r432,l0)(cost 0)
      Pushing a17(r434,l0)(cost 0)
      Pushing a12(r438,l0)(cost 0)
      Pushing a14(r420,l0)(cost 0)
      Pushing a84(r357,l0)(cost 0)
      Pushing a35(r413,l0)(cost 0)
      Pushing a141(r305,l0)(cost 0)
      Pushing a61(r392,l0)(cost 0)
      Pushing a55(r244,l0)(cost 0)
      Pushing a33(r415,l0)(cost 0)
      Pushing a138(r308,l0)(cost 0)
      Pushing a60(r246,l0)(cost 0)
      Pushing a118(r328,l0)(cost 0)
      Pushing a117(r445,l0)(cost 0)
        Making a115(r330,l0) colorable
      Pushing a116(r444,l0)(cost 0)
      Pushing a115(r330,l0)(cost 40)
      Pushing a114(r331,l0)(cost 0)
      Pushing a62(r389,l0)(cost 0)
      Pushing a135(r311,l0)(cost 0)
      Pushing a57(r242,l0)(cost 0)
      Pushing a63(r386,l0)(cost 0)
      Pushing a132(r314,l0)(cost 0)
      Pushing a64(r383,l0)(cost 0)
      Pushing a54(r238,l0)(cost 0)
      Pushing a52(r240,l0)(cost 0)
      Pushing a85(r135,l0)(cost 0)
      Pushing a51(r234,l0)(cost 0)
      Pushing a49(r236,l0)(cost 0)
      Pushing a129(r317,l0)(cost 0)
      Pushing a65(r380,l0)(cost 0)
      Pushing a150(r294,l0)(cost 0)
      Pushing a149(r297,l0)(cost 0)
      Pushing a48(r230,l0)(cost 0)
      Pushing a46(r232,l0)(cost 0)
      Pushing a126(r320,l0)(cost 0)
      Pushing a66(r377,l0)(cost 0)
      Pushing a152(r291,l0)(cost 0)
        Making a143(r197,l0) colorable
      Pushing a146(r201,l0)(cost 0)
      Pushing a45(r226,l0)(cost 0)
      Pushing a43(r228,l0)(cost 0)
      Pushing a124(r323,l0)(cost 0)
      Pushing a67(r374,l0)(cost 0)
      Pushing a151(r203,l0)(cost 0)
      Pushing a153(r288,l0)(cost 0)
        Making a140(r193,l0) colorable
      Pushing a42(r222,l0)(cost 0)
      Pushing a40(r224,l0)(cost 0)
      Pushing a68(r371,l0)(cost 0)
      Pushing a148(r199,l0)(cost 0)
      Pushing a154(r285,l0)(cost 0)
        Making a137(r189,l0) colorable
      Pushing a39(r218,l0)(cost 0)
      Pushing a37(r220,l0)(cost 0)
      Pushing a145(r195,l0)(cost 0)
      Pushing a143(r197,l0)(cost 632)
      Pushing a155(r282,l0)(cost 0)
        Making a134(r185,l0) colorable
      Pushing a36(r154,l0)(cost 0)
      Pushing a34(r216,l0)(cost 0)
      Pushing a142(r191,l0)(cost 0)
      Pushing a140(r193,l0)(cost 792)
      Pushing a156(r279,l0)(cost 0)
        Making a131(r181,l0) colorable
      Pushing a32(r166,l0)(cost 0)
      Pushing a139(r187,l0)(cost 0)
      Pushing a137(r189,l0)(cost 989)
      Pushing a157(r276,l0)(cost 0)
        Making a128(r177,l0) colorable
      Pushing a136(r183,l0)(cost 0)
      Pushing a134(r185,l0)(cost 1234)
      Pushing a158(r273,l0)(cost 0)
        Making a125(r173,l0) colorable
      Pushing a70(r214,l0)(cost 0)
      Pushing a73(r368,l0)(cost 0)
      Pushing a72(r369,l0)(cost 0)
      Pushing a133(r179,l0)(cost 0)
      Pushing a131(r181,l0)(cost 1547)
      Pushing a159(r270,l0)(cost 0)
      Pushing a130(r175,l0)(cost 0)
      Pushing a128(r177,l0)(cost 1938)
      Pushing a4(r440,l0)(cost 0)
      Pushing a160(r267,l0)(cost 0)
      Pushing a75(r366,l0)(cost 0)
      Pushing a1(r159,l0)(cost 0)
      Pushing a127(r171,l0)(cost 0)
      Pushing a125(r173,l0)(cost 2424)
      Pushing a71(r144,l0)(cost 0)
      Pushing a74(r151,l0)(cost 0)
      Pushing a123(r96,l0)(cost 0)
      Pushing a165(r261,l0)(cost 0)
      Pushing a164(r264,l0)(cost 0)
      Pushing a162(r265,l0)(cost 0)
      Pushing a161(r94,l0)(cost 0)
      Pushing a31(r418,l0)(cost 0)
      Pushing a69(r168,l0)(cost 0)
      Pushing a30(r160,l0)(cost 0)
      Pushing a121(r87,l0)(cost 0)
      Pushing a120(r250,l0)(cost 0)
      Pushing a122(r206,l0)(cost 0)
      Pushing a111(r334,l0)(cost 0)
      Pushing a110(r336,l0)(cost 0)
      Pushing a109(r340,l0)(cost 0)
      Pushing a108(r342,l0)(cost 0)
      Pushing a107(r344,l0)(cost 0)
      Pushing a106(r348,l0)(cost 0)
      Pushing a113(r332,l0)(cost 0)
      Pushing a112(r107,l0)(cost 0)
      Pushing a5(r141,l0)(potential spill: pri=22, cost=22)
      Pushing a103(r451,l0)(potential spill: pri=1006, cost=3020)
      Pushing a104(r452,l0)(potential spill: pri=1006, cost=3020)
      Pushing a105(r453,l0)(potential spill: pri=1006, cost=3020)
      Pushing a10(r100,l0)(potential spill: pri=1088, cost=3266)
      Pushing a8(r447,l0)(potential spill: pri=1396, cost=4190)
      Pushing a11(r257,l0)(potential spill: pri=1587, cost=4763)
      Pushing a3(r450,l0)(potential spill: pri=2365, cost=7096)
        Making a0(r253,l0) colorable
        Making a2(r255,l0) colorable
        Making a7(r259,l0) colorable
        Making a6(r258,l0) colorable
        Making a119(r256,l0) colorable
        Making a163(r254,l0) colorable
      Pushing a119(r256,l0)(cost 2440)
      Pushing a163(r254,l0)(cost 4165)
      Pushing a2(r255,l0)(cost 8575)
      Pushing a7(r259,l0)(cost 17888)
      Pushing a0(r253,l0)(cost 13241)
      Pushing a6(r258,l0)(cost 66444)
      Popping a6(r258,l0)  -- assign reg 3
      Popping a0(r253,l0)  -- assign reg 6
      Popping a7(r259,l0)  -- assign reg 41
      Popping a2(r255,l0)  -- assign reg 42
      Popping a163(r254,l0)  -- assign reg 43
      Popping a119(r256,l0)  -- assign reg 44
      Popping a3(r450,l0)  -- spill
      Popping a11(r257,l0)  -- spill
      Popping a8(r447,l0)  -- assign reg 43
      Popping a10(r100,l0)  -- spill
      Popping a105(r453,l0)  -- assign reg 44
      Popping a104(r452,l0)  -- spill
      Popping a103(r451,l0)  -- spill
      Popping a5(r141,l0)  -- assign reg 44
      Popping a112(r107,l0)  -- assign reg 0
      Popping a113(r332,l0)  -- assign reg 0
      Popping a106(r348,l0)  -- assign reg 0
      Popping a107(r344,l0)  -- assign reg 0
      Popping a108(r342,l0)  -- assign reg 0
      Popping a109(r340,l0)  -- assign reg 1
      Popping a110(r336,l0)  -- assign reg 0
      Popping a111(r334,l0)  -- assign reg 0
      Popping a122(r206,l0)  -- assign reg 5
      Popping a120(r250,l0)  -- assign reg 5
      Popping a121(r87,l0)  -- assign reg 0
      Popping a30(r160,l0)  -- assign reg 5
      Popping a69(r168,l0)  -- assign reg 5
      Popping a31(r418,l0)  -- assign reg 0
      Popping a161(r94,l0)  -- assign reg 0
      Popping a162(r265,l0)  -- assign reg 0
      Popping a164(r264,l0)  -- assign reg 1
      Popping a165(r261,l0)  -- assign reg 0
      Popping a123(r96,l0)  -- assign reg 0
      Popping a74(r151,l0)  -- assign reg 5
      Popping a71(r144,l0)  -- assign reg 0
      Popping a125(r173,l0)  -- assign reg 37
      Popping a127(r171,l0)  -- assign reg 4
      Popping a1(r159,l0)  -- assign reg 0
      Popping a75(r366,l0)  -- assign reg 0
      Popping a160(r267,l0)  -- assign reg 0
      Popping a4(r440,l0)  -- assign reg 0
      Popping a128(r177,l0)  -- assign reg 0
      Popping a130(r175,l0)  -- assign reg 4
      Popping a159(r270,l0)  -- assign reg 1
      Popping a131(r181,l0)  -- assign reg 37
      Popping a133(r179,l0)  -- assign reg 4
      Popping a72(r369,l0)  -- assign reg 0
      Popping a73(r368,l0)  -- assign reg 5
      Popping a70(r214,l0)  -- assign reg 0
      Popping a158(r273,l0)  -- assign reg 0
      Popping a134(r185,l0)  -- assign reg 0
      Popping a136(r183,l0)  -- assign reg 4
      Popping a157(r276,l0)  -- assign reg 1
      Popping a137(r189,l0)  -- assign reg 37
      Popping a139(r187,l0)  -- assign reg 4
      Popping a32(r166,l0)  -- assign reg 5
      Popping a156(r279,l0)  -- assign reg 0
      Popping a140(r193,l0)  -- assign reg 0
      Popping a142(r191,l0)  -- assign reg 4
      Popping a34(r216,l0)  -- assign reg 2
      Popping a36(r154,l0)  -- assign reg 4
      Popping a155(r282,l0)  -- assign reg 1
      Popping a143(r197,l0)  -- assign reg 37
      Popping a145(r195,l0)  -- assign reg 4
      Popping a37(r220,l0)  -- assign reg 0
      Popping a39(r218,l0)  -- assign reg 4
      Popping a154(r285,l0)  -- assign reg 0
      Popping a148(r199,l0)  -- assign reg 4
      Popping a68(r371,l0)  -- assign reg 1
      Popping a40(r224,l0)  -- assign reg 2
      Popping a42(r222,l0)  -- assign reg 4
      Popping a153(r288,l0)  -- assign reg 1
      Popping a151(r203,l0)  -- assign reg 4
      Popping a67(r374,l0)  -- assign reg 0
      Popping a124(r323,l0)  -- assign reg 5
      Popping a43(r228,l0)  -- assign reg 0
      Popping a45(r226,l0)  -- assign reg 4
      Popping a146(r201,l0)  -- assign reg 0
      Popping a152(r291,l0)  -- assign reg 0
      Popping a66(r377,l0)  -- assign reg 1
      Popping a126(r320,l0)  -- assign reg 5
      Popping a46(r232,l0)  -- assign reg 2
      Popping a48(r230,l0)  -- assign reg 4
      Popping a149(r297,l0)  -- assign reg 0
      Popping a150(r294,l0)  -- assign reg 5
      Popping a65(r380,l0)  -- assign reg 0
      Popping a129(r317,l0)  -- assign reg 5
      Popping a49(r236,l0)  -- assign reg 0
      Popping a51(r234,l0)  -- assign reg 4
      Popping a85(r135,l0)  -- assign reg 5
      Popping a52(r240,l0)  -- assign reg 2
      Popping a54(r238,l0)  -- assign reg 4
      Popping a64(r383,l0)  -- assign reg 1
      Popping a132(r314,l0)  -- assign reg 5
      Popping a63(r386,l0)  -- assign reg 0
      Popping a57(r242,l0)  -- assign reg 4
      Popping a135(r311,l0)  -- assign reg 5
      Popping a62(r389,l0)  -- assign reg 1
      Popping a114(r331,l0)  -- assign reg 5
      Popping a115(r330,l0)  -- (memory is more profitable -20 vs 0) spill!
      Popping a116(r444,l0)  -- assign reg 0
      Popping a117(r445,l0)  -- assign reg 37
      Popping a118(r328,l0)  -- assign reg 0
      Popping a60(r246,l0)  -- assign reg 4
      Popping a138(r308,l0)  -- assign reg 5
      Popping a33(r415,l0)  -- assign reg 5
      Popping a55(r244,l0)  -- assign reg 0
      Popping a61(r392,l0)  -- assign reg 0
      Popping a141(r305,l0)  -- assign reg 5
      Popping a35(r413,l0)  -- assign reg 5
      Popping a84(r357,l0)  -- assign reg 0
      Popping a14(r420,l0)  -- assign reg 3
      Popping a12(r438,l0)  -- assign reg 3
      Popping a17(r434,l0)  -- assign reg 3
      Popping a19(r432,l0)  -- assign reg 3
      Popping a21(r430,l0)  -- assign reg 3
      Popping a23(r428,l0)  -- assign reg 3
      Popping a25(r426,l0)  -- assign reg 3
      Popping a27(r424,l0)  -- assign reg 3
      Popping a28(r421,l0)  -- assign reg 3
      Popping a58(r397,l0)  -- assign reg 0
      Popping a59(r395,l0)  -- assign reg 5
      Popping a144(r302,l0)  -- assign reg 5
      Popping a38(r411,l0)  -- assign reg 5
      Popping a41(r409,l0)  -- assign reg 5
      Popping a147(r299,l0)  -- assign reg 5
      Popping a99(r167,l0)  -- assign reg 5
      Popping a44(r407,l0)  -- assign reg 5
      Popping a9(r449,l0)  -- assign reg 5
      Popping a78(r132,l0)  -- assign reg 5
      Popping a86(r448,l0)  -- assign reg 5
      Popping a88(r125,l0)  -- assign reg 5
      Popping a92(r446,l0)  -- assign reg 5
      Popping a94(r116,l0)  -- assign reg 5
      Popping a47(r405,l0)  -- assign reg 5
      Popping a101(r97,l0)  -- assign reg 0
      Popping a50(r403,l0)  -- assign reg 5
      Popping a53(r401,l0)  -- assign reg 5
      Popping a56(r399,l0)  -- assign reg 5
      Popping a102(r350,l0)  -- assign reg 5
      Popping a100(r207,l0)  -- assign reg 0
      Popping a13(r162,l0)  -- assign reg 5
      Popping a15(r156,l0)  -- assign reg 5
      Popping a18(r147,l0)  -- assign reg 5
      Popping a20(r134,l0)  -- assign reg 5
      Popping a22(r127,l0)  -- assign reg 5
      Popping a24(r120,l0)  -- assign reg 5
      Popping a26(r148,l0)  -- assign reg 5
      Popping a29(r161,l0)  -- assign reg 5
      Popping a77(r213,l0)  -- assign reg 0
      Popping a87(r211,l0)  -- assign reg 0
      Popping a91(r129,l0)  -- assign reg 4
      Popping a93(r209,l0)  -- assign reg 0
      Popping a97(r122,l0)  -- assign reg 4
      Popping a16(r437,l0)  -- assign reg 0
      Popping a76(r363,l0)  -- assign reg 0
      Popping a79(r361,l0)  -- assign reg 0
      Popping a80(r360,l0)  -- assign reg 5
      Popping a81(r359,l0)  -- assign reg 4
      Popping a82(r140,l0)  -- assign reg 1
      Popping a83(r139,l0)  -- assign reg 2
      Popping a89(r355,l0)  -- assign reg 0
      Popping a90(r354,l0)  -- assign reg 5
      Popping a95(r352,l0)  -- assign reg 0
      Popping a96(r351,l0)  -- assign reg 5
      Popping a98(r119,l0)  -- assign reg 0
Spilling a5r141 for a3r450
Spilling a105r453 for a3r450
Spilling a119r256 for a3r450
Assigning 44 to a3r450
Assigning 1 to a115r330
       a5(r141,l0)  -- assign memory
       a119(r256,l0)  -- assign memory
       a105(r453,l0)  -- assign memory
Disposition:
  121:r87  l0     0  161:r94  l0     0  123:r96  l0     0  101:r97  l0     0
   10:r100 l0   mem  112:r107 l0     0   94:r116 l0     5   98:r119 l0     0
   24:r120 l0     5   97:r122 l0     4   88:r125 l0     5   22:r127 l0     5
   91:r129 l0     4   78:r132 l0     5   20:r134 l0     5   85:r135 l0     5
   83:r139 l0     2   82:r140 l0     1    5:r141 l0   mem   71:r144 l0     0
   18:r147 l0     5   26:r148 l0     5   74:r151 l0     5   36:r154 l0     4
   15:r156 l0     5    1:r159 l0     0   30:r160 l0     5   29:r161 l0     5
   13:r162 l0     5   32:r166 l0     5   99:r167 l0     5   69:r168 l0     5
  127:r171 l0     4  125:r173 l0    37  130:r175 l0     4  128:r177 l0     0
  133:r179 l0     4  131:r181 l0    37  136:r183 l0     4  134:r185 l0     0
  139:r187 l0     4  137:r189 l0    37  142:r191 l0     4  140:r193 l0     0
  145:r195 l0     4  143:r197 l0    37  148:r199 l0     4  146:r201 l0     0
  151:r203 l0     4  122:r206 l0     5  100:r207 l0     0   93:r209 l0     0
   87:r211 l0     0   77:r213 l0     0   70:r214 l0     0   34:r216 l0     2
   39:r218 l0     4   37:r220 l0     0   42:r222 l0     4   40:r224 l0     2
   45:r226 l0     4   43:r228 l0     0   48:r230 l0     4   46:r232 l0     2
   51:r234 l0     4   49:r236 l0     0   54:r238 l0     4   52:r240 l0     2
   57:r242 l0     4   55:r244 l0     0   60:r246 l0     4  120:r250 l0     5
    0:r253 l0     6  163:r254 l0    43    2:r255 l0    42  119:r256 l0   mem
   11:r257 l0   mem    6:r258 l0     3    7:r259 l0    41  165:r261 l0     0
  164:r264 l0     1  162:r265 l0     0  160:r267 l0     0  159:r270 l0     1
  158:r273 l0     0  157:r276 l0     1  156:r279 l0     0  155:r282 l0     1
  154:r285 l0     0  153:r288 l0     1  152:r291 l0     0  150:r294 l0     5
  149:r297 l0     0  147:r299 l0     5  144:r302 l0     5  141:r305 l0     5
  138:r308 l0     5  135:r311 l0     5  132:r314 l0     5  129:r317 l0     5
  126:r320 l0     5  124:r323 l0     5  118:r328 l0     0  115:r330 l0     1
  114:r331 l0     5  113:r332 l0     0  111:r334 l0     0  110:r336 l0     0
  109:r340 l0     1  108:r342 l0     0  107:r344 l0     0  106:r348 l0     0
  102:r350 l0     5   96:r351 l0     5   95:r352 l0     0   90:r354 l0     5
   89:r355 l0     0   84:r357 l0     0   81:r359 l0     4   80:r360 l0     5
   79:r361 l0     0   76:r363 l0     0   75:r366 l0     0   73:r368 l0     5
   72:r369 l0     0   68:r371 l0     1   67:r374 l0     0   66:r377 l0     1
   65:r380 l0     0   64:r383 l0     1   63:r386 l0     0   62:r389 l0     1
   61:r392 l0     0   59:r395 l0     5   58:r397 l0     0   56:r399 l0     5
   53:r401 l0     5   50:r403 l0     5   47:r405 l0     5   44:r407 l0     5
   41:r409 l0     5   38:r411 l0     5   35:r413 l0     5   33:r415 l0     5
   31:r418 l0     0   14:r420 l0     3   28:r421 l0     3   27:r424 l0     3
   25:r426 l0     3   23:r428 l0     3   21:r430 l0     3   19:r432 l0     3
   17:r434 l0     3   16:r437 l0     0   12:r438 l0     3    4:r440 l0     0
  116:r444 l0     0  117:r445 l0    37   92:r446 l0     5    8:r447 l0    43
   86:r448 l0     5    9:r449 l0     5    3:r450 l0    44  103:r451 l0   mem
  104:r452 l0   mem  105:r453 l0   mem
New iteration of spill/restore move
+++Costs: overall -128451313, reg -128468484, mem 17171, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


leveldb::Status leveldb::BuildTable(const string&, leveldb::Env*, const leveldb::Options&, leveldb::TableCache*, leveldb::Iterator*, leveldb::FileMetaData*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags] 37[r8] 38[r9]
;;  ref usage 	r0={89d,25u} r1={117d,30u} r2={92d,14u} r4={111d,33u} r5={156d,78u} r6={1d,204u} r7={1d,282u} r8={78d} r9={78d} r10={78d} r11={78d} r12={78d} r13={78d} r14={78d} r15={78d} r16={1d,204u} r17={187d,65u} r18={78d} r19={78d} r20={1d,286u,104e} r21={79d} r22={79d} r23={79d} r24={79d} r25={79d} r26={79d} r27={79d} r28={79d} r29={78d} r30={78d} r31={78d} r32={78d} r33={78d} r34={78d} r35={78d} r36={78d} r37={82d,4u} r38={79d,1u} r39={78d} r40={78d} r45={78d} r46={78d} r47={78d} r48={78d} r49={78d} r50={78d} r51={78d} r52={78d} r53={78d} r54={78d} r55={78d} r56={78d} r57={78d} r58={78d} r59={78d} r60={78d} r61={78d} r62={78d} r63={78d} r64={78d} r65={78d} r66={78d} r67={78d} r68={78d} r69={78d} r70={78d} r71={78d} r72={78d} r73={78d} r74={78d} r75={78d} r76={78d} r77={78d} r78={78d} r79={78d} r80={78d} r87={3d,4u} r94={1d,1u} r96={1d,3u} r97={1d,3u} r100={1d,8u} r107={1d,1u} r116={1d,4u} r119={1d,1u} r120={1d,2u} r122={1d,2u} r125={1d,4u} r127={1d,2u} r129={1d,2u} r132={1d,4u} r134={1d,2u} r135={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,4u,1e} r144={1d,3u} r147={1d,2u} r148={1d,2u} r151={1d,2u} r154={1d,3u,1e} r156={1d,2u} r159={1d,3u} r160={1d,2u} r161={1d,2u} r162={1d,2u} r166={1d,2u} r167={3d,5u} r168={3d,5u} r171={1d,3u,1e} r173={1d,3u} r175={1d,3u,1e} r177={1d,3u} r179={1d,3u,1e} r181={1d,3u} r183={1d,3u,1e} r185={1d,3u} r187={1d,3u,1e} r189={1d,3u} r191={1d,3u,1e} r193={1d,3u} r195={1d,3u,1e} r197={1d,3u} r199={1d,3u,1e} r201={1d,2u} r203={1d,2u} r206={1d,4u} r207={2d,1u} r209={2d,1u} r211={2d,1u} r213={2d,1u} r214={2d,1u} r216={1d,3u} r218={1d,3u,1e} r220={1d,3u} r222={1d,3u,1e} r224={1d,3u} r226={1d,3u,1e} r228={1d,3u} r230={1d,3u,1e} r232={1d,3u} r234={1d,3u,1e} r236={1d,3u} r238={1d,3u,1e} r240={1d,3u} r242={1d,3u,1e} r244={1d,2u} r246={1d,2u} r250={3d,2u} r253={1d,22u} r254={1d,1u} r255={1d,6u,2e} r256={1d,1u} r257={1d,1u} r258={1d,18u,8e} r259={1d,10u,6e} r261={1d,1u} r264={1d,1u} r265={1d,1u} r267={1d,1u} r270={1d,1u} r273={1d,1u} r276={1d,1u} r279={1d,1u} r282={1d,1u} r285={1d,1u} r288={1d,1u} r291={1d,1u} r294={1d,1u} r297={1d,1u} r299={1d,1u} r302={1d,1u} r305={1d,1u} r308={1d,1u} r311={1d,1u} r314={1d,1u} r317={1d,1u} r320={1d,1u} r323={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r334={1d,1u} r336={1d,1u} r340={1d,1u} r342={1d,1u} r344={1d,1u} r348={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r354={1d,1u} r355={1d,1u} r357={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r363={1d,1u} r366={1d,1u} r368={1d,1u} r369={1d,1u} r371={1d,1u} r374={1d,1u} r377={1d,1u} r380={1d,1u} r383={1d,1u} r386={1d,1u} r389={1d,1u} r392={1d,1u} r395={1d,1u} r397={1d,1u} r399={1d,1u} r401={1d,1u} r403={1d,1u} r405={1d,1u} r407={1d,1u} r409={1d,1u} r411={1d,1u} r413={1d,1u} r415={1d,1u} r418={1d,1u} r420={8d,1u} r421={1d,1u} r424={1d,1u} r426={1d,1u} r428={1d,1u} r430={1d,1u} r432={1d,1u} r434={1d,1u} r437={1d,1u} r438={2d,1u} r440={1d,1u} r444={1d,1u} r445={1d,1u} r446={3d,5u} r447={11d,11u} r448={3d,5u} r449={3d,5u} r450={1d,23u} r451={1d,1u} r452={1d,1u} r453={1d,1u} 
;;    total ref usage 7866{6120d,1609u,137e} in 624{546 regular + 78 call} insns.
(note 1 0 16 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 253 254 255 256 257 258 259 261
(note 16 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 16 3 2 (set (reg/f:DI 253 [ <retval> ])
        (reg:DI 5 di [ .result_ptr ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ .result_ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 254 [ dbname ])
        (reg:DI 4 si [ dbname ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ dbname ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 255 [ env ])
        (reg:DI 1 dx [ env ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ env ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 256 [ options ])
        (reg:DI 2 cx [ options ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ options ])
        (nil)))
(insn 6 5 7 2 (set (reg/v/f:DI 257 [ table_cache ])
        (reg:DI 37 r8 [ table_cache ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ table_cache ])
        (nil)))
(insn 7 6 8 2 (set (reg/v/f:DI 258 [ iter ])
        (reg:DI 38 r9 [ iter ])) db/builder.cc:22 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 38 r9 [ iter ])
        (nil)))
(insn 8 7 9 2 (set (reg/v/f:DI 259 [ meta ])
        (mem/f/c:DI (reg/f:DI 16 argp) [3 meta+0 S8 A64])) db/builder.cc:22 89 {*movdi_internal}
     (nil))
(note 9 8 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 9 18 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [3 D.51474+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:22 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 11 19 2 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/status.h:24 89 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (const_int 0 [0])) db/builder.cc:24 89 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 261 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:25 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 21 20 22 2 NOTE_INSN_DELETED)
(insn 22 21 23 2 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:25 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 2 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 261 [ iter_19(D)->_vptr.Iterator ])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_20 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_21;(struct Iterator)iter_19(D)->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:25 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 261 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       192 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 254 255 256 257 258 259

;; basic block 3, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(6){ }u21(7){ }u22(16){ }u23(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 254 255 256 257 258 259
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 259
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 264 450
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 450)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:27 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0]))
            (nil))))
(insn 26 25 27 3 (set (reg:DI 264 [ meta_17(D)->number ])
        (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 27 26 28 3 (set (reg:DI 1 dx)
        (reg:DI 264 [ meta_17(D)->number ])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 264 [ meta_17(D)->number ])
        (nil)))
(insn 28 27 29 3 (set (reg:DI 4 si)
        (reg/v/f:DI 254 [ dbname ])) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 254 [ dbname ])
        (nil)))
(insn 29 28 30 3 (set (reg:DI 5 di)
        (reg/f:DI 450)) db/builder.cc:27 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(call_insn 30 29 31 3 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>) [0 TableFileName S1 A8])
        (const_int 0 [0])) db/builder.cc:27 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 1 [0x1])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb13TableFileNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEm") [flags 0x41]  <function_decl 0x7f0d12a63e58 TableFileName>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       192 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450

;; basic block 4, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 265
(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg/f:DI 265 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:28 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 33 32 34 4 NOTE_INSN_DELETED)
(insn 34 33 35 4 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:28 89 {*movdi_internal}
     (nil))
(call_insn 35 34 1012 4 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 265 [ iter_19(D)->_vptr.Iterator ])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_26 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_27;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:28 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 265 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450

;; basic block 5, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94
(note 1012 35 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 1012 38 5 (set (reg:QI 94 [ D.51467 ])
        (reg:QI 0 ax)) db/builder.cc:28 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 38 36 39 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ D.51467 ])
            (const_int 0 [0]))) db/builder.cc:28 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 94 [ D.51467 ])
        (nil)))
(jump_insn 39 38 1187 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1294)
            (pc))) db/builder.cc:28 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1294)
;;  succ:       7 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450

;; basic block 6, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 447
(note 1187 39 1166 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1187 1295 6 (set (reg/f:DI 447)
        (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))) 214 {*leadi}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(jump_insn 1295 1166 1296 6 (set (pc)
        (label_ref 576)) 654 {jump}
     (nil)
 -> 576)
;;  succ:       114 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450

(barrier 1296 1295 1294)
;; basic block 7, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(6){ }u57(7){ }u58(16){ }u59(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 255
;; lr  def 	 17 [flags] 96 267
(code_label 1294 1296 40 7 200 "" [1 uses])
(note 40 1294 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (set (reg/f:DI 267 [ env_30(D)->_vptr.Env ])
        (mem/f:DI (reg/v/f:DI 255 [ env ]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 255 [ env ]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 42 41 43 7 (set (reg/f:DI 96 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 267 [ env_30(D)->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_31 + 32B]+0 S8 A64])) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 267 [ env_30(D)->_vptr.Env ])
        (nil)))
(note 43 42 45 7 NOTE_INSN_DELETED)
(insn 45 43 46 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.51465 ])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper15NewWritableFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPNS_12WritableFileE") [flags 0x1]  <function_decl 0x7f0d1234cca8 NewWritableFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 46 45 47 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 228)
;;  succ:       8 [80.0%]  (FALLTHRU)
;;              35 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450

;; basic block 8, loop depth 0, count 0, freq 2381, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [80.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 255
;; lr  def 	 17 [flags] 171 173 270
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg/f:DI 171 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 255 [ env ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 270 [ _223->_vptr.Env ])
        (mem/f:DI (reg/f:DI 171 [ D.51471 ]) [3 _223->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 171 [ D.51471 ]) [3 _223->_vptr.Env+0 S8 A64])
        (nil)))
(insn 50 49 53 8 (set (reg/f:DI 173 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 270 [ _223->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_224 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 270 [ _223->_vptr.Env ])
        (nil)))
(insn 53 50 54 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 173 [ D.51465 ])
            (reg/f:DI 96 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.51465 ])
        (nil)))
(jump_insn 54 53 55 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 216)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 216)
;;  succ:       9 [80.0%]  (FALLTHRU)
;;              33 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450

;; basic block 9, loop depth 0, count 0, freq 1905, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [80.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173
;; lr  def 	 17 [flags] 175 177 273
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 56 55 57 9 (set (reg/f:DI 175 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 171 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_223].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ D.51471 ])
        (nil)))
(insn 57 56 58 9 (set (reg/f:DI 273 [ _228->_vptr.Env ])
        (mem/f:DI (reg/f:DI 175 [ D.51471 ]) [3 _228->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 175 [ D.51471 ]) [3 _228->_vptr.Env+0 S8 A64])
        (nil)))
(insn 58 57 61 9 (set (reg/f:DI 177 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 273 [ _228->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_229 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 273 [ _228->_vptr.Env ])
        (nil)))
(insn 61 58 62 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 177 [ D.51465 ])
            (reg/f:DI 173 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.51465 ])
        (nil)))
(jump_insn 62 61 63 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1999 (nil)))
 -> 204)
;;  succ:       10 [80.0%]  (FALLTHRU)
;;              31 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450

;; basic block 10, loop depth 0, count 0, freq 1524, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [80.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177
;; lr  def 	 17 [flags] 179 181 276
(note 63 62 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 10 (set (reg/f:DI 179 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 175 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_228].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.51471 ])
        (nil)))
(insn 65 64 66 10 (set (reg/f:DI 276 [ _233->_vptr.Env ])
        (mem/f:DI (reg/f:DI 179 [ D.51471 ]) [3 _233->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 179 [ D.51471 ]) [3 _233->_vptr.Env+0 S8 A64])
        (nil)))
(insn 66 65 69 10 (set (reg/f:DI 181 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 276 [ _233->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_234 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 276 [ _233->_vptr.Env ])
        (nil)))
(insn 69 66 70 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 181 [ D.51465 ])
            (reg/f:DI 177 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.51465 ])
        (nil)))
(jump_insn 70 69 71 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 192)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 192)
;;  succ:       11 [80.0%]  (FALLTHRU)
;;              29 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450

;; basic block 11, loop depth 0, count 0, freq 1219, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [80.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(6){ }u96(7){ }u97(16){ }u98(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181
;; lr  def 	 17 [flags] 183 185 279
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 11 (set (reg/f:DI 183 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 179 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_233].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 179 [ D.51471 ])
        (nil)))
(insn 73 72 74 11 (set (reg/f:DI 279 [ _238->_vptr.Env ])
        (mem/f:DI (reg/f:DI 183 [ D.51471 ]) [3 _238->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 183 [ D.51471 ]) [3 _238->_vptr.Env+0 S8 A64])
        (nil)))
(insn 74 73 77 11 (set (reg/f:DI 185 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 279 [ _238->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_239 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 279 [ _238->_vptr.Env ])
        (nil)))
(insn 77 74 78 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 185 [ D.51465 ])
            (reg/f:DI 181 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.51465 ])
        (nil)))
(jump_insn 78 77 79 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 180)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1970 (nil)))
 -> 180)
;;  succ:       12 [80.3%]  (FALLTHRU)
;;              27 [19.7%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450

;; basic block 12, loop depth 0, count 0, freq 979, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [80.3%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u105(6){ }u106(7){ }u107(16){ }u108(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185
;; lr  def 	 17 [flags] 187 189 282
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 187 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 183 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_238].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.51471 ])
        (nil)))
(insn 81 80 82 12 (set (reg/f:DI 282 [ _243->_vptr.Env ])
        (mem/f:DI (reg/f:DI 187 [ D.51471 ]) [3 _243->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 187 [ D.51471 ]) [3 _243->_vptr.Env+0 S8 A64])
        (nil)))
(insn 82 81 85 12 (set (reg/f:DI 189 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 282 [ _243->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_244 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 282 [ _243->_vptr.Env ])
        (nil)))
(insn 85 82 86 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 189 [ D.51465 ])
            (reg/f:DI 185 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 185 [ D.51465 ])
        (nil)))
(jump_insn 86 85 87 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 168)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1976 (nil)))
 -> 168)
;;  succ:       13 [80.2%]  (FALLTHRU)
;;              25 [19.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450

;; basic block 13, loop depth 0, count 0, freq 786, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [80.2%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189
;; lr  def 	 17 [flags] 191 193 285
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 13 (set (reg/f:DI 191 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 187 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_243].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.51471 ])
        (nil)))
(insn 89 88 90 13 (set (reg/f:DI 285 [ _248->_vptr.Env ])
        (mem/f:DI (reg/f:DI 191 [ D.51471 ]) [3 _248->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 191 [ D.51471 ]) [3 _248->_vptr.Env+0 S8 A64])
        (nil)))
(insn 90 89 93 13 (set (reg/f:DI 193 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 285 [ _248->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_249 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 285 [ _248->_vptr.Env ])
        (nil)))
(insn 93 90 94 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 193 [ D.51465 ])
            (reg/f:DI 189 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 189 [ D.51465 ])
        (nil)))
(jump_insn 94 93 95 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 156)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 156)
;;  succ:       14 [80.0%]  (FALLTHRU)
;;              23 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450

;; basic block 14, loop depth 0, count 0, freq 628, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [80.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u125(6){ }u126(7){ }u127(16){ }u128(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193
;; lr  def 	 17 [flags] 195 197 288
(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 14 (set (reg/f:DI 195 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 191 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_248].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ D.51471 ])
        (nil)))
(insn 97 96 98 14 (set (reg/f:DI 288 [ _253->_vptr.Env ])
        (mem/f:DI (reg/f:DI 195 [ D.51471 ]) [3 _253->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 195 [ D.51471 ]) [3 _253->_vptr.Env+0 S8 A64])
        (nil)))
(insn 98 97 101 14 (set (reg/f:DI 197 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 288 [ _253->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_254 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 288 [ _253->_vptr.Env ])
        (nil)))
(insn 101 98 102 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 197 [ D.51465 ])
            (reg/f:DI 193 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 193 [ D.51465 ])
        (nil)))
(jump_insn 102 101 103 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1940 (nil)))
 -> 144)
;;  succ:       15 [80.6%]  (FALLTHRU)
;;              21 [19.4%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450

;; basic block 15, loop depth 0, count 0, freq 507, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [80.6%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(6){ }u136(7){ }u137(16){ }u138(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197
;; lr  def 	 17 [flags] 199 201 291
(note 103 102 104 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 15 (set (reg/f:DI 199 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 195 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_253].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.51471 ])
        (nil)))
(insn 105 104 106 15 (set (reg/f:DI 291 [ _258->_vptr.Env ])
        (mem/f:DI (reg/f:DI 199 [ D.51471 ]) [3 _258->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 199 [ D.51471 ]) [3 _258->_vptr.Env+0 S8 A64])
        (nil)))
(insn 106 105 109 15 (set (reg/f:DI 201 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 291 [ _258->_vptr.Env ])
                (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_259 + 32B]+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 291 [ _258->_vptr.Env ])
        (nil)))
(insn 109 106 110 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 201 [ D.51465 ])
            (reg/f:DI 197 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 197 [ D.51465 ])
        (nil)))
(jump_insn 110 109 111 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1952 (nil)))
 -> 131)
;;  succ:       16 [80.5%]  (FALLTHRU)
;;              19 [19.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 201 253 255 256 257 258 259 450

;; basic block 16, loop depth 0, count 0, freq 408, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       15 [80.5%]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u145(6){ }u146(7){ }u147(16){ }u148(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 203 294 297 447
(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 16 (set (reg/f:DI 203 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 199 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_258].target_+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ D.51471 ])
        (nil)))
(insn 113 112 114 16 (parallel [
            (set (reg/f:DI 294)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 114 113 116 16 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 116 114 117 16 (set (reg/f:DI 297 [ _263->_vptr.Env ])
        (mem/f:DI (reg/f:DI 203 [ D.51471 ]) [3 _263->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (nil))
(note 117 116 118 16 NOTE_INSN_DELETED)
(insn 118 117 119 16 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 119 118 120 16 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 120 119 121 16 (set (reg:DI 4 si)
        (reg/f:DI 203 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 203 [ D.51471 ])
        (nil)))
(insn 121 120 122 16 (set (reg:DI 5 di)
        (reg/f:DI 294)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 294)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 122 121 141 16 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 297 [ _263->_vptr.Env ])
                    (const_int 32 [0x20])) [3 MEM[(int (*__vtbl_ptr_type) () *)_264 + 32B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_265;(struct Env)_263->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 297 [ _263->_vptr.Env ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_CALL_DECL (nil)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       17 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 17, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              34 [100.0%] 
;;              20 [100.0%] 
;;              22 [100.0%] 
;;              24 [100.0%] 
;;              26 [100.0%] 
;;              28 [100.0%] 
;;              30 [100.0%] 
;;              32 [100.0%] 
;;              36 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u167(6){ }u168(7){ }u169(16){ }u170(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 87 206
(code_label 141 122 123 17 41 "" [9 uses])
(note 123 141 124 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 17 (set (reg/f:DI 206 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 125 124 126 17 (set (reg/f:DI 87 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 126 125 127 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ D.51463 ])
            (reg/f:DI 87 [ D.51463 ]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 127 126 130 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 240)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 240)
;;  succ:       37 [89.9%] 
;;              18 [10.1%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450

;; basic block 18, loop depth 0, count 0, freq 302, maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [10.1%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u176(6){ }u177(7){ }u178(16){ }u179(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206
;; lr  def 	 250
(note 130 127 13 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 13 130 1297 18 (set (reg/f:DI 250 [ D.51463 ])
        (reg/f:DI 206 [ D.51463 ])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.51463 ])
        (nil)))
(jump_insn 1297 13 1298 18 (set (pc)
        (label_ref 261)) 654 {jump}
     (nil)
 -> 261)
;;  succ:       44 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450

(barrier 1298 1297 131)
;; basic block 19, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       15 [19.5%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u181(6){ }u182(7){ }u183(16){ }u184(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 201 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 199 201 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 299 447
(code_label 131 1298 132 19 38 "" [1 uses])
(note 132 131 133 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 19 (parallel [
            (set (reg/f:DI 299)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 134 133 136 19 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 136 134 137 19 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 137 136 138 19 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 138 137 139 19 (set (reg:DI 4 si)
        (reg/f:DI 199 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 199 [ D.51471 ])
        (nil)))
(insn 139 138 140 19 (set (reg:DI 5 di)
        (reg/f:DI 299)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 299)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 140 139 1299 19 (call (mem:QI (reg/f:DI 201 [ D.51465 ]) [0 *OBJ_TYPE_REF(_260;(struct Env)_258->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 201 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              20 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 20, loop depth 0, count 0, freq 99, maybe hot
;;  prev block 19, next block 21, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1299 140 1300 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1300 1299 1301 20 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1301 1300 144)
;; basic block 21, loop depth 0, count 0, freq 122, maybe hot
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL)
;;  pred:       14 [19.4%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u200(6){ }u201(7){ }u202(16){ }u203(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 195 197 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 302 447
(code_label 144 1301 145 21 37 "" [1 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (parallel [
            (set (reg/f:DI 302)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 147 146 149 21 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 149 147 150 21 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 150 149 151 21 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 151 150 152 21 (set (reg:DI 4 si)
        (reg/f:DI 195 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 195 [ D.51471 ])
        (nil)))
(insn 152 151 153 21 (set (reg:DI 5 di)
        (reg/f:DI 302)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 302)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 153 152 1302 21 (call (mem:QI (reg/f:DI 197 [ D.51465 ]) [0 *OBJ_TYPE_REF(_255;(struct Env)_253->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 197 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              22 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 22, loop depth 0, count 0, freq 122, maybe hot
;;  prev block 21, next block 23, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       21 [100.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1302 153 1303 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1303 1302 1304 22 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1304 1303 156)
;; basic block 23, loop depth 0, count 0, freq 157, maybe hot
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [20.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u219(6){ }u220(7){ }u221(16){ }u222(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 191 193 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 305 447
(code_label 156 1304 157 23 36 "" [1 uses])
(note 157 156 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 23 (parallel [
            (set (reg/f:DI 305)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 159 158 161 23 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 161 159 162 23 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 162 161 163 23 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 163 162 164 23 (set (reg:DI 4 si)
        (reg/f:DI 191 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 191 [ D.51471 ])
        (nil)))
(insn 164 163 165 23 (set (reg:DI 5 di)
        (reg/f:DI 305)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 305)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 165 164 1305 23 (call (mem:QI (reg/f:DI 193 [ D.51465 ]) [0 *OBJ_TYPE_REF(_250;(struct Env)_248->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 193 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              24 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 24, loop depth 0, count 0, freq 157, maybe hot
;;  prev block 23, next block 25, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [100.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1305 165 1306 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1306 1305 1307 24 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1307 1306 168)
;; basic block 25, loop depth 0, count 0, freq 193, maybe hot
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL)
;;  pred:       12 [19.8%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u238(6){ }u239(7){ }u240(16){ }u241(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 187 189 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 308 447
(code_label 168 1307 169 25 35 "" [1 uses])
(note 169 168 170 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 170 169 171 25 (parallel [
            (set (reg/f:DI 308)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 171 170 173 25 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 173 171 174 25 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 174 173 175 25 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 175 174 176 25 (set (reg:DI 4 si)
        (reg/f:DI 187 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 187 [ D.51471 ])
        (nil)))
(insn 176 175 177 25 (set (reg:DI 5 di)
        (reg/f:DI 308)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 308)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 177 176 1308 25 (call (mem:QI (reg/f:DI 189 [ D.51465 ]) [0 *OBJ_TYPE_REF(_245;(struct Env)_243->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 189 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              26 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 26, loop depth 0, count 0, freq 193, maybe hot
;;  prev block 25, next block 27, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       25 [100.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1308 177 1309 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1309 1308 1310 26 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1310 1309 180)
;; basic block 27, loop depth 0, count 0, freq 240, maybe hot
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [19.7%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 183 185 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 311 447
(code_label 180 1310 181 27 34 "" [1 uses])
(note 181 180 182 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 182 181 183 27 (parallel [
            (set (reg/f:DI 311)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 183 182 185 27 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 185 183 186 27 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 186 185 187 27 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 187 186 188 27 (set (reg:DI 4 si)
        (reg/f:DI 183 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 183 [ D.51471 ])
        (nil)))
(insn 188 187 189 27 (set (reg:DI 5 di)
        (reg/f:DI 311)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 311)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 189 188 1311 27 (call (mem:QI (reg/f:DI 185 [ D.51465 ]) [0 *OBJ_TYPE_REF(_240;(struct Env)_238->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 185 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              28 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 28, loop depth 0, count 0, freq 240, maybe hot
;;  prev block 27, next block 29, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       27 [100.0%]  (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1311 189 1312 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1312 1311 1313 28 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1313 1312 192)
;; basic block 29, loop depth 0, count 0, freq 305, maybe hot
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       10 [20.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u276(6){ }u277(7){ }u278(16){ }u279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 179 181 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 314 447
(code_label 192 1313 193 29 33 "" [1 uses])
(note 193 192 194 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 29 (parallel [
            (set (reg/f:DI 314)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 195 194 197 29 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 197 195 198 29 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 198 197 199 29 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 199 198 200 29 (set (reg:DI 4 si)
        (reg/f:DI 179 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 179 [ D.51471 ])
        (nil)))
(insn 200 199 201 29 (set (reg:DI 5 di)
        (reg/f:DI 314)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 314)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 201 200 1314 29 (call (mem:QI (reg/f:DI 181 [ D.51465 ]) [0 *OBJ_TYPE_REF(_235;(struct Env)_233->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 181 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 30, loop depth 0, count 0, freq 305, maybe hot
;;  prev block 29, next block 31, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       29 [100.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1314 201 1315 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1315 1314 1316 30 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1316 1315 204)
;; basic block 31, loop depth 0, count 0, freq 381, maybe hot
;;  prev block 30, next block 32, flags: (HOT_PARTITION, RTL)
;;  pred:       9 [20.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u295(6){ }u296(7){ }u297(16){ }u298(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 175 177 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 317 447
(code_label 204 1316 205 31 32 "" [1 uses])
(note 205 204 206 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 31 (parallel [
            (set (reg/f:DI 317)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 207 206 209 31 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 209 207 210 31 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 210 209 211 31 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 211 210 212 31 (set (reg:DI 4 si)
        (reg/f:DI 175 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175 [ D.51471 ])
        (nil)))
(insn 212 211 213 31 (set (reg:DI 5 di)
        (reg/f:DI 317)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 317)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 213 212 1317 31 (call (mem:QI (reg/f:DI 177 [ D.51465 ]) [0 *OBJ_TYPE_REF(_230;(struct Env)_228->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 177 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              32 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 32, loop depth 0, count 0, freq 381, maybe hot
;;  prev block 31, next block 33, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       31 [100.0%]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1317 213 1318 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1318 1317 1319 32 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1319 1318 216)
;; basic block 33, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 32, next block 34, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [20.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u314(6){ }u315(7){ }u316(16){ }u317(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 171 173 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 320 447
(code_label 216 1319 217 33 31 "" [1 uses])
(note 217 216 218 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 33 (parallel [
            (set (reg/f:DI 320)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 219 218 221 33 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:290 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 221 219 222 33 (set (reg:DI 2 cx)
        (reg/f:DI 447)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 222 221 223 33 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 223 222 224 33 (set (reg:DI 4 si)
        (reg/f:DI 171 [ D.51471 ])) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 171 [ D.51471 ])
        (nil)))
(insn 224 223 225 33 (set (reg:DI 5 di)
        (reg/f:DI 320)) ./include/leveldb/env.h:290 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 320)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 225 224 1320 33 (call (mem:QI (reg/f:DI 173 [ D.51465 ]) [0 *OBJ_TYPE_REF(_225;(struct Env)_223->4) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:290 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 173 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              34 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 34, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 33, next block 35, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1320 225 1321 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1321 1320 1322 34 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1322 1321 228)
;; basic block 35, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 34, next block 36, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [20.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u333(6){ }u334(7){ }u335(16){ }u336(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 253 255 256 257 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 96 255 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 323 447
(code_label 228 1322 229 35 30 "" [1 uses])
(note 229 228 230 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 35 (parallel [
            (set (reg/f:DI 323)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:30 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(insn 231 230 233 35 (parallel [
            (set (reg/f:DI 447)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:30 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(insn 233 231 234 35 (set (reg:DI 2 cx)
        (reg/f:DI 447)) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -96 [0xffffffffffffffa0]))
        (nil)))
(insn 234 233 235 35 (set (reg:DI 1 dx)
        (reg/f:DI 450)) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 235 234 236 35 (set (reg:DI 4 si)
        (reg/v/f:DI 255 [ env ])) db/builder.cc:30 89 {*movdi_internal}
     (nil))
(insn 236 235 237 35 (set (reg:DI 5 di)
        (reg/f:DI 323)) db/builder.cc:30 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 323)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50]))
            (nil))))
(call_insn 237 236 1323 35 (call (mem:QI (reg/f:DI 96 [ D.51465 ]) [0 *OBJ_TYPE_REF(_32;(struct Env)env_30(D)->4) S1 A8])
        (const_int 0 [0])) db/builder.cc:30 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 96 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (nil)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              36 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 36, loop depth 0, count 0, freq 595, maybe hot
;;  prev block 35, next block 37, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       35 [100.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1323 237 1324 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1324 1323 1325 36 (set (pc)
        (label_ref 141)) 654 {jump}
     (nil)
 -> 141)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

(barrier 1325 1324 240)
;; basic block 37, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 36, next block 38, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [89.9%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u352(6){ }u353(7){ }u354(16){ }u355(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206
;; lr  def 	 17 [flags]
(code_label 240 1325 241 37 39 "" [1 uses])
(note 241 240 242 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 243 242 244 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 248)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 248)
;;  succ:       38 [69.8%]  (FALLTHRU)
;;              39 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 206 253 255 256 257 258 259 447 450

;; basic block 38, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 37, next block 39, flags: (HOT_PARTITION, RTL)
;;  pred:       37 [69.8%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u358(6){ }u359(7){ }u360(16){ }u361(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 206
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 244 243 245 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 38 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 206 [ D.51463 ])
        (nil)))
(call_insn 246 245 247 38 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 247 246 248 38 (set (reg/f:DI 87 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450

;; basic block 39, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 38, next block 40, flags: (HOT_PARTITION, RTL)
;;  pred:       37 [30.2%] 
;;              38 [100.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u366(6){ }u367(7){ }u368(16){ }u369(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags]
(code_label 248 247 249 39 42 "" [1 uses])
(note 249 248 250 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 251 250 252 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1003)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1003)
;;  succ:       40 [69.8%]  (FALLTHRU)
;;              42 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450

;; basic block 40, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 39, next block 41, flags: (HOT_PARTITION, RTL)
;;  pred:       39 [69.8%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u372(6){ }u373(7){ }u374(16){ }u375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 252 251 253 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 40 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51463 ])
        (nil)))
(call_insn 254 253 1022 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 4 [0x4])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       162 (ABNORMAL,ABNORMAL_CALL,EH)
;;              41 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 41, loop depth 0, count 0, freq 1868, maybe hot
;;  prev block 40, next block 42, flags: (HOT_PARTITION, RTL)
;;  pred:       40 [100.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u379(6){ }u380(7){ }u381(16){ }u382(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 250
(note 1022 254 255 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 255 1022 257 41 (set (reg/f:DI 87 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 257 255 1326 41 (set (reg/f:DI 250 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [3 D.44368.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1326 257 1327 41 (set (pc)
        (label_ref 258)) 654 {jump}
     (nil)
 -> 258)
;;  succ:       43 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450

(barrier 1327 1326 1003)
;; basic block 42, loop depth 0, count 0, freq 807, maybe hot
;;  prev block 41, next block 43, flags: (HOT_PARTITION, RTL)
;;  pred:       39 [30.2%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u385(6){ }u386(7){ }u387(16){ }u388(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 250
(code_label 1003 1327 1002 42 114 "" [1 uses])
(note 1002 1003 12 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 12 1002 258 42 (set (reg/f:DI 250 [ D.51463 ])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       43 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450

;; basic block 43, loop depth 0, count 0, freq 2674, maybe hot
;;  prev block 42, next block 44, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [100.0%]  (FALLTHRU)
;;              41 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u389(6){ }u390(7){ }u391(16){ }u392(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 250 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 253
;; lr  def 	
(code_label 258 12 259 43 43 "" [1 uses])
(note 259 258 260 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 43 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 87 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.51463 ])
        (nil)))
;;  succ:       44 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450

;; basic block 44, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 43, next block 45, flags: (HOT_PARTITION, RTL)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u395(6){ }u396(7){ }u397(16){ }u398(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  def 	 17 [flags]
(code_label 261 260 262 44 40 "" [1 uses])
(note 262 261 263 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 250 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 264 263 265 44 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 268)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 268)
;;  succ:       45 [69.8%]  (FALLTHRU)
;;              46 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450

;; basic block 45, loop depth 0, count 0, freq 2078, maybe hot
;;  prev block 44, next block 46, flags: (HOT_PARTITION, RTL)
;;  pred:       44 [69.8%]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u401(6){ }u402(7){ }u403(16){ }u404(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 265 264 266 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 45 (set (reg:DI 5 di)
        (reg/f:DI 250 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 250 [ D.51463 ])
        (nil)))
(call_insn 267 266 268 45 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       46 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 46, loop depth 0, count 0, freq 2976, maybe hot
;;  prev block 45, next block 47, flags: (HOT_PARTITION, RTL)
;;  pred:       44 [30.2%] 
;;              45 [100.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u408(6){ }u409(7){ }u410(16){ }u411(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 268 267 269 46 44 "" [1 uses])
(note 269 268 270 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:31 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 271 270 272 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 817)
            (pc))) db/builder.cc:31 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 817)
;;  succ:       160 [93.3%] 
;;              47 [6.7%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 47, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 46, next block 48, flags: (HOT_PARTITION, RTL)
;;  pred:       46 [6.7%]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u414(6){ }u415(7){ }u416(16){ }u417(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 272 271 273 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 273 272 274 47 (set (reg:DI 5 di)
        (const_int 8 [0x8])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 274 273 1023 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>) [0 operator new S1 A8])
            (const_int 0 [0]))) db/builder.cc:35 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Znwm") [flags 0x41]  <function_decl 0x7f0d141a31b0 operator new>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              48 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450

;; basic block 48, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 47, next block 49, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       47 [100.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u420(6){ }u421(7){ }u422(16){ }u423(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 256 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 256
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 100
(note 1023 274 275 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 275 1023 279 48 (set (reg/f:DI 100 [ D.51468 ])
        (reg:DI 0 ax)) db/builder.cc:35 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 326)
            (nil))))
(insn 279 275 280 48 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(insn 280 279 281 48 (set (reg:DI 4 si)
        (reg/v/f:DI 256 [ options ])) db/builder.cc:35 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 256 [ options ])
        (nil)))
(insn 281 280 282 48 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:35 89 {*movdi_internal}
     (nil))
(call_insn 282 281 283 48 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 5 [0x5])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderC1ERKNS_7OptionsEPNS_12WritableFileE") [flags 0x41]  <function_decl 0x7f0d12a9d360 __comp_ctor >)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       166 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 49, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 48, next block 50, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u433(6){ }u434(7){ }u435(16){ }u436(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 328
(note 283 282 284 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 49 (set (reg/f:DI 328 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 285 284 286 49 NOTE_INSN_DELETED)
(insn 286 285 287 49 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:36 89 {*movdi_internal}
     (nil))
(call_insn 287 286 1024 49 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 328 [ iter_19(D)->_vptr.Iterator ])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_44 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_45;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:36 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 328 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 50, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 49, next block 51, flags: (HOT_PARTITION, RTL)
;;  pred:       49 [100.0%]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u443(6){ }u444(7){ }u445(16){ }u446(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 259
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 330 331 444 445
(note 1024 287 1087 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1087 1024 1088 50 (set (reg:DI 444 [ D.44372 ])
        (reg:DI 0 ax)) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1088 1087 290 50 (set (reg:DI 445 [ D.44372+8 ])
        (reg:DI 1 dx [+8 ])) db/builder.cc:36 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [+8 ])
        (nil)))
(insn 290 1088 291 50 (set (reg:DI 330 [ MEM[(long unsigned int *)meta_17(D) + 32B] ])
        (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 32 [0x20])) [4 MEM[(long unsigned int *)meta_17(D) + 32B]+0 S8 A64])
        (nil)))
(insn 291 290 292 50 (parallel [
            (set (reg/f:DI 331 [ D.51470 ])
                (plus:DI (reg/v/f:DI 259 [ meta ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:153 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 292 291 293 50 (set (reg:DI 37 r8)
        (reg:DI 445 [ D.44372+8 ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 445 [ D.44372+8 ])
        (nil)))
(insn 293 292 294 50 (set (reg:DI 2 cx)
        (reg:DI 444 [ D.44372 ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 444 [ D.44372 ])
        (nil)))
(insn 294 293 295 50 (set (reg:DI 1 dx)
        (reg:DI 330 [ MEM[(long unsigned int *)meta_17(D) + 32B] ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 330 [ MEM[(long unsigned int *)meta_17(D) + 32B] ])
        (nil)))
(insn 295 294 296 50 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 296 295 297 50 (set (reg:DI 5 di)
        (reg/f:DI 331 [ D.51470 ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 331 [ D.51470 ])
        (nil)))
(call_insn 297 296 298 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       51 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 51, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 50, next block 52, flags: (HOT_PARTITION, RTL)
;;  pred:       50 [100.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u461(6){ }u462(7){ }u463(16){ }u464(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 259
;; lr  def 	 17 [flags] 451 452 453
(note 298 297 320 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 320 298 336 51 (parallel [
            (set (reg/f:DI 451 [ D.51470 ])
                (plus:DI (reg/v/f:DI 259 [ meta ])
                    (const_int 56 [0x38])))
            (clobber (reg:CC 17 flags))
        ]) ./db/dbformat.h:153 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 336 320 337 51 (parallel [
            (set (reg/f:DI 452)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:40 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 337 336 347 51 (parallel [
            (set (reg/f:DI 453)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:40 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
;;  succ:       52 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 52, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 51, next block 53, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       51 [100.0%]  (FALLTHRU)
;;              59 [100.0%]  (DFS_BACK)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u468(6){ }u469(7){ }u470(16){ }u471(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 332
(code_label 347 337 299 52 47 "" [1 uses])
(note 299 347 300 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 300 299 301 52 (set (reg/f:DI 332 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 301 300 302 52 NOTE_INSN_DELETED)
(insn 302 301 303 52 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 303 302 1025 52 (set (reg:QI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 332 [ iter_19(D)->_vptr.Iterator ])
                        (const_int 16 [0x10])) [3 MEM[(int (*__vtbl_ptr_type) () *)_49 + 16B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_50;(const struct Iterator)iter_19(D)->2) S1 A8])
            (const_int 0 [0]))) db/builder.cc:37 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 332 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              53 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 53, loop depth 1, count 0, freq 10000, maybe hot
;;  prev block 52, next block 54, flags: (HOT_PARTITION, RTL)
;;  pred:       52 [100.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u478(6){ }u479(7){ }u480(16){ }u481(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 107
(note 1025 303 304 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 304 1025 306 53 (set (reg:QI 107 [ D.51467 ])
        (reg:QI 0 ax)) db/builder.cc:37 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 306 304 307 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ D.51467 ])
            (const_int 0 [0]))) db/builder.cc:37 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 107 [ D.51467 ])
        (nil)))
(jump_insn 307 306 308 53 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) db/builder.cc:37 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 350)
;;  succ:       54 [98.0%]  (FALLTHRU)
;;              60 [2.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 54, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 53, next block 55, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [98.0%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u485(6){ }u486(7){ }u487(16){ }u488(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 334
(note 308 307 309 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 54 (set (reg/f:DI 334 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:38 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 310 309 311 54 NOTE_INSN_DELETED)
(insn 311 310 312 54 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:38 89 {*movdi_internal}
     (nil))
(call_insn 312 311 1026 54 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 334 [ iter_19(D)->_vptr.Iterator ])
                        (const_int 64 [0x40])) [3 MEM[(int (*__vtbl_ptr_type) () *)_53 + 64B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_54;(const struct Iterator)iter_19(D)->8) S1 A8])
            (const_int 0 [0]))) db/builder.cc:38 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 334 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 55, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 54, next block 56, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u495(6){ }u496(7){ }u497(16){ }u498(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 259 451
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 336 340
(note 1026 312 313 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 313 1026 315 55 (set (reg:TI 336)
        (reg:TI 0 ax)) db/builder.cc:38 88 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 0 ax)
        (expr_list:REG_EQUIV (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])) [6 key+0 S16 A128])
            (nil))))
(insn 315 313 317 55 (set (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [6 key+0 S16 A128])
        (reg:TI 336)) db/builder.cc:38 88 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 336)
        (nil)))
(note 317 315 319 55 NOTE_INSN_DELETED)
(insn 319 317 321 55 (set (reg:DI 340 [ MEM[(long unsigned int *)meta_17(D) + 64B] ])
        (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 64 [0x40])) [4 MEM[(long unsigned int *)meta_17(D) + 64B]+0 S8 A64])
        (nil)))
(insn 321 319 322 55 (set (reg:DI 37 r8)
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 MEM[(long unsigned int *)&key + 8B]+0 S8 A64])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 322 321 323 55 (set (reg:DI 2 cx)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 MEM[(const char * *)&key]+0 S8 A128])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 323 322 324 55 (set (reg:DI 1 dx)
        (reg:DI 340 [ MEM[(long unsigned int *)meta_17(D) + 64B] ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 340 [ MEM[(long unsigned int *)meta_17(D) + 64B] ])
        (nil)))
(insn 324 323 325 55 (set (reg:DI 4 si)
        (const_int 0 [0])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(insn 325 324 326 55 (set (reg:DI 5 di)
        (reg/f:DI 451 [ D.51470 ])) /usr/include/c++/5/bits/basic_string.h:1150 89 {*movdi_internal}
     (nil))
(call_insn 326 325 327 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>) [0 _M_replace S1 A8])
            (const_int 0 [0]))) /usr/include/c++/5/bits/basic_string.h:1150 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_UNUSED (reg:DI 0 ax)
                            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm") [flags 0x41]  <function_decl 0x7f0d1302fca8 _M_replace>)
                                    (nil)))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       56 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 56, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 55, next block 57, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       55 [100.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u516(6){ }u517(7){ }u518(16){ }u519(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 342
(note 327 326 328 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 56 (set (reg/f:DI 342 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 329 328 330 56 NOTE_INSN_DELETED)
(insn 330 329 331 56 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 331 330 1027 56 (set (reg:TI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 342 [ iter_19(D)->_vptr.Iterator ])
                        (const_int 72 [0x48])) [3 MEM[(int (*__vtbl_ptr_type) () *)_57 + 72B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_58;(const struct Iterator)iter_19(D)->9) S1 A8])
            (const_int 0 [0]))) db/builder.cc:40 669 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 342 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 57, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 56, next block 58, flags: (HOT_PARTITION, RTL)
;;  pred:       56 [100.0%]  (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u526(6){ }u527(7){ }u528(16){ }u529(20){ }}
;; lr  in  	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 0 [ax] 1 [dx] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 452 453
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 344
(note 1027 331 332 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 332 1027 334 57 (set (reg:TI 344)
        (reg:TI 0 ax)) db/builder.cc:40 88 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 0 ax)
        (expr_list:REG_EQUIV (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [6 D.44375+0 S16 A128])
            (nil))))
(insn 334 332 338 57 (set (mem/c:TI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [6 D.44375+0 S16 A128])
        (reg:TI 344)) db/builder.cc:40 88 {*movti_internal}
     (expr_list:REG_DEAD (reg:TI 344)
        (nil)))
(insn 338 334 339 57 (set (reg:DI 1 dx)
        (reg/f:DI 452)) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))
(insn 339 338 340 57 (set (reg:DI 4 si)
        (reg/f:DI 453)) db/builder.cc:40 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))
(insn 340 339 341 57 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:40 89 {*movdi_internal}
     (nil))
(call_insn 341 340 342 57 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>) [0 Add S1 A8])
        (const_int 0 [0])) db/builder.cc:40 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder3AddERKNS_5SliceES3_") [flags 0x41]  <function_decl 0x7f0d12a976c0 Add>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 58, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 57, next block 59, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       57 [100.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u543(6){ }u544(7){ }u545(16){ }u546(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 348
(note 342 341 343 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 58 (set (reg/f:DI 348 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:37 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 344 343 345 58 NOTE_INSN_DELETED)
(insn 345 344 346 58 (set (reg:DI 5 di)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:37 89 {*movdi_internal}
     (nil))
(call_insn 346 345 1328 58 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 348 [ iter_19(D)->_vptr.Iterator ])
                    (const_int 48 [0x30])) [3 MEM[(int (*__vtbl_ptr_type) () *)_63 + 48B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_64;(struct Iterator)iter_19(D)->6) S1 A8])
        (const_int 0 [0])) db/builder.cc:37 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 348 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_CALL_DECL (nil)
                (expr_list:REG_EH_REGION (const_int 2 [0x2])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              59 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

;; basic block 59, loop depth 1, count 0, freq 9800, maybe hot
;;  prev block 58, next block 60, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       58 [100.0%]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1328 346 1329 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1329 1328 1330 59 (set (pc)
        (label_ref 347)) 654 {jump}
     (nil)
 -> 347)
;;  succ:       52 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450 451 452 453

(barrier 1330 1329 350)
;; basic block 60, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 59, next block 61, flags: (HOT_PARTITION, RTL)
;;  pred:       53 [2.0%]  (LOOP_EXIT)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u553(6){ }u554(7){ }u555(16){ }u556(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 350 1330 351 60 46 "" [1 uses])
(note 351 350 352 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:44 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 353 352 354 60 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) db/builder.cc:44 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 401)
;;  succ:       61 [15.0%]  (FALLTHRU)
;;              74 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 61, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 60, next block 62, flags: (HOT_PARTITION, RTL)
;;  pred:       60 [15.0%]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u559(6){ }u560(7){ }u561(16){ }u562(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 350
(note 354 353 355 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 355 354 356 61 (parallel [
            (set (reg/f:DI 350)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:45 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60]))
            (nil))))
(insn 356 355 357 61 (set (reg:DI 4 si)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:45 89 {*movdi_internal}
     (nil))
(insn 357 356 358 61 (set (reg:DI 5 di)
        (reg/f:DI 350)) db/builder.cc:45 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60]))
            (nil))))
(call_insn 358 357 359 61 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>) [0 Finish S1 A8])
        (const_int 0 [0])) db/builder.cc:45 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder6FinishEv") [flags 0x41]  <function_decl 0x7f0d12a97948 Finish>)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              62 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 62, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 61, next block 63, flags: (HOT_PARTITION, RTL)
;;  pred:       61 [100.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u570(6){ }u571(7){ }u572(16){ }u573(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 97 167
(note 359 358 360 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 361 62 (set (reg/f:DI 97 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 361 360 362 62 (set (reg/f:DI 167 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 362 361 363 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ D.51463 ])
            (reg/f:DI 167 [ D.51463 ]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 363 362 364 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 384)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 384)
;;  succ:       63 [89.9%]  (FALLTHRU)
;;              70 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450

;; basic block 63, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 62, next block 64, flags: (HOT_PARTITION, RTL)
;;  pred:       62 [89.9%]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u579(6){ }u580(7){ }u581(16){ }u582(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags]
(note 364 363 365 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 366 365 367 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 371)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 371)
;;  succ:       64 [69.8%]  (FALLTHRU)
;;              65 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 167 253 255 257 258 259 447 450

;; basic block 64, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 63, next block 65, flags: (HOT_PARTITION, RTL)
;;  pred:       63 [69.8%]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u585(6){ }u586(7){ }u587(16){ }u588(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 167
(note 367 366 368 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 64 (set (reg:DI 5 di)
        (reg/f:DI 97 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.51463 ])
        (nil)))
(call_insn 369 368 370 64 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 370 369 371 64 (set (reg/f:DI 167 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450

;; basic block 65, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 64, next block 66, flags: (HOT_PARTITION, RTL)
;;  pred:       63 [30.2%] 
;;              64 [100.0%]  (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u593(6){ }u594(7){ }u595(16){ }u596(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags]
(code_label 371 370 372 65 50 "" [1 uses])
(note 372 371 373 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 167 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 374 373 375 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1007)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1007)
;;  succ:       66 [69.8%]  (FALLTHRU)
;;              68 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450

;; basic block 66, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 65, next block 67, flags: (HOT_PARTITION, RTL)
;;  pred:       65 [69.8%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u599(6){ }u600(7){ }u601(16){ }u602(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 375 374 376 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 66 (set (reg:DI 5 di)
        (reg/f:DI 167 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.51463 ])
        (nil)))
(call_insn 377 376 1029 66 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 9 [0x9])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       168 (ABNORMAL,ABNORMAL_CALL,EH)
;;              67 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 67, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 66, next block 68, flags: (HOT_PARTITION, RTL)
;;  pred:       66 [100.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u606(6){ }u607(7){ }u608(16){ }u609(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 167 207
(note 1029 377 378 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 378 1029 380 67 (set (reg/f:DI 207 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 380 378 1331 67 (set (reg/f:DI 167 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 D.44376.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1331 380 1332 67 (set (pc)
        (label_ref 381)) 654 {jump}
     (nil)
 -> 381)
;;  succ:       69 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450

(barrier 1332 1331 1007)
;; basic block 68, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 67, next block 69, flags: (HOT_PARTITION, RTL)
;;  pred:       65 [30.2%] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u612(6){ }u613(7){ }u614(16){ }u615(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 207
(code_label 1007 1332 1006 68 115 "" [1 uses])
(note 1006 1007 14 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 14 1006 381 68 (set (reg/f:DI 207 [ D.51463 ])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       69 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450

;; basic block 69, loop depth 0, count 0, freq 27, maybe hot
;;  prev block 68, next block 70, flags: (HOT_PARTITION, RTL)
;;  pred:       68 [100.0%]  (FALLTHRU)
;;              67 [100.0%] 
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u616(6){ }u617(7){ }u618(16){ }u619(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 207 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 207 253
;; lr  def 	
(code_label 381 14 382 69 51 "" [1 uses])
(note 382 381 383 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 384 69 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 207 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 207 [ D.51463 ])
        (nil)))
;;  succ:       70 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450

;; basic block 70, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 69, next block 71, flags: (HOT_PARTITION, RTL)
;;  pred:       69 [100.0%]  (FALLTHRU)
;;              62 [10.1%] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u622(6){ }u623(7){ }u624(16){ }u625(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags]
(code_label 384 383 385 70 49 "" [1 uses])
(note 385 384 386 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 386 385 387 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 167 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 387 386 388 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 949)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 949)
;;  succ:       71 [69.8%]  (FALLTHRU)
;;              196 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450

;; basic block 71, loop depth 0, count 0, freq 21, maybe hot
;;  prev block 70, next block 72, flags: (HOT_PARTITION, RTL)
;;  pred:       70 [69.8%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u628(6){ }u629(7){ }u630(16){ }u631(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 167 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 388 387 389 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 71 (set (reg:DI 5 di)
        (reg/f:DI 167 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 167 [ D.51463 ])
        (nil)))
(call_insn 390 389 1333 71 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1333 390 1334 71 (set (pc)
        (label_ref 949)) 654 {jump}
     (nil)
 -> 949)
;;  succ:       196 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

(barrier 1334 1333 951)
;; basic block 72, loop depth 0, count 0, freq 2
;;  prev block 71, next block 73, flags: (HOT_PARTITION, RTL)
;;  pred:       197 [100.0%] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u635(6){ }u636(7){ }u637(16){ }u638(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 951 1334 393 72 106 "" [1 uses])
(note 393 951 394 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 394 393 395 72 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:47 89 {*movdi_internal}
     (nil))
(call_insn 395 394 1030 72 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>) [0 FileSize S1 A8])
            (const_int 0 [0]))) db/builder.cc:47 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZNK7leveldb12TableBuilder8FileSizeEv") [flags 0x41]  <function_decl 0x7f0d12a97bd0 FileSize>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              73 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 73, loop depth 0, count 0, freq 2
;;  prev block 72, next block 74, flags: (HOT_PARTITION, RTL)
;;  pred:       72 [100.0%]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u642(6){ }u643(7){ }u644(16){ }u645(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 259
;; lr  def 	 119
(note 1030 395 396 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 396 1030 398 73 (set (reg:DI 119 [ D.51466 ])
        (reg:DI 0 ax)) db/builder.cc:47 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                    (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
            (nil))))
(insn 398 396 1335 73 (set (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (reg:DI 119 [ D.51466 ])) db/builder.cc:47 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 119 [ D.51466 ])
        (nil)))
(jump_insn 1335 398 1336 73 (set (pc)
        (label_ref 405)) 654 {jump}
     (nil)
 -> 405)
;;  succ:       75 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

(barrier 1336 1335 401)
;; basic block 74, loop depth 0, count 0, freq 170, maybe hot
;;  prev block 73, next block 75, flags: (HOT_PARTITION, RTL)
;;  pred:       60 [85.0%] 
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u649(6){ }u650(7){ }u651(16){ }u652(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 401 1336 402 74 48 "" [1 uses])
(note 402 401 403 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 74 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:51 89 {*movdi_internal}
     (nil))
(call_insn 404 403 405 74 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>) [0 Abandon S1 A8])
        (const_int 0 [0])) db/builder.cc:51 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 2 [0x2])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilder7AbandonEv") [flags 0x41]  <function_decl 0x7f0d12a97a20 Abandon>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              75 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 75, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 74, next block 76, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       196 [93.3%] 
;;              74 [100.0%]  (FALLTHRU)
;;              73 [100.0%] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u656(6){ }u657(7){ }u658(16){ }u659(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 405 404 406 75 53 "" [2 uses])
(note 406 405 407 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 75 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:53 89 {*movdi_internal}
     (nil))
(call_insn 408 407 409 75 (call (mem:QI (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb12TableBuilderD1Ev") [flags 0x41]  <function_decl 0x7f0d12a9d510 __comp_dtor >)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 409 408 410 75 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.51468 ])
        (nil)))
(call_insn 410 409 411 75 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 411 410 412 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:56 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 412 411 417 75 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:56 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 500)
;;  succ:       76 [6.7%]  (FALLTHRU)
;;              99 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 76, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 75, next block 77, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       75 [6.7%]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u668(6){ }u669(7){ }u670(16){ }u671(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 122 351 352
(note 417 412 418 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 419 76 (set (reg/f:DI 122 [ D.51469 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])) db/builder.cc:57 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 419 418 420 76 (parallel [
            (set (reg/f:DI 351)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:57 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70]))
            (nil))))
(insn 420 419 421 76 (set (reg/f:DI 352 [ _83->_vptr.WritableFile ])
        (mem/f:DI (reg/f:DI 122 [ D.51469 ]) [3 _83->_vptr.WritableFile+0 S8 A64])) db/builder.cc:57 89 {*movdi_internal}
     (nil))
(note 421 420 422 76 NOTE_INSN_DELETED)
(insn 422 421 423 76 (set (reg:DI 4 si)
        (reg/f:DI 122 [ D.51469 ])) db/builder.cc:57 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ D.51469 ])
        (nil)))
(insn 423 422 424 76 (set (reg:DI 5 di)
        (reg/f:DI 351)) db/builder.cc:57 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 351)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70]))
            (nil))))
(call_insn 424 423 425 76 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 352 [ _83->_vptr.WritableFile ])
                    (const_int 40 [0x28])) [3 MEM[(int (*__vtbl_ptr_type) () *)_84 + 40B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_85;(struct WritableFile)_83->5) S1 A8])
        (const_int 0 [0])) db/builder.cc:57 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 352 [ _83->_vptr.WritableFile ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              77 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 77, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 76, next block 78, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       76 [100.0%]  (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u683(6){ }u684(7){ }u685(16){ }u686(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 116
(note 425 424 426 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 426 425 427 77 (set (reg/f:DI 116 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 427 426 428 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 116 [ D.51463 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])) [3 D.44377.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 428 427 1189 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1337)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 1337)
;;  succ:       79 [89.9%] 
;;              78 [10.1%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450

;; basic block 78, loop depth 0, count 0, freq 1
;;  prev block 77, next block 79, flags: (HOT_PARTITION, RTL)
;;  pred:       77 [10.1%]  (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u691(6){ }u692(7){ }u693(16){ }u694(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 446
(note 1189 428 1167 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1167 1189 1338 78 (set (reg/f:DI 446 [ D.51463 ])
        (reg/f:DI 116 [ D.51463 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.51463 ])
        (nil)))
(jump_insn 1338 1167 1339 78 (set (pc)
        (label_ref 447)) 654 {jump}
     (nil)
 -> 447)
;;  succ:       85 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450

(barrier 1339 1338 1337)
;; basic block 79, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 78, next block 80, flags: (HOT_PARTITION, RTL)
;;  pred:       77 [89.9%] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u696(6){ }u697(7){ }u698(16){ }u699(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 17 [flags]
(code_label 1337 1339 429 79 201 "" [1 uses])
(note 429 1337 430 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 116 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 431 430 432 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 435)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 435)
;;  succ:       80 [69.8%]  (FALLTHRU)
;;              81 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450

;; basic block 80, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 79, next block 81, flags: (HOT_PARTITION, RTL)
;;  pred:       79 [69.8%]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u702(6){ }u703(7){ }u704(16){ }u705(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 116
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 432 431 433 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 80 (set (reg:DI 5 di)
        (reg/f:DI 116 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116 [ D.51463 ])
        (nil)))
(call_insn 434 433 435 80 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       81 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 81, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 80, next block 82, flags: (HOT_PARTITION, RTL)
;;  pred:       79 [30.2%] 
;;              80 [100.0%]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u709(6){ }u710(7){ }u711(16){ }u712(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 209 446
(code_label 435 434 436 81 57 "" [1 uses])
(note 436 435 437 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 1173 81 (set (reg/f:DI 446 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1173 437 438 81 (set (reg/f:DI 209 [ D.51463 ])
        (reg/f:DI 446 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 438 1173 439 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 446 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 439 438 440 81 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 444)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 444)
;;  succ:       82 [69.8%]  (FALLTHRU)
;;              84 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450

;; basic block 82, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 81, next block 83, flags: (HOT_PARTITION, RTL)
;;  pred:       81 [69.8%]  (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u717(6){ }u718(7){ }u719(16){ }u720(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 440 439 441 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 441 440 442 82 (set (reg:DI 5 di)
        (reg/f:DI 446 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 446 [ D.51463 ])
        (nil)))
(call_insn 442 441 1031 82 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 10 [0xa])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       172 (ABNORMAL,ABNORMAL_CALL,EH)
;;              83 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 83, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 82, next block 84, flags: (HOT_PARTITION, RTL)
;;  pred:       82 [100.0%]  (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u724(6){ }u725(7){ }u726(16){ }u727(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 209 446
(note 1031 442 443 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 443 1031 1168 83 (set (reg/f:DI 209 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1168 443 444 83 (set (reg/f:DI 446 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 D.44377.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       84 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450

;; basic block 84, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 83, next block 85, flags: (HOT_PARTITION, RTL)
;;  pred:       81 [30.2%] 
;;              83 [100.0%]  (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u730(6){ }u731(7){ }u732(16){ }u733(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253 255 257 258 259 446 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 209 253
;; lr  def 	
(code_label 444 1168 445 84 58 "" [1 uses])
(note 445 444 446 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 84 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 209 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 209 [ D.51463 ])
        (nil)))
;;  succ:       85 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450

;; basic block 85, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 84, next block 86, flags: (HOT_PARTITION, RTL)
;;  pred:       84 [100.0%]  (FALLTHRU)
;;              78 [100.0%] 
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u736(6){ }u737(7){ }u738(16){ }u739(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  def 	 17 [flags]
(code_label 447 446 448 85 56 "" [1 uses])
(note 448 447 450 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 450 448 451 85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 446 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 451 450 452 85 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 455)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 455)
;;  succ:       86 [69.8%]  (FALLTHRU)
;;              87 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450

;; basic block 86, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 85, next block 87, flags: (HOT_PARTITION, RTL)
;;  pred:       85 [69.8%]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u742(6){ }u743(7){ }u744(16){ }u745(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 446 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 452 451 453 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 86 (set (reg:DI 5 di)
        (reg/f:DI 446 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 446 [ D.51463 ])
        (nil)))
(call_insn 454 453 455 86 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       87 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 87, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 86, next block 88, flags: (HOT_PARTITION, RTL)
;;  pred:       85 [30.2%] 
;;              86 [100.0%]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u749(6){ }u750(7){ }u751(16){ }u752(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 455 454 456 87 59 "" [1 uses])
(note 456 455 458 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 458 456 459 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:59 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 459 458 460 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) db/builder.cc:59 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 500)
;;  succ:       88 [100.0%]  (FALLTHRU)
;;              99
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 88, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 87, next block 89, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       87 [100.0%]  (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u755(6){ }u756(7){ }u757(16){ }u758(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 129 354 355
(note 460 459 461 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 461 460 462 88 (set (reg/f:DI 129 [ D.51469 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])) db/builder.cc:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (nil)))
(insn 462 461 463 88 (parallel [
            (set (reg/f:DI 354)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:60 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))
(insn 463 462 464 88 (set (reg/f:DI 355 [ _93->_vptr.WritableFile ])
        (mem/f:DI (reg/f:DI 129 [ D.51469 ]) [3 _93->_vptr.WritableFile+0 S8 A64])) db/builder.cc:60 89 {*movdi_internal}
     (nil))
(note 464 463 465 88 NOTE_INSN_DELETED)
(insn 465 464 466 88 (set (reg:DI 4 si)
        (reg/f:DI 129 [ D.51469 ])) db/builder.cc:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 129 [ D.51469 ])
        (nil)))
(insn 466 465 467 88 (set (reg:DI 5 di)
        (reg/f:DI 354)) db/builder.cc:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 354)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))
(call_insn 467 466 468 88 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 355 [ _93->_vptr.WritableFile ])
                    (const_int 24 [0x18])) [3 MEM[(int (*__vtbl_ptr_type) () *)_94 + 24B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_95;(struct WritableFile)_93->3) S1 A8])
        (const_int 0 [0])) db/builder.cc:60 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 355 [ _93->_vptr.WritableFile ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              89 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 89, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 88, next block 90, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       88 [100.0%]  (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u770(6){ }u771(7){ }u772(16){ }u773(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 125
(note 468 467 469 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 89 (set (reg/f:DI 125 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 470 469 471 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 125 [ D.51463 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -128 [0xffffffffffffff80])) [3 D.44378.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 471 470 1191 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1340)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 1340)
;;  succ:       91 [89.9%] 
;;              90 [10.1%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450

;; basic block 90, loop depth 0, count 0, freq 1
;;  prev block 89, next block 91, flags: (HOT_PARTITION, RTL)
;;  pred:       89 [10.1%]  (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u778(6){ }u779(7){ }u780(16){ }u781(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 448
(note 1191 471 1169 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1169 1191 1341 90 (set (reg/f:DI 448 [ D.51463 ])
        (reg/f:DI 125 [ D.51463 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.51463 ])
        (nil)))
(jump_insn 1341 1169 1342 90 (set (pc)
        (label_ref 490)) 654 {jump}
     (nil)
 -> 490)
;;  succ:       97 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450

(barrier 1342 1341 1340)
;; basic block 91, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 90, next block 92, flags: (HOT_PARTITION, RTL)
;;  pred:       89 [89.9%] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u783(6){ }u784(7){ }u785(16){ }u786(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 17 [flags]
(code_label 1340 1342 472 91 202 "" [1 uses])
(note 472 1340 473 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 473 472 474 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 125 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 474 473 475 91 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 478)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 478)
;;  succ:       92 [69.8%]  (FALLTHRU)
;;              93 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450

;; basic block 92, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 91, next block 93, flags: (HOT_PARTITION, RTL)
;;  pred:       91 [69.8%]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u789(6){ }u790(7){ }u791(16){ }u792(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 125
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 475 474 476 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 92 (set (reg:DI 5 di)
        (reg/f:DI 125 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 125 [ D.51463 ])
        (nil)))
(call_insn 477 476 478 92 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       93 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 93, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 92, next block 94, flags: (HOT_PARTITION, RTL)
;;  pred:       91 [30.2%] 
;;              92 [100.0%]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u796(6){ }u797(7){ }u798(16){ }u799(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 211 448
(code_label 478 477 479 93 62 "" [1 uses])
(note 479 478 480 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 1184 93 (set (reg/f:DI 448 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1184 480 481 93 (set (reg/f:DI 211 [ D.51463 ])
        (reg/f:DI 448 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 481 1184 482 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 448 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 482 481 483 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 487)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 487)
;;  succ:       94 [69.8%]  (FALLTHRU)
;;              96 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450

;; basic block 94, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 93, next block 95, flags: (HOT_PARTITION, RTL)
;;  pred:       93 [69.8%]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u804(6){ }u805(7){ }u806(16){ }u807(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 448
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 483 482 484 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 94 (set (reg:DI 5 di)
        (reg/f:DI 448 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 448 [ D.51463 ])
        (nil)))
(call_insn 485 484 1032 94 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 11 [0xb])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       176 (ABNORMAL,ABNORMAL_CALL,EH)
;;              95 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 95, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 94, next block 96, flags: (HOT_PARTITION, RTL)
;;  pred:       94 [100.0%]  (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u811(6){ }u812(7){ }u813(16){ }u814(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 211 448
(note 1032 485 486 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 486 1032 1170 95 (set (reg/f:DI 211 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1170 486 487 95 (set (reg/f:DI 448 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 D.44378.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       96 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450

;; basic block 96, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 95, next block 97, flags: (HOT_PARTITION, RTL)
;;  pred:       93 [30.2%] 
;;              95 [100.0%]  (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u817(6){ }u818(7){ }u819(16){ }u820(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253 255 257 258 259 447 448 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 211 253
;; lr  def 	
(code_label 487 1170 488 96 63 "" [1 uses])
(note 488 487 489 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 96 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 211 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 211 [ D.51463 ])
        (nil)))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450

;; basic block 97, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 96, next block 98, flags: (HOT_PARTITION, RTL)
;;  pred:       96 [100.0%]  (FALLTHRU)
;;              90 [100.0%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u823(6){ }u824(7){ }u825(16){ }u826(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 448
;; lr  def 	 17 [flags]
(code_label 490 489 491 97 61 "" [1 uses])
(note 491 490 493 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 493 491 494 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 448 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 494 493 495 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 500)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 500)
;;  succ:       98 [69.8%]  (FALLTHRU)
;;              99 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450

;; basic block 98, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 97, next block 99, flags: (HOT_PARTITION, RTL)
;;  pred:       97 [69.8%]  (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u829(6){ }u830(7){ }u831(16){ }u832(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 448 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 448
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 495 494 496 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 98 (set (reg:DI 5 di)
        (reg/f:DI 448 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 448 [ D.51463 ])
        (nil)))
(call_insn 497 496 500 98 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       99 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 99, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 98, next block 100, flags: (HOT_PARTITION, RTL)
;;  pred:       75 [93.3%] 
;;              98 [100.0%]  (FALLTHRU)
;;              87
;;              97 [30.2%] 
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u836(6){ }u837(7){ }u838(16){ }u839(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 135
(code_label 500 497 501 99 55 "" [3 uses])
(note 501 500 502 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 99 (set (reg/f:DI 135 [ D.51469 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(insn 503 502 504 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 135 [ D.51469 ])
            (const_int 0 [0]))) db/builder.cc:62 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 504 503 505 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 510)
            (pc))) db/builder.cc:62 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 510)
;;  succ:       100 [69.8%]  (FALLTHRU)
;;              101 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 253 255 257 258 259 447 450

;; basic block 100, loop depth 0, count 0, freq 140, maybe hot
;;  prev block 99, next block 101, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       99 [69.8%]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u843(6){ }u844(7){ }u845(16){ }u846(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 135
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 357
(note 505 504 506 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 100 (set (reg/f:DI 357 [ _102->_vptr.WritableFile ])
        (mem/f:DI (reg/f:DI 135 [ D.51469 ]) [3 _102->_vptr.WritableFile+0 S8 A64])) db/builder.cc:62 89 {*movdi_internal}
     (nil))
(note 507 506 508 100 NOTE_INSN_DELETED)
(insn 508 507 509 100 (set (reg:DI 5 di)
        (reg/f:DI 135 [ D.51469 ])) db/builder.cc:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 135 [ D.51469 ])
        (nil)))
(call_insn 509 508 510 100 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 357 [ _102->_vptr.WritableFile ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_103 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_104;(struct WritableFile)_102->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:62 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 357 [ _102->_vptr.WritableFile ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       101 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 101, loop depth 0, count 0, freq 200, maybe hot
;;  prev block 100, next block 102, flags: (HOT_PARTITION, RTL)
;;  pred:       99 [30.2%] 
;;              100 [100.0%]  (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u853(6){ }u854(7){ }u855(16){ }u856(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 510 509 511 101 65 "" [1 uses])
(note 511 510 512 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 101 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 file+0 S8 A128])
        (const_int 0 [0])) db/builder.cc:63 89 {*movdi_internal}
     (nil))
(insn 513 512 514 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:65 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 514 513 515 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 576)
            (pc))) db/builder.cc:65 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 576)
;;  succ:       102 [6.7%]  (FALLTHRU)
;;              114 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450

;; basic block 102, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 101, next block 103, flags: (HOT_PARTITION, RTL)
;;  pred:       101 [6.7%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u860(6){ }u861(7){ }u862(16){ }u863(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 257 259
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 139 140 359
(note 515 514 516 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 516 515 517 102 (set (reg:DI 139 [ D.51466 ])
        (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
        (nil)))
(insn 517 516 518 102 (set (reg:DI 140 [ D.51466 ])
        (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])) db/builder.cc:67 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                (const_int 8 [0x8])) [4 meta_17(D)->number+0 S8 A64])
        (nil)))
(insn 518 517 519 102 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [9 D.44398.verify_checksums+0 S1 A128])
        (const_int 0 [0])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 519 518 520 102 (set (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                (const_int -63 [0xffffffffffffffc1])) [9 D.44398.fill_cache+0 S1 A8])
        (const_int 1 [0x1])) ./include/leveldb/options.h:164 93 {*movqi_internal}
     (nil))
(insn 520 519 521 102 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [3 D.44398.snapshot+0 S8 A64])
        (const_int 0 [0])) ./include/leveldb/options.h:164 89 {*movdi_internal}
     (nil))
(insn 521 520 522 102 (parallel [
            (set (reg/f:DI 359)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:69 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 522 521 523 102 (set (reg:DI 37 r8)
        (const_int 0 [0])) db/builder.cc:69 89 {*movdi_internal}
     (nil))
(insn 523 522 524 102 (set (reg:DI 2 cx)
        (reg:DI 139 [ D.51466 ])) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 139 [ D.51466 ])
        (nil)))
(insn 524 523 525 102 (set (reg:DI 1 dx)
        (reg:DI 140 [ D.51466 ])) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 140 [ D.51466 ])
        (nil)))
(insn 525 524 526 102 (set (reg:DI 4 si)
        (reg/f:DI 359)) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 359)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 526 525 527 102 (set (reg:DI 5 di)
        (reg/v/f:DI 257 [ table_cache ])) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 257 [ table_cache ])
        (nil)))
(call_insn 527 526 1033 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>) [0 NewIterator S1 A8])
            (const_int 0 [0]))) db/builder.cc:69 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 37 r8)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 2 cx)
                    (expr_list:REG_DEAD (reg:DI 1 dx)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb10TableCache11NewIteratorERKNS_11ReadOptionsEmmPPNS_5TableE") [flags 0x41]  <function_decl 0x7f0d12b03ca8 NewIterator>)
                                (nil))))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (expr_list:DI (use (reg:DI 37 r8))
                        (nil)))))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              103 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450

;; basic block 103, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 102, next block 104, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       102 [100.0%]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u881(6){ }u882(7){ }u883(16){ }u884(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 141 360 361
(note 1033 527 528 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 528 1033 530 103 (set (reg/v/f:DI 141 [ it ])
        (reg:DI 0 ax)) db/builder.cc:69 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 530 528 531 103 (parallel [
            (set (reg/f:DI 360)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:70 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90]))
            (nil))))
(insn 531 530 532 103 (set (reg/f:DI 361 [ it_113->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 141 [ it ]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:70 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 141 [ it ]) [3 it_113->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 532 531 533 103 NOTE_INSN_DELETED)
(insn 533 532 534 103 (set (reg:DI 4 si)
        (reg/v/f:DI 141 [ it ])) db/builder.cc:70 89 {*movdi_internal}
     (nil))
(insn 534 533 535 103 (set (reg:DI 5 di)
        (reg/f:DI 360)) db/builder.cc:70 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 360)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90]))
            (nil))))
(call_insn 535 534 536 103 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 361 [ it_113->_vptr.Iterator ])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_115 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_116;(const struct Iterator)it_113->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:70 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 361 [ it_113->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              104 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450

;; basic block 104, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 103, next block 105, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       103 [100.0%]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u896(6){ }u897(7){ }u898(16){ }u899(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 132
(note 536 535 537 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 104 (set (reg/f:DI 132 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 538 537 539 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 132 [ D.51463 ])
            (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -112 [0xffffffffffffff90])) [3 D.44408.state_+0 S8 A128]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 539 538 1193 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 1343)
;;  succ:       106 [89.9%] 
;;              105 [10.1%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450

;; basic block 105, loop depth 0, count 0, freq 1
;;  prev block 104, next block 106, flags: (HOT_PARTITION, RTL)
;;  pred:       104 [10.1%]  (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u904(6){ }u905(7){ }u906(16){ }u907(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 449
(note 1193 539 1171 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1171 1193 1344 105 (set (reg/f:DI 449 [ D.51463 ])
        (reg/f:DI 132 [ D.51463 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.51463 ])
        (nil)))
(jump_insn 1344 1171 1345 105 (set (pc)
        (label_ref 961)) 654 {jump}
     (nil)
 -> 961)
;;  succ:       198 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450

(barrier 1345 1344 1343)
;; basic block 106, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 105, next block 107, flags: (HOT_PARTITION, RTL)
;;  pred:       104 [89.9%] 
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u909(6){ }u910(7){ }u911(16){ }u912(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 17 [flags]
(code_label 1343 1345 540 106 203 "" [1 uses])
(note 540 1343 541 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 132 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 542 541 543 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 546)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 546)
;;  succ:       107 [69.8%]  (FALLTHRU)
;;              108 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450

;; basic block 107, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 106, next block 108, flags: (HOT_PARTITION, RTL)
;;  pred:       106 [69.8%]  (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u915(6){ }u916(7){ }u917(16){ }u918(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 132
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 543 542 544 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 107 (set (reg:DI 5 di)
        (reg/f:DI 132 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 132 [ D.51463 ])
        (nil)))
(call_insn 545 544 546 107 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       108 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450

;; basic block 108, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 107, next block 109, flags: (HOT_PARTITION, RTL)
;;  pred:       106 [30.2%] 
;;              107 [100.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u922(6){ }u923(7){ }u924(16){ }u925(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 213 449
(code_label 546 545 547 108 68 "" [1 uses])
(note 547 546 548 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 1185 108 (set (reg/f:DI 449 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 1185 548 549 108 (set (reg/f:DI 213 [ D.51463 ])
        (reg/f:DI 449 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
(insn 549 1185 550 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 449 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 550 549 551 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 555)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 555)
;;  succ:       109 [69.8%]  (FALLTHRU)
;;              111 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450

;; basic block 109, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 108, next block 110, flags: (HOT_PARTITION, RTL)
;;  pred:       108 [69.8%]  (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u930(6){ }u931(7){ }u932(16){ }u933(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 551 550 552 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 109 (set (reg:DI 5 di)
        (reg/f:DI 449 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 449 [ D.51463 ])
        (nil)))
(call_insn 553 552 1034 109 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 13 [0xd])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       180 (ABNORMAL,ABNORMAL_CALL,EH)
;;              110 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450

;; basic block 110, loop depth 0, count 0, freq 8, maybe hot
;;  prev block 109, next block 111, flags: (HOT_PARTITION, RTL)
;;  pred:       109 [100.0%]  (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u937(6){ }u938(7){ }u939(16){ }u940(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 213 449
(note 1034 553 554 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 554 1034 1172 110 (set (reg/f:DI 213 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1172 554 555 110 (set (reg/f:DI 449 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 D.44408.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       111 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450

;; basic block 111, loop depth 0, count 0, freq 12, maybe hot
;;  prev block 110, next block 112, flags: (HOT_PARTITION, RTL)
;;  pred:       108 [30.2%] 
;;              110 [100.0%]  (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u943(6){ }u944(7){ }u945(16){ }u946(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 213 253 255 258 259 447 449 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 213 253
;; lr  def 	
(code_label 555 1172 556 111 69 "" [1 uses])
(note 556 555 557 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 1346 111 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 213 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 213 [ D.51463 ])
        (nil)))
(jump_insn 1346 557 1347 111 (set (pc)
        (label_ref 961)) 654 {jump}
     (nil)
 -> 961)
;;  succ:       198 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450

(barrier 1347 1346 964)
;; basic block 112, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 111, next block 113, flags: (HOT_PARTITION, RTL)
;;  pred:       198 [69.8%] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u949(6){ }u950(7){ }u951(16){ }u952(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 964 1347 560 112 108 "" [1 uses])
(note 560 964 561 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 561 560 562 112 (set (reg:DI 5 di)
        (reg/f:DI 449 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 449 [ D.51463 ])
        (nil)))
(call_insn 562 561 958 112 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       113 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450

;; basic block 113, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 112, next block 114, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       112 [100.0%]  (FALLTHRU)
;;              199 [100.0%] 
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u956(6){ }u957(7){ }u958(16){ }u959(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 363
(code_label 958 562 563 113 107 "" [1 uses])
(note 563 958 564 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 564 563 565 113 (set (reg/f:DI 363 [ it_113->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 141 [ it ]) [3 it_113->_vptr.Iterator+0 S8 A64])) db/builder.cc:71 89 {*movdi_internal}
     (nil))
(note 565 564 566 113 NOTE_INSN_DELETED)
(insn 566 565 567 113 (set (reg:DI 5 di)
        (reg/v/f:DI 141 [ it ])) db/builder.cc:71 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 141 [ it ])
        (nil)))
(call_insn 567 566 576 113 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 363 [ it_113->_vptr.Iterator ])
                    (const_int 8 [0x8])) [3 MEM[(int (*__vtbl_ptr_type) () *)_120 + 8B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_121;(struct Iterator)it_113->1) S1 A8])
        (const_int 0 [0])) db/builder.cc:71 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 363 [ it_113->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (expr_list:REG_CALL_DECL (nil)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       114 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450

;; basic block 114, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 113, next block 115, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       101 [93.3%] 
;;              113 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u966(6){ }u967(7){ }u968(16){ }u969(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 258 447
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 366
(code_label 576 567 577 114 29 "" [2 uses])
(note 577 576 579 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 579 577 580 114 (set (reg/f:DI 366 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])
        (nil)))
(note 580 579 581 114 NOTE_INSN_DELETED)
(insn 581 580 582 114 (set (reg:DI 4 si)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:76 89 {*movdi_internal}
     (nil))
(insn 582 581 583 114 (set (reg:DI 5 di)
        (reg/f:DI 447)) db/builder.cc:76 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 447)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0]))
            (nil))))
(call_insn 583 582 584 114 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 366 [ iter_19(D)->_vptr.Iterator ])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_132 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_133;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:76 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 366 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              115 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450

;; basic block 115, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 114, next block 116, flags: (HOT_PARTITION, RTL)
;;  pred:       114 [100.0%]  (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u979(6){ }u980(7){ }u981(16){ }u982(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151
(note 584 583 585 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 585 584 586 115 (set (reg/f:DI 151 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [3 D.44418.state_+0 S8 A128])) ./include/leveldb/status.h:52 89 {*movdi_internal}
     (nil))
(insn 586 585 587 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 151 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 587 586 588 115 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 973)
;;  succ:       116 [69.8%]  (FALLTHRU)
;;              127 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 253 255 258 259 450

;; basic block 116, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 115, next block 117, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       115 [69.8%]  (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u986(6){ }u987(7){ }u988(16){ }u989(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 253 255 258 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 151 258
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 368 369
(note 588 587 589 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 589 588 590 116 (set (reg:DI 5 di)
        (reg/f:DI 151 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 151 [ D.51463 ])
        (nil)))
(call_insn 590 589 591 116 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 591 590 592 116 (parallel [
            (set (reg/f:DI 368)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:77 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(insn 592 591 593 116 (set (reg/f:DI 369 [ iter_19(D)->_vptr.Iterator ])
        (mem/f:DI (reg/v/f:DI 258 [ iter ]) [3 iter_19(D)->_vptr.Iterator+0 S8 A64])) db/builder.cc:77 89 {*movdi_internal}
     (nil))
(note 593 592 594 116 NOTE_INSN_DELETED)
(insn 594 593 595 116 (set (reg:DI 4 si)
        (reg/v/f:DI 258 [ iter ])) db/builder.cc:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 258 [ iter ])
        (nil)))
(insn 595 594 596 116 (set (reg:DI 5 di)
        (reg/f:DI 368)) db/builder.cc:77 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 368)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))
(call_insn 596 595 597 116 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 369 [ iter_19(D)->_vptr.Iterator ])
                    (const_int 80 [0x50])) [3 MEM[(int (*__vtbl_ptr_type) () *)_138 + 80B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_139;(const struct Iterator)iter_19(D)->10) S1 A8])
        (const_int 0 [0])) db/builder.cc:77 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 369 [ iter_19(D)->_vptr.Iterator ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_CALL_DECL (nil)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              117 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450

;; basic block 117, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 116, next block 118, flags: (HOT_PARTITION, RTL)
;;  pred:       116 [100.0%]  (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u1003(6){ }u1004(7){ }u1005(16){ }u1006(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 144 168
(note 597 596 598 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 117 (set (reg/f:DI 144 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 599 598 600 117 (set (reg/f:DI 168 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:98 89 {*movdi_internal}
     (nil))
(insn 600 599 601 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 144 [ D.51463 ])
            (reg/f:DI 168 [ D.51463 ]))) ./include/leveldb/status.h:98 8 {*cmpdi_1}
     (nil))
(jump_insn 601 600 602 117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 622)
            (pc))) ./include/leveldb/status.h:98 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 622)
;;  succ:       118 [89.9%]  (FALLTHRU)
;;              125 [10.1%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450

;; basic block 118, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 117, next block 119, flags: (HOT_PARTITION, RTL)
;;  pred:       117 [89.9%]  (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u1012(6){ }u1013(7){ }u1014(16){ }u1015(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  def 	 17 [flags]
(note 602 601 603 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 603 602 604 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 144 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:99 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 604 603 605 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 609)
            (pc))) ./include/leveldb/status.h:99 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 609)
;;  succ:       119 [69.8%]  (FALLTHRU)
;;              120 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 168 253 255 259 450

;; basic block 119, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 118, next block 120, flags: (HOT_PARTITION, RTL)
;;  pred:       118 [69.8%]  (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u1018(6){ }u1019(7){ }u1020(16){ }u1021(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 144
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168
(note 605 604 606 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 119 (set (reg:DI 5 di)
        (reg/f:DI 144 [ D.51463 ])) ./include/leveldb/status.h:99 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 144 [ D.51463 ])
        (nil)))
(call_insn 607 606 608 119 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:99 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 608 607 609 119 (set (reg/f:DI 168 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
;;  succ:       120 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450

;; basic block 120, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 119, next block 121, flags: (HOT_PARTITION, RTL)
;;  pred:       118 [30.2%] 
;;              119 [100.0%]  (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u1026(6){ }u1027(7){ }u1028(16){ }u1029(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 17 [flags]
(code_label 609 608 610 120 73 "" [1 uses])
(note 610 609 611 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 612 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 168 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 612 611 613 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1011)
            (pc))) ./include/leveldb/status.h:100 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 1011)
;;  succ:       121 [69.8%]  (FALLTHRU)
;;              123 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450

;; basic block 121, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 120, next block 122, flags: (HOT_PARTITION, RTL)
;;  pred:       120 [69.8%]  (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u1032(6){ }u1033(7){ }u1034(16){ }u1035(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 613 612 614 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 614 613 615 121 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.51463 ])
        (nil)))
(call_insn 615 614 1035 121 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>) [0 CopyState S1 A8])
            (const_int 0 [0]))) ./include/leveldb/status.h:100 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 14 [0xe])
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZN7leveldb6Status9CopyStateEPKc") [flags 0x41]  <function_decl 0x7f0d12f4c000 CopyState>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       184 (ABNORMAL,ABNORMAL_CALL,EH)
;;              122 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450

;; basic block 122, loop depth 0, count 0, freq 1392, maybe hot
;;  prev block 121, next block 123, flags: (HOT_PARTITION, RTL)
;;  pred:       121 [100.0%]  (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u1039(6){ }u1040(7){ }u1041(16){ }u1042(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 168 214
(note 1035 615 616 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 616 1035 618 122 (set (reg/f:DI 214 [ D.51463 ])
        (reg:DI 0 ax)) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 618 616 1348 122 (set (reg/f:DI 168 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 D.44419.state_+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(jump_insn 1348 618 1349 122 (set (pc)
        (label_ref 619)) 654 {jump}
     (nil)
 -> 619)
;;  succ:       124 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450

(barrier 1349 1348 1011)
;; basic block 123, loop depth 0, count 0, freq 601, maybe hot
;;  prev block 122, next block 124, flags: (HOT_PARTITION, RTL)
;;  pred:       120 [30.2%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u1045(6){ }u1046(7){ }u1047(16){ }u1048(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 214
(code_label 1011 1349 1010 123 116 "" [1 uses])
(note 1010 1011 15 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 15 1010 619 123 (set (reg/f:DI 214 [ D.51463 ])
        (const_int 0 [0])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (nil))
;;  succ:       124 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450

;; basic block 124, loop depth 0, count 0, freq 1993, maybe hot
;;  prev block 123, next block 125, flags: (HOT_PARTITION, RTL)
;;  pred:       123 [100.0%]  (FALLTHRU)
;;              122 [100.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u1049(6){ }u1050(7){ }u1051(16){ }u1052(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 214 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 214 253
;; lr  def 	
(code_label 619 15 620 124 74 "" [1 uses])
(note 620 619 621 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 124 (set (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])
        (reg/f:DI 214 [ D.51463 ])) ./include/leveldb/status.h:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 214 [ D.51463 ])
        (nil)))
;;  succ:       125 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450

;; basic block 125, loop depth 0, count 0, freq 2218, maybe hot
;;  prev block 124, next block 126, flags: (HOT_PARTITION, RTL)
;;  pred:       124 [100.0%]  (FALLTHRU)
;;              117 [10.1%] 
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u1055(6){ }u1056(7){ }u1057(16){ }u1058(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 17 [flags]
(code_label 622 621 623 125 72 "" [1 uses])
(note 623 622 624 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 624 623 625 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 168 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 625 624 626 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 973)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 973)
;;  succ:       126 [69.8%]  (FALLTHRU)
;;              127 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450

;; basic block 126, loop depth 0, count 0, freq 1549, maybe hot
;;  prev block 125, next block 127, flags: (HOT_PARTITION, RTL)
;;  pred:       125 [69.8%]  (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u1061(6){ }u1062(7){ }u1063(16){ }u1064(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 626 625 627 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 126 (set (reg:DI 5 di)
        (reg/f:DI 168 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 168 [ D.51463 ])
        (nil)))
(call_insn 628 627 973 126 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       127 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450

;; basic block 127, loop depth 0, count 0, freq 3176, maybe hot
;;  prev block 126, next block 128, flags: (HOT_PARTITION, RTL)
;;  pred:       125 [30.2%] 
;;              126 [100.0%]  (FALLTHRU)
;;              115 [30.2%] 
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u1068(6){ }u1069(7){ }u1070(16){ }u1071(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 973 628 631 127 110 "" [2 uses])
(note 631 973 632 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 633 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 633 632 634 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 976)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 976)
;;  succ:       128 [15.0%]  (FALLTHRU)
;;              200 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450

;; basic block 128, loop depth 0, count 0, freq 476, maybe hot
;;  prev block 127, next block 129, flags: (HOT_PARTITION, RTL)
;;  pred:       127 [15.0%]  (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u1074(6){ }u1075(7){ }u1076(16){ }u1077(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 259 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 259
;; lr  def 	 17 [flags]
(note 634 633 635 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 636 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:DI (plus:DI (reg/v/f:DI 259 [ meta ])
                    (const_int 16 [0x10])) [4 meta_17(D)->file_size+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:80 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/v/f:DI 259 [ meta ])
        (nil)))
(jump_insn 636 635 1350 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 817)
            (pc))) db/builder.cc:80 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 817)
;;  succ:       160 [50.0%] 
;;              129 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450

;; basic block 129, loop depth 0, count 0, freq 238, maybe hot
;;  prev block 128, next block 130, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       128 [50.0%]  (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1350 636 1351 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1351 1350 1352 129 (set (pc)
        (label_ref 976)) 654 {jump}
     (nil)
 -> 976)
;;  succ:       200 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450

(barrier 1352 1351 980)
;; basic block 130, loop depth 0, count 0, freq 736, maybe hot
;; Invalid sum of incoming frequencies 2347, should be 736
;;  prev block 129, next block 131, flags: (HOT_PARTITION, RTL)
;;  pred:       200 [79.9%] 
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u1080(6){ }u1081(7){ }u1082(16){ }u1083(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 255
;; lr  def 	 17 [flags] 154 216 371
(code_label 980 1352 640 130 111 "" [1 uses])
(note 640 980 641 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 130 (set (reg/f:DI 154 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 255 [ env ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)env_30(D)].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 255 [ env ])
        (nil)))
(insn 642 641 643 130 (set (reg/f:DI 371 [ _141->_vptr.Env ])
        (mem/f:DI (reg/f:DI 154 [ D.51471 ]) [3 _141->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 154 [ D.51471 ]) [3 _141->_vptr.Env+0 S8 A64])
        (nil)))
(insn 643 642 646 130 (set (reg/f:DI 216 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 371 [ _141->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_291 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 371 [ _141->_vptr.Env ])
        (nil)))
(insn 646 643 647 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 216 [ D.51465 ])
            (reg/f:DI 159 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.51465 ])
        (nil)))
(jump_insn 647 646 648 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 792)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1977 (nil)))
 -> 792)
;;  succ:       131 [80.2%]  (FALLTHRU)
;;              155 [19.8%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450

;; basic block 131, loop depth 0, count 0, freq 590, maybe hot
;;  prev block 130, next block 132, flags: (HOT_PARTITION, RTL)
;;  pred:       130 [80.2%]  (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u1090(6){ }u1091(7){ }u1092(16){ }u1093(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216
;; lr  def 	 17 [flags] 218 220 374
(note 648 647 649 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 649 648 650 131 (set (reg/f:DI 218 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 154 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_141].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ D.51471 ])
        (nil)))
(insn 650 649 651 131 (set (reg/f:DI 374 [ _295->_vptr.Env ])
        (mem/f:DI (reg/f:DI 218 [ D.51471 ]) [3 _295->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 218 [ D.51471 ]) [3 _295->_vptr.Env+0 S8 A64])
        (nil)))
(insn 651 650 654 131 (set (reg/f:DI 220 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 374 [ _295->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_296 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 374 [ _295->_vptr.Env ])
        (nil)))
(insn 654 651 655 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 220 [ D.51465 ])
            (reg/f:DI 216 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.51465 ])
        (nil)))
(jump_insn 655 654 656 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 782)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1963 (nil)))
 -> 782)
;;  succ:       132 [80.4%]  (FALLTHRU)
;;              153 [19.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450

;; basic block 132, loop depth 0, count 0, freq 474, maybe hot
;;  prev block 131, next block 133, flags: (HOT_PARTITION, RTL)
;;  pred:       131 [80.4%]  (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u1100(6){ }u1101(7){ }u1102(16){ }u1103(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220
;; lr  def 	 17 [flags] 222 224 377
(note 656 655 657 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 657 656 658 132 (set (reg/f:DI 222 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 218 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_295].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218 [ D.51471 ])
        (nil)))
(insn 658 657 659 132 (set (reg/f:DI 377 [ _300->_vptr.Env ])
        (mem/f:DI (reg/f:DI 222 [ D.51471 ]) [3 _300->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 222 [ D.51471 ]) [3 _300->_vptr.Env+0 S8 A64])
        (nil)))
(insn 659 658 662 132 (set (reg/f:DI 224 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 377 [ _300->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_301 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 377 [ _300->_vptr.Env ])
        (nil)))
(insn 662 659 663 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 224 [ D.51465 ])
            (reg/f:DI 220 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.51465 ])
        (nil)))
(jump_insn 663 662 664 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 772)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1953 (nil)))
 -> 772)
;;  succ:       133 [80.5%]  (FALLTHRU)
;;              151 [19.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450

;; basic block 133, loop depth 0, count 0, freq 382, maybe hot
;;  prev block 132, next block 134, flags: (HOT_PARTITION, RTL)
;;  pred:       132 [80.5%]  (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u1110(6){ }u1111(7){ }u1112(16){ }u1113(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224
;; lr  def 	 17 [flags] 226 228 380
(note 664 663 665 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 665 664 666 133 (set (reg/f:DI 226 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 222 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_300].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222 [ D.51471 ])
        (nil)))
(insn 666 665 667 133 (set (reg/f:DI 380 [ _305->_vptr.Env ])
        (mem/f:DI (reg/f:DI 226 [ D.51471 ]) [3 _305->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 226 [ D.51471 ]) [3 _305->_vptr.Env+0 S8 A64])
        (nil)))
(insn 667 666 670 133 (set (reg/f:DI 228 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 380 [ _305->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_306 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 380 [ _305->_vptr.Env ])
        (nil)))
(insn 670 667 671 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 228 [ D.51465 ])
            (reg/f:DI 224 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.51465 ])
        (nil)))
(jump_insn 671 670 672 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 762)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1933 (nil)))
 -> 762)
;;  succ:       134 [80.7%]  (FALLTHRU)
;;              149 [19.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450

;; basic block 134, loop depth 0, count 0, freq 308, maybe hot
;;  prev block 133, next block 135, flags: (HOT_PARTITION, RTL)
;;  pred:       133 [80.7%]  (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u1120(6){ }u1121(7){ }u1122(16){ }u1123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228
;; lr  def 	 17 [flags] 230 232 383
(note 672 671 673 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 673 672 674 134 (set (reg/f:DI 230 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 226 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_305].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.51471 ])
        (nil)))
(insn 674 673 675 134 (set (reg/f:DI 383 [ _310->_vptr.Env ])
        (mem/f:DI (reg/f:DI 230 [ D.51471 ]) [3 _310->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 230 [ D.51471 ]) [3 _310->_vptr.Env+0 S8 A64])
        (nil)))
(insn 675 674 678 134 (set (reg/f:DI 232 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 383 [ _310->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_311 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 383 [ _310->_vptr.Env ])
        (nil)))
(insn 678 675 679 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 232 [ D.51465 ])
            (reg/f:DI 228 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 228 [ D.51465 ])
        (nil)))
(jump_insn 679 678 680 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 752)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1839 (nil)))
 -> 752)
;;  succ:       135 [81.6%]  (FALLTHRU)
;;              147 [18.4%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450

;; basic block 135, loop depth 0, count 0, freq 251, maybe hot
;;  prev block 134, next block 136, flags: (HOT_PARTITION, RTL)
;;  pred:       134 [81.6%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u1130(6){ }u1131(7){ }u1132(16){ }u1133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232
;; lr  def 	 17 [flags] 234 236 386
(note 680 679 681 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 681 680 682 135 (set (reg/f:DI 234 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 230 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_310].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.51471 ])
        (nil)))
(insn 682 681 683 135 (set (reg/f:DI 386 [ _315->_vptr.Env ])
        (mem/f:DI (reg/f:DI 234 [ D.51471 ]) [3 _315->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 234 [ D.51471 ]) [3 _315->_vptr.Env+0 S8 A64])
        (nil)))
(insn 683 682 686 135 (set (reg/f:DI 236 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 386 [ _315->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_316 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 386 [ _315->_vptr.Env ])
        (nil)))
(insn 686 683 687 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 236 [ D.51465 ])
            (reg/f:DI 232 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.51465 ])
        (nil)))
(jump_insn 687 686 688 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 742)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1798 (nil)))
 -> 742)
;;  succ:       136 [82.0%]  (FALLTHRU)
;;              145 [18.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450

;; basic block 136, loop depth 0, count 0, freq 206, maybe hot
;;  prev block 135, next block 137, flags: (HOT_PARTITION, RTL)
;;  pred:       135 [82.0%]  (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u1140(6){ }u1141(7){ }u1142(16){ }u1143(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236
;; lr  def 	 17 [flags] 238 240 389
(note 688 687 689 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 690 136 (set (reg/f:DI 238 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 234 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_315].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.51471 ])
        (nil)))
(insn 690 689 691 136 (set (reg/f:DI 389 [ _320->_vptr.Env ])
        (mem/f:DI (reg/f:DI 238 [ D.51471 ]) [3 _320->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 238 [ D.51471 ]) [3 _320->_vptr.Env+0 S8 A64])
        (nil)))
(insn 691 690 694 136 (set (reg/f:DI 240 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 389 [ _320->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_321 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 389 [ _320->_vptr.Env ])
        (nil)))
(insn 694 691 695 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 240 [ D.51465 ])
            (reg/f:DI 236 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 236 [ D.51465 ])
        (nil)))
(jump_insn 695 694 696 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 732)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1935 (nil)))
 -> 732)
;;  succ:       137 [80.7%]  (FALLTHRU)
;;              143 [19.4%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450

;; basic block 137, loop depth 0, count 0, freq 166, maybe hot
;;  prev block 136, next block 138, flags: (HOT_PARTITION, RTL)
;;  pred:       136 [80.7%]  (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u1150(6){ }u1151(7){ }u1152(16){ }u1153(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240
;; lr  def 	 17 [flags] 242 244 392
(note 696 695 697 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 697 696 698 137 (set (reg/f:DI 242 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 238 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_320].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.51471 ])
        (nil)))
(insn 698 697 699 137 (set (reg/f:DI 392 [ _325->_vptr.Env ])
        (mem/f:DI (reg/f:DI 242 [ D.51471 ]) [3 _325->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 242 [ D.51471 ]) [3 _325->_vptr.Env+0 S8 A64])
        (nil)))
(insn 699 698 702 137 (set (reg/f:DI 244 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 392 [ _325->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_326 + 56B]+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 392 [ _325->_vptr.Env ])
        (nil)))
(insn 702 699 703 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 244 [ D.51465 ])
            (reg/f:DI 240 [ D.51465 ]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 240 [ D.51465 ])
        (nil)))
(jump_insn 703 702 704 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 721)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2000 (nil)))
 -> 721)
;;  succ:       138 [80.0%]  (FALLTHRU)
;;              141 [20.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 244 253 450

;; basic block 138, loop depth 0, count 0, freq 133, maybe hot
;;  prev block 137, next block 139, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       137 [80.0%]  (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u1160(6){ }u1161(7){ }u1162(16){ }u1163(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 246 395 397
(note 704 703 705 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 706 138 (set (reg/f:DI 246 [ D.51471 ])
        (mem/f:DI (plus:DI (reg/f:DI 242 [ D.51471 ])
                (const_int 8 [0x8])) [3 MEM[(struct EnvWrapper *)_325].target_+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242 [ D.51471 ])
        (nil)))
(insn 706 705 708 138 (parallel [
            (set (reg/f:DI 395)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 708 706 709 138 (set (reg/f:DI 397 [ _330->_vptr.Env ])
        (mem/f:DI (reg/f:DI 246 [ D.51471 ]) [3 _330->_vptr.Env+0 S8 A64])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (nil))
(note 709 708 710 138 NOTE_INSN_DELETED)
(insn 710 709 711 138 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 711 710 712 138 (set (reg:DI 4 si)
        (reg/f:DI 246 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 246 [ D.51471 ])
        (nil)))
(insn 712 711 713 138 (set (reg:DI 5 di)
        (reg/f:DI 395)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 395)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 713 712 729 138 (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 397 [ _330->_vptr.Env ])
                    (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_331 + 56B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_332;(struct Env)_330->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 397 [ _330->_vptr.Env ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (nil)
                        (expr_list:REG_EH_REGION (const_int 2 [0x2])
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       139 [100.0%]  (FALLTHRU)
;;              188 (ABNORMAL,ABNORMAL_CALL,EH)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 139, loop depth 0, count 0, freq 921, maybe hot
;;  prev block 138, next block 140, flags: (HOT_PARTITION, RTL)
;;  pred:       138 [100.0%]  (FALLTHRU)
;;              156 [100.0%] 
;;              142 [100.0%] 
;;              144 [100.0%] 
;;              146 [100.0%] 
;;              148 [100.0%] 
;;              150 [100.0%] 
;;              152 [100.0%] 
;;              154 [100.0%] 
;;              158 [100.0%] 
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u1178(6){ }u1179(7){ }u1180(16){ }u1181(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 166
(code_label 729 713 714 139 87 "" [9 uses])
(note 714 729 715 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 139 (set (reg/f:DI 166 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [3 D.44420.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 716 715 717 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 166 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 717 716 1353 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 811)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 811)
;;  succ:       159 [69.8%] 
;;              140 [30.2%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166 253 450

;; basic block 140, loop depth 0, count 0, freq 278, maybe hot
;;  prev block 139, next block 141, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       139 [30.2%]  (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1353 717 1354 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1354 1353 1355 140 (set (pc)
        (label_ref 817)) 654 {jump}
     (nil)
 -> 817)
;;  succ:       160 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1355 1354 721)
;; basic block 141, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 140, next block 142, flags: (HOT_PARTITION, RTL)
;;  pred:       137 [20.0%] 
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u1185(6){ }u1186(7){ }u1187(16){ }u1188(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 244 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 244 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 399
(code_label 721 1355 722 141 84 "" [1 uses])
(note 722 721 723 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 725 141 (parallel [
            (set (reg/f:DI 399)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 725 723 726 141 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 726 725 727 141 (set (reg:DI 4 si)
        (reg/f:DI 242 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 242 [ D.51471 ])
        (nil)))
(insn 727 726 728 141 (set (reg:DI 5 di)
        (reg/f:DI 399)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 399)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 728 727 1356 141 (call (mem:QI (reg/f:DI 244 [ D.51465 ]) [0 *OBJ_TYPE_REF(_327;(struct Env)_325->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 244 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              142 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 142, loop depth 0, count 0, freq 33, maybe hot
;;  prev block 141, next block 143, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       141 [100.0%]  (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1356 728 1357 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1357 1356 1358 142 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1358 1357 732)
;; basic block 143, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 142, next block 144, flags: (HOT_PARTITION, RTL)
;;  pred:       136 [19.4%] 
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u1200(6){ }u1201(7){ }u1202(16){ }u1203(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 240 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 401
(code_label 732 1358 733 143 83 "" [1 uses])
(note 733 732 734 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 734 733 736 143 (parallel [
            (set (reg/f:DI 401)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 736 734 737 143 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 737 736 738 143 (set (reg:DI 4 si)
        (reg/f:DI 238 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 238 [ D.51471 ])
        (nil)))
(insn 738 737 739 143 (set (reg:DI 5 di)
        (reg/f:DI 401)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 401)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 739 738 1359 143 (call (mem:QI (reg/f:DI 240 [ D.51465 ]) [0 *OBJ_TYPE_REF(_322;(struct Env)_320->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 240 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              144 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 144, loop depth 0, count 0, freq 40, maybe hot
;;  prev block 143, next block 145, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       143 [100.0%]  (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1359 739 1360 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1360 1359 1361 144 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1361 1360 742)
;; basic block 145, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 144, next block 146, flags: (HOT_PARTITION, RTL)
;;  pred:       135 [18.0%] 
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u1215(6){ }u1216(7){ }u1217(16){ }u1218(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 234 236 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 403
(code_label 742 1361 743 145 82 "" [1 uses])
(note 743 742 744 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 746 145 (parallel [
            (set (reg/f:DI 403)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 746 744 747 145 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 747 746 748 145 (set (reg:DI 4 si)
        (reg/f:DI 234 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 234 [ D.51471 ])
        (nil)))
(insn 748 747 749 145 (set (reg:DI 5 di)
        (reg/f:DI 403)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 403)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 749 748 1362 145 (call (mem:QI (reg/f:DI 236 [ D.51465 ]) [0 *OBJ_TYPE_REF(_317;(struct Env)_315->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 236 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              146 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 146, loop depth 0, count 0, freq 45, maybe hot
;;  prev block 145, next block 147, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       145 [100.0%]  (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1362 749 1363 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1363 1362 1364 146 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1364 1363 752)
;; basic block 147, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 146, next block 148, flags: (HOT_PARTITION, RTL)
;;  pred:       134 [18.4%] 
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u1230(6){ }u1231(7){ }u1232(16){ }u1233(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 232 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 405
(code_label 752 1364 753 147 81 "" [1 uses])
(note 753 752 754 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 754 753 756 147 (parallel [
            (set (reg/f:DI 405)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 756 754 757 147 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 757 756 758 147 (set (reg:DI 4 si)
        (reg/f:DI 230 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 230 [ D.51471 ])
        (nil)))
(insn 758 757 759 147 (set (reg:DI 5 di)
        (reg/f:DI 405)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 405)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 759 758 1365 147 (call (mem:QI (reg/f:DI 232 [ D.51465 ]) [0 *OBJ_TYPE_REF(_312;(struct Env)_310->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              148 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 148, loop depth 0, count 0, freq 57, maybe hot
;;  prev block 147, next block 149, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       147 [100.0%]  (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1365 759 1366 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1366 1365 1367 148 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1367 1366 762)
;; basic block 149, loop depth 0, count 0, freq 74, maybe hot
;;  prev block 148, next block 150, flags: (HOT_PARTITION, RTL)
;;  pred:       133 [19.3%] 
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u1245(6){ }u1246(7){ }u1247(16){ }u1248(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 226 228 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 407
(code_label 762 1367 763 149 80 "" [1 uses])
(note 763 762 764 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 764 763 766 149 (parallel [
            (set (reg/f:DI 407)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 766 764 767 149 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 767 766 768 149 (set (reg:DI 4 si)
        (reg/f:DI 226 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 226 [ D.51471 ])
        (nil)))
(insn 768 767 769 149 (set (reg:DI 5 di)
        (reg/f:DI 407)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 407)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 769 768 1368 149 (call (mem:QI (reg/f:DI 228 [ D.51465 ]) [0 *OBJ_TYPE_REF(_307;(struct Env)_305->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 228 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              150 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 150, loop depth 0, count 0, freq 74, maybe hot
;;  prev block 149, next block 151, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       149 [100.0%]  (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1368 769 1369 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1369 1368 1370 150 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1370 1369 772)
;; basic block 151, loop depth 0, count 0, freq 93, maybe hot
;;  prev block 150, next block 152, flags: (HOT_PARTITION, RTL)
;;  pred:       132 [19.5%] 
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u1260(6){ }u1261(7){ }u1262(16){ }u1263(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 222 224 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 409
(code_label 772 1370 773 151 79 "" [1 uses])
(note 773 772 774 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 774 773 776 151 (parallel [
            (set (reg/f:DI 409)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 776 774 777 151 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 777 776 778 151 (set (reg:DI 4 si)
        (reg/f:DI 222 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 222 [ D.51471 ])
        (nil)))
(insn 778 777 779 151 (set (reg:DI 5 di)
        (reg/f:DI 409)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 409)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 779 778 1371 151 (call (mem:QI (reg/f:DI 224 [ D.51465 ]) [0 *OBJ_TYPE_REF(_302;(struct Env)_300->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 224 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              152 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 152, loop depth 0, count 0, freq 93, maybe hot
;;  prev block 151, next block 153, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       151 [100.0%]  (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1371 779 1372 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1372 1371 1373 152 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1373 1372 782)
;; basic block 153, loop depth 0, count 0, freq 116, maybe hot
;;  prev block 152, next block 154, flags: (HOT_PARTITION, RTL)
;;  pred:       131 [19.6%] 
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u1275(6){ }u1276(7){ }u1277(16){ }u1278(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 218 220 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 411
(code_label 782 1373 783 153 78 "" [1 uses])
(note 783 782 784 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 786 153 (parallel [
            (set (reg/f:DI 411)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 786 784 787 153 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 787 786 788 153 (set (reg:DI 4 si)
        (reg/f:DI 218 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 218 [ D.51471 ])
        (nil)))
(insn 788 787 789 153 (set (reg:DI 5 di)
        (reg/f:DI 411)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 411)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 789 788 1374 153 (call (mem:QI (reg/f:DI 220 [ D.51465 ]) [0 *OBJ_TYPE_REF(_297;(struct Env)_295->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 220 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              154 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 154, loop depth 0, count 0, freq 116, maybe hot
;;  prev block 153, next block 155, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       153 [100.0%]  (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1374 789 1375 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1375 1374 1376 154 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1376 1375 792)
;; basic block 155, loop depth 0, count 0, freq 145, maybe hot
;;  prev block 154, next block 156, flags: (HOT_PARTITION, RTL)
;;  pred:       130 [19.8%] 
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u1290(6){ }u1291(7){ }u1292(16){ }u1293(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 216 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 413
(code_label 792 1376 793 155 77 "" [1 uses])
(note 793 792 794 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 794 793 796 155 (parallel [
            (set (reg/f:DI 413)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) ./include/leveldb/env.h:296 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 796 794 797 155 (set (reg:DI 1 dx)
        (reg/f:DI 450)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 797 796 798 155 (set (reg:DI 4 si)
        (reg/f:DI 154 [ D.51471 ])) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 154 [ D.51471 ])
        (nil)))
(insn 798 797 799 155 (set (reg:DI 5 di)
        (reg/f:DI 413)) ./include/leveldb/env.h:296 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 413)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 799 798 1377 155 (call (mem:QI (reg/f:DI 216 [ D.51465 ]) [0 *OBJ_TYPE_REF(_292;(struct Env)_141->7) S1 A8])
        (const_int 0 [0])) ./include/leveldb/env.h:296 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 216 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              156 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 156, loop depth 0, count 0, freq 145, maybe hot
;;  prev block 155, next block 157, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       155 [100.0%]  (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1377 799 1378 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1378 1377 1379 156 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1379 1378 1408)
;; basic block 157, loop depth 0, count 0, freq 185, maybe hot
;; Invalid sum of incoming frequencies 591, should be 185
;;  prev block 156, next block 158, flags: (HOT_PARTITION, RTL)
;;  pred:       201 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u1305(6){ }u1306(7){ }u1307(16){ }u1308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 255 450
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 415
(code_label 1408 1379 802 157 204 "" [1 uses])
(note 802 1408 803 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 805 157 (parallel [
            (set (reg/f:DI 415)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) db/builder.cc:83 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(insn 805 803 806 157 (set (reg:DI 1 dx)
        (reg/f:DI 450)) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
            (const_int -48 [0xffffffffffffffd0]))
        (nil)))
(insn 806 805 807 157 (set (reg:DI 4 si)
        (reg/v/f:DI 255 [ env ])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 255 [ env ])
        (nil)))
(insn 807 806 808 157 (set (reg:DI 5 di)
        (reg/f:DI 415)) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 415)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))
(call_insn 808 807 1380 157 (call (mem:QI (reg/f:DI 159 [ D.51465 ]) [0 *OBJ_TYPE_REF(_148;(struct Env)env_30(D)->7) S1 A8])
        (const_int 0 [0])) db/builder.cc:83 660 {*call}
     (expr_list:REG_DEAD (reg/f:DI 159 [ D.51465 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 2 [0x2])
                        (expr_list:REG_CALL_DECL (nil)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       188 (ABNORMAL,ABNORMAL_CALL,EH)
;;              158 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 158, loop depth 0, count 0, freq 185, maybe hot
;;  prev block 157, next block 159, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       157 [100.0%]  (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1380 808 1381 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1381 1380 1382 158 (set (pc)
        (label_ref 729)) 654 {jump}
     (nil)
 -> 729)
;;  succ:       139 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

(barrier 1382 1381 811)
;; basic block 159, loop depth 0, count 0, freq 643, maybe hot
;;  prev block 158, next block 160, flags: (HOT_PARTITION, RTL)
;;  pred:       139 [69.8%] 
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u1320(6){ }u1321(7){ }u1322(16){ }u1323(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 166
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 811 1382 812 159 85 "" [1 uses])
(note 812 811 813 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 814 159 (set (reg:DI 5 di)
        (reg/f:DI 166 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166 [ D.51463 ])
        (nil)))
(call_insn 814 813 817 159 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       160 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450

;; basic block 160, loop depth 0, count 0, freq 5952, maybe hot
;; Invalid sum of incoming frequencies 3935, should be 5952
;;  prev block 159, next block 161, flags: (HOT_PARTITION, RTL)
;;  pred:       46 [93.3%] 
;;              159 [100.0%]  (FALLTHRU)
;;              128 [50.0%] 
;;              140 [100.0%] 
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u1327(6){ }u1328(7){ }u1329(16){ }u1330(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 450
;; lr  def 	 17 [flags] 160 418
(code_label 817 814 818 160 70 "" [3 uses])
(note 818 817 819 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 821 160 (set (reg/f:DI 160 [ D.51472 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 821 819 822 160 (parallel [
            (set (reg/f:DI 418)
                (plus:DI (reg/f:DI 450)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 450)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 822 821 823 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 160 [ D.51472 ])
            (reg/f:DI 418))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 418)
        (nil)))
(jump_insn 823 822 824 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 989)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 989)
;;  succ:       161 [78.3%]  (FALLTHRU)
;;              202 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160 253

;; basic block 161, loop depth 0, count 0, freq 4664, maybe hot
;;  prev block 160, next block 162, flags: (HOT_PARTITION, RTL)
;;  pred:       160 [78.3%]  (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u1336(6){ }u1337(7){ }u1338(16){ }u1339(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160 253
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 824 823 825 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 161 (set (reg:DI 5 di)
        (reg/f:DI 160 [ D.51472 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 160 [ D.51472 ])
        (nil)))
(call_insn 826 825 1383 161 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 1383 826 1384 161 (set (pc)
        (label_ref 989)) 654 {jump}
     (nil)
 -> 989)
;;  succ:       202 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253

(barrier 1384 1383 1059)
;; basic block 162, loop depth 0, count 0, freq 0
;;  prev block 161, next block 163, flags: (HOT_PARTITION, RTL)
;;  pred:       40 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 162 artificial_defs: { d20(0){ }d129(1){ }}
;; bb 162 artificial_uses: { u1343(6){ }u1344(7){ }u1345(16){ }u1346(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 421
(code_label/s 1059 1384 1062 162 119 "" [1 uses])
(note 1062 1059 1060 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1060 1062 831 162 (set (reg:DI 421)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       163 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450

;; basic block 163, loop depth 0, count 0, freq 0
;;  prev block 162, next block 164, flags: (HOT_PARTITION, RTL)
;;  pred:       162 [100.0%]  (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u1348(6){ }u1349(7){ }u1350(16){ }u1351(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161
(code_label 831 1060 832 163 89 "" [0 uses])
(note 832 831 833 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 163 (set (reg/f:DI 161 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -176 [0xffffffffffffff50])) [3 D.44368.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 834 833 835 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 161 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 835 834 836 163 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 839)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 839)
;;  succ:       164 [69.8%]  (FALLTHRU)
;;              165 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161 253 421 450

;; basic block 164, loop depth 0, count 0, freq 0
;;  prev block 163, next block 165, flags: (HOT_PARTITION, RTL)
;;  pred:       163 [69.8%]  (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u1355(6){ }u1356(7){ }u1357(16){ }u1358(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161 253 421 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 161
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 836 835 837 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 164 (set (reg:DI 5 di)
        (reg/f:DI 161 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 161 [ D.51463 ])
        (nil)))
(call_insn 838 837 839 164 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       165 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450

;; basic block 165, loop depth 0, count 0, freq 0
;;  prev block 164, next block 166, flags: (HOT_PARTITION, RTL)
;;  pred:       163 [30.2%] 
;;              164 [100.0%]  (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u1362(6){ }u1363(7){ }u1364(16){ }u1365(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 421 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 421
;; lr  def 	 420
(code_label 839 838 840 165 90 "" [1 uses])
(note 840 839 841 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 1385 165 (set (reg:DI 420)
        (reg:DI 421)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 421)
        (nil)))
(jump_insn 1385 841 1386 165 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1386 1385 1063)
;; basic block 166, loop depth 0, count 0, freq 0
;;  prev block 165, next block 167, flags: (HOT_PARTITION, RTL)
;;  pred:       48 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 166 artificial_defs: { d18(0){ }d127(1){ }}
;; bb 166 artificial_uses: { u1367(6){ }u1368(7){ }u1369(16){ }u1370(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 424
(code_label/s 1063 1386 1066 166 120 "" [1 uses])
(note 1066 1063 1064 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1064 1066 845 166 (set (reg:DI 424)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       167 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 424 450

;; basic block 167, loop depth 0, count 0, freq 0
;;  prev block 166, next block 168, flags: (HOT_PARTITION, RTL)
;;  pred:       166 [100.0%]  (FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u1372(6){ }u1373(7){ }u1374(16){ }u1375(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 424 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 424
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 420
(code_label 845 1064 846 167 92 "" [0 uses])
(note 846 845 847 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 167 (set (reg:DI 5 di)
        (reg/f:DI 100 [ D.51468 ])) db/builder.cc:35 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.51468 ])
        (nil)))
(call_insn 848 847 849 167 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) db/builder.cc:35 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 849 848 1387 167 (set (reg:DI 420)
        (reg:DI 424)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 424)
        (nil)))
(jump_insn 1387 849 1388 167 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1388 1387 1067)
;; basic block 168, loop depth 0, count 0, freq 0
;;  prev block 167, next block 169, flags: (HOT_PARTITION, RTL)
;;  pred:       66 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 168 artificial_defs: { d16(0){ }d125(1){ }}
;; bb 168 artificial_uses: { u1380(6){ }u1381(7){ }u1382(16){ }u1383(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 426
(code_label/s 1067 1388 1070 168 121 "" [1 uses])
(note 1070 1067 1068 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1068 1070 853 168 (set (reg:DI 426)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       169 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450

;; basic block 169, loop depth 0, count 0, freq 0
;;  prev block 168, next block 170, flags: (HOT_PARTITION, RTL)
;;  pred:       168 [100.0%]  (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u1385(6){ }u1386(7){ }u1387(16){ }u1388(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 148
(code_label 853 1068 854 169 93 "" [0 uses])
(note 854 853 855 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 855 854 856 169 (set (reg/f:DI 148 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -160 [0xffffffffffffff60])) [3 D.44376.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 856 855 857 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 148 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 857 856 858 169 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 861)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 861)
;;  succ:       170 [69.8%]  (FALLTHRU)
;;              171 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 253 426 450

;; basic block 170, loop depth 0, count 0, freq 0
;;  prev block 169, next block 171, flags: (HOT_PARTITION, RTL)
;;  pred:       169 [69.8%]  (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u1392(6){ }u1393(7){ }u1394(16){ }u1395(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 253 426 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 858 857 859 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 859 858 860 170 (set (reg:DI 5 di)
        (reg/f:DI 148 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 148 [ D.51463 ])
        (nil)))
(call_insn 860 859 861 170 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       171 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450

;; basic block 171, loop depth 0, count 0, freq 0
;;  prev block 170, next block 172, flags: (HOT_PARTITION, RTL)
;;  pred:       169 [30.2%] 
;;              170 [100.0%]  (FALLTHRU)
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u1399(6){ }u1400(7){ }u1401(16){ }u1402(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 426 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 426
;; lr  def 	 420
(code_label 861 860 862 171 94 "" [1 uses])
(note 862 861 863 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 863 862 1389 171 (set (reg:DI 420)
        (reg:DI 426)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 426)
        (nil)))
(jump_insn 1389 863 1390 171 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1390 1389 1071)
;; basic block 172, loop depth 0, count 0, freq 0
;;  prev block 171, next block 173, flags: (HOT_PARTITION, RTL)
;;  pred:       82 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 172 artificial_defs: { d14(0){ }d123(1){ }}
;; bb 172 artificial_uses: { u1404(6){ }u1405(7){ }u1406(16){ }u1407(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 428
(code_label/s 1071 1390 1074 172 122 "" [1 uses])
(note 1074 1071 1072 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1072 1074 867 172 (set (reg:DI 428)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       173 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450

;; basic block 173, loop depth 0, count 0, freq 0
;;  prev block 172, next block 174, flags: (HOT_PARTITION, RTL)
;;  pred:       172 [100.0%]  (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u1409(6){ }u1410(7){ }u1411(16){ }u1412(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120
(code_label 867 1072 868 173 95 "" [0 uses])
(note 868 867 869 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 869 868 870 173 (set (reg/f:DI 120 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -144 [0xffffffffffffff70])) [3 D.44377.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 870 869 871 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 120 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 871 870 872 173 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 875)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 875)
;;  succ:       174 [69.8%]  (FALLTHRU)
;;              175 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 253 428 450

;; basic block 174, loop depth 0, count 0, freq 0
;;  prev block 173, next block 175, flags: (HOT_PARTITION, RTL)
;;  pred:       173 [69.8%]  (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u1416(6){ }u1417(7){ }u1418(16){ }u1419(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120 253 428 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 872 871 873 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 174 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 120 [ D.51463 ])
        (nil)))
(call_insn 874 873 875 174 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       175 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450

;; basic block 175, loop depth 0, count 0, freq 0
;;  prev block 174, next block 176, flags: (HOT_PARTITION, RTL)
;;  pred:       173 [30.2%] 
;;              174 [100.0%]  (FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u1423(6){ }u1424(7){ }u1425(16){ }u1426(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 428 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 428
;; lr  def 	 420
(code_label 875 874 876 175 96 "" [1 uses])
(note 876 875 877 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 1391 175 (set (reg:DI 420)
        (reg:DI 428)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 428)
        (nil)))
(jump_insn 1391 877 1392 175 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1392 1391 1075)
;; basic block 176, loop depth 0, count 0, freq 0
;;  prev block 175, next block 177, flags: (HOT_PARTITION, RTL)
;;  pred:       94 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 176 artificial_defs: { d12(0){ }d121(1){ }}
;; bb 176 artificial_uses: { u1428(6){ }u1429(7){ }u1430(16){ }u1431(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 430
(code_label/s 1075 1392 1078 176 123 "" [1 uses])
(note 1078 1075 1076 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 1076 1078 881 176 (set (reg:DI 430)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       177 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450

;; basic block 177, loop depth 0, count 0, freq 0
;;  prev block 176, next block 178, flags: (HOT_PARTITION, RTL)
;;  pred:       176 [100.0%]  (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u1433(6){ }u1434(7){ }u1435(16){ }u1436(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127
(code_label 881 1076 882 177 97 "" [0 uses])
(note 882 881 883 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 883 882 884 177 (set (reg/f:DI 127 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -128 [0xffffffffffffff80])) [3 D.44378.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 884 883 885 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 127 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 885 884 886 177 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 889)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 889)
;;  succ:       178 [69.8%]  (FALLTHRU)
;;              179 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 127 253 430 450

;; basic block 178, loop depth 0, count 0, freq 0
;;  prev block 177, next block 179, flags: (HOT_PARTITION, RTL)
;;  pred:       177 [69.8%]  (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u1440(6){ }u1441(7){ }u1442(16){ }u1443(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 127 253 430 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 127
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 886 885 887 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 888 178 (set (reg:DI 5 di)
        (reg/f:DI 127 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 127 [ D.51463 ])
        (nil)))
(call_insn 888 887 889 178 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       179 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450

;; basic block 179, loop depth 0, count 0, freq 0
;;  prev block 178, next block 180, flags: (HOT_PARTITION, RTL)
;;  pred:       177 [30.2%] 
;;              178 [100.0%]  (FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u1447(6){ }u1448(7){ }u1449(16){ }u1450(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 430 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 430
;; lr  def 	 420
(code_label 889 888 890 179 98 "" [1 uses])
(note 890 889 891 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 891 890 1393 179 (set (reg:DI 420)
        (reg:DI 430)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 430)
        (nil)))
(jump_insn 1393 891 1394 179 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1394 1393 1079)
;; basic block 180, loop depth 0, count 0, freq 0
;;  prev block 179, next block 181, flags: (HOT_PARTITION, RTL)
;;  pred:       109 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 180 artificial_defs: { d10(0){ }d119(1){ }}
;; bb 180 artificial_uses: { u1452(6){ }u1453(7){ }u1454(16){ }u1455(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 432
(code_label/s 1079 1394 1082 180 124 "" [1 uses])
(note 1082 1079 1080 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1082 895 180 (set (reg:DI 432)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       181 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450

;; basic block 181, loop depth 0, count 0, freq 0
;;  prev block 180, next block 182, flags: (HOT_PARTITION, RTL)
;;  pred:       180 [100.0%]  (FALLTHRU)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u1457(6){ }u1458(7){ }u1459(16){ }u1460(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 134
(code_label 895 1080 896 181 99 "" [0 uses])
(note 896 895 897 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 897 896 898 181 (set (reg/f:DI 134 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 D.44408.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 898 897 899 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 134 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 899 898 900 181 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 903)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 903)
;;  succ:       182 [69.8%]  (FALLTHRU)
;;              183 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 253 432 450

;; basic block 182, loop depth 0, count 0, freq 0
;;  prev block 181, next block 183, flags: (HOT_PARTITION, RTL)
;;  pred:       181 [69.8%]  (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u1464(6){ }u1465(7){ }u1466(16){ }u1467(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 253 432 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 900 899 901 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 182 (set (reg:DI 5 di)
        (reg/f:DI 134 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 134 [ D.51463 ])
        (nil)))
(call_insn 902 901 903 182 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       183 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450

;; basic block 183, loop depth 0, count 0, freq 0
;;  prev block 182, next block 184, flags: (HOT_PARTITION, RTL)
;;  pred:       181 [30.2%] 
;;              182 [100.0%]  (FALLTHRU)
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u1471(6){ }u1472(7){ }u1473(16){ }u1474(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 432 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 432
;; lr  def 	 420
(code_label 903 902 904 183 100 "" [1 uses])
(note 904 903 905 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 905 904 1395 183 (set (reg:DI 420)
        (reg:DI 432)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 432)
        (nil)))
(jump_insn 1395 905 1396 183 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1396 1395 1083)
;; basic block 184, loop depth 0, count 0, freq 0
;;  prev block 183, next block 185, flags: (HOT_PARTITION, RTL)
;;  pred:       121 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 184 artificial_defs: { d8(0){ }d117(1){ }}
;; bb 184 artificial_uses: { u1476(6){ }u1477(7){ }u1478(16){ }u1479(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 434
(code_label/s 1083 1396 1086 184 125 "" [1 uses])
(note 1086 1083 1084 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 1084 1086 909 184 (set (reg:DI 434)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       185 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450

;; basic block 185, loop depth 0, count 0, freq 0
;;  prev block 184, next block 186, flags: (HOT_PARTITION, RTL)
;;  pred:       184 [100.0%]  (FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u1481(6){ }u1482(7){ }u1483(16){ }u1484(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 147
(code_label 909 1084 910 185 101 "" [0 uses])
(note 910 909 911 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 911 910 912 185 (set (reg/f:DI 147 [ D.51463 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [3 D.44419.state_+0 S8 A128])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (nil))
(insn 912 911 913 185 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 147 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 913 912 914 185 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 917)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 917)
;;  succ:       186 [69.8%]  (FALLTHRU)
;;              187 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 253 434 450

;; basic block 186, loop depth 0, count 0, freq 0
;;  prev block 185, next block 187, flags: (HOT_PARTITION, RTL)
;;  pred:       185 [69.8%]  (FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u1488(6){ }u1489(7){ }u1490(16){ }u1491(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 253 434 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 914 913 915 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 186 (set (reg:DI 5 di)
        (reg/f:DI 147 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 147 [ D.51463 ])
        (nil)))
(call_insn 916 915 917 186 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       187 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450

;; basic block 187, loop depth 0, count 0, freq 0
;;  prev block 186, next block 188, flags: (HOT_PARTITION, RTL)
;;  pred:       185 [30.2%] 
;;              186 [100.0%]  (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u1495(6){ }u1496(7){ }u1497(16){ }u1498(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 434 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 434
;; lr  def 	 420
(code_label 917 916 918 187 102 "" [1 uses])
(note 918 917 919 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 919 918 1397 187 (set (reg:DI 420)
        (reg:DI 434)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 434)
        (nil)))
(jump_insn 1397 919 1398 187 (set (pc)
        (label_ref 921)) 654 {jump}
     (nil)
 -> 921)
;;  succ:       189 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

(barrier 1398 1397 1053)
;; basic block 188, loop depth 0, count 0, freq 0
;;  prev block 187, next block 189, flags: (HOT_PARTITION, RTL)
;;  pred:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              16 (ABNORMAL,ABNORMAL_CALL,EH)
;;              19 (ABNORMAL,ABNORMAL_CALL,EH)
;;              21 (ABNORMAL,ABNORMAL_CALL,EH)
;;              23 (ABNORMAL,ABNORMAL_CALL,EH)
;;              25 (ABNORMAL,ABNORMAL_CALL,EH)
;;              27 (ABNORMAL,ABNORMAL_CALL,EH)
;;              29 (ABNORMAL,ABNORMAL_CALL,EH)
;;              31 (ABNORMAL,ABNORMAL_CALL,EH)
;;              33 (ABNORMAL,ABNORMAL_CALL,EH)
;;              35 (ABNORMAL,ABNORMAL_CALL,EH)
;;              47 (ABNORMAL,ABNORMAL_CALL,EH)
;;              49 (ABNORMAL,ABNORMAL_CALL,EH)
;;              50 (ABNORMAL,ABNORMAL_CALL,EH)
;;              52 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              54 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              55 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              56 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              57 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              58 (ABNORMAL,ABNORMAL_CALL,EH,LOOP_EXIT)
;;              61 (ABNORMAL,ABNORMAL_CALL,EH)
;;              72 (ABNORMAL,ABNORMAL_CALL,EH)
;;              74 (ABNORMAL,ABNORMAL_CALL,EH)
;;              76 (ABNORMAL,ABNORMAL_CALL,EH)
;;              88 (ABNORMAL,ABNORMAL_CALL,EH)
;;              102 (ABNORMAL,ABNORMAL_CALL,EH)
;;              103 (ABNORMAL,ABNORMAL_CALL,EH)
;;              114 (ABNORMAL,ABNORMAL_CALL,EH)
;;              116 (ABNORMAL,ABNORMAL_CALL,EH)
;;              138 (ABNORMAL,ABNORMAL_CALL,EH)
;;              141 (ABNORMAL,ABNORMAL_CALL,EH)
;;              143 (ABNORMAL,ABNORMAL_CALL,EH)
;;              145 (ABNORMAL,ABNORMAL_CALL,EH)
;;              147 (ABNORMAL,ABNORMAL_CALL,EH)
;;              149 (ABNORMAL,ABNORMAL_CALL,EH)
;;              151 (ABNORMAL,ABNORMAL_CALL,EH)
;;              153 (ABNORMAL,ABNORMAL_CALL,EH)
;;              155 (ABNORMAL,ABNORMAL_CALL,EH)
;;              157 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 188 artificial_defs: { d6(0){ }d115(1){ }}
;; bb 188 artificial_uses: { u1500(6){ }u1501(7){ }u1502(16){ }u1503(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 420
(code_label/s 1053 1398 1058 188 118 "" [1 uses])
(note 1058 1053 1054 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1058 921 188 (set (reg:DI 420)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       189 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450

;; basic block 189, loop depth 0, count 0, freq 0
;;  prev block 188, next block 190, flags: (HOT_PARTITION, RTL)
;;  pred:       179 [100.0%] 
;;              188 [100.0%]  (FALLTHRU)
;;              175 [100.0%] 
;;              167 [100.0%] 
;;              183 [100.0%] 
;;              171 [100.0%] 
;;              165 [100.0%] 
;;              187 [100.0%] 
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u1505(6){ }u1506(7){ }u1507(16){ }u1508(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 450
;; lr  def 	 17 [flags] 156 437
(code_label 921 1054 922 189 91 "" [7 uses])
(note 922 921 923 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 923 922 925 189 (set (reg/f:DI 156 [ D.51472 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [3 MEM[(char * *)&fname]+0 S8 A128])) 89 {*movdi_internal}
     (nil))
(insn 925 923 926 189 (parallel [
            (set (reg/f:DI 437)
                (plus:DI (reg/f:DI 450)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/c++/5/bits/basic_string.h:179 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 450)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 926 925 927 189 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 156 [ D.51472 ])
            (reg/f:DI 437))) /usr/include/c++/5/bits/basic_string.h:179 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg/f:DI 437)
        (nil)))
(jump_insn 927 926 928 189 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 931)
            (pc))) /usr/include/c++/5/bits/basic_string.h:179 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 931)
;;  succ:       190 [69.8%]  (FALLTHRU)
;;              191 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 253 420

;; basic block 190, loop depth 0, count 0, freq 0
;;  prev block 189, next block 191, flags: (HOT_PARTITION, RTL)
;;  pred:       189 [69.8%]  (FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u1514(6){ }u1515(7){ }u1516(16){ }u1517(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 253 420
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 928 927 929 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 929 928 930 190 (set (reg:DI 5 di)
        (reg/f:DI 156 [ D.51472 ])) /usr/include/c++/5/ext/new_allocator.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 156 [ D.51472 ])
        (nil)))
(call_insn 930 929 931 190 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/include/c++/5/ext/new_allocator.h:110 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7f0d141a3360 operator delete>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       191 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420

;; basic block 191, loop depth 0, count 0, freq 0
;;  prev block 190, next block 192, flags: (HOT_PARTITION, RTL)
;;  pred:       189 [30.2%] 
;;              190 [100.0%]  (FALLTHRU)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u1521(6){ }u1522(7){ }u1523(16){ }u1524(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 420
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 420
;; lr  def 	 438
(code_label 931 930 932 191 103 "" [1 uses])
(note 932 931 933 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 933 932 1399 191 (set (reg:DI 438)
        (reg:DI 420)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 420)
        (nil)))
(jump_insn 1399 933 1400 191 (set (pc)
        (label_ref 935)) 654 {jump}
     (nil)
 -> 935)
;;  succ:       193 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438

(barrier 1400 1399 1047)
;; basic block 192, loop depth 0, count 0, freq 0
;;  prev block 191, next block 193, flags: (HOT_PARTITION, RTL)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 192 artificial_defs: { d4(0){ }d113(1){ }}
;; bb 192 artificial_uses: { u1526(6){ }u1527(7){ }u1528(16){ }u1529(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 438
(code_label/s 1047 1400 1052 192 117 "" [1 uses])
(note 1052 1047 1048 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1052 935 192 (set (reg:DI 438)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       193 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438

;; basic block 193, loop depth 0, count 0, freq 0
;;  prev block 192, next block 194, flags: (HOT_PARTITION, RTL)
;;  pred:       192 [100.0%]  (FALLTHRU)
;;              191 [100.0%] 
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u1531(6){ }u1532(7){ }u1533(16){ }u1534(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags] 162
(code_label 935 1048 936 193 104 "" [1 uses])
(note 936 935 937 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 938 193 (set (reg/f:DI 162 [ D.51463 ])
        (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 s_15(D)->state_+0 S8 A64])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ <retval> ])
        (nil)))
(insn 938 937 939 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 162 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 939 938 940 193 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 943)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 3017 (nil)))
 -> 943)
;;  succ:       194 [69.8%]  (FALLTHRU)
;;              195 [30.2%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162 438

;; basic block 194, loop depth 0, count 0, freq 0
;;  prev block 193, next block 195, flags: (HOT_PARTITION, RTL)
;;  pred:       193 [69.8%]  (FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u1538(6){ }u1539(7){ }u1540(16){ }u1541(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 162
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 940 939 941 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 941 940 942 194 (set (reg:DI 5 di)
        (reg/f:DI 162 [ D.51463 ])) ./include/leveldb/status.h:25 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 162 [ D.51463 ])
        (nil)))
(call_insn 942 941 943 194 (call (mem:QI (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>) [0 operator delete [] S1 A8])
        (const_int 0 [0])) ./include/leveldb/status.h:25 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZdaPv") [flags 0x41]  <function_decl 0x7f0d141a3438 operator delete []>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       195 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438

;; basic block 195, loop depth 0, count 0, freq 0
;;  prev block 194, next block 196, flags: (HOT_PARTITION, RTL)
;;  pred:       193 [30.2%] 
;;              194 [100.0%]  (FALLTHRU)
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u1545(6){ }u1546(7){ }u1547(16){ }u1548(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 438
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 943 942 944 195 105 "" [1 uses])
(note 944 943 946 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 946 944 947 195 (set (reg:DI 5 di)
        (reg:DI 438)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 438)
        (nil)))
(call_insn 947 946 948 195 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7f0d141a06c0 __builtin_unwind_resume>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 948 947 949)
;; basic block 196, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 195, next block 197, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       70 [30.2%] 
;;              71 [100.0%] 
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u1552(6){ }u1553(7){ }u1554(16){ }u1555(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 17 [flags]
(code_label 949 948 950 196 52 "" [2 uses])
(note 950 949 952 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 952 950 953 196 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 253 [ <retval> ]) [3 MEM[(const struct Status *)s_15(D)].state_+0 S8 A64])
            (const_int 0 [0]))) db/builder.cc:46 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 953 952 1401 196 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 405)
            (pc))) db/builder.cc:46 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 405)
;;  succ:       197 [6.7%]  (FALLTHRU)
;;              75 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

;; basic block 197, loop depth 0, count 0, freq 2
;;  prev block 196, next block 198, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       196 [6.7%]  (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1401 953 1402 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1402 1401 1403 197 (set (pc)
        (label_ref 951)) 654 {jump}
     (nil)
 -> 951)
;;  succ:       72 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 253 255 257 258 259 447 450

(barrier 1403 1402 961)
;; basic block 198, loop depth 0, count 0, freq 13, maybe hot
;;  prev block 197, next block 199, flags: (HOT_PARTITION, RTL)
;;  pred:       105 [100.0%] 
;;              111 [100.0%] 
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u1558(6){ }u1559(7){ }u1560(16){ }u1561(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 17 [flags]
(code_label 961 1403 962 198 67 "" [2 uses])
(note 962 961 965 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 965 962 966 198 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 449 [ D.51463 ])
            (const_int 0 [0]))) ./include/leveldb/status.h:25 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 966 965 1404 198 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 964)
            (pc))) ./include/leveldb/status.h:25 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 6983 (nil)))
 -> 964)
;;  succ:       112 [69.8%] 
;;              199 [30.2%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 449 450

;; basic block 199, loop depth 0, count 0, freq 4
;;  prev block 198, next block 200, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       198 [30.2%]  (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1404 966 1405 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1405 1404 1406 199 (set (pc)
        (label_ref 958)) 654 {jump}
     (nil)
 -> 958)
;;  succ:       113 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 141 253 255 258 259 447 450

(barrier 1406 1405 976)
;; basic block 200, loop depth 0, count 0, freq 2938, maybe hot
;;  prev block 199, next block 201, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       127 [85.0%] 
;;              129 [100.0%] 
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u1564(6){ }u1565(7){ }u1566(16){ }u1567(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253 255 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 255
;; lr  def 	 17 [flags] 159 440
(code_label 976 1406 977 200 76 "" [2 uses])
(note 977 976 978 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 978 977 979 200 (set (reg/f:DI 440 [ env_30(D)->_vptr.Env ])
        (mem/f:DI (reg/v/f:DI 255 [ env ]) [3 env_30(D)->_vptr.Env+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/v/f:DI 255 [ env ]) [3 env_30(D)->_vptr.Env+0 S8 A64])
        (nil)))
(insn 979 978 981 200 (set (reg/f:DI 159 [ D.51465 ])
        (mem/f:DI (plus:DI (reg/f:DI 440 [ env_30(D)->_vptr.Env ])
                (const_int 56 [0x38])) [3 MEM[(int (*__vtbl_ptr_type) () *)_147 + 56B]+0 S8 A64])) db/builder.cc:83 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 440 [ env_30(D)->_vptr.Env ])
        (nil)))
(note 981 979 983 200 NOTE_INSN_DELETED)
(insn 983 981 984 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 159 [ D.51465 ])
            (mem/u/c:DI (const:DI (unspec:DI [
                            (symbol_ref/i:DI ("_ZN7leveldb10EnvWrapper10DeleteFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE") [flags 0x1]  <function_decl 0x7f0d12352000 DeleteFile>)
                        ] UNSPEC_GOTPCREL)) [18  S8 A8]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 984 983 1407 200 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 980)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7987 (nil)))
 -> 980)
;;  succ:       130 [79.9%] 
;;              201 [20.1%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450

;; basic block 201, loop depth 0, count 0, freq 591, maybe hot
;;  prev block 200, next block 202, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       200 [20.1%]  (FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1407 984 1409 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1409 1407 1410 201 (set (pc)
        (label_ref 1408)) 654 {jump}
     (nil)
 -> 1408)
;;  succ:       157 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 159 253 255 450

(barrier 1410 1409 989)
;; basic block 202, loop depth 0, count 0, freq 5952, maybe hot
;;  prev block 201, next block 203, flags: (HOT_PARTITION, RTL)
;;  pred:       160 [21.6%] 
;;              161 [100.0%] 
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u1573(6){ }u1574(7){ }u1575(16){ }u1576(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 253
;; lr  def 	 0 [ax] 17 [flags]
(code_label 989 1410 999 202 28 "" [2 uses])
(note 999 989 991 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 991 999 993 202 (set (reg/i:DI 0 ax)
        (reg/f:DI 253 [ <retval> ])) db/builder.cc:86 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 253 [ <retval> ])
        (nil)))
(insn 993 991 994 202 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [3 D.51474+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) db/builder.cc:86 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 994 993 1045 202 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 997)
            (pc))) db/builder.cc:86 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 997)
;;  succ:       204 [100.0%] 
;;              203 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 203, loop depth 0, count 0, freq 2
;;  prev block 202, next block 204, flags: (HOT_PARTITION, RTL)
;;  pred:       202 [0.0%]  (FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u1580(6){ }u1581(7){ }u1582(16){ }u1583(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1045 994 995 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(call_insn 995 1045 996 203 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) db/builder.cc:86 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0d119c66c0 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 996 995 997)
;; basic block 204, loop depth 0, count 0, freq 5950, maybe hot
;;  prev block 203, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       202 [100.0%] 
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u1585(6){ }u1586(7){ }u1587(16){ }u1588(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 997 996 1046 204 113 "" [1 uses])
(note 1046 997 998 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 998 1046 0 204 (use (reg/i:DI 0 ax)) db/builder.cc:86 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

